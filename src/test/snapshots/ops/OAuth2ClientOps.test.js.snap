// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`OAuth2ClientOps 1: Import all oauth2 clients w/ dependencies 1`] = `
[
  {
    "_id": "FrodoTestOAuth2Client10",
    "_rev": "-1848380125",
    "_type": {
      "_id": "OAuth2Client",
      "collection": true,
      "name": "OAuth2 Clients",
    },
    "advancedOAuth2ClientConfig": {
      "clientUri": {
        "inherited": false,
        "value": [],
      },
      "contacts": {
        "inherited": false,
        "value": [],
      },
      "customProperties": {
        "inherited": false,
        "value": [],
      },
      "descriptions": {
        "inherited": false,
        "value": [],
      },
      "grantTypes": {
        "inherited": false,
        "value": [
          "authorization_code",
          "client_credentials",
          "refresh_token",
        ],
      },
      "isConsentImplied": {
        "inherited": false,
        "value": true,
      },
      "javascriptOrigins": {
        "inherited": false,
        "value": [
          "https://my.application.com",
          "https://my.application.com:443",
        ],
      },
      "logoUri": {
        "inherited": false,
        "value": [],
      },
      "mixUpMitigation": {
        "inherited": false,
        "value": false,
      },
      "name": {
        "inherited": false,
        "value": [],
      },
      "policyUri": {
        "inherited": false,
        "value": [],
      },
      "refreshTokenGracePeriod": {
        "inherited": false,
        "value": 0,
      },
      "requestUris": {
        "inherited": false,
        "value": [],
      },
      "require_pushed_authorization_requests": {
        "inherited": false,
        "value": false,
      },
      "responseTypes": {
        "inherited": false,
        "value": [
          "code",
          "token",
          "id_token",
        ],
      },
      "sectorIdentifierUri": {
        "inherited": false,
      },
      "softwareIdentity": {
        "inherited": false,
      },
      "softwareVersion": {
        "inherited": false,
      },
      "subjectType": {
        "inherited": false,
        "value": "public",
      },
      "tokenEndpointAuthMethod": {
        "inherited": false,
        "value": "client_secret_basic",
      },
      "tokenExchangeAuthLevel": {
        "inherited": false,
        "value": 0,
      },
      "tosURI": {
        "inherited": false,
        "value": [],
      },
      "updateAccessToken": {
        "inherited": false,
      },
    },
    "coreOAuth2ClientConfig": {
      "accessTokenLifetime": {
        "inherited": false,
        "value": 3600,
      },
      "authorizationCodeLifetime": {
        "inherited": false,
        "value": 120,
      },
      "clientName": {
        "inherited": false,
        "value": [],
      },
      "clientType": {
        "inherited": false,
        "value": "Confidential",
      },
      "defaultScopes": {
        "inherited": false,
        "value": [],
      },
      "loopbackInterfaceRedirection": {
        "inherited": false,
        "value": false,
      },
      "redirectionUris": {
        "inherited": false,
        "value": [
          "https://my.application.com/callback",
        ],
      },
      "refreshTokenLifetime": {
        "inherited": false,
        "value": 604800,
      },
      "scopes": {
        "inherited": false,
        "value": [
          "openid",
          "profile",
          "email",
        ],
      },
      "status": {
        "inherited": false,
        "value": "Active",
      },
    },
    "coreOpenIDClientConfig": {
      "backchannel_logout_session_required": {
        "inherited": false,
        "value": false,
      },
      "backchannel_logout_uri": {
        "inherited": false,
      },
      "claims": {
        "inherited": false,
        "value": [],
      },
      "clientSessionUri": {
        "inherited": false,
      },
      "defaultAcrValues": {
        "inherited": false,
        "value": [],
      },
      "defaultMaxAge": {
        "inherited": false,
        "value": 600,
      },
      "defaultMaxAgeEnabled": {
        "inherited": false,
        "value": false,
      },
      "jwtTokenLifetime": {
        "inherited": false,
        "value": 3600,
      },
      "postLogoutRedirectUri": {
        "inherited": false,
        "value": [],
      },
    },
    "coreUmaClientConfig": {
      "claimsRedirectionUris": {
        "inherited": false,
        "value": [],
      },
    },
    "overrideOAuth2ClientConfig": {
      "accessTokenMayActScript": "[Empty]",
      "accessTokenModificationPluginType": "SCRIPTED",
      "accessTokenModificationScript": "39c08084-1238-43e8-857f-2e11005eac49",
      "authorizeEndpointDataProviderClass": "org.forgerock.oauth2.core.plugins.registry.DefaultEndpointDataProvider",
      "authorizeEndpointDataProviderPluginType": "PROVIDER",
      "authorizeEndpointDataProviderScript": "[Empty]",
      "clientsCanSkipConsent": false,
      "enableRemoteConsent": false,
      "evaluateScopeClass": "org.forgerock.oauth2.core.plugins.registry.DefaultScopeEvaluator",
      "evaluateScopePluginType": "PROVIDER",
      "evaluateScopeScript": "[Empty]",
      "issueRefreshToken": true,
      "issueRefreshTokenOnRefreshedToken": true,
      "oidcClaimsPluginType": "SCRIPTED",
      "oidcClaimsScript": "cf3515f0-8278-4ee3-a530-1bad7424c416",
      "oidcMayActScript": "[Empty]",
      "overrideableOIDCClaims": [],
      "providerOverridesEnabled": true,
      "remoteConsentServiceId": "[Empty]",
      "scopesPolicySet": "oauth2Scopes",
      "statelessTokensEnabled": false,
      "tokenEncryptionEnabled": false,
      "usePolicyEngineForScope": false,
      "validateScopeClass": "org.forgerock.oauth2.core.plugins.registry.DefaultScopeValidator",
      "validateScopePluginType": "PROVIDER",
      "validateScopeScript": "[Empty]",
    },
    "signEncOAuth2ClientConfig": {
      "authorizationResponseEncryptionAlgorithm": {
        "inherited": false,
      },
      "authorizationResponseEncryptionMethod": {
        "inherited": false,
      },
      "authorizationResponseSigningAlgorithm": {
        "inherited": false,
        "value": "RS256",
      },
      "clientJwtPublicKey": {
        "inherited": false,
      },
      "idTokenEncryptionAlgorithm": {
        "inherited": false,
        "value": "RSA-OAEP-256",
      },
      "idTokenEncryptionEnabled": {
        "inherited": false,
        "value": false,
      },
      "idTokenEncryptionMethod": {
        "inherited": false,
        "value": "A128CBC-HS256",
      },
      "idTokenPublicEncryptionKey": {
        "inherited": false,
      },
      "idTokenSignedResponseAlg": {
        "inherited": false,
        "value": "RS256",
      },
      "jwkSet": {
        "inherited": false,
      },
      "jwkStoreCacheMissCacheTime": {
        "inherited": false,
        "value": 60000,
      },
      "jwksCacheTimeout": {
        "inherited": false,
        "value": 3600000,
      },
      "jwksUri": {
        "inherited": false,
      },
      "mTLSCertificateBoundAccessTokens": {
        "inherited": false,
        "value": false,
      },
      "mTLSSubjectDN": {
        "inherited": false,
      },
      "mTLSTrustedCert": {
        "inherited": false,
      },
      "publicKeyLocation": {
        "inherited": false,
        "value": "jwks_uri",
      },
      "requestParameterEncryptedAlg": {
        "inherited": false,
      },
      "requestParameterEncryptedEncryptionAlgorithm": {
        "inherited": false,
        "value": "A128CBC-HS256",
      },
      "requestParameterSignedAlg": {
        "inherited": false,
      },
      "tokenEndpointAuthSigningAlgorithm": {
        "inherited": false,
        "value": "RS256",
      },
      "tokenIntrospectionEncryptedResponseAlg": {
        "inherited": false,
        "value": "RSA-OAEP-256",
      },
      "tokenIntrospectionEncryptedResponseEncryptionAlgorithm": {
        "inherited": false,
        "value": "A128CBC-HS256",
      },
      "tokenIntrospectionResponseFormat": {
        "inherited": false,
        "value": "JSON",
      },
      "tokenIntrospectionSignedResponseAlg": {
        "inherited": false,
        "value": "RS256",
      },
      "userinfoEncryptedResponseAlg": {
        "inherited": false,
      },
      "userinfoEncryptedResponseEncryptionAlgorithm": {
        "inherited": false,
        "value": "A128CBC-HS256",
      },
      "userinfoResponseFormat": {
        "inherited": false,
        "value": "JSON",
      },
      "userinfoSignedResponseAlg": {
        "inherited": false,
      },
    },
  },
  {
    "_id": "FrodoTestOAuth2Client11",
    "_rev": "-1848380125",
    "_type": {
      "_id": "OAuth2Client",
      "collection": true,
      "name": "OAuth2 Clients",
    },
    "advancedOAuth2ClientConfig": {
      "clientUri": {
        "inherited": false,
        "value": [],
      },
      "contacts": {
        "inherited": false,
        "value": [],
      },
      "customProperties": {
        "inherited": false,
        "value": [],
      },
      "descriptions": {
        "inherited": false,
        "value": [],
      },
      "grantTypes": {
        "inherited": false,
        "value": [
          "authorization_code",
          "client_credentials",
          "refresh_token",
        ],
      },
      "isConsentImplied": {
        "inherited": false,
        "value": true,
      },
      "javascriptOrigins": {
        "inherited": false,
        "value": [
          "https://my.application.com",
          "https://my.application.com:443",
        ],
      },
      "logoUri": {
        "inherited": false,
        "value": [],
      },
      "mixUpMitigation": {
        "inherited": false,
        "value": false,
      },
      "name": {
        "inherited": false,
        "value": [],
      },
      "policyUri": {
        "inherited": false,
        "value": [],
      },
      "refreshTokenGracePeriod": {
        "inherited": false,
        "value": 0,
      },
      "requestUris": {
        "inherited": false,
        "value": [],
      },
      "require_pushed_authorization_requests": {
        "inherited": false,
        "value": false,
      },
      "responseTypes": {
        "inherited": false,
        "value": [
          "code",
          "token",
          "id_token",
        ],
      },
      "sectorIdentifierUri": {
        "inherited": false,
      },
      "softwareIdentity": {
        "inherited": false,
      },
      "softwareVersion": {
        "inherited": false,
      },
      "subjectType": {
        "inherited": false,
        "value": "public",
      },
      "tokenEndpointAuthMethod": {
        "inherited": false,
        "value": "client_secret_basic",
      },
      "tokenExchangeAuthLevel": {
        "inherited": false,
        "value": 0,
      },
      "tosURI": {
        "inherited": false,
        "value": [],
      },
      "updateAccessToken": {
        "inherited": false,
      },
    },
    "coreOAuth2ClientConfig": {
      "accessTokenLifetime": {
        "inherited": false,
        "value": 3600,
      },
      "authorizationCodeLifetime": {
        "inherited": false,
        "value": 120,
      },
      "clientName": {
        "inherited": false,
        "value": [],
      },
      "clientType": {
        "inherited": false,
        "value": "Confidential",
      },
      "defaultScopes": {
        "inherited": false,
        "value": [],
      },
      "loopbackInterfaceRedirection": {
        "inherited": false,
        "value": false,
      },
      "redirectionUris": {
        "inherited": false,
        "value": [
          "https://my.application.com/callback",
        ],
      },
      "refreshTokenLifetime": {
        "inherited": false,
        "value": 604800,
      },
      "scopes": {
        "inherited": false,
        "value": [
          "openid",
          "profile",
          "email",
        ],
      },
      "status": {
        "inherited": false,
        "value": "Active",
      },
    },
    "coreOpenIDClientConfig": {
      "backchannel_logout_session_required": {
        "inherited": false,
        "value": false,
      },
      "backchannel_logout_uri": {
        "inherited": false,
      },
      "claims": {
        "inherited": false,
        "value": [],
      },
      "clientSessionUri": {
        "inherited": false,
      },
      "defaultAcrValues": {
        "inherited": false,
        "value": [],
      },
      "defaultMaxAge": {
        "inherited": false,
        "value": 600,
      },
      "defaultMaxAgeEnabled": {
        "inherited": false,
        "value": false,
      },
      "jwtTokenLifetime": {
        "inherited": false,
        "value": 3600,
      },
      "postLogoutRedirectUri": {
        "inherited": false,
        "value": [],
      },
    },
    "coreUmaClientConfig": {
      "claimsRedirectionUris": {
        "inherited": false,
        "value": [],
      },
    },
    "overrideOAuth2ClientConfig": {
      "accessTokenMayActScript": "[Empty]",
      "accessTokenModificationPluginType": "SCRIPTED",
      "accessTokenModificationScript": "39c08084-1238-43e8-857f-2e11005eac49",
      "authorizeEndpointDataProviderClass": "org.forgerock.oauth2.core.plugins.registry.DefaultEndpointDataProvider",
      "authorizeEndpointDataProviderPluginType": "PROVIDER",
      "authorizeEndpointDataProviderScript": "[Empty]",
      "clientsCanSkipConsent": false,
      "enableRemoteConsent": false,
      "evaluateScopeClass": "org.forgerock.oauth2.core.plugins.registry.DefaultScopeEvaluator",
      "evaluateScopePluginType": "PROVIDER",
      "evaluateScopeScript": "[Empty]",
      "issueRefreshToken": true,
      "issueRefreshTokenOnRefreshedToken": true,
      "oidcClaimsPluginType": "SCRIPTED",
      "oidcClaimsScript": "cf3515f0-8278-4ee3-a530-1bad7424c416",
      "oidcMayActScript": "[Empty]",
      "overrideableOIDCClaims": [],
      "providerOverridesEnabled": true,
      "remoteConsentServiceId": "[Empty]",
      "scopesPolicySet": "oauth2Scopes",
      "statelessTokensEnabled": false,
      "tokenEncryptionEnabled": false,
      "usePolicyEngineForScope": false,
      "validateScopeClass": "org.forgerock.oauth2.core.plugins.registry.DefaultScopeValidator",
      "validateScopePluginType": "PROVIDER",
      "validateScopeScript": "[Empty]",
    },
    "signEncOAuth2ClientConfig": {
      "authorizationResponseEncryptionAlgorithm": {
        "inherited": false,
      },
      "authorizationResponseEncryptionMethod": {
        "inherited": false,
      },
      "authorizationResponseSigningAlgorithm": {
        "inherited": false,
        "value": "RS256",
      },
      "clientJwtPublicKey": {
        "inherited": false,
      },
      "idTokenEncryptionAlgorithm": {
        "inherited": false,
        "value": "RSA-OAEP-256",
      },
      "idTokenEncryptionEnabled": {
        "inherited": false,
        "value": false,
      },
      "idTokenEncryptionMethod": {
        "inherited": false,
        "value": "A128CBC-HS256",
      },
      "idTokenPublicEncryptionKey": {
        "inherited": false,
      },
      "idTokenSignedResponseAlg": {
        "inherited": false,
        "value": "RS256",
      },
      "jwkSet": {
        "inherited": false,
      },
      "jwkStoreCacheMissCacheTime": {
        "inherited": false,
        "value": 60000,
      },
      "jwksCacheTimeout": {
        "inherited": false,
        "value": 3600000,
      },
      "jwksUri": {
        "inherited": false,
      },
      "mTLSCertificateBoundAccessTokens": {
        "inherited": false,
        "value": false,
      },
      "mTLSSubjectDN": {
        "inherited": false,
      },
      "mTLSTrustedCert": {
        "inherited": false,
      },
      "publicKeyLocation": {
        "inherited": false,
        "value": "jwks_uri",
      },
      "requestParameterEncryptedAlg": {
        "inherited": false,
      },
      "requestParameterEncryptedEncryptionAlgorithm": {
        "inherited": false,
        "value": "A128CBC-HS256",
      },
      "requestParameterSignedAlg": {
        "inherited": false,
      },
      "tokenEndpointAuthSigningAlgorithm": {
        "inherited": false,
        "value": "RS256",
      },
      "tokenIntrospectionEncryptedResponseAlg": {
        "inherited": false,
        "value": "RSA-OAEP-256",
      },
      "tokenIntrospectionEncryptedResponseEncryptionAlgorithm": {
        "inherited": false,
        "value": "A128CBC-HS256",
      },
      "tokenIntrospectionResponseFormat": {
        "inherited": false,
        "value": "JSON",
      },
      "tokenIntrospectionSignedResponseAlg": {
        "inherited": false,
        "value": "RS256",
      },
      "userinfoEncryptedResponseAlg": {
        "inherited": false,
      },
      "userinfoEncryptedResponseEncryptionAlgorithm": {
        "inherited": false,
        "value": "A128CBC-HS256",
      },
      "userinfoResponseFormat": {
        "inherited": false,
        "value": "JSON",
      },
      "userinfoSignedResponseAlg": {
        "inherited": false,
      },
    },
  },
]
`;

exports[`OAuth2ClientOps 1: Import all oauth2 clients w/o dependencies 1`] = `
[
  {
    "_id": "FrodoTestOAuth2Client12",
    "_rev": "-1848380125",
    "_type": {
      "_id": "OAuth2Client",
      "collection": true,
      "name": "OAuth2 Clients",
    },
    "advancedOAuth2ClientConfig": {
      "clientUri": {
        "inherited": false,
        "value": [],
      },
      "contacts": {
        "inherited": false,
        "value": [],
      },
      "customProperties": {
        "inherited": false,
        "value": [],
      },
      "descriptions": {
        "inherited": false,
        "value": [],
      },
      "grantTypes": {
        "inherited": false,
        "value": [
          "authorization_code",
          "client_credentials",
          "refresh_token",
        ],
      },
      "isConsentImplied": {
        "inherited": false,
        "value": true,
      },
      "javascriptOrigins": {
        "inherited": false,
        "value": [
          "https://my.application.com",
          "https://my.application.com:443",
        ],
      },
      "logoUri": {
        "inherited": false,
        "value": [],
      },
      "mixUpMitigation": {
        "inherited": false,
        "value": false,
      },
      "name": {
        "inherited": false,
        "value": [],
      },
      "policyUri": {
        "inherited": false,
        "value": [],
      },
      "refreshTokenGracePeriod": {
        "inherited": false,
        "value": 0,
      },
      "requestUris": {
        "inherited": false,
        "value": [],
      },
      "require_pushed_authorization_requests": {
        "inherited": false,
        "value": false,
      },
      "responseTypes": {
        "inherited": false,
        "value": [
          "code",
          "token",
          "id_token",
        ],
      },
      "sectorIdentifierUri": {
        "inherited": false,
      },
      "softwareIdentity": {
        "inherited": false,
      },
      "softwareVersion": {
        "inherited": false,
      },
      "subjectType": {
        "inherited": false,
        "value": "public",
      },
      "tokenEndpointAuthMethod": {
        "inherited": false,
        "value": "client_secret_basic",
      },
      "tokenExchangeAuthLevel": {
        "inherited": false,
        "value": 0,
      },
      "tosURI": {
        "inherited": false,
        "value": [],
      },
      "updateAccessToken": {
        "inherited": false,
      },
    },
    "coreOAuth2ClientConfig": {
      "accessTokenLifetime": {
        "inherited": false,
        "value": 3600,
      },
      "authorizationCodeLifetime": {
        "inherited": false,
        "value": 120,
      },
      "clientName": {
        "inherited": false,
        "value": [],
      },
      "clientType": {
        "inherited": false,
        "value": "Confidential",
      },
      "defaultScopes": {
        "inherited": false,
        "value": [],
      },
      "loopbackInterfaceRedirection": {
        "inherited": false,
        "value": false,
      },
      "redirectionUris": {
        "inherited": false,
        "value": [
          "https://my.application.com/callback",
        ],
      },
      "refreshTokenLifetime": {
        "inherited": false,
        "value": 604800,
      },
      "scopes": {
        "inherited": false,
        "value": [
          "openid",
          "profile",
          "email",
        ],
      },
      "status": {
        "inherited": false,
        "value": "Active",
      },
    },
    "coreOpenIDClientConfig": {
      "backchannel_logout_session_required": {
        "inherited": false,
        "value": false,
      },
      "backchannel_logout_uri": {
        "inherited": false,
      },
      "claims": {
        "inherited": false,
        "value": [],
      },
      "clientSessionUri": {
        "inherited": false,
      },
      "defaultAcrValues": {
        "inherited": false,
        "value": [],
      },
      "defaultMaxAge": {
        "inherited": false,
        "value": 600,
      },
      "defaultMaxAgeEnabled": {
        "inherited": false,
        "value": false,
      },
      "jwtTokenLifetime": {
        "inherited": false,
        "value": 3600,
      },
      "postLogoutRedirectUri": {
        "inherited": false,
        "value": [],
      },
    },
    "coreUmaClientConfig": {
      "claimsRedirectionUris": {
        "inherited": false,
        "value": [],
      },
    },
    "overrideOAuth2ClientConfig": {
      "accessTokenMayActScript": "[Empty]",
      "accessTokenModificationPluginType": "SCRIPTED",
      "accessTokenModificationScript": "39c08084-1238-43e8-857f-2e11005eac49",
      "authorizeEndpointDataProviderClass": "org.forgerock.oauth2.core.plugins.registry.DefaultEndpointDataProvider",
      "authorizeEndpointDataProviderPluginType": "PROVIDER",
      "authorizeEndpointDataProviderScript": "[Empty]",
      "clientsCanSkipConsent": false,
      "enableRemoteConsent": false,
      "evaluateScopeClass": "org.forgerock.oauth2.core.plugins.registry.DefaultScopeEvaluator",
      "evaluateScopePluginType": "PROVIDER",
      "evaluateScopeScript": "[Empty]",
      "issueRefreshToken": true,
      "issueRefreshTokenOnRefreshedToken": true,
      "oidcClaimsPluginType": "SCRIPTED",
      "oidcClaimsScript": "cf3515f0-8278-4ee3-a530-1bad7424c416",
      "oidcMayActScript": "[Empty]",
      "overrideableOIDCClaims": [],
      "providerOverridesEnabled": true,
      "remoteConsentServiceId": "[Empty]",
      "scopesPolicySet": "oauth2Scopes",
      "statelessTokensEnabled": false,
      "tokenEncryptionEnabled": false,
      "usePolicyEngineForScope": false,
      "validateScopeClass": "org.forgerock.oauth2.core.plugins.registry.DefaultScopeValidator",
      "validateScopePluginType": "PROVIDER",
      "validateScopeScript": "[Empty]",
    },
    "signEncOAuth2ClientConfig": {
      "authorizationResponseEncryptionAlgorithm": {
        "inherited": false,
      },
      "authorizationResponseEncryptionMethod": {
        "inherited": false,
      },
      "authorizationResponseSigningAlgorithm": {
        "inherited": false,
        "value": "RS256",
      },
      "clientJwtPublicKey": {
        "inherited": false,
      },
      "idTokenEncryptionAlgorithm": {
        "inherited": false,
        "value": "RSA-OAEP-256",
      },
      "idTokenEncryptionEnabled": {
        "inherited": false,
        "value": false,
      },
      "idTokenEncryptionMethod": {
        "inherited": false,
        "value": "A128CBC-HS256",
      },
      "idTokenPublicEncryptionKey": {
        "inherited": false,
      },
      "idTokenSignedResponseAlg": {
        "inherited": false,
        "value": "RS256",
      },
      "jwkSet": {
        "inherited": false,
      },
      "jwkStoreCacheMissCacheTime": {
        "inherited": false,
        "value": 60000,
      },
      "jwksCacheTimeout": {
        "inherited": false,
        "value": 3600000,
      },
      "jwksUri": {
        "inherited": false,
      },
      "mTLSCertificateBoundAccessTokens": {
        "inherited": false,
        "value": false,
      },
      "mTLSSubjectDN": {
        "inherited": false,
      },
      "mTLSTrustedCert": {
        "inherited": false,
      },
      "publicKeyLocation": {
        "inherited": false,
        "value": "jwks_uri",
      },
      "requestParameterEncryptedAlg": {
        "inherited": false,
      },
      "requestParameterEncryptedEncryptionAlgorithm": {
        "inherited": false,
        "value": "A128CBC-HS256",
      },
      "requestParameterSignedAlg": {
        "inherited": false,
      },
      "tokenEndpointAuthSigningAlgorithm": {
        "inherited": false,
        "value": "RS256",
      },
      "tokenIntrospectionEncryptedResponseAlg": {
        "inherited": false,
        "value": "RSA-OAEP-256",
      },
      "tokenIntrospectionEncryptedResponseEncryptionAlgorithm": {
        "inherited": false,
        "value": "A128CBC-HS256",
      },
      "tokenIntrospectionResponseFormat": {
        "inherited": false,
        "value": "JSON",
      },
      "tokenIntrospectionSignedResponseAlg": {
        "inherited": false,
        "value": "RS256",
      },
      "userinfoEncryptedResponseAlg": {
        "inherited": false,
      },
      "userinfoEncryptedResponseEncryptionAlgorithm": {
        "inherited": false,
        "value": "A128CBC-HS256",
      },
      "userinfoResponseFormat": {
        "inherited": false,
        "value": "JSON",
      },
      "userinfoSignedResponseAlg": {
        "inherited": false,
      },
    },
  },
  {
    "_id": "FrodoTestOAuth2Client13",
    "_rev": "-1848380125",
    "_type": {
      "_id": "OAuth2Client",
      "collection": true,
      "name": "OAuth2 Clients",
    },
    "advancedOAuth2ClientConfig": {
      "clientUri": {
        "inherited": false,
        "value": [],
      },
      "contacts": {
        "inherited": false,
        "value": [],
      },
      "customProperties": {
        "inherited": false,
        "value": [],
      },
      "descriptions": {
        "inherited": false,
        "value": [],
      },
      "grantTypes": {
        "inherited": false,
        "value": [
          "authorization_code",
          "client_credentials",
          "refresh_token",
        ],
      },
      "isConsentImplied": {
        "inherited": false,
        "value": true,
      },
      "javascriptOrigins": {
        "inherited": false,
        "value": [
          "https://my.application.com",
          "https://my.application.com:443",
        ],
      },
      "logoUri": {
        "inherited": false,
        "value": [],
      },
      "mixUpMitigation": {
        "inherited": false,
        "value": false,
      },
      "name": {
        "inherited": false,
        "value": [],
      },
      "policyUri": {
        "inherited": false,
        "value": [],
      },
      "refreshTokenGracePeriod": {
        "inherited": false,
        "value": 0,
      },
      "requestUris": {
        "inherited": false,
        "value": [],
      },
      "require_pushed_authorization_requests": {
        "inherited": false,
        "value": false,
      },
      "responseTypes": {
        "inherited": false,
        "value": [
          "code",
          "token",
          "id_token",
        ],
      },
      "sectorIdentifierUri": {
        "inherited": false,
      },
      "softwareIdentity": {
        "inherited": false,
      },
      "softwareVersion": {
        "inherited": false,
      },
      "subjectType": {
        "inherited": false,
        "value": "public",
      },
      "tokenEndpointAuthMethod": {
        "inherited": false,
        "value": "client_secret_basic",
      },
      "tokenExchangeAuthLevel": {
        "inherited": false,
        "value": 0,
      },
      "tosURI": {
        "inherited": false,
        "value": [],
      },
      "updateAccessToken": {
        "inherited": false,
      },
    },
    "coreOAuth2ClientConfig": {
      "accessTokenLifetime": {
        "inherited": false,
        "value": 3600,
      },
      "authorizationCodeLifetime": {
        "inherited": false,
        "value": 120,
      },
      "clientName": {
        "inherited": false,
        "value": [],
      },
      "clientType": {
        "inherited": false,
        "value": "Confidential",
      },
      "defaultScopes": {
        "inherited": false,
        "value": [],
      },
      "loopbackInterfaceRedirection": {
        "inherited": false,
        "value": false,
      },
      "redirectionUris": {
        "inherited": false,
        "value": [
          "https://my.application.com/callback",
        ],
      },
      "refreshTokenLifetime": {
        "inherited": false,
        "value": 604800,
      },
      "scopes": {
        "inherited": false,
        "value": [
          "openid",
          "profile",
          "email",
        ],
      },
      "status": {
        "inherited": false,
        "value": "Active",
      },
    },
    "coreOpenIDClientConfig": {
      "backchannel_logout_session_required": {
        "inherited": false,
        "value": false,
      },
      "backchannel_logout_uri": {
        "inherited": false,
      },
      "claims": {
        "inherited": false,
        "value": [],
      },
      "clientSessionUri": {
        "inherited": false,
      },
      "defaultAcrValues": {
        "inherited": false,
        "value": [],
      },
      "defaultMaxAge": {
        "inherited": false,
        "value": 600,
      },
      "defaultMaxAgeEnabled": {
        "inherited": false,
        "value": false,
      },
      "jwtTokenLifetime": {
        "inherited": false,
        "value": 3600,
      },
      "postLogoutRedirectUri": {
        "inherited": false,
        "value": [],
      },
    },
    "coreUmaClientConfig": {
      "claimsRedirectionUris": {
        "inherited": false,
        "value": [],
      },
    },
    "overrideOAuth2ClientConfig": {
      "accessTokenMayActScript": "[Empty]",
      "accessTokenModificationPluginType": "SCRIPTED",
      "accessTokenModificationScript": "39c08084-1238-43e8-857f-2e11005eac49",
      "authorizeEndpointDataProviderClass": "org.forgerock.oauth2.core.plugins.registry.DefaultEndpointDataProvider",
      "authorizeEndpointDataProviderPluginType": "PROVIDER",
      "authorizeEndpointDataProviderScript": "[Empty]",
      "clientsCanSkipConsent": false,
      "enableRemoteConsent": false,
      "evaluateScopeClass": "org.forgerock.oauth2.core.plugins.registry.DefaultScopeEvaluator",
      "evaluateScopePluginType": "PROVIDER",
      "evaluateScopeScript": "[Empty]",
      "issueRefreshToken": true,
      "issueRefreshTokenOnRefreshedToken": true,
      "oidcClaimsPluginType": "SCRIPTED",
      "oidcClaimsScript": "cf3515f0-8278-4ee3-a530-1bad7424c416",
      "oidcMayActScript": "[Empty]",
      "overrideableOIDCClaims": [],
      "providerOverridesEnabled": true,
      "remoteConsentServiceId": "[Empty]",
      "scopesPolicySet": "oauth2Scopes",
      "statelessTokensEnabled": false,
      "tokenEncryptionEnabled": false,
      "usePolicyEngineForScope": false,
      "validateScopeClass": "org.forgerock.oauth2.core.plugins.registry.DefaultScopeValidator",
      "validateScopePluginType": "PROVIDER",
      "validateScopeScript": "[Empty]",
    },
    "signEncOAuth2ClientConfig": {
      "authorizationResponseEncryptionAlgorithm": {
        "inherited": false,
      },
      "authorizationResponseEncryptionMethod": {
        "inherited": false,
      },
      "authorizationResponseSigningAlgorithm": {
        "inherited": false,
        "value": "RS256",
      },
      "clientJwtPublicKey": {
        "inherited": false,
      },
      "idTokenEncryptionAlgorithm": {
        "inherited": false,
        "value": "RSA-OAEP-256",
      },
      "idTokenEncryptionEnabled": {
        "inherited": false,
        "value": false,
      },
      "idTokenEncryptionMethod": {
        "inherited": false,
        "value": "A128CBC-HS256",
      },
      "idTokenPublicEncryptionKey": {
        "inherited": false,
      },
      "idTokenSignedResponseAlg": {
        "inherited": false,
        "value": "RS256",
      },
      "jwkSet": {
        "inherited": false,
      },
      "jwkStoreCacheMissCacheTime": {
        "inherited": false,
        "value": 60000,
      },
      "jwksCacheTimeout": {
        "inherited": false,
        "value": 3600000,
      },
      "jwksUri": {
        "inherited": false,
      },
      "mTLSCertificateBoundAccessTokens": {
        "inherited": false,
        "value": false,
      },
      "mTLSSubjectDN": {
        "inherited": false,
      },
      "mTLSTrustedCert": {
        "inherited": false,
      },
      "publicKeyLocation": {
        "inherited": false,
        "value": "jwks_uri",
      },
      "requestParameterEncryptedAlg": {
        "inherited": false,
      },
      "requestParameterEncryptedEncryptionAlgorithm": {
        "inherited": false,
        "value": "A128CBC-HS256",
      },
      "requestParameterSignedAlg": {
        "inherited": false,
      },
      "tokenEndpointAuthSigningAlgorithm": {
        "inherited": false,
        "value": "RS256",
      },
      "tokenIntrospectionEncryptedResponseAlg": {
        "inherited": false,
        "value": "RSA-OAEP-256",
      },
      "tokenIntrospectionEncryptedResponseEncryptionAlgorithm": {
        "inherited": false,
        "value": "A128CBC-HS256",
      },
      "tokenIntrospectionResponseFormat": {
        "inherited": false,
        "value": "JSON",
      },
      "tokenIntrospectionSignedResponseAlg": {
        "inherited": false,
        "value": "RS256",
      },
      "userinfoEncryptedResponseAlg": {
        "inherited": false,
      },
      "userinfoEncryptedResponseEncryptionAlgorithm": {
        "inherited": false,
        "value": "A128CBC-HS256",
      },
      "userinfoResponseFormat": {
        "inherited": false,
        "value": "JSON",
      },
      "userinfoSignedResponseAlg": {
        "inherited": false,
      },
    },
  },
]
`;

exports[`OAuth2ClientOps exportOAuth2Client() 1: Export oauth2 client FrodoTestOAuth2Client1 1`] = `
{
  "application": {
    "FrodoTestOAuth2Client1": {
      "_id": "FrodoTestOAuth2Client1",
      "_provider": {
        "_id": "",
        "_rev": "745152125",
        "_type": {
          "_id": "oauth-oidc",
          "collection": false,
          "name": "OAuth2 Provider",
        },
        "advancedOAuth2Config": {
          "allowedAudienceValues": [],
          "authenticationAttributes": [
            "uid",
          ],
          "codeVerifierEnforced": "false",
          "defaultScopes": [
            "address",
            "phone",
            "openid",
            "profile",
            "email",
          ],
          "displayNameAttribute": "cn",
          "expClaimRequiredInRequestObject": false,
          "grantTypes": [
            "implicit",
            "urn:ietf:params:oauth:grant-type:saml2-bearer",
            "refresh_token",
            "password",
            "client_credentials",
            "urn:ietf:params:oauth:grant-type:device_code",
            "authorization_code",
            "urn:openid:params:grant-type:ciba",
            "urn:ietf:params:oauth:grant-type:uma-ticket",
            "urn:ietf:params:oauth:grant-type:jwt-bearer",
          ],
          "hashSalt": "qAWV0MFSQpC/f1GPbZAZnMRksak=",
          "macaroonTokenFormat": "V2",
          "maxAgeOfRequestObjectNbfClaim": 0,
          "maxDifferenceBetweenRequestObjectNbfAndExp": 0,
          "moduleMessageEnabledInPasswordGrant": false,
          "nbfClaimRequiredInRequestObject": false,
          "parRequestUriLifetime": 90,
          "passwordGrantAuthService": "PasswordGrant",
          "persistentClaims": [],
          "refreshTokenGracePeriod": 0,
          "requestObjectProcessing": "OIDC",
          "requirePushedAuthorizationRequests": false,
          "responseTypeClasses": [
            "code|org.forgerock.oauth2.core.AuthorizationCodeResponseTypeHandler",
            "device_code|org.forgerock.oauth2.core.TokenResponseTypeHandler",
            "token|org.forgerock.oauth2.core.TokenResponseTypeHandler",
            "id_token|org.forgerock.openidconnect.IdTokenResponseTypeHandler",
          ],
          "supportedScopes": [
            "email|Your email address",
            "openid|",
            "address|Your postal address",
            "phone|Your telephone number(s)",
            "profile|Your personal information",
            "fr:idm:*",
            "am-introspect-all-tokens",
          ],
          "supportedSubjectTypes": [
            "public",
            "pairwise",
          ],
          "tlsCertificateBoundAccessTokensEnabled": true,
          "tlsCertificateRevocationCheckingEnabled": false,
          "tlsClientCertificateHeaderFormat": "URLENCODED_PEM",
          "tokenCompressionEnabled": false,
          "tokenEncryptionEnabled": false,
          "tokenExchangeClasses": [
            "urn:ietf:params:oauth:token-type:access_token=>urn:ietf:params:oauth:token-type:access_token|org.forgerock.oauth2.core.tokenexchange.accesstoken.AccessTokenToAccessTokenExchanger",
            "urn:ietf:params:oauth:token-type:id_token=>urn:ietf:params:oauth:token-type:id_token|org.forgerock.oauth2.core.tokenexchange.idtoken.IdTokenToIdTokenExchanger",
            "urn:ietf:params:oauth:token-type:access_token=>urn:ietf:params:oauth:token-type:id_token|org.forgerock.oauth2.core.tokenexchange.accesstoken.AccessTokenToIdTokenExchanger",
            "urn:ietf:params:oauth:token-type:id_token=>urn:ietf:params:oauth:token-type:access_token|org.forgerock.oauth2.core.tokenexchange.idtoken.IdTokenToAccessTokenExchanger",
          ],
          "tokenSigningAlgorithm": "HS256",
          "tokenValidatorClasses": [
            "urn:ietf:params:oauth:token-type:id_token|org.forgerock.oauth2.core.tokenexchange.idtoken.OidcIdTokenValidator",
            "urn:ietf:params:oauth:token-type:access_token|org.forgerock.oauth2.core.tokenexchange.accesstoken.OAuth2AccessTokenValidator",
          ],
        },
        "advancedOIDCConfig": {
          "alwaysAddClaimsToToken": true,
          "amrMappings": {},
          "authorisedIdmDelegationClients": [],
          "authorisedOpenIdConnectSSOClients": [],
          "claimsParameterSupported": false,
          "defaultACR": [],
          "idTokenInfoClientAuthenticationEnabled": true,
          "includeAllKtyAlgCombinationsInJwksUri": false,
          "loaMapping": {},
          "storeOpsTokens": true,
          "supportedAuthorizationResponseEncryptionAlgorithms": [
            "ECDH-ES+A256KW",
            "ECDH-ES+A192KW",
            "RSA-OAEP",
            "ECDH-ES+A128KW",
            "RSA-OAEP-256",
            "A128KW",
            "A256KW",
            "ECDH-ES",
            "dir",
            "A192KW",
          ],
          "supportedAuthorizationResponseEncryptionEnc": [
            "A256GCM",
            "A192GCM",
            "A128GCM",
            "A128CBC-HS256",
            "A192CBC-HS384",
            "A256CBC-HS512",
          ],
          "supportedAuthorizationResponseSigningAlgorithms": [
            "PS384",
            "RS384",
            "EdDSA",
            "ES384",
            "HS256",
            "HS512",
            "ES256",
            "RS256",
            "HS384",
            "ES512",
            "PS256",
            "PS512",
            "RS512",
          ],
          "supportedRequestParameterEncryptionAlgorithms": [
            "ECDH-ES+A256KW",
            "ECDH-ES+A192KW",
            "ECDH-ES+A128KW",
            "RSA-OAEP",
            "RSA-OAEP-256",
            "A128KW",
            "A256KW",
            "ECDH-ES",
            "dir",
            "A192KW",
          ],
          "supportedRequestParameterEncryptionEnc": [
            "A256GCM",
            "A192GCM",
            "A128GCM",
            "A128CBC-HS256",
            "A192CBC-HS384",
            "A256CBC-HS512",
          ],
          "supportedRequestParameterSigningAlgorithms": [
            "PS384",
            "ES384",
            "RS384",
            "HS256",
            "HS512",
            "ES256",
            "RS256",
            "HS384",
            "ES512",
            "PS256",
            "PS512",
            "RS512",
          ],
          "supportedTokenEndpointAuthenticationSigningAlgorithms": [
            "PS384",
            "ES384",
            "RS384",
            "HS256",
            "HS512",
            "ES256",
            "RS256",
            "HS384",
            "ES512",
            "PS256",
            "PS512",
            "RS512",
          ],
          "supportedTokenIntrospectionResponseEncryptionAlgorithms": [
            "ECDH-ES+A256KW",
            "ECDH-ES+A192KW",
            "RSA-OAEP",
            "ECDH-ES+A128KW",
            "RSA-OAEP-256",
            "A128KW",
            "A256KW",
            "ECDH-ES",
            "dir",
            "A192KW",
          ],
          "supportedTokenIntrospectionResponseEncryptionEnc": [
            "A256GCM",
            "A192GCM",
            "A128GCM",
            "A128CBC-HS256",
            "A192CBC-HS384",
            "A256CBC-HS512",
          ],
          "supportedTokenIntrospectionResponseSigningAlgorithms": [
            "PS384",
            "RS384",
            "EdDSA",
            "ES384",
            "HS256",
            "HS512",
            "ES256",
            "RS256",
            "HS384",
            "ES512",
            "PS256",
            "PS512",
            "RS512",
          ],
          "supportedUserInfoEncryptionAlgorithms": [
            "ECDH-ES+A256KW",
            "ECDH-ES+A192KW",
            "RSA-OAEP",
            "ECDH-ES+A128KW",
            "RSA-OAEP-256",
            "A128KW",
            "A256KW",
            "ECDH-ES",
            "dir",
            "A192KW",
          ],
          "supportedUserInfoEncryptionEnc": [
            "A256GCM",
            "A192GCM",
            "A128GCM",
            "A128CBC-HS256",
            "A192CBC-HS384",
            "A256CBC-HS512",
          ],
          "supportedUserInfoSigningAlgorithms": [
            "ES384",
            "HS256",
            "HS512",
            "ES256",
            "RS256",
            "HS384",
            "ES512",
          ],
          "useForceAuthnForPromptLogin": false,
        },
        "cibaConfig": {
          "cibaAuthReqIdLifetime": 600,
          "cibaMinimumPollingInterval": 2,
          "supportedCibaSigningAlgorithms": [
            "ES256",
            "PS256",
          ],
        },
        "clientDynamicRegistrationConfig": {
          "allowDynamicRegistration": false,
          "dynamicClientRegistrationScope": "dynamic_client_registration",
          "dynamicClientRegistrationSoftwareStatementRequired": false,
          "generateRegistrationAccessTokens": true,
          "requiredSoftwareStatementAttestedAttributes": [
            "redirect_uris",
          ],
        },
        "consent": {
          "clientsCanSkipConsent": true,
          "enableRemoteConsent": false,
          "supportedRcsRequestEncryptionAlgorithms": [
            "ECDH-ES+A256KW",
            "ECDH-ES+A192KW",
            "RSA-OAEP",
            "ECDH-ES+A128KW",
            "RSA-OAEP-256",
            "A128KW",
            "A256KW",
            "ECDH-ES",
            "dir",
            "A192KW",
          ],
          "supportedRcsRequestEncryptionMethods": [
            "A256GCM",
            "A192GCM",
            "A128GCM",
            "A128CBC-HS256",
            "A192CBC-HS384",
            "A256CBC-HS512",
          ],
          "supportedRcsRequestSigningAlgorithms": [
            "PS384",
            "ES384",
            "RS384",
            "HS256",
            "HS512",
            "ES256",
            "RS256",
            "HS384",
            "ES512",
            "PS256",
            "PS512",
            "RS512",
          ],
          "supportedRcsResponseEncryptionAlgorithms": [
            "ECDH-ES+A256KW",
            "ECDH-ES+A192KW",
            "ECDH-ES+A128KW",
            "RSA-OAEP",
            "RSA-OAEP-256",
            "A128KW",
            "A256KW",
            "ECDH-ES",
            "dir",
            "A192KW",
          ],
          "supportedRcsResponseEncryptionMethods": [
            "A256GCM",
            "A192GCM",
            "A128GCM",
            "A128CBC-HS256",
            "A192CBC-HS384",
            "A256CBC-HS512",
          ],
          "supportedRcsResponseSigningAlgorithms": [
            "PS384",
            "ES384",
            "RS384",
            "HS256",
            "HS512",
            "ES256",
            "RS256",
            "HS384",
            "ES512",
            "PS256",
            "PS512",
            "RS512",
          ],
        },
        "coreOAuth2Config": {
          "accessTokenLifetime": 3600,
          "accessTokenMayActScript": "[Empty]",
          "codeLifetime": 120,
          "issueRefreshToken": true,
          "issueRefreshTokenOnRefreshedToken": true,
          "macaroonTokensEnabled": false,
          "oidcMayActScript": "[Empty]",
          "refreshTokenLifetime": 604800,
          "scopesPolicySet": "oauth2Scopes",
          "statelessTokensEnabled": true,
          "usePolicyEngineForScope": false,
        },
        "coreOIDCConfig": {
          "jwtTokenLifetime": 3600,
          "oidcDiscoveryEndpointEnabled": true,
          "overrideableOIDCClaims": [],
          "supportedClaims": [],
          "supportedIDTokenEncryptionAlgorithms": [
            "ECDH-ES+A256KW",
            "ECDH-ES+A192KW",
            "RSA-OAEP",
            "ECDH-ES+A128KW",
            "RSA-OAEP-256",
            "A128KW",
            "A256KW",
            "ECDH-ES",
            "dir",
            "A192KW",
          ],
          "supportedIDTokenEncryptionMethods": [
            "A256GCM",
            "A192GCM",
            "A128GCM",
            "A128CBC-HS256",
            "A192CBC-HS384",
            "A256CBC-HS512",
          ],
          "supportedIDTokenSigningAlgorithms": [
            "PS384",
            "ES384",
            "RS384",
            "HS256",
            "HS512",
            "ES256",
            "RS256",
            "HS384",
            "ES512",
            "PS256",
            "PS512",
            "RS512",
          ],
        },
        "deviceCodeConfig": {
          "deviceCodeLifetime": 300,
          "devicePollInterval": 5,
          "deviceUserCodeCharacterSet": "234567ACDEFGHJKLMNPQRSTWXYZabcdefhijkmnopqrstwxyz",
          "deviceUserCodeLength": 8,
        },
        "pluginsConfig": {
          "accessTokenEnricherClass": "org.forgerock.openam.oauth2.OpenAMScopeValidator",
          "accessTokenModificationPluginType": "SCRIPTED",
          "accessTokenModificationScript": "39c08084-1238-43e8-857f-2e11005eac49",
          "accessTokenModifierClass": "org.forgerock.openam.oauth2.OpenAMScopeValidator",
          "authorizeEndpointDataProviderClass": "org.forgerock.openam.oauth2.OpenAMScopeValidator",
          "authorizeEndpointDataProviderPluginType": "JAVA",
          "authorizeEndpointDataProviderScript": "[Empty]",
          "evaluateScopeClass": "org.forgerock.openam.oauth2.OpenAMScopeValidator",
          "evaluateScopePluginType": "JAVA",
          "evaluateScopeScript": "[Empty]",
          "oidcClaimsClass": "org.forgerock.openam.oauth2.OpenAMScopeValidator",
          "oidcClaimsPluginType": "SCRIPTED",
          "oidcClaimsScript": "cf3515f0-8278-4ee3-a530-1bad7424c416",
          "userCodeGeneratorClass": "org.forgerock.oauth2.core.plugins.registry.DefaultUserCodeGenerator",
          "validateScopeClass": "org.forgerock.openam.oauth2.OpenAMScopeValidator",
          "validateScopePluginType": "JAVA",
          "validateScopeScript": "[Empty]",
        },
      },
      "_rev": "-124322343",
      "_type": {
        "_id": "OAuth2Client",
        "collection": true,
        "name": "OAuth2 Clients",
      },
      "advancedOAuth2ClientConfig": {
        "clientUri": {
          "inherited": false,
          "value": [],
        },
        "contacts": {
          "inherited": false,
          "value": [],
        },
        "customProperties": {
          "inherited": false,
          "value": [],
        },
        "descriptions": {
          "inherited": false,
          "value": [],
        },
        "grantTypes": {
          "inherited": false,
          "value": [
            "authorization_code",
            "refresh_token",
          ],
        },
        "isConsentImplied": {
          "inherited": false,
          "value": true,
        },
        "javascriptOrigins": {
          "inherited": false,
          "value": [],
        },
        "logoUri": {
          "inherited": false,
          "value": [],
        },
        "mixUpMitigation": {
          "inherited": false,
          "value": false,
        },
        "name": {
          "inherited": false,
          "value": [],
        },
        "policyUri": {
          "inherited": false,
          "value": [],
        },
        "refreshTokenGracePeriod": {
          "inherited": false,
          "value": 0,
        },
        "requestUris": {
          "inherited": false,
          "value": [],
        },
        "require_pushed_authorization_requests": {
          "inherited": false,
          "value": false,
        },
        "responseTypes": {
          "inherited": false,
          "value": [
            "code",
            "token",
            "id_token",
          ],
        },
        "sectorIdentifierUri": {
          "inherited": false,
        },
        "softwareIdentity": {
          "inherited": false,
        },
        "softwareVersion": {
          "inherited": false,
        },
        "subjectType": {
          "inherited": false,
          "value": "public",
        },
        "tokenEndpointAuthMethod": {
          "inherited": false,
          "value": "client_secret_basic",
        },
        "tokenExchangeAuthLevel": {
          "inherited": false,
          "value": 0,
        },
        "tosURI": {
          "inherited": false,
          "value": [],
        },
        "updateAccessToken": {
          "inherited": false,
        },
      },
      "coreOAuth2ClientConfig": {
        "accessTokenLifetime": {
          "inherited": false,
          "value": 3600,
        },
        "authorizationCodeLifetime": {
          "inherited": false,
          "value": 120,
        },
        "clientName": {
          "inherited": false,
          "value": [],
        },
        "clientType": {
          "inherited": false,
          "value": "Public",
        },
        "defaultScopes": {
          "inherited": false,
          "value": [],
        },
        "loopbackInterfaceRedirection": {
          "inherited": false,
          "value": false,
        },
        "redirectionUris": {
          "inherited": false,
          "value": [],
        },
        "refreshTokenLifetime": {
          "inherited": false,
          "value": 604800,
        },
        "scopes": {
          "inherited": false,
          "value": [
            "openid",
          ],
        },
        "status": {
          "inherited": false,
          "value": "Active",
        },
      },
      "coreOpenIDClientConfig": {
        "backchannel_logout_session_required": {
          "inherited": false,
          "value": false,
        },
        "backchannel_logout_uri": {
          "inherited": false,
        },
        "claims": {
          "inherited": false,
          "value": [],
        },
        "clientSessionUri": {
          "inherited": false,
        },
        "defaultAcrValues": {
          "inherited": false,
          "value": [],
        },
        "defaultMaxAge": {
          "inherited": false,
          "value": 600,
        },
        "defaultMaxAgeEnabled": {
          "inherited": false,
          "value": false,
        },
        "jwtTokenLifetime": {
          "inherited": false,
          "value": 3600,
        },
        "postLogoutRedirectUri": {
          "inherited": false,
          "value": [],
        },
      },
      "coreUmaClientConfig": {
        "claimsRedirectionUris": {
          "inherited": false,
          "value": [],
        },
      },
      "overrideOAuth2ClientConfig": {
        "accessTokenMayActScript": "[Empty]",
        "accessTokenModificationPluginType": "PROVIDER",
        "accessTokenModificationScript": "[Empty]",
        "authorizeEndpointDataProviderClass": "org.forgerock.oauth2.core.plugins.registry.DefaultEndpointDataProvider",
        "authorizeEndpointDataProviderPluginType": "PROVIDER",
        "authorizeEndpointDataProviderScript": "[Empty]",
        "clientsCanSkipConsent": false,
        "enableRemoteConsent": false,
        "evaluateScopeClass": "org.forgerock.oauth2.core.plugins.registry.DefaultScopeEvaluator",
        "evaluateScopePluginType": "PROVIDER",
        "evaluateScopeScript": "[Empty]",
        "issueRefreshToken": true,
        "issueRefreshTokenOnRefreshedToken": true,
        "oidcClaimsPluginType": "PROVIDER",
        "oidcClaimsScript": "[Empty]",
        "oidcMayActScript": "[Empty]",
        "overrideableOIDCClaims": [],
        "providerOverridesEnabled": false,
        "remoteConsentServiceId": null,
        "scopesPolicySet": "oauth2Scopes",
        "statelessTokensEnabled": false,
        "tokenEncryptionEnabled": false,
        "usePolicyEngineForScope": false,
        "validateScopeClass": "org.forgerock.oauth2.core.plugins.registry.DefaultScopeValidator",
        "validateScopePluginType": "PROVIDER",
        "validateScopeScript": "[Empty]",
      },
      "signEncOAuth2ClientConfig": {
        "authorizationResponseEncryptionAlgorithm": {
          "inherited": false,
        },
        "authorizationResponseEncryptionMethod": {
          "inherited": false,
        },
        "authorizationResponseSigningAlgorithm": {
          "inherited": false,
          "value": "RS256",
        },
        "clientJwtPublicKey": {
          "inherited": false,
        },
        "idTokenEncryptionAlgorithm": {
          "inherited": false,
          "value": "RSA-OAEP-256",
        },
        "idTokenEncryptionEnabled": {
          "inherited": false,
          "value": false,
        },
        "idTokenEncryptionMethod": {
          "inherited": false,
          "value": "A128CBC-HS256",
        },
        "idTokenPublicEncryptionKey": {
          "inherited": false,
        },
        "idTokenSignedResponseAlg": {
          "inherited": false,
          "value": "RS256",
        },
        "jwkSet": {
          "inherited": false,
        },
        "jwkStoreCacheMissCacheTime": {
          "inherited": false,
          "value": 60000,
        },
        "jwksCacheTimeout": {
          "inherited": false,
          "value": 3600000,
        },
        "jwksUri": {
          "inherited": false,
        },
        "mTLSCertificateBoundAccessTokens": {
          "inherited": false,
          "value": false,
        },
        "mTLSSubjectDN": {
          "inherited": false,
        },
        "mTLSTrustedCert": {
          "inherited": false,
        },
        "publicKeyLocation": {
          "inherited": false,
          "value": "jwks_uri",
        },
        "requestParameterEncryptedAlg": {
          "inherited": false,
        },
        "requestParameterEncryptedEncryptionAlgorithm": {
          "inherited": false,
          "value": "A128CBC-HS256",
        },
        "requestParameterSignedAlg": {
          "inherited": false,
        },
        "tokenEndpointAuthSigningAlgorithm": {
          "inherited": false,
          "value": "RS256",
        },
        "tokenIntrospectionEncryptedResponseAlg": {
          "inherited": false,
          "value": "RSA-OAEP-256",
        },
        "tokenIntrospectionEncryptedResponseEncryptionAlgorithm": {
          "inherited": false,
          "value": "A128CBC-HS256",
        },
        "tokenIntrospectionResponseFormat": {
          "inherited": false,
          "value": "JSON",
        },
        "tokenIntrospectionSignedResponseAlg": {
          "inherited": false,
          "value": "RS256",
        },
        "userinfoEncryptedResponseAlg": {
          "inherited": false,
        },
        "userinfoEncryptedResponseEncryptionAlgorithm": {
          "inherited": false,
          "value": "A128CBC-HS256",
        },
        "userinfoResponseFormat": {
          "inherited": false,
          "value": "JSON",
        },
        "userinfoSignedResponseAlg": {
          "inherited": false,
        },
      },
    },
  },
  "script": {},
}
`;

exports[`OAuth2ClientOps exportOAuth2Clients() 1: Export all oauth2 clients 1`] = `
{
  "application": {
    "23281ea7-739b-4fd1-b953-eaae73a2b497": {
      "_id": "23281ea7-739b-4fd1-b953-eaae73a2b497",
      "_provider": {
        "_id": "",
        "_rev": "745152125",
        "_type": {
          "_id": "oauth-oidc",
          "collection": false,
          "name": "OAuth2 Provider",
        },
        "advancedOAuth2Config": {
          "allowedAudienceValues": [],
          "authenticationAttributes": [
            "uid",
          ],
          "codeVerifierEnforced": "false",
          "defaultScopes": [
            "address",
            "phone",
            "openid",
            "profile",
            "email",
          ],
          "displayNameAttribute": "cn",
          "expClaimRequiredInRequestObject": false,
          "grantTypes": [
            "implicit",
            "urn:ietf:params:oauth:grant-type:saml2-bearer",
            "refresh_token",
            "password",
            "client_credentials",
            "urn:ietf:params:oauth:grant-type:device_code",
            "authorization_code",
            "urn:openid:params:grant-type:ciba",
            "urn:ietf:params:oauth:grant-type:uma-ticket",
            "urn:ietf:params:oauth:grant-type:jwt-bearer",
          ],
          "hashSalt": "qAWV0MFSQpC/f1GPbZAZnMRksak=",
          "macaroonTokenFormat": "V2",
          "maxAgeOfRequestObjectNbfClaim": 0,
          "maxDifferenceBetweenRequestObjectNbfAndExp": 0,
          "moduleMessageEnabledInPasswordGrant": false,
          "nbfClaimRequiredInRequestObject": false,
          "parRequestUriLifetime": 90,
          "passwordGrantAuthService": "PasswordGrant",
          "persistentClaims": [],
          "refreshTokenGracePeriod": 0,
          "requestObjectProcessing": "OIDC",
          "requirePushedAuthorizationRequests": false,
          "responseTypeClasses": [
            "code|org.forgerock.oauth2.core.AuthorizationCodeResponseTypeHandler",
            "device_code|org.forgerock.oauth2.core.TokenResponseTypeHandler",
            "token|org.forgerock.oauth2.core.TokenResponseTypeHandler",
            "id_token|org.forgerock.openidconnect.IdTokenResponseTypeHandler",
          ],
          "supportedScopes": [
            "email|Your email address",
            "openid|",
            "address|Your postal address",
            "phone|Your telephone number(s)",
            "profile|Your personal information",
            "fr:idm:*",
            "am-introspect-all-tokens",
          ],
          "supportedSubjectTypes": [
            "public",
            "pairwise",
          ],
          "tlsCertificateBoundAccessTokensEnabled": true,
          "tlsCertificateRevocationCheckingEnabled": false,
          "tlsClientCertificateHeaderFormat": "URLENCODED_PEM",
          "tokenCompressionEnabled": false,
          "tokenEncryptionEnabled": false,
          "tokenExchangeClasses": [
            "urn:ietf:params:oauth:token-type:access_token=>urn:ietf:params:oauth:token-type:access_token|org.forgerock.oauth2.core.tokenexchange.accesstoken.AccessTokenToAccessTokenExchanger",
            "urn:ietf:params:oauth:token-type:id_token=>urn:ietf:params:oauth:token-type:id_token|org.forgerock.oauth2.core.tokenexchange.idtoken.IdTokenToIdTokenExchanger",
            "urn:ietf:params:oauth:token-type:access_token=>urn:ietf:params:oauth:token-type:id_token|org.forgerock.oauth2.core.tokenexchange.accesstoken.AccessTokenToIdTokenExchanger",
            "urn:ietf:params:oauth:token-type:id_token=>urn:ietf:params:oauth:token-type:access_token|org.forgerock.oauth2.core.tokenexchange.idtoken.IdTokenToAccessTokenExchanger",
          ],
          "tokenSigningAlgorithm": "HS256",
          "tokenValidatorClasses": [
            "urn:ietf:params:oauth:token-type:id_token|org.forgerock.oauth2.core.tokenexchange.idtoken.OidcIdTokenValidator",
            "urn:ietf:params:oauth:token-type:access_token|org.forgerock.oauth2.core.tokenexchange.accesstoken.OAuth2AccessTokenValidator",
          ],
        },
        "advancedOIDCConfig": {
          "alwaysAddClaimsToToken": true,
          "amrMappings": {},
          "authorisedIdmDelegationClients": [],
          "authorisedOpenIdConnectSSOClients": [],
          "claimsParameterSupported": false,
          "defaultACR": [],
          "idTokenInfoClientAuthenticationEnabled": true,
          "includeAllKtyAlgCombinationsInJwksUri": false,
          "loaMapping": {},
          "storeOpsTokens": true,
          "supportedAuthorizationResponseEncryptionAlgorithms": [
            "ECDH-ES+A256KW",
            "ECDH-ES+A192KW",
            "RSA-OAEP",
            "ECDH-ES+A128KW",
            "RSA-OAEP-256",
            "A128KW",
            "A256KW",
            "ECDH-ES",
            "dir",
            "A192KW",
          ],
          "supportedAuthorizationResponseEncryptionEnc": [
            "A256GCM",
            "A192GCM",
            "A128GCM",
            "A128CBC-HS256",
            "A192CBC-HS384",
            "A256CBC-HS512",
          ],
          "supportedAuthorizationResponseSigningAlgorithms": [
            "PS384",
            "RS384",
            "EdDSA",
            "ES384",
            "HS256",
            "HS512",
            "ES256",
            "RS256",
            "HS384",
            "ES512",
            "PS256",
            "PS512",
            "RS512",
          ],
          "supportedRequestParameterEncryptionAlgorithms": [
            "ECDH-ES+A256KW",
            "ECDH-ES+A192KW",
            "ECDH-ES+A128KW",
            "RSA-OAEP",
            "RSA-OAEP-256",
            "A128KW",
            "A256KW",
            "ECDH-ES",
            "dir",
            "A192KW",
          ],
          "supportedRequestParameterEncryptionEnc": [
            "A256GCM",
            "A192GCM",
            "A128GCM",
            "A128CBC-HS256",
            "A192CBC-HS384",
            "A256CBC-HS512",
          ],
          "supportedRequestParameterSigningAlgorithms": [
            "PS384",
            "ES384",
            "RS384",
            "HS256",
            "HS512",
            "ES256",
            "RS256",
            "HS384",
            "ES512",
            "PS256",
            "PS512",
            "RS512",
          ],
          "supportedTokenEndpointAuthenticationSigningAlgorithms": [
            "PS384",
            "ES384",
            "RS384",
            "HS256",
            "HS512",
            "ES256",
            "RS256",
            "HS384",
            "ES512",
            "PS256",
            "PS512",
            "RS512",
          ],
          "supportedTokenIntrospectionResponseEncryptionAlgorithms": [
            "ECDH-ES+A256KW",
            "ECDH-ES+A192KW",
            "RSA-OAEP",
            "ECDH-ES+A128KW",
            "RSA-OAEP-256",
            "A128KW",
            "A256KW",
            "ECDH-ES",
            "dir",
            "A192KW",
          ],
          "supportedTokenIntrospectionResponseEncryptionEnc": [
            "A256GCM",
            "A192GCM",
            "A128GCM",
            "A128CBC-HS256",
            "A192CBC-HS384",
            "A256CBC-HS512",
          ],
          "supportedTokenIntrospectionResponseSigningAlgorithms": [
            "PS384",
            "RS384",
            "EdDSA",
            "ES384",
            "HS256",
            "HS512",
            "ES256",
            "RS256",
            "HS384",
            "ES512",
            "PS256",
            "PS512",
            "RS512",
          ],
          "supportedUserInfoEncryptionAlgorithms": [
            "ECDH-ES+A256KW",
            "ECDH-ES+A192KW",
            "RSA-OAEP",
            "ECDH-ES+A128KW",
            "RSA-OAEP-256",
            "A128KW",
            "A256KW",
            "ECDH-ES",
            "dir",
            "A192KW",
          ],
          "supportedUserInfoEncryptionEnc": [
            "A256GCM",
            "A192GCM",
            "A128GCM",
            "A128CBC-HS256",
            "A192CBC-HS384",
            "A256CBC-HS512",
          ],
          "supportedUserInfoSigningAlgorithms": [
            "ES384",
            "HS256",
            "HS512",
            "ES256",
            "RS256",
            "HS384",
            "ES512",
          ],
          "useForceAuthnForPromptLogin": false,
        },
        "cibaConfig": {
          "cibaAuthReqIdLifetime": 600,
          "cibaMinimumPollingInterval": 2,
          "supportedCibaSigningAlgorithms": [
            "ES256",
            "PS256",
          ],
        },
        "clientDynamicRegistrationConfig": {
          "allowDynamicRegistration": false,
          "dynamicClientRegistrationScope": "dynamic_client_registration",
          "dynamicClientRegistrationSoftwareStatementRequired": false,
          "generateRegistrationAccessTokens": true,
          "requiredSoftwareStatementAttestedAttributes": [
            "redirect_uris",
          ],
        },
        "consent": {
          "clientsCanSkipConsent": true,
          "enableRemoteConsent": false,
          "supportedRcsRequestEncryptionAlgorithms": [
            "ECDH-ES+A256KW",
            "ECDH-ES+A192KW",
            "RSA-OAEP",
            "ECDH-ES+A128KW",
            "RSA-OAEP-256",
            "A128KW",
            "A256KW",
            "ECDH-ES",
            "dir",
            "A192KW",
          ],
          "supportedRcsRequestEncryptionMethods": [
            "A256GCM",
            "A192GCM",
            "A128GCM",
            "A128CBC-HS256",
            "A192CBC-HS384",
            "A256CBC-HS512",
          ],
          "supportedRcsRequestSigningAlgorithms": [
            "PS384",
            "ES384",
            "RS384",
            "HS256",
            "HS512",
            "ES256",
            "RS256",
            "HS384",
            "ES512",
            "PS256",
            "PS512",
            "RS512",
          ],
          "supportedRcsResponseEncryptionAlgorithms": [
            "ECDH-ES+A256KW",
            "ECDH-ES+A192KW",
            "ECDH-ES+A128KW",
            "RSA-OAEP",
            "RSA-OAEP-256",
            "A128KW",
            "A256KW",
            "ECDH-ES",
            "dir",
            "A192KW",
          ],
          "supportedRcsResponseEncryptionMethods": [
            "A256GCM",
            "A192GCM",
            "A128GCM",
            "A128CBC-HS256",
            "A192CBC-HS384",
            "A256CBC-HS512",
          ],
          "supportedRcsResponseSigningAlgorithms": [
            "PS384",
            "ES384",
            "RS384",
            "HS256",
            "HS512",
            "ES256",
            "RS256",
            "HS384",
            "ES512",
            "PS256",
            "PS512",
            "RS512",
          ],
        },
        "coreOAuth2Config": {
          "accessTokenLifetime": 3600,
          "accessTokenMayActScript": "[Empty]",
          "codeLifetime": 120,
          "issueRefreshToken": true,
          "issueRefreshTokenOnRefreshedToken": true,
          "macaroonTokensEnabled": false,
          "oidcMayActScript": "[Empty]",
          "refreshTokenLifetime": 604800,
          "scopesPolicySet": "oauth2Scopes",
          "statelessTokensEnabled": true,
          "usePolicyEngineForScope": false,
        },
        "coreOIDCConfig": {
          "jwtTokenLifetime": 3600,
          "oidcDiscoveryEndpointEnabled": true,
          "overrideableOIDCClaims": [],
          "supportedClaims": [],
          "supportedIDTokenEncryptionAlgorithms": [
            "ECDH-ES+A256KW",
            "ECDH-ES+A192KW",
            "RSA-OAEP",
            "ECDH-ES+A128KW",
            "RSA-OAEP-256",
            "A128KW",
            "A256KW",
            "ECDH-ES",
            "dir",
            "A192KW",
          ],
          "supportedIDTokenEncryptionMethods": [
            "A256GCM",
            "A192GCM",
            "A128GCM",
            "A128CBC-HS256",
            "A192CBC-HS384",
            "A256CBC-HS512",
          ],
          "supportedIDTokenSigningAlgorithms": [
            "PS384",
            "ES384",
            "RS384",
            "HS256",
            "HS512",
            "ES256",
            "RS256",
            "HS384",
            "ES512",
            "PS256",
            "PS512",
            "RS512",
          ],
        },
        "deviceCodeConfig": {
          "deviceCodeLifetime": 300,
          "devicePollInterval": 5,
          "deviceUserCodeCharacterSet": "234567ACDEFGHJKLMNPQRSTWXYZabcdefhijkmnopqrstwxyz",
          "deviceUserCodeLength": 8,
        },
        "pluginsConfig": {
          "accessTokenEnricherClass": "org.forgerock.openam.oauth2.OpenAMScopeValidator",
          "accessTokenModificationPluginType": "SCRIPTED",
          "accessTokenModificationScript": "39c08084-1238-43e8-857f-2e11005eac49",
          "accessTokenModifierClass": "org.forgerock.openam.oauth2.OpenAMScopeValidator",
          "authorizeEndpointDataProviderClass": "org.forgerock.openam.oauth2.OpenAMScopeValidator",
          "authorizeEndpointDataProviderPluginType": "JAVA",
          "authorizeEndpointDataProviderScript": "[Empty]",
          "evaluateScopeClass": "org.forgerock.openam.oauth2.OpenAMScopeValidator",
          "evaluateScopePluginType": "JAVA",
          "evaluateScopeScript": "[Empty]",
          "oidcClaimsClass": "org.forgerock.openam.oauth2.OpenAMScopeValidator",
          "oidcClaimsPluginType": "SCRIPTED",
          "oidcClaimsScript": "cf3515f0-8278-4ee3-a530-1bad7424c416",
          "userCodeGeneratorClass": "org.forgerock.oauth2.core.plugins.registry.DefaultUserCodeGenerator",
          "validateScopeClass": "org.forgerock.openam.oauth2.OpenAMScopeValidator",
          "validateScopePluginType": "JAVA",
          "validateScopeScript": "[Empty]",
        },
      },
      "_rev": "609033111",
      "_type": {
        "_id": "OAuth2Client",
        "collection": true,
        "name": "OAuth2 Clients",
      },
      "advancedOAuth2ClientConfig": {
        "clientUri": [],
        "contacts": [],
        "customProperties": [],
        "descriptions": [
          "Created by Frodo on 8/11/2022, 5:31:09 PM",
        ],
        "grantTypes": [
          "client_credentials",
        ],
        "isConsentImplied": true,
        "javascriptOrigins": [],
        "logoUri": [],
        "mixUpMitigation": false,
        "name": [],
        "policyUri": [],
        "refreshTokenGracePeriod": 0,
        "requestUris": [],
        "require_pushed_authorization_requests": false,
        "responseTypes": [
          "token",
        ],
        "sectorIdentifierUri": null,
        "softwareIdentity": null,
        "softwareVersion": null,
        "subjectType": "Public",
        "tokenEndpointAuthMethod": "client_secret_basic",
        "tokenExchangeAuthLevel": 0,
        "tosURI": [],
        "updateAccessToken": null,
      },
      "coreOAuth2ClientConfig": {
        "accessTokenLifetime": 3600,
        "agentgroup": null,
        "authorizationCodeLifetime": 120,
        "clientName": [
          "23281ea7-739b-4fd1-b953-eaae73a2b497",
        ],
        "clientType": "Confidential",
        "defaultScopes": [
          "fr:idm:*",
        ],
        "loopbackInterfaceRedirection": false,
        "redirectionUris": [],
        "refreshTokenLifetime": 604800,
        "scopes": [
          "fr:idm:*",
          "fr:idc:esv:*",
          "dynamic_client_registration",
        ],
        "status": "Active",
        "userpassword": null,
      },
      "coreOpenIDClientConfig": {
        "backchannel_logout_session_required": false,
        "backchannel_logout_uri": null,
        "claims": [],
        "clientSessionUri": null,
        "defaultAcrValues": [],
        "defaultMaxAge": 600,
        "defaultMaxAgeEnabled": false,
        "jwtTokenLifetime": 3600,
        "postLogoutRedirectUri": [],
      },
      "coreUmaClientConfig": {
        "claimsRedirectionUris": [],
      },
      "overrideOAuth2ClientConfig": {
        "accessTokenMayActScript": "[Empty]",
        "accessTokenModificationPluginType": "PROVIDER",
        "accessTokenModificationScript": "[Empty]",
        "accessTokenModifierClass": null,
        "authorizeEndpointDataProviderClass": "org.forgerock.oauth2.core.plugins.registry.DefaultEndpointDataProvider",
        "authorizeEndpointDataProviderPluginType": "PROVIDER",
        "authorizeEndpointDataProviderScript": "[Empty]",
        "clientsCanSkipConsent": false,
        "customLoginUrlTemplate": null,
        "enableRemoteConsent": false,
        "evaluateScopeClass": "org.forgerock.oauth2.core.plugins.registry.DefaultScopeEvaluator",
        "evaluateScopePluginType": "PROVIDER",
        "evaluateScopeScript": "[Empty]",
        "issueRefreshToken": true,
        "issueRefreshTokenOnRefreshedToken": true,
        "oidcClaimsClass": null,
        "oidcClaimsPluginType": "PROVIDER",
        "oidcClaimsScript": "[Empty]",
        "oidcMayActScript": "[Empty]",
        "overrideableOIDCClaims": [],
        "providerOverridesEnabled": false,
        "remoteConsentServiceId": null,
        "statelessTokensEnabled": false,
        "tokenEncryptionEnabled": false,
        "usePolicyEngineForScope": false,
        "validateScopeClass": "org.forgerock.oauth2.core.plugins.registry.DefaultScopeValidator",
        "validateScopePluginType": "PROVIDER",
        "validateScopeScript": "[Empty]",
      },
      "signEncOAuth2ClientConfig": {
        "authorizationResponseEncryptionAlgorithm": null,
        "authorizationResponseEncryptionMethod": null,
        "authorizationResponseSigningAlgorithm": "RS256",
        "clientJwtPublicKey": null,
        "idTokenEncryptionAlgorithm": "RSA-OAEP-256",
        "idTokenEncryptionEnabled": false,
        "idTokenEncryptionMethod": "A128CBC-HS256",
        "idTokenPublicEncryptionKey": null,
        "idTokenSignedResponseAlg": "RS256",
        "jwkSet": null,
        "jwkStoreCacheMissCacheTime": 60000,
        "jwksCacheTimeout": 3600000,
        "jwksUri": null,
        "mTLSCertificateBoundAccessTokens": false,
        "mTLSSubjectDN": null,
        "mTLSTrustedCert": null,
        "publicKeyLocation": "jwks_uri",
        "requestParameterEncryptedAlg": null,
        "requestParameterEncryptedEncryptionAlgorithm": "A128CBC-HS256",
        "requestParameterSignedAlg": null,
        "tokenEndpointAuthSigningAlgorithm": "RS256",
        "tokenIntrospectionEncryptedResponseAlg": "RSA-OAEP-256",
        "tokenIntrospectionEncryptedResponseEncryptionAlgorithm": "A128CBC-HS256",
        "tokenIntrospectionResponseFormat": "JSON",
        "tokenIntrospectionSignedResponseAlg": "RS256",
        "userinfoEncryptedResponseAlg": null,
        "userinfoEncryptedResponseEncryptionAlgorithm": "A128CBC-HS256",
        "userinfoResponseFormat": "JSON",
        "userinfoSignedResponseAlg": null,
      },
    },
    "86fca6d7-2f52-4524-92c6-b6f416071455": {
      "_id": "86fca6d7-2f52-4524-92c6-b6f416071455",
      "_provider": {
        "_id": "",
        "_rev": "745152125",
        "_type": {
          "_id": "oauth-oidc",
          "collection": false,
          "name": "OAuth2 Provider",
        },
        "advancedOAuth2Config": {
          "allowedAudienceValues": [],
          "authenticationAttributes": [
            "uid",
          ],
          "codeVerifierEnforced": "false",
          "defaultScopes": [
            "address",
            "phone",
            "openid",
            "profile",
            "email",
          ],
          "displayNameAttribute": "cn",
          "expClaimRequiredInRequestObject": false,
          "grantTypes": [
            "implicit",
            "urn:ietf:params:oauth:grant-type:saml2-bearer",
            "refresh_token",
            "password",
            "client_credentials",
            "urn:ietf:params:oauth:grant-type:device_code",
            "authorization_code",
            "urn:openid:params:grant-type:ciba",
            "urn:ietf:params:oauth:grant-type:uma-ticket",
            "urn:ietf:params:oauth:grant-type:jwt-bearer",
          ],
          "hashSalt": "qAWV0MFSQpC/f1GPbZAZnMRksak=",
          "macaroonTokenFormat": "V2",
          "maxAgeOfRequestObjectNbfClaim": 0,
          "maxDifferenceBetweenRequestObjectNbfAndExp": 0,
          "moduleMessageEnabledInPasswordGrant": false,
          "nbfClaimRequiredInRequestObject": false,
          "parRequestUriLifetime": 90,
          "passwordGrantAuthService": "PasswordGrant",
          "persistentClaims": [],
          "refreshTokenGracePeriod": 0,
          "requestObjectProcessing": "OIDC",
          "requirePushedAuthorizationRequests": false,
          "responseTypeClasses": [
            "code|org.forgerock.oauth2.core.AuthorizationCodeResponseTypeHandler",
            "device_code|org.forgerock.oauth2.core.TokenResponseTypeHandler",
            "token|org.forgerock.oauth2.core.TokenResponseTypeHandler",
            "id_token|org.forgerock.openidconnect.IdTokenResponseTypeHandler",
          ],
          "supportedScopes": [
            "email|Your email address",
            "openid|",
            "address|Your postal address",
            "phone|Your telephone number(s)",
            "profile|Your personal information",
            "fr:idm:*",
            "am-introspect-all-tokens",
          ],
          "supportedSubjectTypes": [
            "public",
            "pairwise",
          ],
          "tlsCertificateBoundAccessTokensEnabled": true,
          "tlsCertificateRevocationCheckingEnabled": false,
          "tlsClientCertificateHeaderFormat": "URLENCODED_PEM",
          "tokenCompressionEnabled": false,
          "tokenEncryptionEnabled": false,
          "tokenExchangeClasses": [
            "urn:ietf:params:oauth:token-type:access_token=>urn:ietf:params:oauth:token-type:access_token|org.forgerock.oauth2.core.tokenexchange.accesstoken.AccessTokenToAccessTokenExchanger",
            "urn:ietf:params:oauth:token-type:id_token=>urn:ietf:params:oauth:token-type:id_token|org.forgerock.oauth2.core.tokenexchange.idtoken.IdTokenToIdTokenExchanger",
            "urn:ietf:params:oauth:token-type:access_token=>urn:ietf:params:oauth:token-type:id_token|org.forgerock.oauth2.core.tokenexchange.accesstoken.AccessTokenToIdTokenExchanger",
            "urn:ietf:params:oauth:token-type:id_token=>urn:ietf:params:oauth:token-type:access_token|org.forgerock.oauth2.core.tokenexchange.idtoken.IdTokenToAccessTokenExchanger",
          ],
          "tokenSigningAlgorithm": "HS256",
          "tokenValidatorClasses": [
            "urn:ietf:params:oauth:token-type:id_token|org.forgerock.oauth2.core.tokenexchange.idtoken.OidcIdTokenValidator",
            "urn:ietf:params:oauth:token-type:access_token|org.forgerock.oauth2.core.tokenexchange.accesstoken.OAuth2AccessTokenValidator",
          ],
        },
        "advancedOIDCConfig": {
          "alwaysAddClaimsToToken": true,
          "amrMappings": {},
          "authorisedIdmDelegationClients": [],
          "authorisedOpenIdConnectSSOClients": [],
          "claimsParameterSupported": false,
          "defaultACR": [],
          "idTokenInfoClientAuthenticationEnabled": true,
          "includeAllKtyAlgCombinationsInJwksUri": false,
          "loaMapping": {},
          "storeOpsTokens": true,
          "supportedAuthorizationResponseEncryptionAlgorithms": [
            "ECDH-ES+A256KW",
            "ECDH-ES+A192KW",
            "RSA-OAEP",
            "ECDH-ES+A128KW",
            "RSA-OAEP-256",
            "A128KW",
            "A256KW",
            "ECDH-ES",
            "dir",
            "A192KW",
          ],
          "supportedAuthorizationResponseEncryptionEnc": [
            "A256GCM",
            "A192GCM",
            "A128GCM",
            "A128CBC-HS256",
            "A192CBC-HS384",
            "A256CBC-HS512",
          ],
          "supportedAuthorizationResponseSigningAlgorithms": [
            "PS384",
            "RS384",
            "EdDSA",
            "ES384",
            "HS256",
            "HS512",
            "ES256",
            "RS256",
            "HS384",
            "ES512",
            "PS256",
            "PS512",
            "RS512",
          ],
          "supportedRequestParameterEncryptionAlgorithms": [
            "ECDH-ES+A256KW",
            "ECDH-ES+A192KW",
            "ECDH-ES+A128KW",
            "RSA-OAEP",
            "RSA-OAEP-256",
            "A128KW",
            "A256KW",
            "ECDH-ES",
            "dir",
            "A192KW",
          ],
          "supportedRequestParameterEncryptionEnc": [
            "A256GCM",
            "A192GCM",
            "A128GCM",
            "A128CBC-HS256",
            "A192CBC-HS384",
            "A256CBC-HS512",
          ],
          "supportedRequestParameterSigningAlgorithms": [
            "PS384",
            "ES384",
            "RS384",
            "HS256",
            "HS512",
            "ES256",
            "RS256",
            "HS384",
            "ES512",
            "PS256",
            "PS512",
            "RS512",
          ],
          "supportedTokenEndpointAuthenticationSigningAlgorithms": [
            "PS384",
            "ES384",
            "RS384",
            "HS256",
            "HS512",
            "ES256",
            "RS256",
            "HS384",
            "ES512",
            "PS256",
            "PS512",
            "RS512",
          ],
          "supportedTokenIntrospectionResponseEncryptionAlgorithms": [
            "ECDH-ES+A256KW",
            "ECDH-ES+A192KW",
            "RSA-OAEP",
            "ECDH-ES+A128KW",
            "RSA-OAEP-256",
            "A128KW",
            "A256KW",
            "ECDH-ES",
            "dir",
            "A192KW",
          ],
          "supportedTokenIntrospectionResponseEncryptionEnc": [
            "A256GCM",
            "A192GCM",
            "A128GCM",
            "A128CBC-HS256",
            "A192CBC-HS384",
            "A256CBC-HS512",
          ],
          "supportedTokenIntrospectionResponseSigningAlgorithms": [
            "PS384",
            "RS384",
            "EdDSA",
            "ES384",
            "HS256",
            "HS512",
            "ES256",
            "RS256",
            "HS384",
            "ES512",
            "PS256",
            "PS512",
            "RS512",
          ],
          "supportedUserInfoEncryptionAlgorithms": [
            "ECDH-ES+A256KW",
            "ECDH-ES+A192KW",
            "RSA-OAEP",
            "ECDH-ES+A128KW",
            "RSA-OAEP-256",
            "A128KW",
            "A256KW",
            "ECDH-ES",
            "dir",
            "A192KW",
          ],
          "supportedUserInfoEncryptionEnc": [
            "A256GCM",
            "A192GCM",
            "A128GCM",
            "A128CBC-HS256",
            "A192CBC-HS384",
            "A256CBC-HS512",
          ],
          "supportedUserInfoSigningAlgorithms": [
            "ES384",
            "HS256",
            "HS512",
            "ES256",
            "RS256",
            "HS384",
            "ES512",
          ],
          "useForceAuthnForPromptLogin": false,
        },
        "cibaConfig": {
          "cibaAuthReqIdLifetime": 600,
          "cibaMinimumPollingInterval": 2,
          "supportedCibaSigningAlgorithms": [
            "ES256",
            "PS256",
          ],
        },
        "clientDynamicRegistrationConfig": {
          "allowDynamicRegistration": false,
          "dynamicClientRegistrationScope": "dynamic_client_registration",
          "dynamicClientRegistrationSoftwareStatementRequired": false,
          "generateRegistrationAccessTokens": true,
          "requiredSoftwareStatementAttestedAttributes": [
            "redirect_uris",
          ],
        },
        "consent": {
          "clientsCanSkipConsent": true,
          "enableRemoteConsent": false,
          "supportedRcsRequestEncryptionAlgorithms": [
            "ECDH-ES+A256KW",
            "ECDH-ES+A192KW",
            "RSA-OAEP",
            "ECDH-ES+A128KW",
            "RSA-OAEP-256",
            "A128KW",
            "A256KW",
            "ECDH-ES",
            "dir",
            "A192KW",
          ],
          "supportedRcsRequestEncryptionMethods": [
            "A256GCM",
            "A192GCM",
            "A128GCM",
            "A128CBC-HS256",
            "A192CBC-HS384",
            "A256CBC-HS512",
          ],
          "supportedRcsRequestSigningAlgorithms": [
            "PS384",
            "ES384",
            "RS384",
            "HS256",
            "HS512",
            "ES256",
            "RS256",
            "HS384",
            "ES512",
            "PS256",
            "PS512",
            "RS512",
          ],
          "supportedRcsResponseEncryptionAlgorithms": [
            "ECDH-ES+A256KW",
            "ECDH-ES+A192KW",
            "ECDH-ES+A128KW",
            "RSA-OAEP",
            "RSA-OAEP-256",
            "A128KW",
            "A256KW",
            "ECDH-ES",
            "dir",
            "A192KW",
          ],
          "supportedRcsResponseEncryptionMethods": [
            "A256GCM",
            "A192GCM",
            "A128GCM",
            "A128CBC-HS256",
            "A192CBC-HS384",
            "A256CBC-HS512",
          ],
          "supportedRcsResponseSigningAlgorithms": [
            "PS384",
            "ES384",
            "RS384",
            "HS256",
            "HS512",
            "ES256",
            "RS256",
            "HS384",
            "ES512",
            "PS256",
            "PS512",
            "RS512",
          ],
        },
        "coreOAuth2Config": {
          "accessTokenLifetime": 3600,
          "accessTokenMayActScript": "[Empty]",
          "codeLifetime": 120,
          "issueRefreshToken": true,
          "issueRefreshTokenOnRefreshedToken": true,
          "macaroonTokensEnabled": false,
          "oidcMayActScript": "[Empty]",
          "refreshTokenLifetime": 604800,
          "scopesPolicySet": "oauth2Scopes",
          "statelessTokensEnabled": true,
          "usePolicyEngineForScope": false,
        },
        "coreOIDCConfig": {
          "jwtTokenLifetime": 3600,
          "oidcDiscoveryEndpointEnabled": true,
          "overrideableOIDCClaims": [],
          "supportedClaims": [],
          "supportedIDTokenEncryptionAlgorithms": [
            "ECDH-ES+A256KW",
            "ECDH-ES+A192KW",
            "RSA-OAEP",
            "ECDH-ES+A128KW",
            "RSA-OAEP-256",
            "A128KW",
            "A256KW",
            "ECDH-ES",
            "dir",
            "A192KW",
          ],
          "supportedIDTokenEncryptionMethods": [
            "A256GCM",
            "A192GCM",
            "A128GCM",
            "A128CBC-HS256",
            "A192CBC-HS384",
            "A256CBC-HS512",
          ],
          "supportedIDTokenSigningAlgorithms": [
            "PS384",
            "ES384",
            "RS384",
            "HS256",
            "HS512",
            "ES256",
            "RS256",
            "HS384",
            "ES512",
            "PS256",
            "PS512",
            "RS512",
          ],
        },
        "deviceCodeConfig": {
          "deviceCodeLifetime": 300,
          "devicePollInterval": 5,
          "deviceUserCodeCharacterSet": "234567ACDEFGHJKLMNPQRSTWXYZabcdefhijkmnopqrstwxyz",
          "deviceUserCodeLength": 8,
        },
        "pluginsConfig": {
          "accessTokenEnricherClass": "org.forgerock.openam.oauth2.OpenAMScopeValidator",
          "accessTokenModificationPluginType": "SCRIPTED",
          "accessTokenModificationScript": "39c08084-1238-43e8-857f-2e11005eac49",
          "accessTokenModifierClass": "org.forgerock.openam.oauth2.OpenAMScopeValidator",
          "authorizeEndpointDataProviderClass": "org.forgerock.openam.oauth2.OpenAMScopeValidator",
          "authorizeEndpointDataProviderPluginType": "JAVA",
          "authorizeEndpointDataProviderScript": "[Empty]",
          "evaluateScopeClass": "org.forgerock.openam.oauth2.OpenAMScopeValidator",
          "evaluateScopePluginType": "JAVA",
          "evaluateScopeScript": "[Empty]",
          "oidcClaimsClass": "org.forgerock.openam.oauth2.OpenAMScopeValidator",
          "oidcClaimsPluginType": "SCRIPTED",
          "oidcClaimsScript": "cf3515f0-8278-4ee3-a530-1bad7424c416",
          "userCodeGeneratorClass": "org.forgerock.oauth2.core.plugins.registry.DefaultUserCodeGenerator",
          "validateScopeClass": "org.forgerock.openam.oauth2.OpenAMScopeValidator",
          "validateScopePluginType": "JAVA",
          "validateScopeScript": "[Empty]",
        },
      },
      "_rev": "-1085185403",
      "_type": {
        "_id": "OAuth2Client",
        "collection": true,
        "name": "OAuth2 Clients",
      },
      "advancedOAuth2ClientConfig": {
        "clientUri": [],
        "contacts": [],
        "customProperties": [],
        "descriptions": [
          "Created by Frodo on 8/11/2022, 5:32:32 PM",
        ],
        "grantTypes": [
          "client_credentials",
        ],
        "isConsentImplied": true,
        "javascriptOrigins": [],
        "logoUri": [],
        "mixUpMitigation": false,
        "name": [],
        "policyUri": [],
        "refreshTokenGracePeriod": 0,
        "requestUris": [],
        "require_pushed_authorization_requests": false,
        "responseTypes": [
          "token",
        ],
        "sectorIdentifierUri": null,
        "softwareIdentity": null,
        "softwareVersion": null,
        "subjectType": "Public",
        "tokenEndpointAuthMethod": "client_secret_basic",
        "tokenExchangeAuthLevel": 0,
        "tosURI": [],
        "updateAccessToken": null,
      },
      "coreOAuth2ClientConfig": {
        "accessTokenLifetime": 3600,
        "authorizationCodeLifetime": 120,
        "clientName": [
          "86fca6d7-2f52-4524-92c6-b6f416071455",
        ],
        "clientType": "Confidential",
        "defaultScopes": [
          "fr:idm:*",
        ],
        "loopbackInterfaceRedirection": false,
        "redirectionUris": [],
        "refreshTokenLifetime": 604800,
        "scopes": [
          "fr:idm:*",
          "fr:idc:esv:*",
          "dynamic_client_registration",
        ],
        "status": "Active",
        "userpassword": null,
      },
      "coreOpenIDClientConfig": {
        "backchannel_logout_session_required": false,
        "backchannel_logout_uri": null,
        "claims": [],
        "clientSessionUri": null,
        "defaultAcrValues": [],
        "defaultMaxAge": 600,
        "defaultMaxAgeEnabled": false,
        "jwtTokenLifetime": 3600,
        "postLogoutRedirectUri": [],
      },
      "coreUmaClientConfig": {
        "claimsRedirectionUris": [],
      },
      "overrideOAuth2ClientConfig": {
        "accessTokenMayActScript": "[Empty]",
        "accessTokenModificationPluginType": "PROVIDER",
        "accessTokenModificationScript": "[Empty]",
        "authorizeEndpointDataProviderClass": "org.forgerock.oauth2.core.plugins.registry.DefaultEndpointDataProvider",
        "authorizeEndpointDataProviderPluginType": "PROVIDER",
        "authorizeEndpointDataProviderScript": "[Empty]",
        "clientsCanSkipConsent": false,
        "enableRemoteConsent": false,
        "evaluateScopeClass": "org.forgerock.oauth2.core.plugins.registry.DefaultScopeEvaluator",
        "evaluateScopePluginType": "PROVIDER",
        "evaluateScopeScript": "[Empty]",
        "issueRefreshToken": true,
        "issueRefreshTokenOnRefreshedToken": true,
        "oidcClaimsPluginType": "PROVIDER",
        "oidcClaimsScript": "[Empty]",
        "oidcMayActScript": "[Empty]",
        "overrideableOIDCClaims": [],
        "providerOverridesEnabled": false,
        "remoteConsentServiceId": null,
        "statelessTokensEnabled": false,
        "tokenEncryptionEnabled": false,
        "usePolicyEngineForScope": false,
        "validateScopeClass": "org.forgerock.oauth2.core.plugins.registry.DefaultScopeValidator",
        "validateScopePluginType": "PROVIDER",
        "validateScopeScript": "[Empty]",
      },
      "signEncOAuth2ClientConfig": {
        "authorizationResponseEncryptionAlgorithm": null,
        "authorizationResponseEncryptionMethod": null,
        "authorizationResponseSigningAlgorithm": "RS256",
        "clientJwtPublicKey": null,
        "idTokenEncryptionAlgorithm": "RSA-OAEP-256",
        "idTokenEncryptionEnabled": false,
        "idTokenEncryptionMethod": "A128CBC-HS256",
        "idTokenPublicEncryptionKey": null,
        "idTokenSignedResponseAlg": "RS256",
        "jwkSet": null,
        "jwkStoreCacheMissCacheTime": 60000,
        "jwksCacheTimeout": 3600000,
        "jwksUri": null,
        "mTLSCertificateBoundAccessTokens": false,
        "mTLSSubjectDN": null,
        "mTLSTrustedCert": null,
        "publicKeyLocation": "jwks_uri",
        "requestParameterEncryptedAlg": null,
        "requestParameterEncryptedEncryptionAlgorithm": "A128CBC-HS256",
        "requestParameterSignedAlg": null,
        "tokenEndpointAuthSigningAlgorithm": "RS256",
        "tokenIntrospectionEncryptedResponseAlg": "RSA-OAEP-256",
        "tokenIntrospectionEncryptedResponseEncryptionAlgorithm": "A128CBC-HS256",
        "tokenIntrospectionResponseFormat": "JSON",
        "tokenIntrospectionSignedResponseAlg": "RS256",
        "userinfoEncryptedResponseAlg": null,
        "userinfoEncryptedResponseEncryptionAlgorithm": "A128CBC-HS256",
        "userinfoResponseFormat": "JSON",
        "userinfoSignedResponseAlg": null,
      },
    },
    "FrodoTestOAuth2Client1": {
      "_id": "FrodoTestOAuth2Client1",
      "_provider": {
        "_id": "",
        "_rev": "745152125",
        "_type": {
          "_id": "oauth-oidc",
          "collection": false,
          "name": "OAuth2 Provider",
        },
        "advancedOAuth2Config": {
          "allowedAudienceValues": [],
          "authenticationAttributes": [
            "uid",
          ],
          "codeVerifierEnforced": "false",
          "defaultScopes": [
            "address",
            "phone",
            "openid",
            "profile",
            "email",
          ],
          "displayNameAttribute": "cn",
          "expClaimRequiredInRequestObject": false,
          "grantTypes": [
            "implicit",
            "urn:ietf:params:oauth:grant-type:saml2-bearer",
            "refresh_token",
            "password",
            "client_credentials",
            "urn:ietf:params:oauth:grant-type:device_code",
            "authorization_code",
            "urn:openid:params:grant-type:ciba",
            "urn:ietf:params:oauth:grant-type:uma-ticket",
            "urn:ietf:params:oauth:grant-type:jwt-bearer",
          ],
          "hashSalt": "qAWV0MFSQpC/f1GPbZAZnMRksak=",
          "macaroonTokenFormat": "V2",
          "maxAgeOfRequestObjectNbfClaim": 0,
          "maxDifferenceBetweenRequestObjectNbfAndExp": 0,
          "moduleMessageEnabledInPasswordGrant": false,
          "nbfClaimRequiredInRequestObject": false,
          "parRequestUriLifetime": 90,
          "passwordGrantAuthService": "PasswordGrant",
          "persistentClaims": [],
          "refreshTokenGracePeriod": 0,
          "requestObjectProcessing": "OIDC",
          "requirePushedAuthorizationRequests": false,
          "responseTypeClasses": [
            "code|org.forgerock.oauth2.core.AuthorizationCodeResponseTypeHandler",
            "device_code|org.forgerock.oauth2.core.TokenResponseTypeHandler",
            "token|org.forgerock.oauth2.core.TokenResponseTypeHandler",
            "id_token|org.forgerock.openidconnect.IdTokenResponseTypeHandler",
          ],
          "supportedScopes": [
            "email|Your email address",
            "openid|",
            "address|Your postal address",
            "phone|Your telephone number(s)",
            "profile|Your personal information",
            "fr:idm:*",
            "am-introspect-all-tokens",
          ],
          "supportedSubjectTypes": [
            "public",
            "pairwise",
          ],
          "tlsCertificateBoundAccessTokensEnabled": true,
          "tlsCertificateRevocationCheckingEnabled": false,
          "tlsClientCertificateHeaderFormat": "URLENCODED_PEM",
          "tokenCompressionEnabled": false,
          "tokenEncryptionEnabled": false,
          "tokenExchangeClasses": [
            "urn:ietf:params:oauth:token-type:access_token=>urn:ietf:params:oauth:token-type:access_token|org.forgerock.oauth2.core.tokenexchange.accesstoken.AccessTokenToAccessTokenExchanger",
            "urn:ietf:params:oauth:token-type:id_token=>urn:ietf:params:oauth:token-type:id_token|org.forgerock.oauth2.core.tokenexchange.idtoken.IdTokenToIdTokenExchanger",
            "urn:ietf:params:oauth:token-type:access_token=>urn:ietf:params:oauth:token-type:id_token|org.forgerock.oauth2.core.tokenexchange.accesstoken.AccessTokenToIdTokenExchanger",
            "urn:ietf:params:oauth:token-type:id_token=>urn:ietf:params:oauth:token-type:access_token|org.forgerock.oauth2.core.tokenexchange.idtoken.IdTokenToAccessTokenExchanger",
          ],
          "tokenSigningAlgorithm": "HS256",
          "tokenValidatorClasses": [
            "urn:ietf:params:oauth:token-type:id_token|org.forgerock.oauth2.core.tokenexchange.idtoken.OidcIdTokenValidator",
            "urn:ietf:params:oauth:token-type:access_token|org.forgerock.oauth2.core.tokenexchange.accesstoken.OAuth2AccessTokenValidator",
          ],
        },
        "advancedOIDCConfig": {
          "alwaysAddClaimsToToken": true,
          "amrMappings": {},
          "authorisedIdmDelegationClients": [],
          "authorisedOpenIdConnectSSOClients": [],
          "claimsParameterSupported": false,
          "defaultACR": [],
          "idTokenInfoClientAuthenticationEnabled": true,
          "includeAllKtyAlgCombinationsInJwksUri": false,
          "loaMapping": {},
          "storeOpsTokens": true,
          "supportedAuthorizationResponseEncryptionAlgorithms": [
            "ECDH-ES+A256KW",
            "ECDH-ES+A192KW",
            "RSA-OAEP",
            "ECDH-ES+A128KW",
            "RSA-OAEP-256",
            "A128KW",
            "A256KW",
            "ECDH-ES",
            "dir",
            "A192KW",
          ],
          "supportedAuthorizationResponseEncryptionEnc": [
            "A256GCM",
            "A192GCM",
            "A128GCM",
            "A128CBC-HS256",
            "A192CBC-HS384",
            "A256CBC-HS512",
          ],
          "supportedAuthorizationResponseSigningAlgorithms": [
            "PS384",
            "RS384",
            "EdDSA",
            "ES384",
            "HS256",
            "HS512",
            "ES256",
            "RS256",
            "HS384",
            "ES512",
            "PS256",
            "PS512",
            "RS512",
          ],
          "supportedRequestParameterEncryptionAlgorithms": [
            "ECDH-ES+A256KW",
            "ECDH-ES+A192KW",
            "ECDH-ES+A128KW",
            "RSA-OAEP",
            "RSA-OAEP-256",
            "A128KW",
            "A256KW",
            "ECDH-ES",
            "dir",
            "A192KW",
          ],
          "supportedRequestParameterEncryptionEnc": [
            "A256GCM",
            "A192GCM",
            "A128GCM",
            "A128CBC-HS256",
            "A192CBC-HS384",
            "A256CBC-HS512",
          ],
          "supportedRequestParameterSigningAlgorithms": [
            "PS384",
            "ES384",
            "RS384",
            "HS256",
            "HS512",
            "ES256",
            "RS256",
            "HS384",
            "ES512",
            "PS256",
            "PS512",
            "RS512",
          ],
          "supportedTokenEndpointAuthenticationSigningAlgorithms": [
            "PS384",
            "ES384",
            "RS384",
            "HS256",
            "HS512",
            "ES256",
            "RS256",
            "HS384",
            "ES512",
            "PS256",
            "PS512",
            "RS512",
          ],
          "supportedTokenIntrospectionResponseEncryptionAlgorithms": [
            "ECDH-ES+A256KW",
            "ECDH-ES+A192KW",
            "RSA-OAEP",
            "ECDH-ES+A128KW",
            "RSA-OAEP-256",
            "A128KW",
            "A256KW",
            "ECDH-ES",
            "dir",
            "A192KW",
          ],
          "supportedTokenIntrospectionResponseEncryptionEnc": [
            "A256GCM",
            "A192GCM",
            "A128GCM",
            "A128CBC-HS256",
            "A192CBC-HS384",
            "A256CBC-HS512",
          ],
          "supportedTokenIntrospectionResponseSigningAlgorithms": [
            "PS384",
            "RS384",
            "EdDSA",
            "ES384",
            "HS256",
            "HS512",
            "ES256",
            "RS256",
            "HS384",
            "ES512",
            "PS256",
            "PS512",
            "RS512",
          ],
          "supportedUserInfoEncryptionAlgorithms": [
            "ECDH-ES+A256KW",
            "ECDH-ES+A192KW",
            "RSA-OAEP",
            "ECDH-ES+A128KW",
            "RSA-OAEP-256",
            "A128KW",
            "A256KW",
            "ECDH-ES",
            "dir",
            "A192KW",
          ],
          "supportedUserInfoEncryptionEnc": [
            "A256GCM",
            "A192GCM",
            "A128GCM",
            "A128CBC-HS256",
            "A192CBC-HS384",
            "A256CBC-HS512",
          ],
          "supportedUserInfoSigningAlgorithms": [
            "ES384",
            "HS256",
            "HS512",
            "ES256",
            "RS256",
            "HS384",
            "ES512",
          ],
          "useForceAuthnForPromptLogin": false,
        },
        "cibaConfig": {
          "cibaAuthReqIdLifetime": 600,
          "cibaMinimumPollingInterval": 2,
          "supportedCibaSigningAlgorithms": [
            "ES256",
            "PS256",
          ],
        },
        "clientDynamicRegistrationConfig": {
          "allowDynamicRegistration": false,
          "dynamicClientRegistrationScope": "dynamic_client_registration",
          "dynamicClientRegistrationSoftwareStatementRequired": false,
          "generateRegistrationAccessTokens": true,
          "requiredSoftwareStatementAttestedAttributes": [
            "redirect_uris",
          ],
        },
        "consent": {
          "clientsCanSkipConsent": true,
          "enableRemoteConsent": false,
          "supportedRcsRequestEncryptionAlgorithms": [
            "ECDH-ES+A256KW",
            "ECDH-ES+A192KW",
            "RSA-OAEP",
            "ECDH-ES+A128KW",
            "RSA-OAEP-256",
            "A128KW",
            "A256KW",
            "ECDH-ES",
            "dir",
            "A192KW",
          ],
          "supportedRcsRequestEncryptionMethods": [
            "A256GCM",
            "A192GCM",
            "A128GCM",
            "A128CBC-HS256",
            "A192CBC-HS384",
            "A256CBC-HS512",
          ],
          "supportedRcsRequestSigningAlgorithms": [
            "PS384",
            "ES384",
            "RS384",
            "HS256",
            "HS512",
            "ES256",
            "RS256",
            "HS384",
            "ES512",
            "PS256",
            "PS512",
            "RS512",
          ],
          "supportedRcsResponseEncryptionAlgorithms": [
            "ECDH-ES+A256KW",
            "ECDH-ES+A192KW",
            "ECDH-ES+A128KW",
            "RSA-OAEP",
            "RSA-OAEP-256",
            "A128KW",
            "A256KW",
            "ECDH-ES",
            "dir",
            "A192KW",
          ],
          "supportedRcsResponseEncryptionMethods": [
            "A256GCM",
            "A192GCM",
            "A128GCM",
            "A128CBC-HS256",
            "A192CBC-HS384",
            "A256CBC-HS512",
          ],
          "supportedRcsResponseSigningAlgorithms": [
            "PS384",
            "ES384",
            "RS384",
            "HS256",
            "HS512",
            "ES256",
            "RS256",
            "HS384",
            "ES512",
            "PS256",
            "PS512",
            "RS512",
          ],
        },
        "coreOAuth2Config": {
          "accessTokenLifetime": 3600,
          "accessTokenMayActScript": "[Empty]",
          "codeLifetime": 120,
          "issueRefreshToken": true,
          "issueRefreshTokenOnRefreshedToken": true,
          "macaroonTokensEnabled": false,
          "oidcMayActScript": "[Empty]",
          "refreshTokenLifetime": 604800,
          "scopesPolicySet": "oauth2Scopes",
          "statelessTokensEnabled": true,
          "usePolicyEngineForScope": false,
        },
        "coreOIDCConfig": {
          "jwtTokenLifetime": 3600,
          "oidcDiscoveryEndpointEnabled": true,
          "overrideableOIDCClaims": [],
          "supportedClaims": [],
          "supportedIDTokenEncryptionAlgorithms": [
            "ECDH-ES+A256KW",
            "ECDH-ES+A192KW",
            "RSA-OAEP",
            "ECDH-ES+A128KW",
            "RSA-OAEP-256",
            "A128KW",
            "A256KW",
            "ECDH-ES",
            "dir",
            "A192KW",
          ],
          "supportedIDTokenEncryptionMethods": [
            "A256GCM",
            "A192GCM",
            "A128GCM",
            "A128CBC-HS256",
            "A192CBC-HS384",
            "A256CBC-HS512",
          ],
          "supportedIDTokenSigningAlgorithms": [
            "PS384",
            "ES384",
            "RS384",
            "HS256",
            "HS512",
            "ES256",
            "RS256",
            "HS384",
            "ES512",
            "PS256",
            "PS512",
            "RS512",
          ],
        },
        "deviceCodeConfig": {
          "deviceCodeLifetime": 300,
          "devicePollInterval": 5,
          "deviceUserCodeCharacterSet": "234567ACDEFGHJKLMNPQRSTWXYZabcdefhijkmnopqrstwxyz",
          "deviceUserCodeLength": 8,
        },
        "pluginsConfig": {
          "accessTokenEnricherClass": "org.forgerock.openam.oauth2.OpenAMScopeValidator",
          "accessTokenModificationPluginType": "SCRIPTED",
          "accessTokenModificationScript": "39c08084-1238-43e8-857f-2e11005eac49",
          "accessTokenModifierClass": "org.forgerock.openam.oauth2.OpenAMScopeValidator",
          "authorizeEndpointDataProviderClass": "org.forgerock.openam.oauth2.OpenAMScopeValidator",
          "authorizeEndpointDataProviderPluginType": "JAVA",
          "authorizeEndpointDataProviderScript": "[Empty]",
          "evaluateScopeClass": "org.forgerock.openam.oauth2.OpenAMScopeValidator",
          "evaluateScopePluginType": "JAVA",
          "evaluateScopeScript": "[Empty]",
          "oidcClaimsClass": "org.forgerock.openam.oauth2.OpenAMScopeValidator",
          "oidcClaimsPluginType": "SCRIPTED",
          "oidcClaimsScript": "cf3515f0-8278-4ee3-a530-1bad7424c416",
          "userCodeGeneratorClass": "org.forgerock.oauth2.core.plugins.registry.DefaultUserCodeGenerator",
          "validateScopeClass": "org.forgerock.openam.oauth2.OpenAMScopeValidator",
          "validateScopePluginType": "JAVA",
          "validateScopeScript": "[Empty]",
        },
      },
      "_rev": "-1777552373",
      "_type": {
        "_id": "OAuth2Client",
        "collection": true,
        "name": "OAuth2 Clients",
      },
      "advancedOAuth2ClientConfig": {
        "clientUri": [],
        "contacts": [],
        "customProperties": [],
        "descriptions": [],
        "grantTypes": [
          "authorization_code",
          "refresh_token",
        ],
        "isConsentImplied": true,
        "javascriptOrigins": [],
        "logoUri": [],
        "mixUpMitigation": false,
        "name": [],
        "policyUri": [],
        "refreshTokenGracePeriod": 0,
        "requestUris": [],
        "require_pushed_authorization_requests": false,
        "responseTypes": [
          "code",
          "token",
          "id_token",
        ],
        "sectorIdentifierUri": null,
        "softwareIdentity": null,
        "softwareVersion": null,
        "subjectType": "public",
        "tokenEndpointAuthMethod": "client_secret_basic",
        "tokenExchangeAuthLevel": 0,
        "tosURI": [],
        "updateAccessToken": null,
      },
      "coreOAuth2ClientConfig": {
        "accessTokenLifetime": 3600,
        "agentgroup": null,
        "authorizationCodeLifetime": 120,
        "clientName": [],
        "clientType": "Public",
        "defaultScopes": [],
        "loopbackInterfaceRedirection": false,
        "redirectionUris": [],
        "refreshTokenLifetime": 604800,
        "scopes": [
          "openid",
        ],
        "status": "Active",
      },
      "coreOpenIDClientConfig": {
        "backchannel_logout_session_required": false,
        "backchannel_logout_uri": null,
        "claims": [],
        "clientSessionUri": null,
        "defaultAcrValues": [],
        "defaultMaxAge": 600,
        "defaultMaxAgeEnabled": false,
        "jwtTokenLifetime": 3600,
        "postLogoutRedirectUri": [],
      },
      "coreUmaClientConfig": {
        "claimsRedirectionUris": [],
      },
      "overrideOAuth2ClientConfig": {
        "accessTokenMayActScript": "[Empty]",
        "accessTokenModificationPluginType": "PROVIDER",
        "accessTokenModificationScript": "[Empty]",
        "accessTokenModifierClass": null,
        "authorizeEndpointDataProviderClass": "org.forgerock.oauth2.core.plugins.registry.DefaultEndpointDataProvider",
        "authorizeEndpointDataProviderPluginType": "PROVIDER",
        "authorizeEndpointDataProviderScript": "[Empty]",
        "clientsCanSkipConsent": false,
        "customLoginUrlTemplate": null,
        "enableRemoteConsent": false,
        "evaluateScopeClass": "org.forgerock.oauth2.core.plugins.registry.DefaultScopeEvaluator",
        "evaluateScopePluginType": "PROVIDER",
        "evaluateScopeScript": "[Empty]",
        "issueRefreshToken": true,
        "issueRefreshTokenOnRefreshedToken": true,
        "oidcClaimsClass": null,
        "oidcClaimsPluginType": "PROVIDER",
        "oidcClaimsScript": "[Empty]",
        "oidcMayActScript": "[Empty]",
        "overrideableOIDCClaims": [],
        "providerOverridesEnabled": false,
        "remoteConsentServiceId": null,
        "scopesPolicySet": "oauth2Scopes",
        "statelessTokensEnabled": false,
        "tokenEncryptionEnabled": false,
        "usePolicyEngineForScope": false,
        "validateScopeClass": "org.forgerock.oauth2.core.plugins.registry.DefaultScopeValidator",
        "validateScopePluginType": "PROVIDER",
        "validateScopeScript": "[Empty]",
      },
      "signEncOAuth2ClientConfig": {
        "authorizationResponseEncryptionAlgorithm": null,
        "authorizationResponseEncryptionMethod": null,
        "authorizationResponseSigningAlgorithm": "RS256",
        "clientJwtPublicKey": null,
        "idTokenEncryptionAlgorithm": "RSA-OAEP-256",
        "idTokenEncryptionEnabled": false,
        "idTokenEncryptionMethod": "A128CBC-HS256",
        "idTokenPublicEncryptionKey": null,
        "idTokenSignedResponseAlg": "RS256",
        "jwkSet": null,
        "jwkStoreCacheMissCacheTime": 60000,
        "jwksCacheTimeout": 3600000,
        "jwksUri": null,
        "mTLSCertificateBoundAccessTokens": false,
        "mTLSSubjectDN": null,
        "mTLSTrustedCert": null,
        "publicKeyLocation": "jwks_uri",
        "requestParameterEncryptedAlg": null,
        "requestParameterEncryptedEncryptionAlgorithm": "A128CBC-HS256",
        "requestParameterSignedAlg": null,
        "tokenEndpointAuthSigningAlgorithm": "RS256",
        "tokenIntrospectionEncryptedResponseAlg": "RSA-OAEP-256",
        "tokenIntrospectionEncryptedResponseEncryptionAlgorithm": "A128CBC-HS256",
        "tokenIntrospectionResponseFormat": "JSON",
        "tokenIntrospectionSignedResponseAlg": "RS256",
        "userinfoEncryptedResponseAlg": null,
        "userinfoEncryptedResponseEncryptionAlgorithm": "A128CBC-HS256",
        "userinfoResponseFormat": "JSON",
        "userinfoSignedResponseAlg": null,
      },
    },
    "FrodoTestOAuth2Client2": {
      "_id": "FrodoTestOAuth2Client2",
      "_provider": {
        "_id": "",
        "_rev": "745152125",
        "_type": {
          "_id": "oauth-oidc",
          "collection": false,
          "name": "OAuth2 Provider",
        },
        "advancedOAuth2Config": {
          "allowedAudienceValues": [],
          "authenticationAttributes": [
            "uid",
          ],
          "codeVerifierEnforced": "false",
          "defaultScopes": [
            "address",
            "phone",
            "openid",
            "profile",
            "email",
          ],
          "displayNameAttribute": "cn",
          "expClaimRequiredInRequestObject": false,
          "grantTypes": [
            "implicit",
            "urn:ietf:params:oauth:grant-type:saml2-bearer",
            "refresh_token",
            "password",
            "client_credentials",
            "urn:ietf:params:oauth:grant-type:device_code",
            "authorization_code",
            "urn:openid:params:grant-type:ciba",
            "urn:ietf:params:oauth:grant-type:uma-ticket",
            "urn:ietf:params:oauth:grant-type:jwt-bearer",
          ],
          "hashSalt": "qAWV0MFSQpC/f1GPbZAZnMRksak=",
          "macaroonTokenFormat": "V2",
          "maxAgeOfRequestObjectNbfClaim": 0,
          "maxDifferenceBetweenRequestObjectNbfAndExp": 0,
          "moduleMessageEnabledInPasswordGrant": false,
          "nbfClaimRequiredInRequestObject": false,
          "parRequestUriLifetime": 90,
          "passwordGrantAuthService": "PasswordGrant",
          "persistentClaims": [],
          "refreshTokenGracePeriod": 0,
          "requestObjectProcessing": "OIDC",
          "requirePushedAuthorizationRequests": false,
          "responseTypeClasses": [
            "code|org.forgerock.oauth2.core.AuthorizationCodeResponseTypeHandler",
            "device_code|org.forgerock.oauth2.core.TokenResponseTypeHandler",
            "token|org.forgerock.oauth2.core.TokenResponseTypeHandler",
            "id_token|org.forgerock.openidconnect.IdTokenResponseTypeHandler",
          ],
          "supportedScopes": [
            "email|Your email address",
            "openid|",
            "address|Your postal address",
            "phone|Your telephone number(s)",
            "profile|Your personal information",
            "fr:idm:*",
            "am-introspect-all-tokens",
          ],
          "supportedSubjectTypes": [
            "public",
            "pairwise",
          ],
          "tlsCertificateBoundAccessTokensEnabled": true,
          "tlsCertificateRevocationCheckingEnabled": false,
          "tlsClientCertificateHeaderFormat": "URLENCODED_PEM",
          "tokenCompressionEnabled": false,
          "tokenEncryptionEnabled": false,
          "tokenExchangeClasses": [
            "urn:ietf:params:oauth:token-type:access_token=>urn:ietf:params:oauth:token-type:access_token|org.forgerock.oauth2.core.tokenexchange.accesstoken.AccessTokenToAccessTokenExchanger",
            "urn:ietf:params:oauth:token-type:id_token=>urn:ietf:params:oauth:token-type:id_token|org.forgerock.oauth2.core.tokenexchange.idtoken.IdTokenToIdTokenExchanger",
            "urn:ietf:params:oauth:token-type:access_token=>urn:ietf:params:oauth:token-type:id_token|org.forgerock.oauth2.core.tokenexchange.accesstoken.AccessTokenToIdTokenExchanger",
            "urn:ietf:params:oauth:token-type:id_token=>urn:ietf:params:oauth:token-type:access_token|org.forgerock.oauth2.core.tokenexchange.idtoken.IdTokenToAccessTokenExchanger",
          ],
          "tokenSigningAlgorithm": "HS256",
          "tokenValidatorClasses": [
            "urn:ietf:params:oauth:token-type:id_token|org.forgerock.oauth2.core.tokenexchange.idtoken.OidcIdTokenValidator",
            "urn:ietf:params:oauth:token-type:access_token|org.forgerock.oauth2.core.tokenexchange.accesstoken.OAuth2AccessTokenValidator",
          ],
        },
        "advancedOIDCConfig": {
          "alwaysAddClaimsToToken": true,
          "amrMappings": {},
          "authorisedIdmDelegationClients": [],
          "authorisedOpenIdConnectSSOClients": [],
          "claimsParameterSupported": false,
          "defaultACR": [],
          "idTokenInfoClientAuthenticationEnabled": true,
          "includeAllKtyAlgCombinationsInJwksUri": false,
          "loaMapping": {},
          "storeOpsTokens": true,
          "supportedAuthorizationResponseEncryptionAlgorithms": [
            "ECDH-ES+A256KW",
            "ECDH-ES+A192KW",
            "RSA-OAEP",
            "ECDH-ES+A128KW",
            "RSA-OAEP-256",
            "A128KW",
            "A256KW",
            "ECDH-ES",
            "dir",
            "A192KW",
          ],
          "supportedAuthorizationResponseEncryptionEnc": [
            "A256GCM",
            "A192GCM",
            "A128GCM",
            "A128CBC-HS256",
            "A192CBC-HS384",
            "A256CBC-HS512",
          ],
          "supportedAuthorizationResponseSigningAlgorithms": [
            "PS384",
            "RS384",
            "EdDSA",
            "ES384",
            "HS256",
            "HS512",
            "ES256",
            "RS256",
            "HS384",
            "ES512",
            "PS256",
            "PS512",
            "RS512",
          ],
          "supportedRequestParameterEncryptionAlgorithms": [
            "ECDH-ES+A256KW",
            "ECDH-ES+A192KW",
            "ECDH-ES+A128KW",
            "RSA-OAEP",
            "RSA-OAEP-256",
            "A128KW",
            "A256KW",
            "ECDH-ES",
            "dir",
            "A192KW",
          ],
          "supportedRequestParameterEncryptionEnc": [
            "A256GCM",
            "A192GCM",
            "A128GCM",
            "A128CBC-HS256",
            "A192CBC-HS384",
            "A256CBC-HS512",
          ],
          "supportedRequestParameterSigningAlgorithms": [
            "PS384",
            "ES384",
            "RS384",
            "HS256",
            "HS512",
            "ES256",
            "RS256",
            "HS384",
            "ES512",
            "PS256",
            "PS512",
            "RS512",
          ],
          "supportedTokenEndpointAuthenticationSigningAlgorithms": [
            "PS384",
            "ES384",
            "RS384",
            "HS256",
            "HS512",
            "ES256",
            "RS256",
            "HS384",
            "ES512",
            "PS256",
            "PS512",
            "RS512",
          ],
          "supportedTokenIntrospectionResponseEncryptionAlgorithms": [
            "ECDH-ES+A256KW",
            "ECDH-ES+A192KW",
            "RSA-OAEP",
            "ECDH-ES+A128KW",
            "RSA-OAEP-256",
            "A128KW",
            "A256KW",
            "ECDH-ES",
            "dir",
            "A192KW",
          ],
          "supportedTokenIntrospectionResponseEncryptionEnc": [
            "A256GCM",
            "A192GCM",
            "A128GCM",
            "A128CBC-HS256",
            "A192CBC-HS384",
            "A256CBC-HS512",
          ],
          "supportedTokenIntrospectionResponseSigningAlgorithms": [
            "PS384",
            "RS384",
            "EdDSA",
            "ES384",
            "HS256",
            "HS512",
            "ES256",
            "RS256",
            "HS384",
            "ES512",
            "PS256",
            "PS512",
            "RS512",
          ],
          "supportedUserInfoEncryptionAlgorithms": [
            "ECDH-ES+A256KW",
            "ECDH-ES+A192KW",
            "RSA-OAEP",
            "ECDH-ES+A128KW",
            "RSA-OAEP-256",
            "A128KW",
            "A256KW",
            "ECDH-ES",
            "dir",
            "A192KW",
          ],
          "supportedUserInfoEncryptionEnc": [
            "A256GCM",
            "A192GCM",
            "A128GCM",
            "A128CBC-HS256",
            "A192CBC-HS384",
            "A256CBC-HS512",
          ],
          "supportedUserInfoSigningAlgorithms": [
            "ES384",
            "HS256",
            "HS512",
            "ES256",
            "RS256",
            "HS384",
            "ES512",
          ],
          "useForceAuthnForPromptLogin": false,
        },
        "cibaConfig": {
          "cibaAuthReqIdLifetime": 600,
          "cibaMinimumPollingInterval": 2,
          "supportedCibaSigningAlgorithms": [
            "ES256",
            "PS256",
          ],
        },
        "clientDynamicRegistrationConfig": {
          "allowDynamicRegistration": false,
          "dynamicClientRegistrationScope": "dynamic_client_registration",
          "dynamicClientRegistrationSoftwareStatementRequired": false,
          "generateRegistrationAccessTokens": true,
          "requiredSoftwareStatementAttestedAttributes": [
            "redirect_uris",
          ],
        },
        "consent": {
          "clientsCanSkipConsent": true,
          "enableRemoteConsent": false,
          "supportedRcsRequestEncryptionAlgorithms": [
            "ECDH-ES+A256KW",
            "ECDH-ES+A192KW",
            "RSA-OAEP",
            "ECDH-ES+A128KW",
            "RSA-OAEP-256",
            "A128KW",
            "A256KW",
            "ECDH-ES",
            "dir",
            "A192KW",
          ],
          "supportedRcsRequestEncryptionMethods": [
            "A256GCM",
            "A192GCM",
            "A128GCM",
            "A128CBC-HS256",
            "A192CBC-HS384",
            "A256CBC-HS512",
          ],
          "supportedRcsRequestSigningAlgorithms": [
            "PS384",
            "ES384",
            "RS384",
            "HS256",
            "HS512",
            "ES256",
            "RS256",
            "HS384",
            "ES512",
            "PS256",
            "PS512",
            "RS512",
          ],
          "supportedRcsResponseEncryptionAlgorithms": [
            "ECDH-ES+A256KW",
            "ECDH-ES+A192KW",
            "ECDH-ES+A128KW",
            "RSA-OAEP",
            "RSA-OAEP-256",
            "A128KW",
            "A256KW",
            "ECDH-ES",
            "dir",
            "A192KW",
          ],
          "supportedRcsResponseEncryptionMethods": [
            "A256GCM",
            "A192GCM",
            "A128GCM",
            "A128CBC-HS256",
            "A192CBC-HS384",
            "A256CBC-HS512",
          ],
          "supportedRcsResponseSigningAlgorithms": [
            "PS384",
            "ES384",
            "RS384",
            "HS256",
            "HS512",
            "ES256",
            "RS256",
            "HS384",
            "ES512",
            "PS256",
            "PS512",
            "RS512",
          ],
        },
        "coreOAuth2Config": {
          "accessTokenLifetime": 3600,
          "accessTokenMayActScript": "[Empty]",
          "codeLifetime": 120,
          "issueRefreshToken": true,
          "issueRefreshTokenOnRefreshedToken": true,
          "macaroonTokensEnabled": false,
          "oidcMayActScript": "[Empty]",
          "refreshTokenLifetime": 604800,
          "scopesPolicySet": "oauth2Scopes",
          "statelessTokensEnabled": true,
          "usePolicyEngineForScope": false,
        },
        "coreOIDCConfig": {
          "jwtTokenLifetime": 3600,
          "oidcDiscoveryEndpointEnabled": true,
          "overrideableOIDCClaims": [],
          "supportedClaims": [],
          "supportedIDTokenEncryptionAlgorithms": [
            "ECDH-ES+A256KW",
            "ECDH-ES+A192KW",
            "RSA-OAEP",
            "ECDH-ES+A128KW",
            "RSA-OAEP-256",
            "A128KW",
            "A256KW",
            "ECDH-ES",
            "dir",
            "A192KW",
          ],
          "supportedIDTokenEncryptionMethods": [
            "A256GCM",
            "A192GCM",
            "A128GCM",
            "A128CBC-HS256",
            "A192CBC-HS384",
            "A256CBC-HS512",
          ],
          "supportedIDTokenSigningAlgorithms": [
            "PS384",
            "ES384",
            "RS384",
            "HS256",
            "HS512",
            "ES256",
            "RS256",
            "HS384",
            "ES512",
            "PS256",
            "PS512",
            "RS512",
          ],
        },
        "deviceCodeConfig": {
          "deviceCodeLifetime": 300,
          "devicePollInterval": 5,
          "deviceUserCodeCharacterSet": "234567ACDEFGHJKLMNPQRSTWXYZabcdefhijkmnopqrstwxyz",
          "deviceUserCodeLength": 8,
        },
        "pluginsConfig": {
          "accessTokenEnricherClass": "org.forgerock.openam.oauth2.OpenAMScopeValidator",
          "accessTokenModificationPluginType": "SCRIPTED",
          "accessTokenModificationScript": "39c08084-1238-43e8-857f-2e11005eac49",
          "accessTokenModifierClass": "org.forgerock.openam.oauth2.OpenAMScopeValidator",
          "authorizeEndpointDataProviderClass": "org.forgerock.openam.oauth2.OpenAMScopeValidator",
          "authorizeEndpointDataProviderPluginType": "JAVA",
          "authorizeEndpointDataProviderScript": "[Empty]",
          "evaluateScopeClass": "org.forgerock.openam.oauth2.OpenAMScopeValidator",
          "evaluateScopePluginType": "JAVA",
          "evaluateScopeScript": "[Empty]",
          "oidcClaimsClass": "org.forgerock.openam.oauth2.OpenAMScopeValidator",
          "oidcClaimsPluginType": "SCRIPTED",
          "oidcClaimsScript": "cf3515f0-8278-4ee3-a530-1bad7424c416",
          "userCodeGeneratorClass": "org.forgerock.oauth2.core.plugins.registry.DefaultUserCodeGenerator",
          "validateScopeClass": "org.forgerock.openam.oauth2.OpenAMScopeValidator",
          "validateScopePluginType": "JAVA",
          "validateScopeScript": "[Empty]",
        },
      },
      "_rev": "-1777552368",
      "_type": {
        "_id": "OAuth2Client",
        "collection": true,
        "name": "OAuth2 Clients",
      },
      "advancedOAuth2ClientConfig": {
        "clientUri": [],
        "contacts": [],
        "customProperties": [],
        "descriptions": [],
        "grantTypes": [
          "authorization_code",
          "refresh_token",
        ],
        "isConsentImplied": true,
        "javascriptOrigins": [],
        "logoUri": [],
        "mixUpMitigation": false,
        "name": [],
        "policyUri": [],
        "refreshTokenGracePeriod": 0,
        "requestUris": [],
        "require_pushed_authorization_requests": false,
        "responseTypes": [
          "code",
          "token",
          "id_token",
        ],
        "sectorIdentifierUri": null,
        "softwareIdentity": null,
        "softwareVersion": null,
        "subjectType": "public",
        "tokenEndpointAuthMethod": "client_secret_basic",
        "tokenExchangeAuthLevel": 0,
        "tosURI": [],
        "updateAccessToken": null,
      },
      "coreOAuth2ClientConfig": {
        "accessTokenLifetime": 3600,
        "agentgroup": null,
        "authorizationCodeLifetime": 120,
        "clientName": [],
        "clientType": "Public",
        "defaultScopes": [],
        "loopbackInterfaceRedirection": false,
        "redirectionUris": [],
        "refreshTokenLifetime": 604800,
        "scopes": [
          "openid",
        ],
        "status": "Active",
      },
      "coreOpenIDClientConfig": {
        "backchannel_logout_session_required": false,
        "backchannel_logout_uri": null,
        "claims": [],
        "clientSessionUri": null,
        "defaultAcrValues": [],
        "defaultMaxAge": 600,
        "defaultMaxAgeEnabled": false,
        "jwtTokenLifetime": 3600,
        "postLogoutRedirectUri": [],
      },
      "coreUmaClientConfig": {
        "claimsRedirectionUris": [],
      },
      "overrideOAuth2ClientConfig": {
        "accessTokenMayActScript": "[Empty]",
        "accessTokenModificationPluginType": "PROVIDER",
        "accessTokenModificationScript": "[Empty]",
        "accessTokenModifierClass": null,
        "authorizeEndpointDataProviderClass": "org.forgerock.oauth2.core.plugins.registry.DefaultEndpointDataProvider",
        "authorizeEndpointDataProviderPluginType": "PROVIDER",
        "authorizeEndpointDataProviderScript": "[Empty]",
        "clientsCanSkipConsent": false,
        "customLoginUrlTemplate": null,
        "enableRemoteConsent": false,
        "evaluateScopeClass": "org.forgerock.oauth2.core.plugins.registry.DefaultScopeEvaluator",
        "evaluateScopePluginType": "PROVIDER",
        "evaluateScopeScript": "[Empty]",
        "issueRefreshToken": true,
        "issueRefreshTokenOnRefreshedToken": true,
        "oidcClaimsClass": null,
        "oidcClaimsPluginType": "PROVIDER",
        "oidcClaimsScript": "[Empty]",
        "oidcMayActScript": "[Empty]",
        "overrideableOIDCClaims": [],
        "providerOverridesEnabled": false,
        "remoteConsentServiceId": null,
        "scopesPolicySet": "oauth2Scopes",
        "statelessTokensEnabled": false,
        "tokenEncryptionEnabled": false,
        "usePolicyEngineForScope": false,
        "validateScopeClass": "org.forgerock.oauth2.core.plugins.registry.DefaultScopeValidator",
        "validateScopePluginType": "PROVIDER",
        "validateScopeScript": "[Empty]",
      },
      "signEncOAuth2ClientConfig": {
        "authorizationResponseEncryptionAlgorithm": null,
        "authorizationResponseEncryptionMethod": null,
        "authorizationResponseSigningAlgorithm": "RS256",
        "clientJwtPublicKey": null,
        "idTokenEncryptionAlgorithm": "RSA-OAEP-256",
        "idTokenEncryptionEnabled": false,
        "idTokenEncryptionMethod": "A128CBC-HS256",
        "idTokenPublicEncryptionKey": null,
        "idTokenSignedResponseAlg": "RS256",
        "jwkSet": null,
        "jwkStoreCacheMissCacheTime": 60000,
        "jwksCacheTimeout": 3600000,
        "jwksUri": null,
        "mTLSCertificateBoundAccessTokens": false,
        "mTLSSubjectDN": null,
        "mTLSTrustedCert": null,
        "publicKeyLocation": "jwks_uri",
        "requestParameterEncryptedAlg": null,
        "requestParameterEncryptedEncryptionAlgorithm": "A128CBC-HS256",
        "requestParameterSignedAlg": null,
        "tokenEndpointAuthSigningAlgorithm": "RS256",
        "tokenIntrospectionEncryptedResponseAlg": "RSA-OAEP-256",
        "tokenIntrospectionEncryptedResponseEncryptionAlgorithm": "A128CBC-HS256",
        "tokenIntrospectionResponseFormat": "JSON",
        "tokenIntrospectionSignedResponseAlg": "RS256",
        "userinfoEncryptedResponseAlg": null,
        "userinfoEncryptedResponseEncryptionAlgorithm": "A128CBC-HS256",
        "userinfoResponseFormat": "JSON",
        "userinfoSignedResponseAlg": null,
      },
    },
    "RCSClient": {
      "_id": "RCSClient",
      "_provider": {
        "_id": "",
        "_rev": "745152125",
        "_type": {
          "_id": "oauth-oidc",
          "collection": false,
          "name": "OAuth2 Provider",
        },
        "advancedOAuth2Config": {
          "allowedAudienceValues": [],
          "authenticationAttributes": [
            "uid",
          ],
          "codeVerifierEnforced": "false",
          "defaultScopes": [
            "address",
            "phone",
            "openid",
            "profile",
            "email",
          ],
          "displayNameAttribute": "cn",
          "expClaimRequiredInRequestObject": false,
          "grantTypes": [
            "implicit",
            "urn:ietf:params:oauth:grant-type:saml2-bearer",
            "refresh_token",
            "password",
            "client_credentials",
            "urn:ietf:params:oauth:grant-type:device_code",
            "authorization_code",
            "urn:openid:params:grant-type:ciba",
            "urn:ietf:params:oauth:grant-type:uma-ticket",
            "urn:ietf:params:oauth:grant-type:jwt-bearer",
          ],
          "hashSalt": "qAWV0MFSQpC/f1GPbZAZnMRksak=",
          "macaroonTokenFormat": "V2",
          "maxAgeOfRequestObjectNbfClaim": 0,
          "maxDifferenceBetweenRequestObjectNbfAndExp": 0,
          "moduleMessageEnabledInPasswordGrant": false,
          "nbfClaimRequiredInRequestObject": false,
          "parRequestUriLifetime": 90,
          "passwordGrantAuthService": "PasswordGrant",
          "persistentClaims": [],
          "refreshTokenGracePeriod": 0,
          "requestObjectProcessing": "OIDC",
          "requirePushedAuthorizationRequests": false,
          "responseTypeClasses": [
            "code|org.forgerock.oauth2.core.AuthorizationCodeResponseTypeHandler",
            "device_code|org.forgerock.oauth2.core.TokenResponseTypeHandler",
            "token|org.forgerock.oauth2.core.TokenResponseTypeHandler",
            "id_token|org.forgerock.openidconnect.IdTokenResponseTypeHandler",
          ],
          "supportedScopes": [
            "email|Your email address",
            "openid|",
            "address|Your postal address",
            "phone|Your telephone number(s)",
            "profile|Your personal information",
            "fr:idm:*",
            "am-introspect-all-tokens",
          ],
          "supportedSubjectTypes": [
            "public",
            "pairwise",
          ],
          "tlsCertificateBoundAccessTokensEnabled": true,
          "tlsCertificateRevocationCheckingEnabled": false,
          "tlsClientCertificateHeaderFormat": "URLENCODED_PEM",
          "tokenCompressionEnabled": false,
          "tokenEncryptionEnabled": false,
          "tokenExchangeClasses": [
            "urn:ietf:params:oauth:token-type:access_token=>urn:ietf:params:oauth:token-type:access_token|org.forgerock.oauth2.core.tokenexchange.accesstoken.AccessTokenToAccessTokenExchanger",
            "urn:ietf:params:oauth:token-type:id_token=>urn:ietf:params:oauth:token-type:id_token|org.forgerock.oauth2.core.tokenexchange.idtoken.IdTokenToIdTokenExchanger",
            "urn:ietf:params:oauth:token-type:access_token=>urn:ietf:params:oauth:token-type:id_token|org.forgerock.oauth2.core.tokenexchange.accesstoken.AccessTokenToIdTokenExchanger",
            "urn:ietf:params:oauth:token-type:id_token=>urn:ietf:params:oauth:token-type:access_token|org.forgerock.oauth2.core.tokenexchange.idtoken.IdTokenToAccessTokenExchanger",
          ],
          "tokenSigningAlgorithm": "HS256",
          "tokenValidatorClasses": [
            "urn:ietf:params:oauth:token-type:id_token|org.forgerock.oauth2.core.tokenexchange.idtoken.OidcIdTokenValidator",
            "urn:ietf:params:oauth:token-type:access_token|org.forgerock.oauth2.core.tokenexchange.accesstoken.OAuth2AccessTokenValidator",
          ],
        },
        "advancedOIDCConfig": {
          "alwaysAddClaimsToToken": true,
          "amrMappings": {},
          "authorisedIdmDelegationClients": [],
          "authorisedOpenIdConnectSSOClients": [],
          "claimsParameterSupported": false,
          "defaultACR": [],
          "idTokenInfoClientAuthenticationEnabled": true,
          "includeAllKtyAlgCombinationsInJwksUri": false,
          "loaMapping": {},
          "storeOpsTokens": true,
          "supportedAuthorizationResponseEncryptionAlgorithms": [
            "ECDH-ES+A256KW",
            "ECDH-ES+A192KW",
            "RSA-OAEP",
            "ECDH-ES+A128KW",
            "RSA-OAEP-256",
            "A128KW",
            "A256KW",
            "ECDH-ES",
            "dir",
            "A192KW",
          ],
          "supportedAuthorizationResponseEncryptionEnc": [
            "A256GCM",
            "A192GCM",
            "A128GCM",
            "A128CBC-HS256",
            "A192CBC-HS384",
            "A256CBC-HS512",
          ],
          "supportedAuthorizationResponseSigningAlgorithms": [
            "PS384",
            "RS384",
            "EdDSA",
            "ES384",
            "HS256",
            "HS512",
            "ES256",
            "RS256",
            "HS384",
            "ES512",
            "PS256",
            "PS512",
            "RS512",
          ],
          "supportedRequestParameterEncryptionAlgorithms": [
            "ECDH-ES+A256KW",
            "ECDH-ES+A192KW",
            "ECDH-ES+A128KW",
            "RSA-OAEP",
            "RSA-OAEP-256",
            "A128KW",
            "A256KW",
            "ECDH-ES",
            "dir",
            "A192KW",
          ],
          "supportedRequestParameterEncryptionEnc": [
            "A256GCM",
            "A192GCM",
            "A128GCM",
            "A128CBC-HS256",
            "A192CBC-HS384",
            "A256CBC-HS512",
          ],
          "supportedRequestParameterSigningAlgorithms": [
            "PS384",
            "ES384",
            "RS384",
            "HS256",
            "HS512",
            "ES256",
            "RS256",
            "HS384",
            "ES512",
            "PS256",
            "PS512",
            "RS512",
          ],
          "supportedTokenEndpointAuthenticationSigningAlgorithms": [
            "PS384",
            "ES384",
            "RS384",
            "HS256",
            "HS512",
            "ES256",
            "RS256",
            "HS384",
            "ES512",
            "PS256",
            "PS512",
            "RS512",
          ],
          "supportedTokenIntrospectionResponseEncryptionAlgorithms": [
            "ECDH-ES+A256KW",
            "ECDH-ES+A192KW",
            "RSA-OAEP",
            "ECDH-ES+A128KW",
            "RSA-OAEP-256",
            "A128KW",
            "A256KW",
            "ECDH-ES",
            "dir",
            "A192KW",
          ],
          "supportedTokenIntrospectionResponseEncryptionEnc": [
            "A256GCM",
            "A192GCM",
            "A128GCM",
            "A128CBC-HS256",
            "A192CBC-HS384",
            "A256CBC-HS512",
          ],
          "supportedTokenIntrospectionResponseSigningAlgorithms": [
            "PS384",
            "RS384",
            "EdDSA",
            "ES384",
            "HS256",
            "HS512",
            "ES256",
            "RS256",
            "HS384",
            "ES512",
            "PS256",
            "PS512",
            "RS512",
          ],
          "supportedUserInfoEncryptionAlgorithms": [
            "ECDH-ES+A256KW",
            "ECDH-ES+A192KW",
            "RSA-OAEP",
            "ECDH-ES+A128KW",
            "RSA-OAEP-256",
            "A128KW",
            "A256KW",
            "ECDH-ES",
            "dir",
            "A192KW",
          ],
          "supportedUserInfoEncryptionEnc": [
            "A256GCM",
            "A192GCM",
            "A128GCM",
            "A128CBC-HS256",
            "A192CBC-HS384",
            "A256CBC-HS512",
          ],
          "supportedUserInfoSigningAlgorithms": [
            "ES384",
            "HS256",
            "HS512",
            "ES256",
            "RS256",
            "HS384",
            "ES512",
          ],
          "useForceAuthnForPromptLogin": false,
        },
        "cibaConfig": {
          "cibaAuthReqIdLifetime": 600,
          "cibaMinimumPollingInterval": 2,
          "supportedCibaSigningAlgorithms": [
            "ES256",
            "PS256",
          ],
        },
        "clientDynamicRegistrationConfig": {
          "allowDynamicRegistration": false,
          "dynamicClientRegistrationScope": "dynamic_client_registration",
          "dynamicClientRegistrationSoftwareStatementRequired": false,
          "generateRegistrationAccessTokens": true,
          "requiredSoftwareStatementAttestedAttributes": [
            "redirect_uris",
          ],
        },
        "consent": {
          "clientsCanSkipConsent": true,
          "enableRemoteConsent": false,
          "supportedRcsRequestEncryptionAlgorithms": [
            "ECDH-ES+A256KW",
            "ECDH-ES+A192KW",
            "RSA-OAEP",
            "ECDH-ES+A128KW",
            "RSA-OAEP-256",
            "A128KW",
            "A256KW",
            "ECDH-ES",
            "dir",
            "A192KW",
          ],
          "supportedRcsRequestEncryptionMethods": [
            "A256GCM",
            "A192GCM",
            "A128GCM",
            "A128CBC-HS256",
            "A192CBC-HS384",
            "A256CBC-HS512",
          ],
          "supportedRcsRequestSigningAlgorithms": [
            "PS384",
            "ES384",
            "RS384",
            "HS256",
            "HS512",
            "ES256",
            "RS256",
            "HS384",
            "ES512",
            "PS256",
            "PS512",
            "RS512",
          ],
          "supportedRcsResponseEncryptionAlgorithms": [
            "ECDH-ES+A256KW",
            "ECDH-ES+A192KW",
            "ECDH-ES+A128KW",
            "RSA-OAEP",
            "RSA-OAEP-256",
            "A128KW",
            "A256KW",
            "ECDH-ES",
            "dir",
            "A192KW",
          ],
          "supportedRcsResponseEncryptionMethods": [
            "A256GCM",
            "A192GCM",
            "A128GCM",
            "A128CBC-HS256",
            "A192CBC-HS384",
            "A256CBC-HS512",
          ],
          "supportedRcsResponseSigningAlgorithms": [
            "PS384",
            "ES384",
            "RS384",
            "HS256",
            "HS512",
            "ES256",
            "RS256",
            "HS384",
            "ES512",
            "PS256",
            "PS512",
            "RS512",
          ],
        },
        "coreOAuth2Config": {
          "accessTokenLifetime": 3600,
          "accessTokenMayActScript": "[Empty]",
          "codeLifetime": 120,
          "issueRefreshToken": true,
          "issueRefreshTokenOnRefreshedToken": true,
          "macaroonTokensEnabled": false,
          "oidcMayActScript": "[Empty]",
          "refreshTokenLifetime": 604800,
          "scopesPolicySet": "oauth2Scopes",
          "statelessTokensEnabled": true,
          "usePolicyEngineForScope": false,
        },
        "coreOIDCConfig": {
          "jwtTokenLifetime": 3600,
          "oidcDiscoveryEndpointEnabled": true,
          "overrideableOIDCClaims": [],
          "supportedClaims": [],
          "supportedIDTokenEncryptionAlgorithms": [
            "ECDH-ES+A256KW",
            "ECDH-ES+A192KW",
            "RSA-OAEP",
            "ECDH-ES+A128KW",
            "RSA-OAEP-256",
            "A128KW",
            "A256KW",
            "ECDH-ES",
            "dir",
            "A192KW",
          ],
          "supportedIDTokenEncryptionMethods": [
            "A256GCM",
            "A192GCM",
            "A128GCM",
            "A128CBC-HS256",
            "A192CBC-HS384",
            "A256CBC-HS512",
          ],
          "supportedIDTokenSigningAlgorithms": [
            "PS384",
            "ES384",
            "RS384",
            "HS256",
            "HS512",
            "ES256",
            "RS256",
            "HS384",
            "ES512",
            "PS256",
            "PS512",
            "RS512",
          ],
        },
        "deviceCodeConfig": {
          "deviceCodeLifetime": 300,
          "devicePollInterval": 5,
          "deviceUserCodeCharacterSet": "234567ACDEFGHJKLMNPQRSTWXYZabcdefhijkmnopqrstwxyz",
          "deviceUserCodeLength": 8,
        },
        "pluginsConfig": {
          "accessTokenEnricherClass": "org.forgerock.openam.oauth2.OpenAMScopeValidator",
          "accessTokenModificationPluginType": "SCRIPTED",
          "accessTokenModificationScript": "39c08084-1238-43e8-857f-2e11005eac49",
          "accessTokenModifierClass": "org.forgerock.openam.oauth2.OpenAMScopeValidator",
          "authorizeEndpointDataProviderClass": "org.forgerock.openam.oauth2.OpenAMScopeValidator",
          "authorizeEndpointDataProviderPluginType": "JAVA",
          "authorizeEndpointDataProviderScript": "[Empty]",
          "evaluateScopeClass": "org.forgerock.openam.oauth2.OpenAMScopeValidator",
          "evaluateScopePluginType": "JAVA",
          "evaluateScopeScript": "[Empty]",
          "oidcClaimsClass": "org.forgerock.openam.oauth2.OpenAMScopeValidator",
          "oidcClaimsPluginType": "SCRIPTED",
          "oidcClaimsScript": "cf3515f0-8278-4ee3-a530-1bad7424c416",
          "userCodeGeneratorClass": "org.forgerock.oauth2.core.plugins.registry.DefaultUserCodeGenerator",
          "validateScopeClass": "org.forgerock.openam.oauth2.OpenAMScopeValidator",
          "validateScopePluginType": "JAVA",
          "validateScopeScript": "[Empty]",
        },
      },
      "_rev": "-318736287",
      "_type": {
        "_id": "OAuth2Client",
        "collection": true,
        "name": "OAuth2 Clients",
      },
      "advancedOAuth2ClientConfig": {
        "clientUri": [],
        "contacts": [],
        "descriptions": [],
        "grantTypes": [
          "client_credentials",
        ],
        "isConsentImplied": false,
        "javascriptOrigins": [],
        "logoUri": [],
        "mixUpMitigation": false,
        "name": [],
        "policyUri": [],
        "requestUris": [],
        "responseTypes": [
          "code",
          "token",
          "id_token",
          "code token",
          "token id_token",
          "code id_token",
          "code token id_token",
          "device_code",
          "device_code id_token",
        ],
        "sectorIdentifierUri": null,
        "subjectType": "Public",
        "tokenEndpointAuthMethod": "client_secret_basic",
        "updateAccessToken": null,
      },
      "coreOAuth2ClientConfig": {
        "accessTokenLifetime": 0,
        "agentgroup": null,
        "authorizationCodeLifetime": 0,
        "clientName": [],
        "clientType": "Confidential",
        "defaultScopes": [],
        "loopbackInterfaceRedirection": false,
        "redirectionUris": [],
        "refreshTokenLifetime": 0,
        "scopes": [
          "fr:idm:*",
        ],
        "status": "Active",
        "userpassword": null,
      },
      "coreOpenIDClientConfig": {
        "claims": [],
        "clientSessionUri": null,
        "defaultAcrValues": [],
        "defaultMaxAge": 600,
        "defaultMaxAgeEnabled": false,
        "jwtTokenLifetime": 0,
        "postLogoutRedirectUri": [],
      },
      "coreUmaClientConfig": {
        "claimsRedirectionUris": [],
      },
      "overrideOAuth2ClientConfig": {
        "accessTokenModificationPluginType": "SCRIPTED",
        "accessTokenModificationScript": "c234ba0b-58a1-4cfd-9567-09edde980745",
        "clientsCanSkipConsent": true,
        "oidcClaimsPluginType": "SCRIPTED",
        "oidcClaimsScript": "1f389a3d-21cf-417c-a6d3-42ea620071f0",
        "providerOverridesEnabled": true,
        "statelessTokensEnabled": true,
      },
      "signEncOAuth2ClientConfig": {
        "clientJwtPublicKey": null,
        "idTokenEncryptionAlgorithm": "RSA-OAEP-256",
        "idTokenEncryptionEnabled": false,
        "idTokenEncryptionMethod": "A128CBC-HS256",
        "idTokenPublicEncryptionKey": null,
        "idTokenSignedResponseAlg": "RS256",
        "jwkSet": null,
        "jwkStoreCacheMissCacheTime": 60000,
        "jwksCacheTimeout": 3600000,
        "jwksUri": "http://am:80/am/oauth2/connect/jwk_uri",
        "mTLSCertificateBoundAccessTokens": false,
        "mTLSSubjectDN": null,
        "mTLSTrustedCert": null,
        "publicKeyLocation": "jwks_uri",
        "requestParameterEncryptedAlg": null,
        "requestParameterEncryptedEncryptionAlgorithm": "A128CBC-HS256",
        "requestParameterSignedAlg": null,
        "tokenEndpointAuthSigningAlgorithm": "RS256",
        "tokenIntrospectionEncryptedResponseAlg": "RSA-OAEP-256",
        "tokenIntrospectionEncryptedResponseEncryptionAlgorithm": "A128CBC-HS256",
        "tokenIntrospectionResponseFormat": "JSON",
        "tokenIntrospectionSignedResponseAlg": "RS256",
        "userinfoEncryptedResponseAlg": null,
        "userinfoEncryptedResponseEncryptionAlgorithm": "A128CBC-HS256",
        "userinfoResponseFormat": "JSON",
        "userinfoSignedResponseAlg": null,
      },
    },
    "ig-oidc-app": {
      "_id": "ig-oidc-app",
      "_provider": {
        "_id": "",
        "_rev": "745152125",
        "_type": {
          "_id": "oauth-oidc",
          "collection": false,
          "name": "OAuth2 Provider",
        },
        "advancedOAuth2Config": {
          "allowedAudienceValues": [],
          "authenticationAttributes": [
            "uid",
          ],
          "codeVerifierEnforced": "false",
          "defaultScopes": [
            "address",
            "phone",
            "openid",
            "profile",
            "email",
          ],
          "displayNameAttribute": "cn",
          "expClaimRequiredInRequestObject": false,
          "grantTypes": [
            "implicit",
            "urn:ietf:params:oauth:grant-type:saml2-bearer",
            "refresh_token",
            "password",
            "client_credentials",
            "urn:ietf:params:oauth:grant-type:device_code",
            "authorization_code",
            "urn:openid:params:grant-type:ciba",
            "urn:ietf:params:oauth:grant-type:uma-ticket",
            "urn:ietf:params:oauth:grant-type:jwt-bearer",
          ],
          "hashSalt": "qAWV0MFSQpC/f1GPbZAZnMRksak=",
          "macaroonTokenFormat": "V2",
          "maxAgeOfRequestObjectNbfClaim": 0,
          "maxDifferenceBetweenRequestObjectNbfAndExp": 0,
          "moduleMessageEnabledInPasswordGrant": false,
          "nbfClaimRequiredInRequestObject": false,
          "parRequestUriLifetime": 90,
          "passwordGrantAuthService": "PasswordGrant",
          "persistentClaims": [],
          "refreshTokenGracePeriod": 0,
          "requestObjectProcessing": "OIDC",
          "requirePushedAuthorizationRequests": false,
          "responseTypeClasses": [
            "code|org.forgerock.oauth2.core.AuthorizationCodeResponseTypeHandler",
            "device_code|org.forgerock.oauth2.core.TokenResponseTypeHandler",
            "token|org.forgerock.oauth2.core.TokenResponseTypeHandler",
            "id_token|org.forgerock.openidconnect.IdTokenResponseTypeHandler",
          ],
          "supportedScopes": [
            "email|Your email address",
            "openid|",
            "address|Your postal address",
            "phone|Your telephone number(s)",
            "profile|Your personal information",
            "fr:idm:*",
            "am-introspect-all-tokens",
          ],
          "supportedSubjectTypes": [
            "public",
            "pairwise",
          ],
          "tlsCertificateBoundAccessTokensEnabled": true,
          "tlsCertificateRevocationCheckingEnabled": false,
          "tlsClientCertificateHeaderFormat": "URLENCODED_PEM",
          "tokenCompressionEnabled": false,
          "tokenEncryptionEnabled": false,
          "tokenExchangeClasses": [
            "urn:ietf:params:oauth:token-type:access_token=>urn:ietf:params:oauth:token-type:access_token|org.forgerock.oauth2.core.tokenexchange.accesstoken.AccessTokenToAccessTokenExchanger",
            "urn:ietf:params:oauth:token-type:id_token=>urn:ietf:params:oauth:token-type:id_token|org.forgerock.oauth2.core.tokenexchange.idtoken.IdTokenToIdTokenExchanger",
            "urn:ietf:params:oauth:token-type:access_token=>urn:ietf:params:oauth:token-type:id_token|org.forgerock.oauth2.core.tokenexchange.accesstoken.AccessTokenToIdTokenExchanger",
            "urn:ietf:params:oauth:token-type:id_token=>urn:ietf:params:oauth:token-type:access_token|org.forgerock.oauth2.core.tokenexchange.idtoken.IdTokenToAccessTokenExchanger",
          ],
          "tokenSigningAlgorithm": "HS256",
          "tokenValidatorClasses": [
            "urn:ietf:params:oauth:token-type:id_token|org.forgerock.oauth2.core.tokenexchange.idtoken.OidcIdTokenValidator",
            "urn:ietf:params:oauth:token-type:access_token|org.forgerock.oauth2.core.tokenexchange.accesstoken.OAuth2AccessTokenValidator",
          ],
        },
        "advancedOIDCConfig": {
          "alwaysAddClaimsToToken": true,
          "amrMappings": {},
          "authorisedIdmDelegationClients": [],
          "authorisedOpenIdConnectSSOClients": [],
          "claimsParameterSupported": false,
          "defaultACR": [],
          "idTokenInfoClientAuthenticationEnabled": true,
          "includeAllKtyAlgCombinationsInJwksUri": false,
          "loaMapping": {},
          "storeOpsTokens": true,
          "supportedAuthorizationResponseEncryptionAlgorithms": [
            "ECDH-ES+A256KW",
            "ECDH-ES+A192KW",
            "RSA-OAEP",
            "ECDH-ES+A128KW",
            "RSA-OAEP-256",
            "A128KW",
            "A256KW",
            "ECDH-ES",
            "dir",
            "A192KW",
          ],
          "supportedAuthorizationResponseEncryptionEnc": [
            "A256GCM",
            "A192GCM",
            "A128GCM",
            "A128CBC-HS256",
            "A192CBC-HS384",
            "A256CBC-HS512",
          ],
          "supportedAuthorizationResponseSigningAlgorithms": [
            "PS384",
            "RS384",
            "EdDSA",
            "ES384",
            "HS256",
            "HS512",
            "ES256",
            "RS256",
            "HS384",
            "ES512",
            "PS256",
            "PS512",
            "RS512",
          ],
          "supportedRequestParameterEncryptionAlgorithms": [
            "ECDH-ES+A256KW",
            "ECDH-ES+A192KW",
            "ECDH-ES+A128KW",
            "RSA-OAEP",
            "RSA-OAEP-256",
            "A128KW",
            "A256KW",
            "ECDH-ES",
            "dir",
            "A192KW",
          ],
          "supportedRequestParameterEncryptionEnc": [
            "A256GCM",
            "A192GCM",
            "A128GCM",
            "A128CBC-HS256",
            "A192CBC-HS384",
            "A256CBC-HS512",
          ],
          "supportedRequestParameterSigningAlgorithms": [
            "PS384",
            "ES384",
            "RS384",
            "HS256",
            "HS512",
            "ES256",
            "RS256",
            "HS384",
            "ES512",
            "PS256",
            "PS512",
            "RS512",
          ],
          "supportedTokenEndpointAuthenticationSigningAlgorithms": [
            "PS384",
            "ES384",
            "RS384",
            "HS256",
            "HS512",
            "ES256",
            "RS256",
            "HS384",
            "ES512",
            "PS256",
            "PS512",
            "RS512",
          ],
          "supportedTokenIntrospectionResponseEncryptionAlgorithms": [
            "ECDH-ES+A256KW",
            "ECDH-ES+A192KW",
            "RSA-OAEP",
            "ECDH-ES+A128KW",
            "RSA-OAEP-256",
            "A128KW",
            "A256KW",
            "ECDH-ES",
            "dir",
            "A192KW",
          ],
          "supportedTokenIntrospectionResponseEncryptionEnc": [
            "A256GCM",
            "A192GCM",
            "A128GCM",
            "A128CBC-HS256",
            "A192CBC-HS384",
            "A256CBC-HS512",
          ],
          "supportedTokenIntrospectionResponseSigningAlgorithms": [
            "PS384",
            "RS384",
            "EdDSA",
            "ES384",
            "HS256",
            "HS512",
            "ES256",
            "RS256",
            "HS384",
            "ES512",
            "PS256",
            "PS512",
            "RS512",
          ],
          "supportedUserInfoEncryptionAlgorithms": [
            "ECDH-ES+A256KW",
            "ECDH-ES+A192KW",
            "RSA-OAEP",
            "ECDH-ES+A128KW",
            "RSA-OAEP-256",
            "A128KW",
            "A256KW",
            "ECDH-ES",
            "dir",
            "A192KW",
          ],
          "supportedUserInfoEncryptionEnc": [
            "A256GCM",
            "A192GCM",
            "A128GCM",
            "A128CBC-HS256",
            "A192CBC-HS384",
            "A256CBC-HS512",
          ],
          "supportedUserInfoSigningAlgorithms": [
            "ES384",
            "HS256",
            "HS512",
            "ES256",
            "RS256",
            "HS384",
            "ES512",
          ],
          "useForceAuthnForPromptLogin": false,
        },
        "cibaConfig": {
          "cibaAuthReqIdLifetime": 600,
          "cibaMinimumPollingInterval": 2,
          "supportedCibaSigningAlgorithms": [
            "ES256",
            "PS256",
          ],
        },
        "clientDynamicRegistrationConfig": {
          "allowDynamicRegistration": false,
          "dynamicClientRegistrationScope": "dynamic_client_registration",
          "dynamicClientRegistrationSoftwareStatementRequired": false,
          "generateRegistrationAccessTokens": true,
          "requiredSoftwareStatementAttestedAttributes": [
            "redirect_uris",
          ],
        },
        "consent": {
          "clientsCanSkipConsent": true,
          "enableRemoteConsent": false,
          "supportedRcsRequestEncryptionAlgorithms": [
            "ECDH-ES+A256KW",
            "ECDH-ES+A192KW",
            "RSA-OAEP",
            "ECDH-ES+A128KW",
            "RSA-OAEP-256",
            "A128KW",
            "A256KW",
            "ECDH-ES",
            "dir",
            "A192KW",
          ],
          "supportedRcsRequestEncryptionMethods": [
            "A256GCM",
            "A192GCM",
            "A128GCM",
            "A128CBC-HS256",
            "A192CBC-HS384",
            "A256CBC-HS512",
          ],
          "supportedRcsRequestSigningAlgorithms": [
            "PS384",
            "ES384",
            "RS384",
            "HS256",
            "HS512",
            "ES256",
            "RS256",
            "HS384",
            "ES512",
            "PS256",
            "PS512",
            "RS512",
          ],
          "supportedRcsResponseEncryptionAlgorithms": [
            "ECDH-ES+A256KW",
            "ECDH-ES+A192KW",
            "ECDH-ES+A128KW",
            "RSA-OAEP",
            "RSA-OAEP-256",
            "A128KW",
            "A256KW",
            "ECDH-ES",
            "dir",
            "A192KW",
          ],
          "supportedRcsResponseEncryptionMethods": [
            "A256GCM",
            "A192GCM",
            "A128GCM",
            "A128CBC-HS256",
            "A192CBC-HS384",
            "A256CBC-HS512",
          ],
          "supportedRcsResponseSigningAlgorithms": [
            "PS384",
            "ES384",
            "RS384",
            "HS256",
            "HS512",
            "ES256",
            "RS256",
            "HS384",
            "ES512",
            "PS256",
            "PS512",
            "RS512",
          ],
        },
        "coreOAuth2Config": {
          "accessTokenLifetime": 3600,
          "accessTokenMayActScript": "[Empty]",
          "codeLifetime": 120,
          "issueRefreshToken": true,
          "issueRefreshTokenOnRefreshedToken": true,
          "macaroonTokensEnabled": false,
          "oidcMayActScript": "[Empty]",
          "refreshTokenLifetime": 604800,
          "scopesPolicySet": "oauth2Scopes",
          "statelessTokensEnabled": true,
          "usePolicyEngineForScope": false,
        },
        "coreOIDCConfig": {
          "jwtTokenLifetime": 3600,
          "oidcDiscoveryEndpointEnabled": true,
          "overrideableOIDCClaims": [],
          "supportedClaims": [],
          "supportedIDTokenEncryptionAlgorithms": [
            "ECDH-ES+A256KW",
            "ECDH-ES+A192KW",
            "RSA-OAEP",
            "ECDH-ES+A128KW",
            "RSA-OAEP-256",
            "A128KW",
            "A256KW",
            "ECDH-ES",
            "dir",
            "A192KW",
          ],
          "supportedIDTokenEncryptionMethods": [
            "A256GCM",
            "A192GCM",
            "A128GCM",
            "A128CBC-HS256",
            "A192CBC-HS384",
            "A256CBC-HS512",
          ],
          "supportedIDTokenSigningAlgorithms": [
            "PS384",
            "ES384",
            "RS384",
            "HS256",
            "HS512",
            "ES256",
            "RS256",
            "HS384",
            "ES512",
            "PS256",
            "PS512",
            "RS512",
          ],
        },
        "deviceCodeConfig": {
          "deviceCodeLifetime": 300,
          "devicePollInterval": 5,
          "deviceUserCodeCharacterSet": "234567ACDEFGHJKLMNPQRSTWXYZabcdefhijkmnopqrstwxyz",
          "deviceUserCodeLength": 8,
        },
        "pluginsConfig": {
          "accessTokenEnricherClass": "org.forgerock.openam.oauth2.OpenAMScopeValidator",
          "accessTokenModificationPluginType": "SCRIPTED",
          "accessTokenModificationScript": "39c08084-1238-43e8-857f-2e11005eac49",
          "accessTokenModifierClass": "org.forgerock.openam.oauth2.OpenAMScopeValidator",
          "authorizeEndpointDataProviderClass": "org.forgerock.openam.oauth2.OpenAMScopeValidator",
          "authorizeEndpointDataProviderPluginType": "JAVA",
          "authorizeEndpointDataProviderScript": "[Empty]",
          "evaluateScopeClass": "org.forgerock.openam.oauth2.OpenAMScopeValidator",
          "evaluateScopePluginType": "JAVA",
          "evaluateScopeScript": "[Empty]",
          "oidcClaimsClass": "org.forgerock.openam.oauth2.OpenAMScopeValidator",
          "oidcClaimsPluginType": "SCRIPTED",
          "oidcClaimsScript": "cf3515f0-8278-4ee3-a530-1bad7424c416",
          "userCodeGeneratorClass": "org.forgerock.oauth2.core.plugins.registry.DefaultUserCodeGenerator",
          "validateScopeClass": "org.forgerock.openam.oauth2.OpenAMScopeValidator",
          "validateScopePluginType": "JAVA",
          "validateScopeScript": "[Empty]",
        },
      },
      "_rev": "1434622129",
      "_type": {
        "_id": "OAuth2Client",
        "collection": true,
        "name": "OAuth2 Clients",
      },
      "advancedOAuth2ClientConfig": {
        "clientUri": [],
        "contacts": [],
        "customProperties": [],
        "descriptions": [],
        "grantTypes": [
          "authorization_code",
          "client_credentials",
          "refresh_token",
        ],
        "isConsentImplied": true,
        "javascriptOrigins": [
          "https://ig.mytestrun.com",
          "https://ig.mytestrun.com:443",
        ],
        "logoUri": [],
        "mixUpMitigation": false,
        "name": [],
        "policyUri": [],
        "refreshTokenGracePeriod": 0,
        "requestUris": [],
        "require_pushed_authorization_requests": false,
        "responseTypes": [
          "code",
          "token",
          "id_token",
        ],
        "sectorIdentifierUri": null,
        "softwareIdentity": null,
        "softwareVersion": null,
        "subjectType": "public",
        "tokenEndpointAuthMethod": "client_secret_basic",
        "tokenExchangeAuthLevel": 0,
        "tosURI": [],
        "updateAccessToken": null,
      },
      "coreOAuth2ClientConfig": {
        "accessTokenLifetime": 3600,
        "authorizationCodeLifetime": 120,
        "clientName": [],
        "clientType": "Confidential",
        "defaultScopes": [],
        "loopbackInterfaceRedirection": false,
        "redirectionUris": [
          "https://ig.mytestrun.com/home/oidc/callback",
        ],
        "refreshTokenLifetime": 604800,
        "scopes": [
          "openid",
          "profile",
          "email",
          "secctx",
        ],
        "status": "Active",
      },
      "coreOpenIDClientConfig": {
        "backchannel_logout_session_required": false,
        "backchannel_logout_uri": null,
        "claims": [],
        "clientSessionUri": null,
        "defaultAcrValues": [],
        "defaultMaxAge": 600,
        "defaultMaxAgeEnabled": false,
        "jwtTokenLifetime": 3600,
        "postLogoutRedirectUri": [],
      },
      "coreUmaClientConfig": {
        "claimsRedirectionUris": [],
      },
      "overrideOAuth2ClientConfig": {
        "accessTokenMayActScript": "[Empty]",
        "accessTokenModificationPluginType": "PROVIDER",
        "accessTokenModificationScript": "[Empty]",
        "authorizeEndpointDataProviderClass": "org.forgerock.oauth2.core.plugins.registry.DefaultEndpointDataProvider",
        "authorizeEndpointDataProviderPluginType": "PROVIDER",
        "authorizeEndpointDataProviderScript": "[Empty]",
        "clientsCanSkipConsent": false,
        "enableRemoteConsent": false,
        "evaluateScopeClass": "org.forgerock.oauth2.core.plugins.registry.DefaultScopeEvaluator",
        "evaluateScopePluginType": "PROVIDER",
        "evaluateScopeScript": "[Empty]",
        "issueRefreshToken": true,
        "issueRefreshTokenOnRefreshedToken": true,
        "oidcClaimsPluginType": "PROVIDER",
        "oidcClaimsScript": "[Empty]",
        "oidcMayActScript": "[Empty]",
        "overrideableOIDCClaims": [],
        "providerOverridesEnabled": false,
        "remoteConsentServiceId": null,
        "scopesPolicySet": "oauth2Scopes",
        "statelessTokensEnabled": false,
        "tokenEncryptionEnabled": false,
        "usePolicyEngineForScope": false,
        "validateScopeClass": "org.forgerock.oauth2.core.plugins.registry.DefaultScopeValidator",
        "validateScopePluginType": "PROVIDER",
        "validateScopeScript": "[Empty]",
      },
      "signEncOAuth2ClientConfig": {
        "authorizationResponseEncryptionAlgorithm": null,
        "authorizationResponseEncryptionMethod": null,
        "authorizationResponseSigningAlgorithm": "RS256",
        "clientJwtPublicKey": null,
        "idTokenEncryptionAlgorithm": "RSA-OAEP-256",
        "idTokenEncryptionEnabled": false,
        "idTokenEncryptionMethod": "A128CBC-HS256",
        "idTokenPublicEncryptionKey": null,
        "idTokenSignedResponseAlg": "RS256",
        "jwkSet": null,
        "jwkStoreCacheMissCacheTime": 60000,
        "jwksCacheTimeout": 3600000,
        "jwksUri": null,
        "mTLSCertificateBoundAccessTokens": false,
        "mTLSSubjectDN": null,
        "mTLSTrustedCert": null,
        "publicKeyLocation": "jwks_uri",
        "requestParameterEncryptedAlg": null,
        "requestParameterEncryptedEncryptionAlgorithm": "A128CBC-HS256",
        "requestParameterSignedAlg": null,
        "tokenEndpointAuthSigningAlgorithm": "RS256",
        "tokenIntrospectionEncryptedResponseAlg": "RSA-OAEP-256",
        "tokenIntrospectionEncryptedResponseEncryptionAlgorithm": "A128CBC-HS256",
        "tokenIntrospectionResponseFormat": "JSON",
        "tokenIntrospectionSignedResponseAlg": "RS256",
        "userinfoEncryptedResponseAlg": null,
        "userinfoEncryptedResponseEncryptionAlgorithm": "A128CBC-HS256",
        "userinfoResponseFormat": "JSON",
        "userinfoSignedResponseAlg": null,
      },
    },
  },
  "script": {},
}
`;

exports[`OAuth2ClientOps getOAuth2Client() 1: Get oauth2 client FrodoTestOAuth2Client1 1`] = `
{
  "_id": "FrodoTestOAuth2Client1",
  "_rev": "-124322343",
  "_type": {
    "_id": "OAuth2Client",
    "collection": true,
    "name": "OAuth2 Clients",
  },
  "advancedOAuth2ClientConfig": {
    "clientUri": {
      "inherited": false,
      "value": [],
    },
    "contacts": {
      "inherited": false,
      "value": [],
    },
    "customProperties": {
      "inherited": false,
      "value": [],
    },
    "descriptions": {
      "inherited": false,
      "value": [],
    },
    "grantTypes": {
      "inherited": false,
      "value": [
        "authorization_code",
        "refresh_token",
      ],
    },
    "isConsentImplied": {
      "inherited": false,
      "value": true,
    },
    "javascriptOrigins": {
      "inherited": false,
      "value": [],
    },
    "logoUri": {
      "inherited": false,
      "value": [],
    },
    "mixUpMitigation": {
      "inherited": false,
      "value": false,
    },
    "name": {
      "inherited": false,
      "value": [],
    },
    "policyUri": {
      "inherited": false,
      "value": [],
    },
    "refreshTokenGracePeriod": {
      "inherited": false,
      "value": 0,
    },
    "requestUris": {
      "inherited": false,
      "value": [],
    },
    "require_pushed_authorization_requests": {
      "inherited": false,
      "value": false,
    },
    "responseTypes": {
      "inherited": false,
      "value": [
        "code",
        "token",
        "id_token",
      ],
    },
    "sectorIdentifierUri": {
      "inherited": false,
    },
    "softwareIdentity": {
      "inherited": false,
    },
    "softwareVersion": {
      "inherited": false,
    },
    "subjectType": {
      "inherited": false,
      "value": "public",
    },
    "tokenEndpointAuthMethod": {
      "inherited": false,
      "value": "client_secret_basic",
    },
    "tokenExchangeAuthLevel": {
      "inherited": false,
      "value": 0,
    },
    "tosURI": {
      "inherited": false,
      "value": [],
    },
    "updateAccessToken": {
      "inherited": false,
    },
  },
  "coreOAuth2ClientConfig": {
    "accessTokenLifetime": {
      "inherited": false,
      "value": 3600,
    },
    "authorizationCodeLifetime": {
      "inherited": false,
      "value": 120,
    },
    "clientName": {
      "inherited": false,
      "value": [],
    },
    "clientType": {
      "inherited": false,
      "value": "Public",
    },
    "defaultScopes": {
      "inherited": false,
      "value": [],
    },
    "loopbackInterfaceRedirection": {
      "inherited": false,
      "value": false,
    },
    "redirectionUris": {
      "inherited": false,
      "value": [],
    },
    "refreshTokenLifetime": {
      "inherited": false,
      "value": 604800,
    },
    "scopes": {
      "inherited": false,
      "value": [
        "openid",
      ],
    },
    "status": {
      "inherited": false,
      "value": "Active",
    },
  },
  "coreOpenIDClientConfig": {
    "backchannel_logout_session_required": {
      "inherited": false,
      "value": false,
    },
    "backchannel_logout_uri": {
      "inherited": false,
    },
    "claims": {
      "inherited": false,
      "value": [],
    },
    "clientSessionUri": {
      "inherited": false,
    },
    "defaultAcrValues": {
      "inherited": false,
      "value": [],
    },
    "defaultMaxAge": {
      "inherited": false,
      "value": 600,
    },
    "defaultMaxAgeEnabled": {
      "inherited": false,
      "value": false,
    },
    "jwtTokenLifetime": {
      "inherited": false,
      "value": 3600,
    },
    "postLogoutRedirectUri": {
      "inherited": false,
      "value": [],
    },
  },
  "coreUmaClientConfig": {
    "claimsRedirectionUris": {
      "inherited": false,
      "value": [],
    },
  },
  "overrideOAuth2ClientConfig": {
    "accessTokenMayActScript": "[Empty]",
    "accessTokenModificationPluginType": "PROVIDER",
    "accessTokenModificationScript": "[Empty]",
    "authorizeEndpointDataProviderClass": "org.forgerock.oauth2.core.plugins.registry.DefaultEndpointDataProvider",
    "authorizeEndpointDataProviderPluginType": "PROVIDER",
    "authorizeEndpointDataProviderScript": "[Empty]",
    "clientsCanSkipConsent": false,
    "enableRemoteConsent": false,
    "evaluateScopeClass": "org.forgerock.oauth2.core.plugins.registry.DefaultScopeEvaluator",
    "evaluateScopePluginType": "PROVIDER",
    "evaluateScopeScript": "[Empty]",
    "issueRefreshToken": true,
    "issueRefreshTokenOnRefreshedToken": true,
    "oidcClaimsPluginType": "PROVIDER",
    "oidcClaimsScript": "[Empty]",
    "oidcMayActScript": "[Empty]",
    "overrideableOIDCClaims": [],
    "providerOverridesEnabled": false,
    "remoteConsentServiceId": null,
    "scopesPolicySet": "oauth2Scopes",
    "statelessTokensEnabled": false,
    "tokenEncryptionEnabled": false,
    "usePolicyEngineForScope": false,
    "validateScopeClass": "org.forgerock.oauth2.core.plugins.registry.DefaultScopeValidator",
    "validateScopePluginType": "PROVIDER",
    "validateScopeScript": "[Empty]",
  },
  "signEncOAuth2ClientConfig": {
    "authorizationResponseEncryptionAlgorithm": {
      "inherited": false,
    },
    "authorizationResponseEncryptionMethod": {
      "inherited": false,
    },
    "authorizationResponseSigningAlgorithm": {
      "inherited": false,
      "value": "RS256",
    },
    "clientJwtPublicKey": {
      "inherited": false,
    },
    "idTokenEncryptionAlgorithm": {
      "inherited": false,
      "value": "RSA-OAEP-256",
    },
    "idTokenEncryptionEnabled": {
      "inherited": false,
      "value": false,
    },
    "idTokenEncryptionMethod": {
      "inherited": false,
      "value": "A128CBC-HS256",
    },
    "idTokenPublicEncryptionKey": {
      "inherited": false,
    },
    "idTokenSignedResponseAlg": {
      "inherited": false,
      "value": "RS256",
    },
    "jwkSet": {
      "inherited": false,
    },
    "jwkStoreCacheMissCacheTime": {
      "inherited": false,
      "value": 60000,
    },
    "jwksCacheTimeout": {
      "inherited": false,
      "value": 3600000,
    },
    "jwksUri": {
      "inherited": false,
    },
    "mTLSCertificateBoundAccessTokens": {
      "inherited": false,
      "value": false,
    },
    "mTLSSubjectDN": {
      "inherited": false,
    },
    "mTLSTrustedCert": {
      "inherited": false,
    },
    "publicKeyLocation": {
      "inherited": false,
      "value": "jwks_uri",
    },
    "requestParameterEncryptedAlg": {
      "inherited": false,
    },
    "requestParameterEncryptedEncryptionAlgorithm": {
      "inherited": false,
      "value": "A128CBC-HS256",
    },
    "requestParameterSignedAlg": {
      "inherited": false,
    },
    "tokenEndpointAuthSigningAlgorithm": {
      "inherited": false,
      "value": "RS256",
    },
    "tokenIntrospectionEncryptedResponseAlg": {
      "inherited": false,
      "value": "RSA-OAEP-256",
    },
    "tokenIntrospectionEncryptedResponseEncryptionAlgorithm": {
      "inherited": false,
      "value": "A128CBC-HS256",
    },
    "tokenIntrospectionResponseFormat": {
      "inherited": false,
      "value": "JSON",
    },
    "tokenIntrospectionSignedResponseAlg": {
      "inherited": false,
      "value": "RS256",
    },
    "userinfoEncryptedResponseAlg": {
      "inherited": false,
    },
    "userinfoEncryptedResponseEncryptionAlgorithm": {
      "inherited": false,
      "value": "A128CBC-HS256",
    },
    "userinfoResponseFormat": {
      "inherited": false,
      "value": "JSON",
    },
    "userinfoSignedResponseAlg": {
      "inherited": false,
    },
  },
}
`;

exports[`OAuth2ClientOps getOAuth2Clients() 1: Get oauth2 clients 1`] = `
[
  {
    "_id": "ig-oidc-app",
    "_rev": "1434622129",
    "_type": {
      "_id": "OAuth2Client",
      "collection": true,
      "name": "OAuth2 Clients",
    },
    "advancedOAuth2ClientConfig": {
      "clientUri": [],
      "contacts": [],
      "customProperties": [],
      "descriptions": [],
      "grantTypes": [
        "authorization_code",
        "client_credentials",
        "refresh_token",
      ],
      "isConsentImplied": true,
      "javascriptOrigins": [
        "https://ig.mytestrun.com",
        "https://ig.mytestrun.com:443",
      ],
      "logoUri": [],
      "mixUpMitigation": false,
      "name": [],
      "policyUri": [],
      "refreshTokenGracePeriod": 0,
      "requestUris": [],
      "require_pushed_authorization_requests": false,
      "responseTypes": [
        "code",
        "token",
        "id_token",
      ],
      "sectorIdentifierUri": null,
      "softwareIdentity": null,
      "softwareVersion": null,
      "subjectType": "public",
      "tokenEndpointAuthMethod": "client_secret_basic",
      "tokenExchangeAuthLevel": 0,
      "tosURI": [],
      "updateAccessToken": null,
    },
    "coreOAuth2ClientConfig": {
      "accessTokenLifetime": 3600,
      "authorizationCodeLifetime": 120,
      "clientName": [],
      "clientType": "Confidential",
      "defaultScopes": [],
      "loopbackInterfaceRedirection": false,
      "redirectionUris": [
        "https://ig.mytestrun.com/home/oidc/callback",
      ],
      "refreshTokenLifetime": 604800,
      "scopes": [
        "openid",
        "profile",
        "email",
        "secctx",
      ],
      "status": "Active",
    },
    "coreOpenIDClientConfig": {
      "backchannel_logout_session_required": false,
      "backchannel_logout_uri": null,
      "claims": [],
      "clientSessionUri": null,
      "defaultAcrValues": [],
      "defaultMaxAge": 600,
      "defaultMaxAgeEnabled": false,
      "jwtTokenLifetime": 3600,
      "postLogoutRedirectUri": [],
    },
    "coreUmaClientConfig": {
      "claimsRedirectionUris": [],
    },
    "overrideOAuth2ClientConfig": {
      "accessTokenMayActScript": "[Empty]",
      "accessTokenModificationPluginType": "PROVIDER",
      "accessTokenModificationScript": "[Empty]",
      "authorizeEndpointDataProviderClass": "org.forgerock.oauth2.core.plugins.registry.DefaultEndpointDataProvider",
      "authorizeEndpointDataProviderPluginType": "PROVIDER",
      "authorizeEndpointDataProviderScript": "[Empty]",
      "clientsCanSkipConsent": false,
      "enableRemoteConsent": false,
      "evaluateScopeClass": "org.forgerock.oauth2.core.plugins.registry.DefaultScopeEvaluator",
      "evaluateScopePluginType": "PROVIDER",
      "evaluateScopeScript": "[Empty]",
      "issueRefreshToken": true,
      "issueRefreshTokenOnRefreshedToken": true,
      "oidcClaimsPluginType": "PROVIDER",
      "oidcClaimsScript": "[Empty]",
      "oidcMayActScript": "[Empty]",
      "overrideableOIDCClaims": [],
      "providerOverridesEnabled": false,
      "remoteConsentServiceId": null,
      "scopesPolicySet": "oauth2Scopes",
      "statelessTokensEnabled": false,
      "tokenEncryptionEnabled": false,
      "usePolicyEngineForScope": false,
      "validateScopeClass": "org.forgerock.oauth2.core.plugins.registry.DefaultScopeValidator",
      "validateScopePluginType": "PROVIDER",
      "validateScopeScript": "[Empty]",
    },
    "signEncOAuth2ClientConfig": {
      "authorizationResponseEncryptionAlgorithm": null,
      "authorizationResponseEncryptionMethod": null,
      "authorizationResponseSigningAlgorithm": "RS256",
      "clientJwtPublicKey": null,
      "idTokenEncryptionAlgorithm": "RSA-OAEP-256",
      "idTokenEncryptionEnabled": false,
      "idTokenEncryptionMethod": "A128CBC-HS256",
      "idTokenPublicEncryptionKey": null,
      "idTokenSignedResponseAlg": "RS256",
      "jwkSet": null,
      "jwkStoreCacheMissCacheTime": 60000,
      "jwksCacheTimeout": 3600000,
      "jwksUri": null,
      "mTLSCertificateBoundAccessTokens": false,
      "mTLSSubjectDN": null,
      "mTLSTrustedCert": null,
      "publicKeyLocation": "jwks_uri",
      "requestParameterEncryptedAlg": null,
      "requestParameterEncryptedEncryptionAlgorithm": "A128CBC-HS256",
      "requestParameterSignedAlg": null,
      "tokenEndpointAuthSigningAlgorithm": "RS256",
      "tokenIntrospectionEncryptedResponseAlg": "RSA-OAEP-256",
      "tokenIntrospectionEncryptedResponseEncryptionAlgorithm": "A128CBC-HS256",
      "tokenIntrospectionResponseFormat": "JSON",
      "tokenIntrospectionSignedResponseAlg": "RS256",
      "userinfoEncryptedResponseAlg": null,
      "userinfoEncryptedResponseEncryptionAlgorithm": "A128CBC-HS256",
      "userinfoResponseFormat": "JSON",
      "userinfoSignedResponseAlg": null,
    },
  },
  {
    "_id": "23281ea7-739b-4fd1-b953-eaae73a2b497",
    "_rev": "609033111",
    "_type": {
      "_id": "OAuth2Client",
      "collection": true,
      "name": "OAuth2 Clients",
    },
    "advancedOAuth2ClientConfig": {
      "clientUri": [],
      "contacts": [],
      "customProperties": [],
      "descriptions": [
        "Created by Frodo on 8/11/2022, 5:31:09 PM",
      ],
      "grantTypes": [
        "client_credentials",
      ],
      "isConsentImplied": true,
      "javascriptOrigins": [],
      "logoUri": [],
      "mixUpMitigation": false,
      "name": [],
      "policyUri": [],
      "refreshTokenGracePeriod": 0,
      "requestUris": [],
      "require_pushed_authorization_requests": false,
      "responseTypes": [
        "token",
      ],
      "sectorIdentifierUri": null,
      "softwareIdentity": null,
      "softwareVersion": null,
      "subjectType": "Public",
      "tokenEndpointAuthMethod": "client_secret_basic",
      "tokenExchangeAuthLevel": 0,
      "tosURI": [],
      "updateAccessToken": null,
    },
    "coreOAuth2ClientConfig": {
      "accessTokenLifetime": 3600,
      "agentgroup": null,
      "authorizationCodeLifetime": 120,
      "clientName": [
        "23281ea7-739b-4fd1-b953-eaae73a2b497",
      ],
      "clientType": "Confidential",
      "defaultScopes": [
        "fr:idm:*",
      ],
      "loopbackInterfaceRedirection": false,
      "redirectionUris": [],
      "refreshTokenLifetime": 604800,
      "scopes": [
        "fr:idm:*",
        "fr:idc:esv:*",
        "dynamic_client_registration",
      ],
      "status": "Active",
      "userpassword": null,
    },
    "coreOpenIDClientConfig": {
      "backchannel_logout_session_required": false,
      "backchannel_logout_uri": null,
      "claims": [],
      "clientSessionUri": null,
      "defaultAcrValues": [],
      "defaultMaxAge": 600,
      "defaultMaxAgeEnabled": false,
      "jwtTokenLifetime": 3600,
      "postLogoutRedirectUri": [],
    },
    "coreUmaClientConfig": {
      "claimsRedirectionUris": [],
    },
    "overrideOAuth2ClientConfig": {
      "accessTokenMayActScript": "[Empty]",
      "accessTokenModificationPluginType": "PROVIDER",
      "accessTokenModificationScript": "[Empty]",
      "accessTokenModifierClass": null,
      "authorizeEndpointDataProviderClass": "org.forgerock.oauth2.core.plugins.registry.DefaultEndpointDataProvider",
      "authorizeEndpointDataProviderPluginType": "PROVIDER",
      "authorizeEndpointDataProviderScript": "[Empty]",
      "clientsCanSkipConsent": false,
      "customLoginUrlTemplate": null,
      "enableRemoteConsent": false,
      "evaluateScopeClass": "org.forgerock.oauth2.core.plugins.registry.DefaultScopeEvaluator",
      "evaluateScopePluginType": "PROVIDER",
      "evaluateScopeScript": "[Empty]",
      "issueRefreshToken": true,
      "issueRefreshTokenOnRefreshedToken": true,
      "oidcClaimsClass": null,
      "oidcClaimsPluginType": "PROVIDER",
      "oidcClaimsScript": "[Empty]",
      "oidcMayActScript": "[Empty]",
      "overrideableOIDCClaims": [],
      "providerOverridesEnabled": false,
      "remoteConsentServiceId": null,
      "statelessTokensEnabled": false,
      "tokenEncryptionEnabled": false,
      "usePolicyEngineForScope": false,
      "validateScopeClass": "org.forgerock.oauth2.core.plugins.registry.DefaultScopeValidator",
      "validateScopePluginType": "PROVIDER",
      "validateScopeScript": "[Empty]",
    },
    "signEncOAuth2ClientConfig": {
      "authorizationResponseEncryptionAlgorithm": null,
      "authorizationResponseEncryptionMethod": null,
      "authorizationResponseSigningAlgorithm": "RS256",
      "clientJwtPublicKey": null,
      "idTokenEncryptionAlgorithm": "RSA-OAEP-256",
      "idTokenEncryptionEnabled": false,
      "idTokenEncryptionMethod": "A128CBC-HS256",
      "idTokenPublicEncryptionKey": null,
      "idTokenSignedResponseAlg": "RS256",
      "jwkSet": null,
      "jwkStoreCacheMissCacheTime": 60000,
      "jwksCacheTimeout": 3600000,
      "jwksUri": null,
      "mTLSCertificateBoundAccessTokens": false,
      "mTLSSubjectDN": null,
      "mTLSTrustedCert": null,
      "publicKeyLocation": "jwks_uri",
      "requestParameterEncryptedAlg": null,
      "requestParameterEncryptedEncryptionAlgorithm": "A128CBC-HS256",
      "requestParameterSignedAlg": null,
      "tokenEndpointAuthSigningAlgorithm": "RS256",
      "tokenIntrospectionEncryptedResponseAlg": "RSA-OAEP-256",
      "tokenIntrospectionEncryptedResponseEncryptionAlgorithm": "A128CBC-HS256",
      "tokenIntrospectionResponseFormat": "JSON",
      "tokenIntrospectionSignedResponseAlg": "RS256",
      "userinfoEncryptedResponseAlg": null,
      "userinfoEncryptedResponseEncryptionAlgorithm": "A128CBC-HS256",
      "userinfoResponseFormat": "JSON",
      "userinfoSignedResponseAlg": null,
    },
  },
  {
    "_id": "FrodoTestOAuth2Client2",
    "_rev": "-1777552368",
    "_type": {
      "_id": "OAuth2Client",
      "collection": true,
      "name": "OAuth2 Clients",
    },
    "advancedOAuth2ClientConfig": {
      "clientUri": [],
      "contacts": [],
      "customProperties": [],
      "descriptions": [],
      "grantTypes": [
        "authorization_code",
        "refresh_token",
      ],
      "isConsentImplied": true,
      "javascriptOrigins": [],
      "logoUri": [],
      "mixUpMitigation": false,
      "name": [],
      "policyUri": [],
      "refreshTokenGracePeriod": 0,
      "requestUris": [],
      "require_pushed_authorization_requests": false,
      "responseTypes": [
        "code",
        "token",
        "id_token",
      ],
      "sectorIdentifierUri": null,
      "softwareIdentity": null,
      "softwareVersion": null,
      "subjectType": "public",
      "tokenEndpointAuthMethod": "client_secret_basic",
      "tokenExchangeAuthLevel": 0,
      "tosURI": [],
      "updateAccessToken": null,
    },
    "coreOAuth2ClientConfig": {
      "accessTokenLifetime": 3600,
      "agentgroup": null,
      "authorizationCodeLifetime": 120,
      "clientName": [],
      "clientType": "Public",
      "defaultScopes": [],
      "loopbackInterfaceRedirection": false,
      "redirectionUris": [],
      "refreshTokenLifetime": 604800,
      "scopes": [
        "openid",
      ],
      "status": "Active",
    },
    "coreOpenIDClientConfig": {
      "backchannel_logout_session_required": false,
      "backchannel_logout_uri": null,
      "claims": [],
      "clientSessionUri": null,
      "defaultAcrValues": [],
      "defaultMaxAge": 600,
      "defaultMaxAgeEnabled": false,
      "jwtTokenLifetime": 3600,
      "postLogoutRedirectUri": [],
    },
    "coreUmaClientConfig": {
      "claimsRedirectionUris": [],
    },
    "overrideOAuth2ClientConfig": {
      "accessTokenMayActScript": "[Empty]",
      "accessTokenModificationPluginType": "PROVIDER",
      "accessTokenModificationScript": "[Empty]",
      "accessTokenModifierClass": null,
      "authorizeEndpointDataProviderClass": "org.forgerock.oauth2.core.plugins.registry.DefaultEndpointDataProvider",
      "authorizeEndpointDataProviderPluginType": "PROVIDER",
      "authorizeEndpointDataProviderScript": "[Empty]",
      "clientsCanSkipConsent": false,
      "customLoginUrlTemplate": null,
      "enableRemoteConsent": false,
      "evaluateScopeClass": "org.forgerock.oauth2.core.plugins.registry.DefaultScopeEvaluator",
      "evaluateScopePluginType": "PROVIDER",
      "evaluateScopeScript": "[Empty]",
      "issueRefreshToken": true,
      "issueRefreshTokenOnRefreshedToken": true,
      "oidcClaimsClass": null,
      "oidcClaimsPluginType": "PROVIDER",
      "oidcClaimsScript": "[Empty]",
      "oidcMayActScript": "[Empty]",
      "overrideableOIDCClaims": [],
      "providerOverridesEnabled": false,
      "remoteConsentServiceId": null,
      "scopesPolicySet": "oauth2Scopes",
      "statelessTokensEnabled": false,
      "tokenEncryptionEnabled": false,
      "usePolicyEngineForScope": false,
      "validateScopeClass": "org.forgerock.oauth2.core.plugins.registry.DefaultScopeValidator",
      "validateScopePluginType": "PROVIDER",
      "validateScopeScript": "[Empty]",
    },
    "signEncOAuth2ClientConfig": {
      "authorizationResponseEncryptionAlgorithm": null,
      "authorizationResponseEncryptionMethod": null,
      "authorizationResponseSigningAlgorithm": "RS256",
      "clientJwtPublicKey": null,
      "idTokenEncryptionAlgorithm": "RSA-OAEP-256",
      "idTokenEncryptionEnabled": false,
      "idTokenEncryptionMethod": "A128CBC-HS256",
      "idTokenPublicEncryptionKey": null,
      "idTokenSignedResponseAlg": "RS256",
      "jwkSet": null,
      "jwkStoreCacheMissCacheTime": 60000,
      "jwksCacheTimeout": 3600000,
      "jwksUri": null,
      "mTLSCertificateBoundAccessTokens": false,
      "mTLSSubjectDN": null,
      "mTLSTrustedCert": null,
      "publicKeyLocation": "jwks_uri",
      "requestParameterEncryptedAlg": null,
      "requestParameterEncryptedEncryptionAlgorithm": "A128CBC-HS256",
      "requestParameterSignedAlg": null,
      "tokenEndpointAuthSigningAlgorithm": "RS256",
      "tokenIntrospectionEncryptedResponseAlg": "RSA-OAEP-256",
      "tokenIntrospectionEncryptedResponseEncryptionAlgorithm": "A128CBC-HS256",
      "tokenIntrospectionResponseFormat": "JSON",
      "tokenIntrospectionSignedResponseAlg": "RS256",
      "userinfoEncryptedResponseAlg": null,
      "userinfoEncryptedResponseEncryptionAlgorithm": "A128CBC-HS256",
      "userinfoResponseFormat": "JSON",
      "userinfoSignedResponseAlg": null,
    },
  },
  {
    "_id": "RCSClient",
    "_rev": "-318736287",
    "_type": {
      "_id": "OAuth2Client",
      "collection": true,
      "name": "OAuth2 Clients",
    },
    "advancedOAuth2ClientConfig": {
      "clientUri": [],
      "contacts": [],
      "descriptions": [],
      "grantTypes": [
        "client_credentials",
      ],
      "isConsentImplied": false,
      "javascriptOrigins": [],
      "logoUri": [],
      "mixUpMitigation": false,
      "name": [],
      "policyUri": [],
      "requestUris": [],
      "responseTypes": [
        "code",
        "token",
        "id_token",
        "code token",
        "token id_token",
        "code id_token",
        "code token id_token",
        "device_code",
        "device_code id_token",
      ],
      "sectorIdentifierUri": null,
      "subjectType": "Public",
      "tokenEndpointAuthMethod": "client_secret_basic",
      "updateAccessToken": null,
    },
    "coreOAuth2ClientConfig": {
      "accessTokenLifetime": 0,
      "agentgroup": null,
      "authorizationCodeLifetime": 0,
      "clientName": [],
      "clientType": "Confidential",
      "defaultScopes": [],
      "loopbackInterfaceRedirection": false,
      "redirectionUris": [],
      "refreshTokenLifetime": 0,
      "scopes": [
        "fr:idm:*",
      ],
      "status": "Active",
      "userpassword": null,
    },
    "coreOpenIDClientConfig": {
      "claims": [],
      "clientSessionUri": null,
      "defaultAcrValues": [],
      "defaultMaxAge": 600,
      "defaultMaxAgeEnabled": false,
      "jwtTokenLifetime": 0,
      "postLogoutRedirectUri": [],
    },
    "coreUmaClientConfig": {
      "claimsRedirectionUris": [],
    },
    "overrideOAuth2ClientConfig": {
      "accessTokenModificationPluginType": "SCRIPTED",
      "accessTokenModificationScript": "c234ba0b-58a1-4cfd-9567-09edde980745",
      "clientsCanSkipConsent": true,
      "oidcClaimsPluginType": "SCRIPTED",
      "oidcClaimsScript": "1f389a3d-21cf-417c-a6d3-42ea620071f0",
      "providerOverridesEnabled": true,
      "statelessTokensEnabled": true,
    },
    "signEncOAuth2ClientConfig": {
      "clientJwtPublicKey": null,
      "idTokenEncryptionAlgorithm": "RSA-OAEP-256",
      "idTokenEncryptionEnabled": false,
      "idTokenEncryptionMethod": "A128CBC-HS256",
      "idTokenPublicEncryptionKey": null,
      "idTokenSignedResponseAlg": "RS256",
      "jwkSet": null,
      "jwkStoreCacheMissCacheTime": 60000,
      "jwksCacheTimeout": 3600000,
      "jwksUri": "http://am:80/am/oauth2/connect/jwk_uri",
      "mTLSCertificateBoundAccessTokens": false,
      "mTLSSubjectDN": null,
      "mTLSTrustedCert": null,
      "publicKeyLocation": "jwks_uri",
      "requestParameterEncryptedAlg": null,
      "requestParameterEncryptedEncryptionAlgorithm": "A128CBC-HS256",
      "requestParameterSignedAlg": null,
      "tokenEndpointAuthSigningAlgorithm": "RS256",
      "tokenIntrospectionEncryptedResponseAlg": "RSA-OAEP-256",
      "tokenIntrospectionEncryptedResponseEncryptionAlgorithm": "A128CBC-HS256",
      "tokenIntrospectionResponseFormat": "JSON",
      "tokenIntrospectionSignedResponseAlg": "RS256",
      "userinfoEncryptedResponseAlg": null,
      "userinfoEncryptedResponseEncryptionAlgorithm": "A128CBC-HS256",
      "userinfoResponseFormat": "JSON",
      "userinfoSignedResponseAlg": null,
    },
  },
  {
    "_id": "86fca6d7-2f52-4524-92c6-b6f416071455",
    "_rev": "-1085185403",
    "_type": {
      "_id": "OAuth2Client",
      "collection": true,
      "name": "OAuth2 Clients",
    },
    "advancedOAuth2ClientConfig": {
      "clientUri": [],
      "contacts": [],
      "customProperties": [],
      "descriptions": [
        "Created by Frodo on 8/11/2022, 5:32:32 PM",
      ],
      "grantTypes": [
        "client_credentials",
      ],
      "isConsentImplied": true,
      "javascriptOrigins": [],
      "logoUri": [],
      "mixUpMitigation": false,
      "name": [],
      "policyUri": [],
      "refreshTokenGracePeriod": 0,
      "requestUris": [],
      "require_pushed_authorization_requests": false,
      "responseTypes": [
        "token",
      ],
      "sectorIdentifierUri": null,
      "softwareIdentity": null,
      "softwareVersion": null,
      "subjectType": "Public",
      "tokenEndpointAuthMethod": "client_secret_basic",
      "tokenExchangeAuthLevel": 0,
      "tosURI": [],
      "updateAccessToken": null,
    },
    "coreOAuth2ClientConfig": {
      "accessTokenLifetime": 3600,
      "authorizationCodeLifetime": 120,
      "clientName": [
        "86fca6d7-2f52-4524-92c6-b6f416071455",
      ],
      "clientType": "Confidential",
      "defaultScopes": [
        "fr:idm:*",
      ],
      "loopbackInterfaceRedirection": false,
      "redirectionUris": [],
      "refreshTokenLifetime": 604800,
      "scopes": [
        "fr:idm:*",
        "fr:idc:esv:*",
        "dynamic_client_registration",
      ],
      "status": "Active",
      "userpassword": null,
    },
    "coreOpenIDClientConfig": {
      "backchannel_logout_session_required": false,
      "backchannel_logout_uri": null,
      "claims": [],
      "clientSessionUri": null,
      "defaultAcrValues": [],
      "defaultMaxAge": 600,
      "defaultMaxAgeEnabled": false,
      "jwtTokenLifetime": 3600,
      "postLogoutRedirectUri": [],
    },
    "coreUmaClientConfig": {
      "claimsRedirectionUris": [],
    },
    "overrideOAuth2ClientConfig": {
      "accessTokenMayActScript": "[Empty]",
      "accessTokenModificationPluginType": "PROVIDER",
      "accessTokenModificationScript": "[Empty]",
      "authorizeEndpointDataProviderClass": "org.forgerock.oauth2.core.plugins.registry.DefaultEndpointDataProvider",
      "authorizeEndpointDataProviderPluginType": "PROVIDER",
      "authorizeEndpointDataProviderScript": "[Empty]",
      "clientsCanSkipConsent": false,
      "enableRemoteConsent": false,
      "evaluateScopeClass": "org.forgerock.oauth2.core.plugins.registry.DefaultScopeEvaluator",
      "evaluateScopePluginType": "PROVIDER",
      "evaluateScopeScript": "[Empty]",
      "issueRefreshToken": true,
      "issueRefreshTokenOnRefreshedToken": true,
      "oidcClaimsPluginType": "PROVIDER",
      "oidcClaimsScript": "[Empty]",
      "oidcMayActScript": "[Empty]",
      "overrideableOIDCClaims": [],
      "providerOverridesEnabled": false,
      "remoteConsentServiceId": null,
      "statelessTokensEnabled": false,
      "tokenEncryptionEnabled": false,
      "usePolicyEngineForScope": false,
      "validateScopeClass": "org.forgerock.oauth2.core.plugins.registry.DefaultScopeValidator",
      "validateScopePluginType": "PROVIDER",
      "validateScopeScript": "[Empty]",
    },
    "signEncOAuth2ClientConfig": {
      "authorizationResponseEncryptionAlgorithm": null,
      "authorizationResponseEncryptionMethod": null,
      "authorizationResponseSigningAlgorithm": "RS256",
      "clientJwtPublicKey": null,
      "idTokenEncryptionAlgorithm": "RSA-OAEP-256",
      "idTokenEncryptionEnabled": false,
      "idTokenEncryptionMethod": "A128CBC-HS256",
      "idTokenPublicEncryptionKey": null,
      "idTokenSignedResponseAlg": "RS256",
      "jwkSet": null,
      "jwkStoreCacheMissCacheTime": 60000,
      "jwksCacheTimeout": 3600000,
      "jwksUri": null,
      "mTLSCertificateBoundAccessTokens": false,
      "mTLSSubjectDN": null,
      "mTLSTrustedCert": null,
      "publicKeyLocation": "jwks_uri",
      "requestParameterEncryptedAlg": null,
      "requestParameterEncryptedEncryptionAlgorithm": "A128CBC-HS256",
      "requestParameterSignedAlg": null,
      "tokenEndpointAuthSigningAlgorithm": "RS256",
      "tokenIntrospectionEncryptedResponseAlg": "RSA-OAEP-256",
      "tokenIntrospectionEncryptedResponseEncryptionAlgorithm": "A128CBC-HS256",
      "tokenIntrospectionResponseFormat": "JSON",
      "tokenIntrospectionSignedResponseAlg": "RS256",
      "userinfoEncryptedResponseAlg": null,
      "userinfoEncryptedResponseEncryptionAlgorithm": "A128CBC-HS256",
      "userinfoResponseFormat": "JSON",
      "userinfoSignedResponseAlg": null,
    },
  },
  {
    "_id": "FrodoTestOAuth2Client1",
    "_rev": "-1777552373",
    "_type": {
      "_id": "OAuth2Client",
      "collection": true,
      "name": "OAuth2 Clients",
    },
    "advancedOAuth2ClientConfig": {
      "clientUri": [],
      "contacts": [],
      "customProperties": [],
      "descriptions": [],
      "grantTypes": [
        "authorization_code",
        "refresh_token",
      ],
      "isConsentImplied": true,
      "javascriptOrigins": [],
      "logoUri": [],
      "mixUpMitigation": false,
      "name": [],
      "policyUri": [],
      "refreshTokenGracePeriod": 0,
      "requestUris": [],
      "require_pushed_authorization_requests": false,
      "responseTypes": [
        "code",
        "token",
        "id_token",
      ],
      "sectorIdentifierUri": null,
      "softwareIdentity": null,
      "softwareVersion": null,
      "subjectType": "public",
      "tokenEndpointAuthMethod": "client_secret_basic",
      "tokenExchangeAuthLevel": 0,
      "tosURI": [],
      "updateAccessToken": null,
    },
    "coreOAuth2ClientConfig": {
      "accessTokenLifetime": 3600,
      "agentgroup": null,
      "authorizationCodeLifetime": 120,
      "clientName": [],
      "clientType": "Public",
      "defaultScopes": [],
      "loopbackInterfaceRedirection": false,
      "redirectionUris": [],
      "refreshTokenLifetime": 604800,
      "scopes": [
        "openid",
      ],
      "status": "Active",
    },
    "coreOpenIDClientConfig": {
      "backchannel_logout_session_required": false,
      "backchannel_logout_uri": null,
      "claims": [],
      "clientSessionUri": null,
      "defaultAcrValues": [],
      "defaultMaxAge": 600,
      "defaultMaxAgeEnabled": false,
      "jwtTokenLifetime": 3600,
      "postLogoutRedirectUri": [],
    },
    "coreUmaClientConfig": {
      "claimsRedirectionUris": [],
    },
    "overrideOAuth2ClientConfig": {
      "accessTokenMayActScript": "[Empty]",
      "accessTokenModificationPluginType": "PROVIDER",
      "accessTokenModificationScript": "[Empty]",
      "accessTokenModifierClass": null,
      "authorizeEndpointDataProviderClass": "org.forgerock.oauth2.core.plugins.registry.DefaultEndpointDataProvider",
      "authorizeEndpointDataProviderPluginType": "PROVIDER",
      "authorizeEndpointDataProviderScript": "[Empty]",
      "clientsCanSkipConsent": false,
      "customLoginUrlTemplate": null,
      "enableRemoteConsent": false,
      "evaluateScopeClass": "org.forgerock.oauth2.core.plugins.registry.DefaultScopeEvaluator",
      "evaluateScopePluginType": "PROVIDER",
      "evaluateScopeScript": "[Empty]",
      "issueRefreshToken": true,
      "issueRefreshTokenOnRefreshedToken": true,
      "oidcClaimsClass": null,
      "oidcClaimsPluginType": "PROVIDER",
      "oidcClaimsScript": "[Empty]",
      "oidcMayActScript": "[Empty]",
      "overrideableOIDCClaims": [],
      "providerOverridesEnabled": false,
      "remoteConsentServiceId": null,
      "scopesPolicySet": "oauth2Scopes",
      "statelessTokensEnabled": false,
      "tokenEncryptionEnabled": false,
      "usePolicyEngineForScope": false,
      "validateScopeClass": "org.forgerock.oauth2.core.plugins.registry.DefaultScopeValidator",
      "validateScopePluginType": "PROVIDER",
      "validateScopeScript": "[Empty]",
    },
    "signEncOAuth2ClientConfig": {
      "authorizationResponseEncryptionAlgorithm": null,
      "authorizationResponseEncryptionMethod": null,
      "authorizationResponseSigningAlgorithm": "RS256",
      "clientJwtPublicKey": null,
      "idTokenEncryptionAlgorithm": "RSA-OAEP-256",
      "idTokenEncryptionEnabled": false,
      "idTokenEncryptionMethod": "A128CBC-HS256",
      "idTokenPublicEncryptionKey": null,
      "idTokenSignedResponseAlg": "RS256",
      "jwkSet": null,
      "jwkStoreCacheMissCacheTime": 60000,
      "jwksCacheTimeout": 3600000,
      "jwksUri": null,
      "mTLSCertificateBoundAccessTokens": false,
      "mTLSSubjectDN": null,
      "mTLSTrustedCert": null,
      "publicKeyLocation": "jwks_uri",
      "requestParameterEncryptedAlg": null,
      "requestParameterEncryptedEncryptionAlgorithm": "A128CBC-HS256",
      "requestParameterSignedAlg": null,
      "tokenEndpointAuthSigningAlgorithm": "RS256",
      "tokenIntrospectionEncryptedResponseAlg": "RSA-OAEP-256",
      "tokenIntrospectionEncryptedResponseEncryptionAlgorithm": "A128CBC-HS256",
      "tokenIntrospectionResponseFormat": "JSON",
      "tokenIntrospectionSignedResponseAlg": "RS256",
      "userinfoEncryptedResponseAlg": null,
      "userinfoEncryptedResponseEncryptionAlgorithm": "A128CBC-HS256",
      "userinfoResponseFormat": "JSON",
      "userinfoSignedResponseAlg": null,
    },
  },
]
`;

exports[`OAuth2ClientOps importFirstOAuth2Client() 1: Import first oauth2 client w/ dependencies 1`] = `
{
  "_id": "FrodoTestOAuth2Client6",
  "_rev": "-1848380125",
  "_type": {
    "_id": "OAuth2Client",
    "collection": true,
    "name": "OAuth2 Clients",
  },
  "advancedOAuth2ClientConfig": {
    "clientUri": {
      "inherited": false,
      "value": [],
    },
    "contacts": {
      "inherited": false,
      "value": [],
    },
    "customProperties": {
      "inherited": false,
      "value": [],
    },
    "descriptions": {
      "inherited": false,
      "value": [],
    },
    "grantTypes": {
      "inherited": false,
      "value": [
        "authorization_code",
        "client_credentials",
        "refresh_token",
      ],
    },
    "isConsentImplied": {
      "inherited": false,
      "value": true,
    },
    "javascriptOrigins": {
      "inherited": false,
      "value": [
        "https://my.application.com",
        "https://my.application.com:443",
      ],
    },
    "logoUri": {
      "inherited": false,
      "value": [],
    },
    "mixUpMitigation": {
      "inherited": false,
      "value": false,
    },
    "name": {
      "inherited": false,
      "value": [],
    },
    "policyUri": {
      "inherited": false,
      "value": [],
    },
    "refreshTokenGracePeriod": {
      "inherited": false,
      "value": 0,
    },
    "requestUris": {
      "inherited": false,
      "value": [],
    },
    "require_pushed_authorization_requests": {
      "inherited": false,
      "value": false,
    },
    "responseTypes": {
      "inherited": false,
      "value": [
        "code",
        "token",
        "id_token",
      ],
    },
    "sectorIdentifierUri": {
      "inherited": false,
    },
    "softwareIdentity": {
      "inherited": false,
    },
    "softwareVersion": {
      "inherited": false,
    },
    "subjectType": {
      "inherited": false,
      "value": "public",
    },
    "tokenEndpointAuthMethod": {
      "inherited": false,
      "value": "client_secret_basic",
    },
    "tokenExchangeAuthLevel": {
      "inherited": false,
      "value": 0,
    },
    "tosURI": {
      "inherited": false,
      "value": [],
    },
    "updateAccessToken": {
      "inherited": false,
    },
  },
  "coreOAuth2ClientConfig": {
    "accessTokenLifetime": {
      "inherited": false,
      "value": 3600,
    },
    "authorizationCodeLifetime": {
      "inherited": false,
      "value": 120,
    },
    "clientName": {
      "inherited": false,
      "value": [],
    },
    "clientType": {
      "inherited": false,
      "value": "Confidential",
    },
    "defaultScopes": {
      "inherited": false,
      "value": [],
    },
    "loopbackInterfaceRedirection": {
      "inherited": false,
      "value": false,
    },
    "redirectionUris": {
      "inherited": false,
      "value": [
        "https://my.application.com/callback",
      ],
    },
    "refreshTokenLifetime": {
      "inherited": false,
      "value": 604800,
    },
    "scopes": {
      "inherited": false,
      "value": [
        "openid",
        "profile",
        "email",
      ],
    },
    "status": {
      "inherited": false,
      "value": "Active",
    },
  },
  "coreOpenIDClientConfig": {
    "backchannel_logout_session_required": {
      "inherited": false,
      "value": false,
    },
    "backchannel_logout_uri": {
      "inherited": false,
    },
    "claims": {
      "inherited": false,
      "value": [],
    },
    "clientSessionUri": {
      "inherited": false,
    },
    "defaultAcrValues": {
      "inherited": false,
      "value": [],
    },
    "defaultMaxAge": {
      "inherited": false,
      "value": 600,
    },
    "defaultMaxAgeEnabled": {
      "inherited": false,
      "value": false,
    },
    "jwtTokenLifetime": {
      "inherited": false,
      "value": 3600,
    },
    "postLogoutRedirectUri": {
      "inherited": false,
      "value": [],
    },
  },
  "coreUmaClientConfig": {
    "claimsRedirectionUris": {
      "inherited": false,
      "value": [],
    },
  },
  "overrideOAuth2ClientConfig": {
    "accessTokenMayActScript": "[Empty]",
    "accessTokenModificationPluginType": "SCRIPTED",
    "accessTokenModificationScript": "39c08084-1238-43e8-857f-2e11005eac49",
    "authorizeEndpointDataProviderClass": "org.forgerock.oauth2.core.plugins.registry.DefaultEndpointDataProvider",
    "authorizeEndpointDataProviderPluginType": "PROVIDER",
    "authorizeEndpointDataProviderScript": "[Empty]",
    "clientsCanSkipConsent": false,
    "enableRemoteConsent": false,
    "evaluateScopeClass": "org.forgerock.oauth2.core.plugins.registry.DefaultScopeEvaluator",
    "evaluateScopePluginType": "PROVIDER",
    "evaluateScopeScript": "[Empty]",
    "issueRefreshToken": true,
    "issueRefreshTokenOnRefreshedToken": true,
    "oidcClaimsPluginType": "SCRIPTED",
    "oidcClaimsScript": "cf3515f0-8278-4ee3-a530-1bad7424c416",
    "oidcMayActScript": "[Empty]",
    "overrideableOIDCClaims": [],
    "providerOverridesEnabled": true,
    "remoteConsentServiceId": "[Empty]",
    "scopesPolicySet": "oauth2Scopes",
    "statelessTokensEnabled": false,
    "tokenEncryptionEnabled": false,
    "usePolicyEngineForScope": false,
    "validateScopeClass": "org.forgerock.oauth2.core.plugins.registry.DefaultScopeValidator",
    "validateScopePluginType": "PROVIDER",
    "validateScopeScript": "[Empty]",
  },
  "signEncOAuth2ClientConfig": {
    "authorizationResponseEncryptionAlgorithm": {
      "inherited": false,
    },
    "authorizationResponseEncryptionMethod": {
      "inherited": false,
    },
    "authorizationResponseSigningAlgorithm": {
      "inherited": false,
      "value": "RS256",
    },
    "clientJwtPublicKey": {
      "inherited": false,
    },
    "idTokenEncryptionAlgorithm": {
      "inherited": false,
      "value": "RSA-OAEP-256",
    },
    "idTokenEncryptionEnabled": {
      "inherited": false,
      "value": false,
    },
    "idTokenEncryptionMethod": {
      "inherited": false,
      "value": "A128CBC-HS256",
    },
    "idTokenPublicEncryptionKey": {
      "inherited": false,
    },
    "idTokenSignedResponseAlg": {
      "inherited": false,
      "value": "RS256",
    },
    "jwkSet": {
      "inherited": false,
    },
    "jwkStoreCacheMissCacheTime": {
      "inherited": false,
      "value": 60000,
    },
    "jwksCacheTimeout": {
      "inherited": false,
      "value": 3600000,
    },
    "jwksUri": {
      "inherited": false,
    },
    "mTLSCertificateBoundAccessTokens": {
      "inherited": false,
      "value": false,
    },
    "mTLSSubjectDN": {
      "inherited": false,
    },
    "mTLSTrustedCert": {
      "inherited": false,
    },
    "publicKeyLocation": {
      "inherited": false,
      "value": "jwks_uri",
    },
    "requestParameterEncryptedAlg": {
      "inherited": false,
    },
    "requestParameterEncryptedEncryptionAlgorithm": {
      "inherited": false,
      "value": "A128CBC-HS256",
    },
    "requestParameterSignedAlg": {
      "inherited": false,
    },
    "tokenEndpointAuthSigningAlgorithm": {
      "inherited": false,
      "value": "RS256",
    },
    "tokenIntrospectionEncryptedResponseAlg": {
      "inherited": false,
      "value": "RSA-OAEP-256",
    },
    "tokenIntrospectionEncryptedResponseEncryptionAlgorithm": {
      "inherited": false,
      "value": "A128CBC-HS256",
    },
    "tokenIntrospectionResponseFormat": {
      "inherited": false,
      "value": "JSON",
    },
    "tokenIntrospectionSignedResponseAlg": {
      "inherited": false,
      "value": "RS256",
    },
    "userinfoEncryptedResponseAlg": {
      "inherited": false,
    },
    "userinfoEncryptedResponseEncryptionAlgorithm": {
      "inherited": false,
      "value": "A128CBC-HS256",
    },
    "userinfoResponseFormat": {
      "inherited": false,
      "value": "JSON",
    },
    "userinfoSignedResponseAlg": {
      "inherited": false,
    },
  },
}
`;

exports[`OAuth2ClientOps importFirstOAuth2Client() 2: Import first oauth2 client w/o dependencies 1`] = `
{
  "_id": "FrodoTestOAuth2Client8",
  "_rev": "-1848380125",
  "_type": {
    "_id": "OAuth2Client",
    "collection": true,
    "name": "OAuth2 Clients",
  },
  "advancedOAuth2ClientConfig": {
    "clientUri": {
      "inherited": false,
      "value": [],
    },
    "contacts": {
      "inherited": false,
      "value": [],
    },
    "customProperties": {
      "inherited": false,
      "value": [],
    },
    "descriptions": {
      "inherited": false,
      "value": [],
    },
    "grantTypes": {
      "inherited": false,
      "value": [
        "authorization_code",
        "client_credentials",
        "refresh_token",
      ],
    },
    "isConsentImplied": {
      "inherited": false,
      "value": true,
    },
    "javascriptOrigins": {
      "inherited": false,
      "value": [
        "https://my.application.com",
        "https://my.application.com:443",
      ],
    },
    "logoUri": {
      "inherited": false,
      "value": [],
    },
    "mixUpMitigation": {
      "inherited": false,
      "value": false,
    },
    "name": {
      "inherited": false,
      "value": [],
    },
    "policyUri": {
      "inherited": false,
      "value": [],
    },
    "refreshTokenGracePeriod": {
      "inherited": false,
      "value": 0,
    },
    "requestUris": {
      "inherited": false,
      "value": [],
    },
    "require_pushed_authorization_requests": {
      "inherited": false,
      "value": false,
    },
    "responseTypes": {
      "inherited": false,
      "value": [
        "code",
        "token",
        "id_token",
      ],
    },
    "sectorIdentifierUri": {
      "inherited": false,
    },
    "softwareIdentity": {
      "inherited": false,
    },
    "softwareVersion": {
      "inherited": false,
    },
    "subjectType": {
      "inherited": false,
      "value": "public",
    },
    "tokenEndpointAuthMethod": {
      "inherited": false,
      "value": "client_secret_basic",
    },
    "tokenExchangeAuthLevel": {
      "inherited": false,
      "value": 0,
    },
    "tosURI": {
      "inherited": false,
      "value": [],
    },
    "updateAccessToken": {
      "inherited": false,
    },
  },
  "coreOAuth2ClientConfig": {
    "accessTokenLifetime": {
      "inherited": false,
      "value": 3600,
    },
    "authorizationCodeLifetime": {
      "inherited": false,
      "value": 120,
    },
    "clientName": {
      "inherited": false,
      "value": [],
    },
    "clientType": {
      "inherited": false,
      "value": "Confidential",
    },
    "defaultScopes": {
      "inherited": false,
      "value": [],
    },
    "loopbackInterfaceRedirection": {
      "inherited": false,
      "value": false,
    },
    "redirectionUris": {
      "inherited": false,
      "value": [
        "https://my.application.com/callback",
      ],
    },
    "refreshTokenLifetime": {
      "inherited": false,
      "value": 604800,
    },
    "scopes": {
      "inherited": false,
      "value": [
        "openid",
        "profile",
        "email",
      ],
    },
    "status": {
      "inherited": false,
      "value": "Active",
    },
  },
  "coreOpenIDClientConfig": {
    "backchannel_logout_session_required": {
      "inherited": false,
      "value": false,
    },
    "backchannel_logout_uri": {
      "inherited": false,
    },
    "claims": {
      "inherited": false,
      "value": [],
    },
    "clientSessionUri": {
      "inherited": false,
    },
    "defaultAcrValues": {
      "inherited": false,
      "value": [],
    },
    "defaultMaxAge": {
      "inherited": false,
      "value": 600,
    },
    "defaultMaxAgeEnabled": {
      "inherited": false,
      "value": false,
    },
    "jwtTokenLifetime": {
      "inherited": false,
      "value": 3600,
    },
    "postLogoutRedirectUri": {
      "inherited": false,
      "value": [],
    },
  },
  "coreUmaClientConfig": {
    "claimsRedirectionUris": {
      "inherited": false,
      "value": [],
    },
  },
  "overrideOAuth2ClientConfig": {
    "accessTokenMayActScript": "[Empty]",
    "accessTokenModificationPluginType": "SCRIPTED",
    "accessTokenModificationScript": "39c08084-1238-43e8-857f-2e11005eac49",
    "authorizeEndpointDataProviderClass": "org.forgerock.oauth2.core.plugins.registry.DefaultEndpointDataProvider",
    "authorizeEndpointDataProviderPluginType": "PROVIDER",
    "authorizeEndpointDataProviderScript": "[Empty]",
    "clientsCanSkipConsent": false,
    "enableRemoteConsent": false,
    "evaluateScopeClass": "org.forgerock.oauth2.core.plugins.registry.DefaultScopeEvaluator",
    "evaluateScopePluginType": "PROVIDER",
    "evaluateScopeScript": "[Empty]",
    "issueRefreshToken": true,
    "issueRefreshTokenOnRefreshedToken": true,
    "oidcClaimsPluginType": "SCRIPTED",
    "oidcClaimsScript": "cf3515f0-8278-4ee3-a530-1bad7424c416",
    "oidcMayActScript": "[Empty]",
    "overrideableOIDCClaims": [],
    "providerOverridesEnabled": true,
    "remoteConsentServiceId": "[Empty]",
    "scopesPolicySet": "oauth2Scopes",
    "statelessTokensEnabled": false,
    "tokenEncryptionEnabled": false,
    "usePolicyEngineForScope": false,
    "validateScopeClass": "org.forgerock.oauth2.core.plugins.registry.DefaultScopeValidator",
    "validateScopePluginType": "PROVIDER",
    "validateScopeScript": "[Empty]",
  },
  "signEncOAuth2ClientConfig": {
    "authorizationResponseEncryptionAlgorithm": {
      "inherited": false,
    },
    "authorizationResponseEncryptionMethod": {
      "inherited": false,
    },
    "authorizationResponseSigningAlgorithm": {
      "inherited": false,
      "value": "RS256",
    },
    "clientJwtPublicKey": {
      "inherited": false,
    },
    "idTokenEncryptionAlgorithm": {
      "inherited": false,
      "value": "RSA-OAEP-256",
    },
    "idTokenEncryptionEnabled": {
      "inherited": false,
      "value": false,
    },
    "idTokenEncryptionMethod": {
      "inherited": false,
      "value": "A128CBC-HS256",
    },
    "idTokenPublicEncryptionKey": {
      "inherited": false,
    },
    "idTokenSignedResponseAlg": {
      "inherited": false,
      "value": "RS256",
    },
    "jwkSet": {
      "inherited": false,
    },
    "jwkStoreCacheMissCacheTime": {
      "inherited": false,
      "value": 60000,
    },
    "jwksCacheTimeout": {
      "inherited": false,
      "value": 3600000,
    },
    "jwksUri": {
      "inherited": false,
    },
    "mTLSCertificateBoundAccessTokens": {
      "inherited": false,
      "value": false,
    },
    "mTLSSubjectDN": {
      "inherited": false,
    },
    "mTLSTrustedCert": {
      "inherited": false,
    },
    "publicKeyLocation": {
      "inherited": false,
      "value": "jwks_uri",
    },
    "requestParameterEncryptedAlg": {
      "inherited": false,
    },
    "requestParameterEncryptedEncryptionAlgorithm": {
      "inherited": false,
      "value": "A128CBC-HS256",
    },
    "requestParameterSignedAlg": {
      "inherited": false,
    },
    "tokenEndpointAuthSigningAlgorithm": {
      "inherited": false,
      "value": "RS256",
    },
    "tokenIntrospectionEncryptedResponseAlg": {
      "inherited": false,
      "value": "RSA-OAEP-256",
    },
    "tokenIntrospectionEncryptedResponseEncryptionAlgorithm": {
      "inherited": false,
      "value": "A128CBC-HS256",
    },
    "tokenIntrospectionResponseFormat": {
      "inherited": false,
      "value": "JSON",
    },
    "tokenIntrospectionSignedResponseAlg": {
      "inherited": false,
      "value": "RS256",
    },
    "userinfoEncryptedResponseAlg": {
      "inherited": false,
    },
    "userinfoEncryptedResponseEncryptionAlgorithm": {
      "inherited": false,
      "value": "A128CBC-HS256",
    },
    "userinfoResponseFormat": {
      "inherited": false,
      "value": "JSON",
    },
    "userinfoSignedResponseAlg": {
      "inherited": false,
    },
  },
}
`;

exports[`OAuth2ClientOps importOAuth2Client() 1: Import oauth2 client FrodoTestOAuth2Client4 w/ dependencies 1`] = `
{
  "_id": "FrodoTestOAuth2Client4",
  "_rev": "-1848380125",
  "_type": {
    "_id": "OAuth2Client",
    "collection": true,
    "name": "OAuth2 Clients",
  },
  "advancedOAuth2ClientConfig": {
    "clientUri": {
      "inherited": false,
      "value": [],
    },
    "contacts": {
      "inherited": false,
      "value": [],
    },
    "customProperties": {
      "inherited": false,
      "value": [],
    },
    "descriptions": {
      "inherited": false,
      "value": [],
    },
    "grantTypes": {
      "inherited": false,
      "value": [
        "authorization_code",
        "client_credentials",
        "refresh_token",
      ],
    },
    "isConsentImplied": {
      "inherited": false,
      "value": true,
    },
    "javascriptOrigins": {
      "inherited": false,
      "value": [
        "https://my.application.com",
        "https://my.application.com:443",
      ],
    },
    "logoUri": {
      "inherited": false,
      "value": [],
    },
    "mixUpMitigation": {
      "inherited": false,
      "value": false,
    },
    "name": {
      "inherited": false,
      "value": [],
    },
    "policyUri": {
      "inherited": false,
      "value": [],
    },
    "refreshTokenGracePeriod": {
      "inherited": false,
      "value": 0,
    },
    "requestUris": {
      "inherited": false,
      "value": [],
    },
    "require_pushed_authorization_requests": {
      "inherited": false,
      "value": false,
    },
    "responseTypes": {
      "inherited": false,
      "value": [
        "code",
        "token",
        "id_token",
      ],
    },
    "sectorIdentifierUri": {
      "inherited": false,
    },
    "softwareIdentity": {
      "inherited": false,
    },
    "softwareVersion": {
      "inherited": false,
    },
    "subjectType": {
      "inherited": false,
      "value": "public",
    },
    "tokenEndpointAuthMethod": {
      "inherited": false,
      "value": "client_secret_basic",
    },
    "tokenExchangeAuthLevel": {
      "inherited": false,
      "value": 0,
    },
    "tosURI": {
      "inherited": false,
      "value": [],
    },
    "updateAccessToken": {
      "inherited": false,
    },
  },
  "coreOAuth2ClientConfig": {
    "accessTokenLifetime": {
      "inherited": false,
      "value": 3600,
    },
    "authorizationCodeLifetime": {
      "inherited": false,
      "value": 120,
    },
    "clientName": {
      "inherited": false,
      "value": [],
    },
    "clientType": {
      "inherited": false,
      "value": "Confidential",
    },
    "defaultScopes": {
      "inherited": false,
      "value": [],
    },
    "loopbackInterfaceRedirection": {
      "inherited": false,
      "value": false,
    },
    "redirectionUris": {
      "inherited": false,
      "value": [
        "https://my.application.com/callback",
      ],
    },
    "refreshTokenLifetime": {
      "inherited": false,
      "value": 604800,
    },
    "scopes": {
      "inherited": false,
      "value": [
        "openid",
        "profile",
        "email",
      ],
    },
    "status": {
      "inherited": false,
      "value": "Active",
    },
  },
  "coreOpenIDClientConfig": {
    "backchannel_logout_session_required": {
      "inherited": false,
      "value": false,
    },
    "backchannel_logout_uri": {
      "inherited": false,
    },
    "claims": {
      "inherited": false,
      "value": [],
    },
    "clientSessionUri": {
      "inherited": false,
    },
    "defaultAcrValues": {
      "inherited": false,
      "value": [],
    },
    "defaultMaxAge": {
      "inherited": false,
      "value": 600,
    },
    "defaultMaxAgeEnabled": {
      "inherited": false,
      "value": false,
    },
    "jwtTokenLifetime": {
      "inherited": false,
      "value": 3600,
    },
    "postLogoutRedirectUri": {
      "inherited": false,
      "value": [],
    },
  },
  "coreUmaClientConfig": {
    "claimsRedirectionUris": {
      "inherited": false,
      "value": [],
    },
  },
  "overrideOAuth2ClientConfig": {
    "accessTokenMayActScript": "[Empty]",
    "accessTokenModificationPluginType": "SCRIPTED",
    "accessTokenModificationScript": "39c08084-1238-43e8-857f-2e11005eac49",
    "authorizeEndpointDataProviderClass": "org.forgerock.oauth2.core.plugins.registry.DefaultEndpointDataProvider",
    "authorizeEndpointDataProviderPluginType": "PROVIDER",
    "authorizeEndpointDataProviderScript": "[Empty]",
    "clientsCanSkipConsent": false,
    "enableRemoteConsent": false,
    "evaluateScopeClass": "org.forgerock.oauth2.core.plugins.registry.DefaultScopeEvaluator",
    "evaluateScopePluginType": "PROVIDER",
    "evaluateScopeScript": "[Empty]",
    "issueRefreshToken": true,
    "issueRefreshTokenOnRefreshedToken": true,
    "oidcClaimsPluginType": "SCRIPTED",
    "oidcClaimsScript": "cf3515f0-8278-4ee3-a530-1bad7424c416",
    "oidcMayActScript": "[Empty]",
    "overrideableOIDCClaims": [],
    "providerOverridesEnabled": true,
    "remoteConsentServiceId": "[Empty]",
    "scopesPolicySet": "oauth2Scopes",
    "statelessTokensEnabled": false,
    "tokenEncryptionEnabled": false,
    "usePolicyEngineForScope": false,
    "validateScopeClass": "org.forgerock.oauth2.core.plugins.registry.DefaultScopeValidator",
    "validateScopePluginType": "PROVIDER",
    "validateScopeScript": "[Empty]",
  },
  "signEncOAuth2ClientConfig": {
    "authorizationResponseEncryptionAlgorithm": {
      "inherited": false,
    },
    "authorizationResponseEncryptionMethod": {
      "inherited": false,
    },
    "authorizationResponseSigningAlgorithm": {
      "inherited": false,
      "value": "RS256",
    },
    "clientJwtPublicKey": {
      "inherited": false,
    },
    "idTokenEncryptionAlgorithm": {
      "inherited": false,
      "value": "RSA-OAEP-256",
    },
    "idTokenEncryptionEnabled": {
      "inherited": false,
      "value": false,
    },
    "idTokenEncryptionMethod": {
      "inherited": false,
      "value": "A128CBC-HS256",
    },
    "idTokenPublicEncryptionKey": {
      "inherited": false,
    },
    "idTokenSignedResponseAlg": {
      "inherited": false,
      "value": "RS256",
    },
    "jwkSet": {
      "inherited": false,
    },
    "jwkStoreCacheMissCacheTime": {
      "inherited": false,
      "value": 60000,
    },
    "jwksCacheTimeout": {
      "inherited": false,
      "value": 3600000,
    },
    "jwksUri": {
      "inherited": false,
    },
    "mTLSCertificateBoundAccessTokens": {
      "inherited": false,
      "value": false,
    },
    "mTLSSubjectDN": {
      "inherited": false,
    },
    "mTLSTrustedCert": {
      "inherited": false,
    },
    "publicKeyLocation": {
      "inherited": false,
      "value": "jwks_uri",
    },
    "requestParameterEncryptedAlg": {
      "inherited": false,
    },
    "requestParameterEncryptedEncryptionAlgorithm": {
      "inherited": false,
      "value": "A128CBC-HS256",
    },
    "requestParameterSignedAlg": {
      "inherited": false,
    },
    "tokenEndpointAuthSigningAlgorithm": {
      "inherited": false,
      "value": "RS256",
    },
    "tokenIntrospectionEncryptedResponseAlg": {
      "inherited": false,
      "value": "RSA-OAEP-256",
    },
    "tokenIntrospectionEncryptedResponseEncryptionAlgorithm": {
      "inherited": false,
      "value": "A128CBC-HS256",
    },
    "tokenIntrospectionResponseFormat": {
      "inherited": false,
      "value": "JSON",
    },
    "tokenIntrospectionSignedResponseAlg": {
      "inherited": false,
      "value": "RS256",
    },
    "userinfoEncryptedResponseAlg": {
      "inherited": false,
    },
    "userinfoEncryptedResponseEncryptionAlgorithm": {
      "inherited": false,
      "value": "A128CBC-HS256",
    },
    "userinfoResponseFormat": {
      "inherited": false,
      "value": "JSON",
    },
    "userinfoSignedResponseAlg": {
      "inherited": false,
    },
  },
}
`;

exports[`OAuth2ClientOps importOAuth2Client() 2: Import oauth2 client FrodoTestOAuth2Client5 w/o dependencies 1`] = `
{
  "_id": "FrodoTestOAuth2Client5",
  "_rev": "-1848380125",
  "_type": {
    "_id": "OAuth2Client",
    "collection": true,
    "name": "OAuth2 Clients",
  },
  "advancedOAuth2ClientConfig": {
    "clientUri": {
      "inherited": false,
      "value": [],
    },
    "contacts": {
      "inherited": false,
      "value": [],
    },
    "customProperties": {
      "inherited": false,
      "value": [],
    },
    "descriptions": {
      "inherited": false,
      "value": [],
    },
    "grantTypes": {
      "inherited": false,
      "value": [
        "authorization_code",
        "client_credentials",
        "refresh_token",
      ],
    },
    "isConsentImplied": {
      "inherited": false,
      "value": true,
    },
    "javascriptOrigins": {
      "inherited": false,
      "value": [
        "https://my.application.com",
        "https://my.application.com:443",
      ],
    },
    "logoUri": {
      "inherited": false,
      "value": [],
    },
    "mixUpMitigation": {
      "inherited": false,
      "value": false,
    },
    "name": {
      "inherited": false,
      "value": [],
    },
    "policyUri": {
      "inherited": false,
      "value": [],
    },
    "refreshTokenGracePeriod": {
      "inherited": false,
      "value": 0,
    },
    "requestUris": {
      "inherited": false,
      "value": [],
    },
    "require_pushed_authorization_requests": {
      "inherited": false,
      "value": false,
    },
    "responseTypes": {
      "inherited": false,
      "value": [
        "code",
        "token",
        "id_token",
      ],
    },
    "sectorIdentifierUri": {
      "inherited": false,
    },
    "softwareIdentity": {
      "inherited": false,
    },
    "softwareVersion": {
      "inherited": false,
    },
    "subjectType": {
      "inherited": false,
      "value": "public",
    },
    "tokenEndpointAuthMethod": {
      "inherited": false,
      "value": "client_secret_basic",
    },
    "tokenExchangeAuthLevel": {
      "inherited": false,
      "value": 0,
    },
    "tosURI": {
      "inherited": false,
      "value": [],
    },
    "updateAccessToken": {
      "inherited": false,
    },
  },
  "coreOAuth2ClientConfig": {
    "accessTokenLifetime": {
      "inherited": false,
      "value": 3600,
    },
    "authorizationCodeLifetime": {
      "inherited": false,
      "value": 120,
    },
    "clientName": {
      "inherited": false,
      "value": [],
    },
    "clientType": {
      "inherited": false,
      "value": "Confidential",
    },
    "defaultScopes": {
      "inherited": false,
      "value": [],
    },
    "loopbackInterfaceRedirection": {
      "inherited": false,
      "value": false,
    },
    "redirectionUris": {
      "inherited": false,
      "value": [
        "https://my.application.com/callback",
      ],
    },
    "refreshTokenLifetime": {
      "inherited": false,
      "value": 604800,
    },
    "scopes": {
      "inherited": false,
      "value": [
        "openid",
        "profile",
        "email",
      ],
    },
    "status": {
      "inherited": false,
      "value": "Active",
    },
  },
  "coreOpenIDClientConfig": {
    "backchannel_logout_session_required": {
      "inherited": false,
      "value": false,
    },
    "backchannel_logout_uri": {
      "inherited": false,
    },
    "claims": {
      "inherited": false,
      "value": [],
    },
    "clientSessionUri": {
      "inherited": false,
    },
    "defaultAcrValues": {
      "inherited": false,
      "value": [],
    },
    "defaultMaxAge": {
      "inherited": false,
      "value": 600,
    },
    "defaultMaxAgeEnabled": {
      "inherited": false,
      "value": false,
    },
    "jwtTokenLifetime": {
      "inherited": false,
      "value": 3600,
    },
    "postLogoutRedirectUri": {
      "inherited": false,
      "value": [],
    },
  },
  "coreUmaClientConfig": {
    "claimsRedirectionUris": {
      "inherited": false,
      "value": [],
    },
  },
  "overrideOAuth2ClientConfig": {
    "accessTokenMayActScript": "[Empty]",
    "accessTokenModificationPluginType": "SCRIPTED",
    "accessTokenModificationScript": "39c08084-1238-43e8-857f-2e11005eac49",
    "authorizeEndpointDataProviderClass": "org.forgerock.oauth2.core.plugins.registry.DefaultEndpointDataProvider",
    "authorizeEndpointDataProviderPluginType": "PROVIDER",
    "authorizeEndpointDataProviderScript": "[Empty]",
    "clientsCanSkipConsent": false,
    "enableRemoteConsent": false,
    "evaluateScopeClass": "org.forgerock.oauth2.core.plugins.registry.DefaultScopeEvaluator",
    "evaluateScopePluginType": "PROVIDER",
    "evaluateScopeScript": "[Empty]",
    "issueRefreshToken": true,
    "issueRefreshTokenOnRefreshedToken": true,
    "oidcClaimsPluginType": "SCRIPTED",
    "oidcClaimsScript": "cf3515f0-8278-4ee3-a530-1bad7424c416",
    "oidcMayActScript": "[Empty]",
    "overrideableOIDCClaims": [],
    "providerOverridesEnabled": true,
    "remoteConsentServiceId": "[Empty]",
    "scopesPolicySet": "oauth2Scopes",
    "statelessTokensEnabled": false,
    "tokenEncryptionEnabled": false,
    "usePolicyEngineForScope": false,
    "validateScopeClass": "org.forgerock.oauth2.core.plugins.registry.DefaultScopeValidator",
    "validateScopePluginType": "PROVIDER",
    "validateScopeScript": "[Empty]",
  },
  "signEncOAuth2ClientConfig": {
    "authorizationResponseEncryptionAlgorithm": {
      "inherited": false,
    },
    "authorizationResponseEncryptionMethod": {
      "inherited": false,
    },
    "authorizationResponseSigningAlgorithm": {
      "inherited": false,
      "value": "RS256",
    },
    "clientJwtPublicKey": {
      "inherited": false,
    },
    "idTokenEncryptionAlgorithm": {
      "inherited": false,
      "value": "RSA-OAEP-256",
    },
    "idTokenEncryptionEnabled": {
      "inherited": false,
      "value": false,
    },
    "idTokenEncryptionMethod": {
      "inherited": false,
      "value": "A128CBC-HS256",
    },
    "idTokenPublicEncryptionKey": {
      "inherited": false,
    },
    "idTokenSignedResponseAlg": {
      "inherited": false,
      "value": "RS256",
    },
    "jwkSet": {
      "inherited": false,
    },
    "jwkStoreCacheMissCacheTime": {
      "inherited": false,
      "value": 60000,
    },
    "jwksCacheTimeout": {
      "inherited": false,
      "value": 3600000,
    },
    "jwksUri": {
      "inherited": false,
    },
    "mTLSCertificateBoundAccessTokens": {
      "inherited": false,
      "value": false,
    },
    "mTLSSubjectDN": {
      "inherited": false,
    },
    "mTLSTrustedCert": {
      "inherited": false,
    },
    "publicKeyLocation": {
      "inherited": false,
      "value": "jwks_uri",
    },
    "requestParameterEncryptedAlg": {
      "inherited": false,
    },
    "requestParameterEncryptedEncryptionAlgorithm": {
      "inherited": false,
      "value": "A128CBC-HS256",
    },
    "requestParameterSignedAlg": {
      "inherited": false,
    },
    "tokenEndpointAuthSigningAlgorithm": {
      "inherited": false,
      "value": "RS256",
    },
    "tokenIntrospectionEncryptedResponseAlg": {
      "inherited": false,
      "value": "RSA-OAEP-256",
    },
    "tokenIntrospectionEncryptedResponseEncryptionAlgorithm": {
      "inherited": false,
      "value": "A128CBC-HS256",
    },
    "tokenIntrospectionResponseFormat": {
      "inherited": false,
      "value": "JSON",
    },
    "tokenIntrospectionSignedResponseAlg": {
      "inherited": false,
      "value": "RS256",
    },
    "userinfoEncryptedResponseAlg": {
      "inherited": false,
    },
    "userinfoEncryptedResponseEncryptionAlgorithm": {
      "inherited": false,
      "value": "A128CBC-HS256",
    },
    "userinfoResponseFormat": {
      "inherited": false,
      "value": "JSON",
    },
    "userinfoSignedResponseAlg": {
      "inherited": false,
    },
  },
}
`;

exports[`OAuth2ClientOps putOAuth2Client() 1: Put oauth2 client FrodoTestOAuth2Client3 1`] = `
{
  "_id": "FrodoTestOAuth2Client3",
  "_rev": "-124322343",
  "_type": {
    "_id": "OAuth2Client",
    "collection": true,
    "name": "OAuth2 Clients",
  },
  "advancedOAuth2ClientConfig": {
    "clientUri": {
      "inherited": false,
      "value": [],
    },
    "contacts": {
      "inherited": false,
      "value": [],
    },
    "customProperties": {
      "inherited": false,
      "value": [],
    },
    "descriptions": {
      "inherited": false,
      "value": [],
    },
    "grantTypes": {
      "inherited": false,
      "value": [
        "authorization_code",
        "refresh_token",
      ],
    },
    "isConsentImplied": {
      "inherited": false,
      "value": true,
    },
    "javascriptOrigins": {
      "inherited": false,
      "value": [],
    },
    "logoUri": {
      "inherited": false,
      "value": [],
    },
    "mixUpMitigation": {
      "inherited": false,
      "value": false,
    },
    "name": {
      "inherited": false,
      "value": [],
    },
    "policyUri": {
      "inherited": false,
      "value": [],
    },
    "refreshTokenGracePeriod": {
      "inherited": false,
      "value": 0,
    },
    "requestUris": {
      "inherited": false,
      "value": [],
    },
    "require_pushed_authorization_requests": {
      "inherited": false,
      "value": false,
    },
    "responseTypes": {
      "inherited": false,
      "value": [
        "code",
        "token",
        "id_token",
      ],
    },
    "sectorIdentifierUri": {
      "inherited": false,
    },
    "softwareIdentity": {
      "inherited": false,
    },
    "softwareVersion": {
      "inherited": false,
    },
    "subjectType": {
      "inherited": false,
      "value": "public",
    },
    "tokenEndpointAuthMethod": {
      "inherited": false,
      "value": "client_secret_basic",
    },
    "tokenExchangeAuthLevel": {
      "inherited": false,
      "value": 0,
    },
    "tosURI": {
      "inherited": false,
      "value": [],
    },
    "updateAccessToken": {
      "inherited": false,
    },
  },
  "coreOAuth2ClientConfig": {
    "accessTokenLifetime": {
      "inherited": false,
      "value": 3600,
    },
    "authorizationCodeLifetime": {
      "inherited": false,
      "value": 120,
    },
    "clientName": {
      "inherited": false,
      "value": [],
    },
    "clientType": {
      "inherited": false,
      "value": "Public",
    },
    "defaultScopes": {
      "inherited": false,
      "value": [],
    },
    "loopbackInterfaceRedirection": {
      "inherited": false,
      "value": false,
    },
    "redirectionUris": {
      "inherited": false,
      "value": [],
    },
    "refreshTokenLifetime": {
      "inherited": false,
      "value": 604800,
    },
    "scopes": {
      "inherited": false,
      "value": [
        "openid",
      ],
    },
    "status": {
      "inherited": false,
      "value": "Active",
    },
  },
  "coreOpenIDClientConfig": {
    "backchannel_logout_session_required": {
      "inherited": false,
      "value": false,
    },
    "backchannel_logout_uri": {
      "inherited": false,
    },
    "claims": {
      "inherited": false,
      "value": [],
    },
    "clientSessionUri": {
      "inherited": false,
    },
    "defaultAcrValues": {
      "inherited": false,
      "value": [],
    },
    "defaultMaxAge": {
      "inherited": false,
      "value": 600,
    },
    "defaultMaxAgeEnabled": {
      "inherited": false,
      "value": false,
    },
    "jwtTokenLifetime": {
      "inherited": false,
      "value": 3600,
    },
    "postLogoutRedirectUri": {
      "inherited": false,
      "value": [],
    },
  },
  "coreUmaClientConfig": {
    "claimsRedirectionUris": {
      "inherited": false,
      "value": [],
    },
  },
  "overrideOAuth2ClientConfig": {
    "accessTokenMayActScript": "[Empty]",
    "accessTokenModificationPluginType": "PROVIDER",
    "accessTokenModificationScript": "[Empty]",
    "authorizeEndpointDataProviderClass": "org.forgerock.oauth2.core.plugins.registry.DefaultEndpointDataProvider",
    "authorizeEndpointDataProviderPluginType": "PROVIDER",
    "authorizeEndpointDataProviderScript": "[Empty]",
    "clientsCanSkipConsent": false,
    "enableRemoteConsent": false,
    "evaluateScopeClass": "org.forgerock.oauth2.core.plugins.registry.DefaultScopeEvaluator",
    "evaluateScopePluginType": "PROVIDER",
    "evaluateScopeScript": "[Empty]",
    "issueRefreshToken": true,
    "issueRefreshTokenOnRefreshedToken": true,
    "oidcClaimsPluginType": "PROVIDER",
    "oidcClaimsScript": "[Empty]",
    "oidcMayActScript": "[Empty]",
    "overrideableOIDCClaims": [],
    "providerOverridesEnabled": false,
    "remoteConsentServiceId": null,
    "scopesPolicySet": "oauth2Scopes",
    "statelessTokensEnabled": false,
    "tokenEncryptionEnabled": false,
    "usePolicyEngineForScope": false,
    "validateScopeClass": "org.forgerock.oauth2.core.plugins.registry.DefaultScopeValidator",
    "validateScopePluginType": "PROVIDER",
    "validateScopeScript": "[Empty]",
  },
  "signEncOAuth2ClientConfig": {
    "authorizationResponseEncryptionAlgorithm": {
      "inherited": false,
    },
    "authorizationResponseEncryptionMethod": {
      "inherited": false,
    },
    "authorizationResponseSigningAlgorithm": {
      "inherited": false,
      "value": "RS256",
    },
    "clientJwtPublicKey": {
      "inherited": false,
    },
    "idTokenEncryptionAlgorithm": {
      "inherited": false,
      "value": "RSA-OAEP-256",
    },
    "idTokenEncryptionEnabled": {
      "inherited": false,
      "value": false,
    },
    "idTokenEncryptionMethod": {
      "inherited": false,
      "value": "A128CBC-HS256",
    },
    "idTokenPublicEncryptionKey": {
      "inherited": false,
    },
    "idTokenSignedResponseAlg": {
      "inherited": false,
      "value": "RS256",
    },
    "jwkSet": {
      "inherited": false,
    },
    "jwkStoreCacheMissCacheTime": {
      "inherited": false,
      "value": 60000,
    },
    "jwksCacheTimeout": {
      "inherited": false,
      "value": 3600000,
    },
    "jwksUri": {
      "inherited": false,
    },
    "mTLSCertificateBoundAccessTokens": {
      "inherited": false,
      "value": false,
    },
    "mTLSSubjectDN": {
      "inherited": false,
    },
    "mTLSTrustedCert": {
      "inherited": false,
    },
    "publicKeyLocation": {
      "inherited": false,
      "value": "jwks_uri",
    },
    "requestParameterEncryptedAlg": {
      "inherited": false,
    },
    "requestParameterEncryptedEncryptionAlgorithm": {
      "inherited": false,
      "value": "A128CBC-HS256",
    },
    "requestParameterSignedAlg": {
      "inherited": false,
    },
    "tokenEndpointAuthSigningAlgorithm": {
      "inherited": false,
      "value": "RS256",
    },
    "tokenIntrospectionEncryptedResponseAlg": {
      "inherited": false,
      "value": "RSA-OAEP-256",
    },
    "tokenIntrospectionEncryptedResponseEncryptionAlgorithm": {
      "inherited": false,
      "value": "A128CBC-HS256",
    },
    "tokenIntrospectionResponseFormat": {
      "inherited": false,
      "value": "JSON",
    },
    "tokenIntrospectionSignedResponseAlg": {
      "inherited": false,
      "value": "RS256",
    },
    "userinfoEncryptedResponseAlg": {
      "inherited": false,
    },
    "userinfoEncryptedResponseEncryptionAlgorithm": {
      "inherited": false,
      "value": "A128CBC-HS256",
    },
    "userinfoResponseFormat": {
      "inherited": false,
      "value": "JSON",
    },
    "userinfoSignedResponseAlg": {
      "inherited": false,
    },
  },
}
`;
