// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`AdminOps exportFullConfiguration() 1: Export everything 1`] = `
{
  "agents": {},
  "application": {
    "23281ea7-739b-4fd1-b953-eaae73a2b497": {
      "_id": "23281ea7-739b-4fd1-b953-eaae73a2b497",
      "_provider": {
        "_id": "",
        "_rev": "520068704",
        "_type": {
          "_id": "oauth-oidc",
          "collection": false,
          "name": "OAuth2 Provider",
        },
        "advancedOAuth2Config": {
          "allowClientCredentialsInTokenRequestQueryParameters": true,
          "allowedAudienceValues": [],
          "authenticationAttributes": [
            "uid",
          ],
          "codeVerifierEnforced": "false",
          "defaultScopes": [
            "address",
            "phone",
            "openid",
            "profile",
            "email",
          ],
          "displayNameAttribute": "cn",
          "expClaimRequiredInRequestObject": false,
          "grantTypes": [
            "implicit",
            "urn:ietf:params:oauth:grant-type:saml2-bearer",
            "refresh_token",
            "password",
            "client_credentials",
            "urn:ietf:params:oauth:grant-type:device_code",
            "authorization_code",
            "urn:openid:params:grant-type:ciba",
            "urn:ietf:params:oauth:grant-type:uma-ticket",
            "urn:ietf:params:oauth:grant-type:jwt-bearer",
          ],
          "hashSalt": "&{am.oidc.client.subject.identifier.hash.salt}",
          "macaroonTokenFormat": "V2",
          "maxAgeOfRequestObjectNbfClaim": 0,
          "maxDifferenceBetweenRequestObjectNbfAndExp": 0,
          "moduleMessageEnabledInPasswordGrant": false,
          "nbfClaimRequiredInRequestObject": false,
          "parRequestUriLifetime": 90,
          "passwordGrantAuthService": "PasswordGrant",
          "persistentClaims": [],
          "refreshTokenGracePeriod": 0,
          "requestObjectProcessing": "OIDC",
          "requirePushedAuthorizationRequests": false,
          "responseTypeClasses": [
            "code|org.forgerock.oauth2.core.AuthorizationCodeResponseTypeHandler",
            "device_code|org.forgerock.oauth2.core.TokenResponseTypeHandler",
            "token|org.forgerock.oauth2.core.TokenResponseTypeHandler",
            "id_token|org.forgerock.openidconnect.IdTokenResponseTypeHandler",
          ],
          "supportedScopes": [
            "email|Your email address",
            "openid|",
            "address|Your postal address",
            "phone|Your telephone number(s)",
            "profile|Your personal information",
            "fr:idm:*",
            "am-introspect-all-tokens",
          ],
          "supportedSubjectTypes": [
            "public",
            "pairwise",
          ],
          "tlsCertificateBoundAccessTokensEnabled": true,
          "tlsCertificateRevocationCheckingEnabled": false,
          "tlsClientCertificateHeaderFormat": "URLENCODED_PEM",
          "tokenCompressionEnabled": false,
          "tokenEncryptionEnabled": false,
          "tokenExchangeClasses": [
            "urn:ietf:params:oauth:token-type:access_token=>urn:ietf:params:oauth:token-type:access_token|org.forgerock.oauth2.core.tokenexchange.accesstoken.AccessTokenToAccessTokenExchanger",
            "urn:ietf:params:oauth:token-type:id_token=>urn:ietf:params:oauth:token-type:id_token|org.forgerock.oauth2.core.tokenexchange.idtoken.IdTokenToIdTokenExchanger",
            "urn:ietf:params:oauth:token-type:access_token=>urn:ietf:params:oauth:token-type:id_token|org.forgerock.oauth2.core.tokenexchange.accesstoken.AccessTokenToIdTokenExchanger",
            "urn:ietf:params:oauth:token-type:id_token=>urn:ietf:params:oauth:token-type:access_token|org.forgerock.oauth2.core.tokenexchange.idtoken.IdTokenToAccessTokenExchanger",
          ],
          "tokenSigningAlgorithm": "HS256",
          "tokenValidatorClasses": [
            "urn:ietf:params:oauth:token-type:id_token|org.forgerock.oauth2.core.tokenexchange.idtoken.OidcIdTokenValidator",
            "urn:ietf:params:oauth:token-type:access_token|org.forgerock.oauth2.core.tokenexchange.accesstoken.OAuth2AccessTokenValidator",
          ],
        },
        "advancedOIDCConfig": {
          "alwaysAddClaimsToToken": true,
          "amrMappings": {},
          "authorisedIdmDelegationClients": [],
          "authorisedOpenIdConnectSSOClients": [],
          "claimsParameterSupported": false,
          "defaultACR": [],
          "idTokenInfoClientAuthenticationEnabled": true,
          "includeAllKtyAlgCombinationsInJwksUri": false,
          "loaMapping": {},
          "storeOpsTokens": true,
          "supportedAuthorizationResponseEncryptionAlgorithms": [
            "ECDH-ES+A256KW",
            "ECDH-ES+A192KW",
            "RSA-OAEP",
            "ECDH-ES+A128KW",
            "RSA-OAEP-256",
            "A128KW",
            "A256KW",
            "ECDH-ES",
            "dir",
            "A192KW",
          ],
          "supportedAuthorizationResponseEncryptionEnc": [
            "A256GCM",
            "A192GCM",
            "A128GCM",
            "A128CBC-HS256",
            "A192CBC-HS384",
            "A256CBC-HS512",
          ],
          "supportedAuthorizationResponseSigningAlgorithms": [
            "PS384",
            "RS384",
            "EdDSA",
            "ES384",
            "HS256",
            "HS512",
            "ES256",
            "RS256",
            "HS384",
            "ES512",
            "PS256",
            "PS512",
            "RS512",
          ],
          "supportedRequestParameterEncryptionAlgorithms": [
            "ECDH-ES+A256KW",
            "ECDH-ES+A192KW",
            "ECDH-ES+A128KW",
            "RSA-OAEP",
            "RSA-OAEP-256",
            "A128KW",
            "A256KW",
            "ECDH-ES",
            "dir",
            "A192KW",
          ],
          "supportedRequestParameterEncryptionEnc": [
            "A256GCM",
            "A192GCM",
            "A128GCM",
            "A128CBC-HS256",
            "A192CBC-HS384",
            "A256CBC-HS512",
          ],
          "supportedRequestParameterSigningAlgorithms": [
            "PS384",
            "ES384",
            "RS384",
            "HS256",
            "HS512",
            "ES256",
            "RS256",
            "HS384",
            "ES512",
            "PS256",
            "PS512",
            "RS512",
          ],
          "supportedTokenEndpointAuthenticationSigningAlgorithms": [
            "PS384",
            "ES384",
            "RS384",
            "HS256",
            "HS512",
            "ES256",
            "RS256",
            "HS384",
            "ES512",
            "PS256",
            "PS512",
            "RS512",
          ],
          "supportedTokenIntrospectionResponseEncryptionAlgorithms": [
            "ECDH-ES+A256KW",
            "ECDH-ES+A192KW",
            "RSA-OAEP",
            "ECDH-ES+A128KW",
            "RSA-OAEP-256",
            "A128KW",
            "A256KW",
            "ECDH-ES",
            "dir",
            "A192KW",
          ],
          "supportedTokenIntrospectionResponseEncryptionEnc": [
            "A256GCM",
            "A192GCM",
            "A128GCM",
            "A128CBC-HS256",
            "A192CBC-HS384",
            "A256CBC-HS512",
          ],
          "supportedTokenIntrospectionResponseSigningAlgorithms": [
            "PS384",
            "RS384",
            "EdDSA",
            "ES384",
            "HS256",
            "HS512",
            "ES256",
            "RS256",
            "HS384",
            "ES512",
            "PS256",
            "PS512",
            "RS512",
          ],
          "supportedUserInfoEncryptionAlgorithms": [
            "ECDH-ES+A256KW",
            "ECDH-ES+A192KW",
            "RSA-OAEP",
            "ECDH-ES+A128KW",
            "RSA-OAEP-256",
            "A128KW",
            "A256KW",
            "ECDH-ES",
            "dir",
            "A192KW",
          ],
          "supportedUserInfoEncryptionEnc": [
            "A256GCM",
            "A192GCM",
            "A128GCM",
            "A128CBC-HS256",
            "A192CBC-HS384",
            "A256CBC-HS512",
          ],
          "supportedUserInfoSigningAlgorithms": [
            "ES384",
            "HS256",
            "HS512",
            "ES256",
            "RS256",
            "HS384",
            "ES512",
          ],
          "useForceAuthnForMaxAge": false,
          "useForceAuthnForPromptLogin": false,
        },
        "cibaConfig": {
          "cibaAuthReqIdLifetime": 600,
          "cibaMinimumPollingInterval": 2,
          "supportedCibaSigningAlgorithms": [
            "ES256",
            "PS256",
          ],
        },
        "clientDynamicRegistrationConfig": {
          "allowDynamicRegistration": false,
          "dynamicClientRegistrationScope": "dynamic_client_registration",
          "dynamicClientRegistrationSoftwareStatementRequired": false,
          "generateRegistrationAccessTokens": true,
          "requiredSoftwareStatementAttestedAttributes": [
            "redirect_uris",
          ],
        },
        "consent": {
          "clientsCanSkipConsent": true,
          "enableRemoteConsent": false,
          "supportedRcsRequestEncryptionAlgorithms": [
            "ECDH-ES+A256KW",
            "ECDH-ES+A192KW",
            "RSA-OAEP",
            "ECDH-ES+A128KW",
            "RSA-OAEP-256",
            "A128KW",
            "A256KW",
            "ECDH-ES",
            "dir",
            "A192KW",
          ],
          "supportedRcsRequestEncryptionMethods": [
            "A256GCM",
            "A192GCM",
            "A128GCM",
            "A128CBC-HS256",
            "A192CBC-HS384",
            "A256CBC-HS512",
          ],
          "supportedRcsRequestSigningAlgorithms": [
            "PS384",
            "ES384",
            "RS384",
            "HS256",
            "HS512",
            "ES256",
            "RS256",
            "HS384",
            "ES512",
            "PS256",
            "PS512",
            "RS512",
          ],
          "supportedRcsResponseEncryptionAlgorithms": [
            "ECDH-ES+A256KW",
            "ECDH-ES+A192KW",
            "ECDH-ES+A128KW",
            "RSA-OAEP",
            "RSA-OAEP-256",
            "A128KW",
            "A256KW",
            "ECDH-ES",
            "dir",
            "A192KW",
          ],
          "supportedRcsResponseEncryptionMethods": [
            "A256GCM",
            "A192GCM",
            "A128GCM",
            "A128CBC-HS256",
            "A192CBC-HS384",
            "A256CBC-HS512",
          ],
          "supportedRcsResponseSigningAlgorithms": [
            "PS384",
            "ES384",
            "RS384",
            "HS256",
            "HS512",
            "ES256",
            "RS256",
            "HS384",
            "ES512",
            "PS256",
            "PS512",
            "RS512",
          ],
        },
        "coreOAuth2Config": {
          "accessTokenLifetime": 3600,
          "accessTokenMayActScript": "[Empty]",
          "codeLifetime": 120,
          "issueRefreshToken": true,
          "issueRefreshTokenOnRefreshedToken": true,
          "macaroonTokensEnabled": false,
          "oidcMayActScript": "[Empty]",
          "refreshTokenLifetime": 604800,
          "scopesPolicySet": "oauth2Scopes",
          "statelessTokensEnabled": true,
          "usePolicyEngineForScope": false,
        },
        "coreOIDCConfig": {
          "jwtTokenLifetime": 3600,
          "oidcDiscoveryEndpointEnabled": true,
          "overrideableOIDCClaims": [],
          "supportedClaims": [],
          "supportedIDTokenEncryptionAlgorithms": [
            "ECDH-ES+A256KW",
            "ECDH-ES+A192KW",
            "RSA-OAEP",
            "ECDH-ES+A128KW",
            "RSA-OAEP-256",
            "A128KW",
            "A256KW",
            "ECDH-ES",
            "dir",
            "A192KW",
          ],
          "supportedIDTokenEncryptionMethods": [
            "A256GCM",
            "A192GCM",
            "A128GCM",
            "A128CBC-HS256",
            "A192CBC-HS384",
            "A256CBC-HS512",
          ],
          "supportedIDTokenSigningAlgorithms": [
            "PS384",
            "ES384",
            "RS384",
            "HS256",
            "HS512",
            "ES256",
            "RS256",
            "HS384",
            "ES512",
            "PS256",
            "PS512",
            "RS512",
          ],
        },
        "deviceCodeConfig": {
          "deviceCodeLifetime": 300,
          "devicePollInterval": 5,
          "deviceUserCodeCharacterSet": "234567ACDEFGHJKLMNPQRSTWXYZabcdefhijkmnopqrstwxyz",
          "deviceUserCodeLength": 8,
        },
        "pluginsConfig": {
          "accessTokenEnricherClass": "org.forgerock.openam.oauth2.OpenAMScopeValidator",
          "accessTokenModificationPluginType": "SCRIPTED",
          "accessTokenModificationScript": "39c08084-1238-43e8-857f-2e11005eac49",
          "accessTokenModifierClass": "org.forgerock.openam.oauth2.OpenAMScopeValidator",
          "authorizeEndpointDataProviderClass": "org.forgerock.openam.oauth2.OpenAMScopeValidator",
          "authorizeEndpointDataProviderPluginType": "JAVA",
          "authorizeEndpointDataProviderScript": "[Empty]",
          "evaluateScopeClass": "org.forgerock.openam.oauth2.OpenAMScopeValidator",
          "evaluateScopePluginType": "JAVA",
          "evaluateScopeScript": "[Empty]",
          "oidcClaimsClass": "org.forgerock.openam.oauth2.OpenAMScopeValidator",
          "oidcClaimsPluginType": "SCRIPTED",
          "oidcClaimsScript": "cf3515f0-8278-4ee3-a530-1bad7424c416",
          "userCodeGeneratorClass": "org.forgerock.oauth2.core.plugins.registry.DefaultUserCodeGenerator",
          "validateScopeClass": "org.forgerock.openam.oauth2.OpenAMScopeValidator",
          "validateScopePluginType": "JAVA",
          "validateScopeScript": "[Empty]",
        },
      },
      "_rev": "609033111",
      "_type": {
        "_id": "OAuth2Client",
        "collection": true,
        "name": "OAuth2 Clients",
      },
      "advancedOAuth2ClientConfig": {
        "clientUri": [],
        "contacts": [],
        "customProperties": [],
        "descriptions": [
          "Created by Frodo on 8/11/2022, 5:31:09 PM",
        ],
        "grantTypes": [
          "client_credentials",
        ],
        "isConsentImplied": true,
        "javascriptOrigins": [],
        "logoUri": [],
        "mixUpMitigation": false,
        "name": [],
        "policyUri": [],
        "refreshTokenGracePeriod": 0,
        "requestUris": [],
        "require_pushed_authorization_requests": false,
        "responseTypes": [
          "token",
        ],
        "sectorIdentifierUri": null,
        "softwareIdentity": null,
        "softwareVersion": null,
        "subjectType": "Public",
        "tokenEndpointAuthMethod": "client_secret_basic",
        "tokenExchangeAuthLevel": 0,
        "tosURI": [],
        "updateAccessToken": null,
      },
      "coreOAuth2ClientConfig": {
        "accessTokenLifetime": 3600,
        "agentgroup": null,
        "authorizationCodeLifetime": 120,
        "clientName": [
          "23281ea7-739b-4fd1-b953-eaae73a2b497",
        ],
        "clientType": "Confidential",
        "defaultScopes": [
          "fr:idm:*",
        ],
        "loopbackInterfaceRedirection": false,
        "redirectionUris": [],
        "refreshTokenLifetime": 604800,
        "scopes": [
          "fr:idm:*",
          "fr:idc:esv:*",
          "dynamic_client_registration",
        ],
        "status": "Active",
        "userpassword": null,
      },
      "coreOpenIDClientConfig": {
        "backchannel_logout_session_required": false,
        "backchannel_logout_uri": null,
        "claims": [],
        "clientSessionUri": null,
        "defaultAcrValues": [],
        "defaultMaxAge": 600,
        "defaultMaxAgeEnabled": false,
        "jwtTokenLifetime": 3600,
        "postLogoutRedirectUri": [],
      },
      "coreUmaClientConfig": {
        "claimsRedirectionUris": [],
      },
      "overrideOAuth2ClientConfig": {
        "accessTokenMayActScript": "[Empty]",
        "accessTokenModificationPluginType": "PROVIDER",
        "accessTokenModificationScript": "[Empty]",
        "accessTokenModifierClass": null,
        "authorizeEndpointDataProviderClass": "org.forgerock.oauth2.core.plugins.registry.DefaultEndpointDataProvider",
        "authorizeEndpointDataProviderPluginType": "PROVIDER",
        "authorizeEndpointDataProviderScript": "[Empty]",
        "clientsCanSkipConsent": false,
        "customLoginUrlTemplate": null,
        "enableRemoteConsent": false,
        "evaluateScopeClass": "org.forgerock.oauth2.core.plugins.registry.DefaultScopeEvaluator",
        "evaluateScopePluginType": "PROVIDER",
        "evaluateScopeScript": "[Empty]",
        "issueRefreshToken": true,
        "issueRefreshTokenOnRefreshedToken": true,
        "oidcClaimsClass": null,
        "oidcClaimsPluginType": "PROVIDER",
        "oidcClaimsScript": "[Empty]",
        "oidcMayActScript": "[Empty]",
        "overrideableOIDCClaims": [],
        "providerOverridesEnabled": false,
        "remoteConsentServiceId": null,
        "statelessTokensEnabled": false,
        "tokenEncryptionEnabled": false,
        "usePolicyEngineForScope": false,
        "validateScopeClass": "org.forgerock.oauth2.core.plugins.registry.DefaultScopeValidator",
        "validateScopePluginType": "PROVIDER",
        "validateScopeScript": "[Empty]",
      },
      "signEncOAuth2ClientConfig": {
        "authorizationResponseEncryptionAlgorithm": null,
        "authorizationResponseEncryptionMethod": null,
        "authorizationResponseSigningAlgorithm": "RS256",
        "clientJwtPublicKey": null,
        "idTokenEncryptionAlgorithm": "RSA-OAEP-256",
        "idTokenEncryptionEnabled": false,
        "idTokenEncryptionMethod": "A128CBC-HS256",
        "idTokenPublicEncryptionKey": null,
        "idTokenSignedResponseAlg": "RS256",
        "jwkSet": null,
        "jwkStoreCacheMissCacheTime": 60000,
        "jwksCacheTimeout": 3600000,
        "jwksUri": null,
        "mTLSCertificateBoundAccessTokens": false,
        "mTLSSubjectDN": null,
        "mTLSTrustedCert": null,
        "publicKeyLocation": "jwks_uri",
        "requestParameterEncryptedAlg": null,
        "requestParameterEncryptedEncryptionAlgorithm": "A128CBC-HS256",
        "requestParameterSignedAlg": null,
        "tokenEndpointAuthSigningAlgorithm": "RS256",
        "tokenIntrospectionEncryptedResponseAlg": "RSA-OAEP-256",
        "tokenIntrospectionEncryptedResponseEncryptionAlgorithm": "A128CBC-HS256",
        "tokenIntrospectionResponseFormat": "JSON",
        "tokenIntrospectionSignedResponseAlg": "RS256",
        "userinfoEncryptedResponseAlg": null,
        "userinfoEncryptedResponseEncryptionAlgorithm": "A128CBC-HS256",
        "userinfoResponseFormat": "JSON",
        "userinfoSignedResponseAlg": null,
      },
    },
    "49a2981c-e192-4739-a0e6-c7582168bdf5": {
      "_id": "49a2981c-e192-4739-a0e6-c7582168bdf5",
      "_provider": {
        "_id": "",
        "_rev": "520068704",
        "_type": {
          "_id": "oauth-oidc",
          "collection": false,
          "name": "OAuth2 Provider",
        },
        "advancedOAuth2Config": {
          "allowClientCredentialsInTokenRequestQueryParameters": true,
          "allowedAudienceValues": [],
          "authenticationAttributes": [
            "uid",
          ],
          "codeVerifierEnforced": "false",
          "defaultScopes": [
            "address",
            "phone",
            "openid",
            "profile",
            "email",
          ],
          "displayNameAttribute": "cn",
          "expClaimRequiredInRequestObject": false,
          "grantTypes": [
            "implicit",
            "urn:ietf:params:oauth:grant-type:saml2-bearer",
            "refresh_token",
            "password",
            "client_credentials",
            "urn:ietf:params:oauth:grant-type:device_code",
            "authorization_code",
            "urn:openid:params:grant-type:ciba",
            "urn:ietf:params:oauth:grant-type:uma-ticket",
            "urn:ietf:params:oauth:grant-type:jwt-bearer",
          ],
          "hashSalt": "&{am.oidc.client.subject.identifier.hash.salt}",
          "macaroonTokenFormat": "V2",
          "maxAgeOfRequestObjectNbfClaim": 0,
          "maxDifferenceBetweenRequestObjectNbfAndExp": 0,
          "moduleMessageEnabledInPasswordGrant": false,
          "nbfClaimRequiredInRequestObject": false,
          "parRequestUriLifetime": 90,
          "passwordGrantAuthService": "PasswordGrant",
          "persistentClaims": [],
          "refreshTokenGracePeriod": 0,
          "requestObjectProcessing": "OIDC",
          "requirePushedAuthorizationRequests": false,
          "responseTypeClasses": [
            "code|org.forgerock.oauth2.core.AuthorizationCodeResponseTypeHandler",
            "device_code|org.forgerock.oauth2.core.TokenResponseTypeHandler",
            "token|org.forgerock.oauth2.core.TokenResponseTypeHandler",
            "id_token|org.forgerock.openidconnect.IdTokenResponseTypeHandler",
          ],
          "supportedScopes": [
            "email|Your email address",
            "openid|",
            "address|Your postal address",
            "phone|Your telephone number(s)",
            "profile|Your personal information",
            "fr:idm:*",
            "am-introspect-all-tokens",
          ],
          "supportedSubjectTypes": [
            "public",
            "pairwise",
          ],
          "tlsCertificateBoundAccessTokensEnabled": true,
          "tlsCertificateRevocationCheckingEnabled": false,
          "tlsClientCertificateHeaderFormat": "URLENCODED_PEM",
          "tokenCompressionEnabled": false,
          "tokenEncryptionEnabled": false,
          "tokenExchangeClasses": [
            "urn:ietf:params:oauth:token-type:access_token=>urn:ietf:params:oauth:token-type:access_token|org.forgerock.oauth2.core.tokenexchange.accesstoken.AccessTokenToAccessTokenExchanger",
            "urn:ietf:params:oauth:token-type:id_token=>urn:ietf:params:oauth:token-type:id_token|org.forgerock.oauth2.core.tokenexchange.idtoken.IdTokenToIdTokenExchanger",
            "urn:ietf:params:oauth:token-type:access_token=>urn:ietf:params:oauth:token-type:id_token|org.forgerock.oauth2.core.tokenexchange.accesstoken.AccessTokenToIdTokenExchanger",
            "urn:ietf:params:oauth:token-type:id_token=>urn:ietf:params:oauth:token-type:access_token|org.forgerock.oauth2.core.tokenexchange.idtoken.IdTokenToAccessTokenExchanger",
          ],
          "tokenSigningAlgorithm": "HS256",
          "tokenValidatorClasses": [
            "urn:ietf:params:oauth:token-type:id_token|org.forgerock.oauth2.core.tokenexchange.idtoken.OidcIdTokenValidator",
            "urn:ietf:params:oauth:token-type:access_token|org.forgerock.oauth2.core.tokenexchange.accesstoken.OAuth2AccessTokenValidator",
          ],
        },
        "advancedOIDCConfig": {
          "alwaysAddClaimsToToken": true,
          "amrMappings": {},
          "authorisedIdmDelegationClients": [],
          "authorisedOpenIdConnectSSOClients": [],
          "claimsParameterSupported": false,
          "defaultACR": [],
          "idTokenInfoClientAuthenticationEnabled": true,
          "includeAllKtyAlgCombinationsInJwksUri": false,
          "loaMapping": {},
          "storeOpsTokens": true,
          "supportedAuthorizationResponseEncryptionAlgorithms": [
            "ECDH-ES+A256KW",
            "ECDH-ES+A192KW",
            "RSA-OAEP",
            "ECDH-ES+A128KW",
            "RSA-OAEP-256",
            "A128KW",
            "A256KW",
            "ECDH-ES",
            "dir",
            "A192KW",
          ],
          "supportedAuthorizationResponseEncryptionEnc": [
            "A256GCM",
            "A192GCM",
            "A128GCM",
            "A128CBC-HS256",
            "A192CBC-HS384",
            "A256CBC-HS512",
          ],
          "supportedAuthorizationResponseSigningAlgorithms": [
            "PS384",
            "RS384",
            "EdDSA",
            "ES384",
            "HS256",
            "HS512",
            "ES256",
            "RS256",
            "HS384",
            "ES512",
            "PS256",
            "PS512",
            "RS512",
          ],
          "supportedRequestParameterEncryptionAlgorithms": [
            "ECDH-ES+A256KW",
            "ECDH-ES+A192KW",
            "ECDH-ES+A128KW",
            "RSA-OAEP",
            "RSA-OAEP-256",
            "A128KW",
            "A256KW",
            "ECDH-ES",
            "dir",
            "A192KW",
          ],
          "supportedRequestParameterEncryptionEnc": [
            "A256GCM",
            "A192GCM",
            "A128GCM",
            "A128CBC-HS256",
            "A192CBC-HS384",
            "A256CBC-HS512",
          ],
          "supportedRequestParameterSigningAlgorithms": [
            "PS384",
            "ES384",
            "RS384",
            "HS256",
            "HS512",
            "ES256",
            "RS256",
            "HS384",
            "ES512",
            "PS256",
            "PS512",
            "RS512",
          ],
          "supportedTokenEndpointAuthenticationSigningAlgorithms": [
            "PS384",
            "ES384",
            "RS384",
            "HS256",
            "HS512",
            "ES256",
            "RS256",
            "HS384",
            "ES512",
            "PS256",
            "PS512",
            "RS512",
          ],
          "supportedTokenIntrospectionResponseEncryptionAlgorithms": [
            "ECDH-ES+A256KW",
            "ECDH-ES+A192KW",
            "RSA-OAEP",
            "ECDH-ES+A128KW",
            "RSA-OAEP-256",
            "A128KW",
            "A256KW",
            "ECDH-ES",
            "dir",
            "A192KW",
          ],
          "supportedTokenIntrospectionResponseEncryptionEnc": [
            "A256GCM",
            "A192GCM",
            "A128GCM",
            "A128CBC-HS256",
            "A192CBC-HS384",
            "A256CBC-HS512",
          ],
          "supportedTokenIntrospectionResponseSigningAlgorithms": [
            "PS384",
            "RS384",
            "EdDSA",
            "ES384",
            "HS256",
            "HS512",
            "ES256",
            "RS256",
            "HS384",
            "ES512",
            "PS256",
            "PS512",
            "RS512",
          ],
          "supportedUserInfoEncryptionAlgorithms": [
            "ECDH-ES+A256KW",
            "ECDH-ES+A192KW",
            "RSA-OAEP",
            "ECDH-ES+A128KW",
            "RSA-OAEP-256",
            "A128KW",
            "A256KW",
            "ECDH-ES",
            "dir",
            "A192KW",
          ],
          "supportedUserInfoEncryptionEnc": [
            "A256GCM",
            "A192GCM",
            "A128GCM",
            "A128CBC-HS256",
            "A192CBC-HS384",
            "A256CBC-HS512",
          ],
          "supportedUserInfoSigningAlgorithms": [
            "ES384",
            "HS256",
            "HS512",
            "ES256",
            "RS256",
            "HS384",
            "ES512",
          ],
          "useForceAuthnForMaxAge": false,
          "useForceAuthnForPromptLogin": false,
        },
        "cibaConfig": {
          "cibaAuthReqIdLifetime": 600,
          "cibaMinimumPollingInterval": 2,
          "supportedCibaSigningAlgorithms": [
            "ES256",
            "PS256",
          ],
        },
        "clientDynamicRegistrationConfig": {
          "allowDynamicRegistration": false,
          "dynamicClientRegistrationScope": "dynamic_client_registration",
          "dynamicClientRegistrationSoftwareStatementRequired": false,
          "generateRegistrationAccessTokens": true,
          "requiredSoftwareStatementAttestedAttributes": [
            "redirect_uris",
          ],
        },
        "consent": {
          "clientsCanSkipConsent": true,
          "enableRemoteConsent": false,
          "supportedRcsRequestEncryptionAlgorithms": [
            "ECDH-ES+A256KW",
            "ECDH-ES+A192KW",
            "RSA-OAEP",
            "ECDH-ES+A128KW",
            "RSA-OAEP-256",
            "A128KW",
            "A256KW",
            "ECDH-ES",
            "dir",
            "A192KW",
          ],
          "supportedRcsRequestEncryptionMethods": [
            "A256GCM",
            "A192GCM",
            "A128GCM",
            "A128CBC-HS256",
            "A192CBC-HS384",
            "A256CBC-HS512",
          ],
          "supportedRcsRequestSigningAlgorithms": [
            "PS384",
            "ES384",
            "RS384",
            "HS256",
            "HS512",
            "ES256",
            "RS256",
            "HS384",
            "ES512",
            "PS256",
            "PS512",
            "RS512",
          ],
          "supportedRcsResponseEncryptionAlgorithms": [
            "ECDH-ES+A256KW",
            "ECDH-ES+A192KW",
            "ECDH-ES+A128KW",
            "RSA-OAEP",
            "RSA-OAEP-256",
            "A128KW",
            "A256KW",
            "ECDH-ES",
            "dir",
            "A192KW",
          ],
          "supportedRcsResponseEncryptionMethods": [
            "A256GCM",
            "A192GCM",
            "A128GCM",
            "A128CBC-HS256",
            "A192CBC-HS384",
            "A256CBC-HS512",
          ],
          "supportedRcsResponseSigningAlgorithms": [
            "PS384",
            "ES384",
            "RS384",
            "HS256",
            "HS512",
            "ES256",
            "RS256",
            "HS384",
            "ES512",
            "PS256",
            "PS512",
            "RS512",
          ],
        },
        "coreOAuth2Config": {
          "accessTokenLifetime": 3600,
          "accessTokenMayActScript": "[Empty]",
          "codeLifetime": 120,
          "issueRefreshToken": true,
          "issueRefreshTokenOnRefreshedToken": true,
          "macaroonTokensEnabled": false,
          "oidcMayActScript": "[Empty]",
          "refreshTokenLifetime": 604800,
          "scopesPolicySet": "oauth2Scopes",
          "statelessTokensEnabled": true,
          "usePolicyEngineForScope": false,
        },
        "coreOIDCConfig": {
          "jwtTokenLifetime": 3600,
          "oidcDiscoveryEndpointEnabled": true,
          "overrideableOIDCClaims": [],
          "supportedClaims": [],
          "supportedIDTokenEncryptionAlgorithms": [
            "ECDH-ES+A256KW",
            "ECDH-ES+A192KW",
            "RSA-OAEP",
            "ECDH-ES+A128KW",
            "RSA-OAEP-256",
            "A128KW",
            "A256KW",
            "ECDH-ES",
            "dir",
            "A192KW",
          ],
          "supportedIDTokenEncryptionMethods": [
            "A256GCM",
            "A192GCM",
            "A128GCM",
            "A128CBC-HS256",
            "A192CBC-HS384",
            "A256CBC-HS512",
          ],
          "supportedIDTokenSigningAlgorithms": [
            "PS384",
            "ES384",
            "RS384",
            "HS256",
            "HS512",
            "ES256",
            "RS256",
            "HS384",
            "ES512",
            "PS256",
            "PS512",
            "RS512",
          ],
        },
        "deviceCodeConfig": {
          "deviceCodeLifetime": 300,
          "devicePollInterval": 5,
          "deviceUserCodeCharacterSet": "234567ACDEFGHJKLMNPQRSTWXYZabcdefhijkmnopqrstwxyz",
          "deviceUserCodeLength": 8,
        },
        "pluginsConfig": {
          "accessTokenEnricherClass": "org.forgerock.openam.oauth2.OpenAMScopeValidator",
          "accessTokenModificationPluginType": "SCRIPTED",
          "accessTokenModificationScript": "39c08084-1238-43e8-857f-2e11005eac49",
          "accessTokenModifierClass": "org.forgerock.openam.oauth2.OpenAMScopeValidator",
          "authorizeEndpointDataProviderClass": "org.forgerock.openam.oauth2.OpenAMScopeValidator",
          "authorizeEndpointDataProviderPluginType": "JAVA",
          "authorizeEndpointDataProviderScript": "[Empty]",
          "evaluateScopeClass": "org.forgerock.openam.oauth2.OpenAMScopeValidator",
          "evaluateScopePluginType": "JAVA",
          "evaluateScopeScript": "[Empty]",
          "oidcClaimsClass": "org.forgerock.openam.oauth2.OpenAMScopeValidator",
          "oidcClaimsPluginType": "SCRIPTED",
          "oidcClaimsScript": "cf3515f0-8278-4ee3-a530-1bad7424c416",
          "userCodeGeneratorClass": "org.forgerock.oauth2.core.plugins.registry.DefaultUserCodeGenerator",
          "validateScopeClass": "org.forgerock.openam.oauth2.OpenAMScopeValidator",
          "validateScopePluginType": "JAVA",
          "validateScopeScript": "[Empty]",
        },
      },
      "_rev": "114809105",
      "_type": {
        "_id": "OAuth2Client",
        "collection": true,
        "name": "OAuth2 Clients",
      },
      "advancedOAuth2ClientConfig": {
        "clientUri": [],
        "contacts": [],
        "customProperties": [],
        "descriptions": [
          "Created by Frodo on 5/13/2023, 8:07:37 PM",
        ],
        "grantTypes": [
          "client_credentials",
        ],
        "isConsentImplied": true,
        "javascriptOrigins": [],
        "logoUri": [],
        "mixUpMitigation": false,
        "name": [],
        "policyUri": [],
        "refreshTokenGracePeriod": 0,
        "requestUris": [],
        "require_pushed_authorization_requests": false,
        "responseTypes": [
          "token",
        ],
        "sectorIdentifierUri": null,
        "softwareIdentity": null,
        "softwareVersion": null,
        "subjectType": "Public",
        "tokenEndpointAuthMethod": "client_secret_basic",
        "tokenExchangeAuthLevel": 0,
        "tosURI": [],
        "updateAccessToken": null,
      },
      "coreOAuth2ClientConfig": {
        "accessTokenLifetime": 3600,
        "authorizationCodeLifetime": 120,
        "clientName": [
          "49a2981c-e192-4739-a0e6-c7582168bdf5",
        ],
        "clientType": "Confidential",
        "defaultScopes": [
          "fr:idm:*",
        ],
        "loopbackInterfaceRedirection": false,
        "redirectionUris": [],
        "refreshTokenLifetime": 604800,
        "scopes": [
          "fr:idm:*",
          "fr:idc:esv:*",
          "dynamic_client_registration",
        ],
        "status": "Active",
        "userpassword": null,
      },
      "coreOpenIDClientConfig": {
        "backchannel_logout_session_required": false,
        "backchannel_logout_uri": null,
        "claims": [],
        "clientSessionUri": null,
        "defaultAcrValues": [],
        "defaultMaxAge": 600,
        "defaultMaxAgeEnabled": false,
        "jwtTokenLifetime": 3600,
        "postLogoutRedirectUri": [],
      },
      "coreUmaClientConfig": {
        "claimsRedirectionUris": [],
      },
      "overrideOAuth2ClientConfig": {
        "accessTokenMayActScript": "[Empty]",
        "accessTokenModificationPluginType": "PROVIDER",
        "accessTokenModificationScript": "[Empty]",
        "authorizeEndpointDataProviderClass": "org.forgerock.oauth2.core.plugins.registry.DefaultEndpointDataProvider",
        "authorizeEndpointDataProviderPluginType": "PROVIDER",
        "authorizeEndpointDataProviderScript": "[Empty]",
        "clientsCanSkipConsent": false,
        "enableRemoteConsent": false,
        "evaluateScopeClass": "org.forgerock.oauth2.core.plugins.registry.DefaultScopeEvaluator",
        "evaluateScopePluginType": "PROVIDER",
        "evaluateScopeScript": "[Empty]",
        "issueRefreshToken": true,
        "issueRefreshTokenOnRefreshedToken": true,
        "oidcClaimsPluginType": "PROVIDER",
        "oidcClaimsScript": "[Empty]",
        "oidcMayActScript": "[Empty]",
        "overrideableOIDCClaims": [],
        "providerOverridesEnabled": false,
        "remoteConsentServiceId": null,
        "scopesPolicySet": "oauth2Scopes",
        "statelessTokensEnabled": false,
        "tokenEncryptionEnabled": false,
        "usePolicyEngineForScope": false,
        "validateScopeClass": "org.forgerock.oauth2.core.plugins.registry.DefaultScopeValidator",
        "validateScopePluginType": "PROVIDER",
        "validateScopeScript": "[Empty]",
      },
      "signEncOAuth2ClientConfig": {
        "authorizationResponseEncryptionAlgorithm": null,
        "authorizationResponseEncryptionMethod": null,
        "authorizationResponseSigningAlgorithm": "RS256",
        "clientJwtPublicKey": null,
        "idTokenEncryptionAlgorithm": "RSA-OAEP-256",
        "idTokenEncryptionEnabled": false,
        "idTokenEncryptionMethod": "A128CBC-HS256",
        "idTokenPublicEncryptionKey": null,
        "idTokenSignedResponseAlg": "RS256",
        "jwkSet": null,
        "jwkStoreCacheMissCacheTime": 60000,
        "jwksCacheTimeout": 3600000,
        "jwksUri": null,
        "mTLSCertificateBoundAccessTokens": false,
        "mTLSSubjectDN": null,
        "mTLSTrustedCert": null,
        "publicKeyLocation": "jwks_uri",
        "requestParameterEncryptedAlg": null,
        "requestParameterEncryptedEncryptionAlgorithm": "A128CBC-HS256",
        "requestParameterSignedAlg": null,
        "tokenEndpointAuthSigningAlgorithm": "RS256",
        "tokenIntrospectionEncryptedResponseAlg": "RSA-OAEP-256",
        "tokenIntrospectionEncryptedResponseEncryptionAlgorithm": "A128CBC-HS256",
        "tokenIntrospectionResponseFormat": "JSON",
        "tokenIntrospectionSignedResponseAlg": "RS256",
        "userinfoEncryptedResponseAlg": null,
        "userinfoEncryptedResponseEncryptionAlgorithm": "A128CBC-HS256",
        "userinfoResponseFormat": "JSON",
        "userinfoSignedResponseAlg": null,
      },
    },
    "86fca6d7-2f52-4524-92c6-b6f416071455": {
      "_id": "86fca6d7-2f52-4524-92c6-b6f416071455",
      "_provider": {
        "_id": "",
        "_rev": "520068704",
        "_type": {
          "_id": "oauth-oidc",
          "collection": false,
          "name": "OAuth2 Provider",
        },
        "advancedOAuth2Config": {
          "allowClientCredentialsInTokenRequestQueryParameters": true,
          "allowedAudienceValues": [],
          "authenticationAttributes": [
            "uid",
          ],
          "codeVerifierEnforced": "false",
          "defaultScopes": [
            "address",
            "phone",
            "openid",
            "profile",
            "email",
          ],
          "displayNameAttribute": "cn",
          "expClaimRequiredInRequestObject": false,
          "grantTypes": [
            "implicit",
            "urn:ietf:params:oauth:grant-type:saml2-bearer",
            "refresh_token",
            "password",
            "client_credentials",
            "urn:ietf:params:oauth:grant-type:device_code",
            "authorization_code",
            "urn:openid:params:grant-type:ciba",
            "urn:ietf:params:oauth:grant-type:uma-ticket",
            "urn:ietf:params:oauth:grant-type:jwt-bearer",
          ],
          "hashSalt": "&{am.oidc.client.subject.identifier.hash.salt}",
          "macaroonTokenFormat": "V2",
          "maxAgeOfRequestObjectNbfClaim": 0,
          "maxDifferenceBetweenRequestObjectNbfAndExp": 0,
          "moduleMessageEnabledInPasswordGrant": false,
          "nbfClaimRequiredInRequestObject": false,
          "parRequestUriLifetime": 90,
          "passwordGrantAuthService": "PasswordGrant",
          "persistentClaims": [],
          "refreshTokenGracePeriod": 0,
          "requestObjectProcessing": "OIDC",
          "requirePushedAuthorizationRequests": false,
          "responseTypeClasses": [
            "code|org.forgerock.oauth2.core.AuthorizationCodeResponseTypeHandler",
            "device_code|org.forgerock.oauth2.core.TokenResponseTypeHandler",
            "token|org.forgerock.oauth2.core.TokenResponseTypeHandler",
            "id_token|org.forgerock.openidconnect.IdTokenResponseTypeHandler",
          ],
          "supportedScopes": [
            "email|Your email address",
            "openid|",
            "address|Your postal address",
            "phone|Your telephone number(s)",
            "profile|Your personal information",
            "fr:idm:*",
            "am-introspect-all-tokens",
          ],
          "supportedSubjectTypes": [
            "public",
            "pairwise",
          ],
          "tlsCertificateBoundAccessTokensEnabled": true,
          "tlsCertificateRevocationCheckingEnabled": false,
          "tlsClientCertificateHeaderFormat": "URLENCODED_PEM",
          "tokenCompressionEnabled": false,
          "tokenEncryptionEnabled": false,
          "tokenExchangeClasses": [
            "urn:ietf:params:oauth:token-type:access_token=>urn:ietf:params:oauth:token-type:access_token|org.forgerock.oauth2.core.tokenexchange.accesstoken.AccessTokenToAccessTokenExchanger",
            "urn:ietf:params:oauth:token-type:id_token=>urn:ietf:params:oauth:token-type:id_token|org.forgerock.oauth2.core.tokenexchange.idtoken.IdTokenToIdTokenExchanger",
            "urn:ietf:params:oauth:token-type:access_token=>urn:ietf:params:oauth:token-type:id_token|org.forgerock.oauth2.core.tokenexchange.accesstoken.AccessTokenToIdTokenExchanger",
            "urn:ietf:params:oauth:token-type:id_token=>urn:ietf:params:oauth:token-type:access_token|org.forgerock.oauth2.core.tokenexchange.idtoken.IdTokenToAccessTokenExchanger",
          ],
          "tokenSigningAlgorithm": "HS256",
          "tokenValidatorClasses": [
            "urn:ietf:params:oauth:token-type:id_token|org.forgerock.oauth2.core.tokenexchange.idtoken.OidcIdTokenValidator",
            "urn:ietf:params:oauth:token-type:access_token|org.forgerock.oauth2.core.tokenexchange.accesstoken.OAuth2AccessTokenValidator",
          ],
        },
        "advancedOIDCConfig": {
          "alwaysAddClaimsToToken": true,
          "amrMappings": {},
          "authorisedIdmDelegationClients": [],
          "authorisedOpenIdConnectSSOClients": [],
          "claimsParameterSupported": false,
          "defaultACR": [],
          "idTokenInfoClientAuthenticationEnabled": true,
          "includeAllKtyAlgCombinationsInJwksUri": false,
          "loaMapping": {},
          "storeOpsTokens": true,
          "supportedAuthorizationResponseEncryptionAlgorithms": [
            "ECDH-ES+A256KW",
            "ECDH-ES+A192KW",
            "RSA-OAEP",
            "ECDH-ES+A128KW",
            "RSA-OAEP-256",
            "A128KW",
            "A256KW",
            "ECDH-ES",
            "dir",
            "A192KW",
          ],
          "supportedAuthorizationResponseEncryptionEnc": [
            "A256GCM",
            "A192GCM",
            "A128GCM",
            "A128CBC-HS256",
            "A192CBC-HS384",
            "A256CBC-HS512",
          ],
          "supportedAuthorizationResponseSigningAlgorithms": [
            "PS384",
            "RS384",
            "EdDSA",
            "ES384",
            "HS256",
            "HS512",
            "ES256",
            "RS256",
            "HS384",
            "ES512",
            "PS256",
            "PS512",
            "RS512",
          ],
          "supportedRequestParameterEncryptionAlgorithms": [
            "ECDH-ES+A256KW",
            "ECDH-ES+A192KW",
            "ECDH-ES+A128KW",
            "RSA-OAEP",
            "RSA-OAEP-256",
            "A128KW",
            "A256KW",
            "ECDH-ES",
            "dir",
            "A192KW",
          ],
          "supportedRequestParameterEncryptionEnc": [
            "A256GCM",
            "A192GCM",
            "A128GCM",
            "A128CBC-HS256",
            "A192CBC-HS384",
            "A256CBC-HS512",
          ],
          "supportedRequestParameterSigningAlgorithms": [
            "PS384",
            "ES384",
            "RS384",
            "HS256",
            "HS512",
            "ES256",
            "RS256",
            "HS384",
            "ES512",
            "PS256",
            "PS512",
            "RS512",
          ],
          "supportedTokenEndpointAuthenticationSigningAlgorithms": [
            "PS384",
            "ES384",
            "RS384",
            "HS256",
            "HS512",
            "ES256",
            "RS256",
            "HS384",
            "ES512",
            "PS256",
            "PS512",
            "RS512",
          ],
          "supportedTokenIntrospectionResponseEncryptionAlgorithms": [
            "ECDH-ES+A256KW",
            "ECDH-ES+A192KW",
            "RSA-OAEP",
            "ECDH-ES+A128KW",
            "RSA-OAEP-256",
            "A128KW",
            "A256KW",
            "ECDH-ES",
            "dir",
            "A192KW",
          ],
          "supportedTokenIntrospectionResponseEncryptionEnc": [
            "A256GCM",
            "A192GCM",
            "A128GCM",
            "A128CBC-HS256",
            "A192CBC-HS384",
            "A256CBC-HS512",
          ],
          "supportedTokenIntrospectionResponseSigningAlgorithms": [
            "PS384",
            "RS384",
            "EdDSA",
            "ES384",
            "HS256",
            "HS512",
            "ES256",
            "RS256",
            "HS384",
            "ES512",
            "PS256",
            "PS512",
            "RS512",
          ],
          "supportedUserInfoEncryptionAlgorithms": [
            "ECDH-ES+A256KW",
            "ECDH-ES+A192KW",
            "RSA-OAEP",
            "ECDH-ES+A128KW",
            "RSA-OAEP-256",
            "A128KW",
            "A256KW",
            "ECDH-ES",
            "dir",
            "A192KW",
          ],
          "supportedUserInfoEncryptionEnc": [
            "A256GCM",
            "A192GCM",
            "A128GCM",
            "A128CBC-HS256",
            "A192CBC-HS384",
            "A256CBC-HS512",
          ],
          "supportedUserInfoSigningAlgorithms": [
            "ES384",
            "HS256",
            "HS512",
            "ES256",
            "RS256",
            "HS384",
            "ES512",
          ],
          "useForceAuthnForMaxAge": false,
          "useForceAuthnForPromptLogin": false,
        },
        "cibaConfig": {
          "cibaAuthReqIdLifetime": 600,
          "cibaMinimumPollingInterval": 2,
          "supportedCibaSigningAlgorithms": [
            "ES256",
            "PS256",
          ],
        },
        "clientDynamicRegistrationConfig": {
          "allowDynamicRegistration": false,
          "dynamicClientRegistrationScope": "dynamic_client_registration",
          "dynamicClientRegistrationSoftwareStatementRequired": false,
          "generateRegistrationAccessTokens": true,
          "requiredSoftwareStatementAttestedAttributes": [
            "redirect_uris",
          ],
        },
        "consent": {
          "clientsCanSkipConsent": true,
          "enableRemoteConsent": false,
          "supportedRcsRequestEncryptionAlgorithms": [
            "ECDH-ES+A256KW",
            "ECDH-ES+A192KW",
            "RSA-OAEP",
            "ECDH-ES+A128KW",
            "RSA-OAEP-256",
            "A128KW",
            "A256KW",
            "ECDH-ES",
            "dir",
            "A192KW",
          ],
          "supportedRcsRequestEncryptionMethods": [
            "A256GCM",
            "A192GCM",
            "A128GCM",
            "A128CBC-HS256",
            "A192CBC-HS384",
            "A256CBC-HS512",
          ],
          "supportedRcsRequestSigningAlgorithms": [
            "PS384",
            "ES384",
            "RS384",
            "HS256",
            "HS512",
            "ES256",
            "RS256",
            "HS384",
            "ES512",
            "PS256",
            "PS512",
            "RS512",
          ],
          "supportedRcsResponseEncryptionAlgorithms": [
            "ECDH-ES+A256KW",
            "ECDH-ES+A192KW",
            "ECDH-ES+A128KW",
            "RSA-OAEP",
            "RSA-OAEP-256",
            "A128KW",
            "A256KW",
            "ECDH-ES",
            "dir",
            "A192KW",
          ],
          "supportedRcsResponseEncryptionMethods": [
            "A256GCM",
            "A192GCM",
            "A128GCM",
            "A128CBC-HS256",
            "A192CBC-HS384",
            "A256CBC-HS512",
          ],
          "supportedRcsResponseSigningAlgorithms": [
            "PS384",
            "ES384",
            "RS384",
            "HS256",
            "HS512",
            "ES256",
            "RS256",
            "HS384",
            "ES512",
            "PS256",
            "PS512",
            "RS512",
          ],
        },
        "coreOAuth2Config": {
          "accessTokenLifetime": 3600,
          "accessTokenMayActScript": "[Empty]",
          "codeLifetime": 120,
          "issueRefreshToken": true,
          "issueRefreshTokenOnRefreshedToken": true,
          "macaroonTokensEnabled": false,
          "oidcMayActScript": "[Empty]",
          "refreshTokenLifetime": 604800,
          "scopesPolicySet": "oauth2Scopes",
          "statelessTokensEnabled": true,
          "usePolicyEngineForScope": false,
        },
        "coreOIDCConfig": {
          "jwtTokenLifetime": 3600,
          "oidcDiscoveryEndpointEnabled": true,
          "overrideableOIDCClaims": [],
          "supportedClaims": [],
          "supportedIDTokenEncryptionAlgorithms": [
            "ECDH-ES+A256KW",
            "ECDH-ES+A192KW",
            "RSA-OAEP",
            "ECDH-ES+A128KW",
            "RSA-OAEP-256",
            "A128KW",
            "A256KW",
            "ECDH-ES",
            "dir",
            "A192KW",
          ],
          "supportedIDTokenEncryptionMethods": [
            "A256GCM",
            "A192GCM",
            "A128GCM",
            "A128CBC-HS256",
            "A192CBC-HS384",
            "A256CBC-HS512",
          ],
          "supportedIDTokenSigningAlgorithms": [
            "PS384",
            "ES384",
            "RS384",
            "HS256",
            "HS512",
            "ES256",
            "RS256",
            "HS384",
            "ES512",
            "PS256",
            "PS512",
            "RS512",
          ],
        },
        "deviceCodeConfig": {
          "deviceCodeLifetime": 300,
          "devicePollInterval": 5,
          "deviceUserCodeCharacterSet": "234567ACDEFGHJKLMNPQRSTWXYZabcdefhijkmnopqrstwxyz",
          "deviceUserCodeLength": 8,
        },
        "pluginsConfig": {
          "accessTokenEnricherClass": "org.forgerock.openam.oauth2.OpenAMScopeValidator",
          "accessTokenModificationPluginType": "SCRIPTED",
          "accessTokenModificationScript": "39c08084-1238-43e8-857f-2e11005eac49",
          "accessTokenModifierClass": "org.forgerock.openam.oauth2.OpenAMScopeValidator",
          "authorizeEndpointDataProviderClass": "org.forgerock.openam.oauth2.OpenAMScopeValidator",
          "authorizeEndpointDataProviderPluginType": "JAVA",
          "authorizeEndpointDataProviderScript": "[Empty]",
          "evaluateScopeClass": "org.forgerock.openam.oauth2.OpenAMScopeValidator",
          "evaluateScopePluginType": "JAVA",
          "evaluateScopeScript": "[Empty]",
          "oidcClaimsClass": "org.forgerock.openam.oauth2.OpenAMScopeValidator",
          "oidcClaimsPluginType": "SCRIPTED",
          "oidcClaimsScript": "cf3515f0-8278-4ee3-a530-1bad7424c416",
          "userCodeGeneratorClass": "org.forgerock.oauth2.core.plugins.registry.DefaultUserCodeGenerator",
          "validateScopeClass": "org.forgerock.openam.oauth2.OpenAMScopeValidator",
          "validateScopePluginType": "JAVA",
          "validateScopeScript": "[Empty]",
        },
      },
      "_rev": "-1085185403",
      "_type": {
        "_id": "OAuth2Client",
        "collection": true,
        "name": "OAuth2 Clients",
      },
      "advancedOAuth2ClientConfig": {
        "clientUri": [],
        "contacts": [],
        "customProperties": [],
        "descriptions": [
          "Created by Frodo on 8/11/2022, 5:32:32 PM",
        ],
        "grantTypes": [
          "client_credentials",
        ],
        "isConsentImplied": true,
        "javascriptOrigins": [],
        "logoUri": [],
        "mixUpMitigation": false,
        "name": [],
        "policyUri": [],
        "refreshTokenGracePeriod": 0,
        "requestUris": [],
        "require_pushed_authorization_requests": false,
        "responseTypes": [
          "token",
        ],
        "sectorIdentifierUri": null,
        "softwareIdentity": null,
        "softwareVersion": null,
        "subjectType": "Public",
        "tokenEndpointAuthMethod": "client_secret_basic",
        "tokenExchangeAuthLevel": 0,
        "tosURI": [],
        "updateAccessToken": null,
      },
      "coreOAuth2ClientConfig": {
        "accessTokenLifetime": 3600,
        "authorizationCodeLifetime": 120,
        "clientName": [
          "86fca6d7-2f52-4524-92c6-b6f416071455",
        ],
        "clientType": "Confidential",
        "defaultScopes": [
          "fr:idm:*",
        ],
        "loopbackInterfaceRedirection": false,
        "redirectionUris": [],
        "refreshTokenLifetime": 604800,
        "scopes": [
          "fr:idm:*",
          "fr:idc:esv:*",
          "dynamic_client_registration",
        ],
        "status": "Active",
        "userpassword": null,
      },
      "coreOpenIDClientConfig": {
        "backchannel_logout_session_required": false,
        "backchannel_logout_uri": null,
        "claims": [],
        "clientSessionUri": null,
        "defaultAcrValues": [],
        "defaultMaxAge": 600,
        "defaultMaxAgeEnabled": false,
        "jwtTokenLifetime": 3600,
        "postLogoutRedirectUri": [],
      },
      "coreUmaClientConfig": {
        "claimsRedirectionUris": [],
      },
      "overrideOAuth2ClientConfig": {
        "accessTokenMayActScript": "[Empty]",
        "accessTokenModificationPluginType": "PROVIDER",
        "accessTokenModificationScript": "[Empty]",
        "authorizeEndpointDataProviderClass": "org.forgerock.oauth2.core.plugins.registry.DefaultEndpointDataProvider",
        "authorizeEndpointDataProviderPluginType": "PROVIDER",
        "authorizeEndpointDataProviderScript": "[Empty]",
        "clientsCanSkipConsent": false,
        "enableRemoteConsent": false,
        "evaluateScopeClass": "org.forgerock.oauth2.core.plugins.registry.DefaultScopeEvaluator",
        "evaluateScopePluginType": "PROVIDER",
        "evaluateScopeScript": "[Empty]",
        "issueRefreshToken": true,
        "issueRefreshTokenOnRefreshedToken": true,
        "oidcClaimsPluginType": "PROVIDER",
        "oidcClaimsScript": "[Empty]",
        "oidcMayActScript": "[Empty]",
        "overrideableOIDCClaims": [],
        "providerOverridesEnabled": false,
        "remoteConsentServiceId": null,
        "statelessTokensEnabled": false,
        "tokenEncryptionEnabled": false,
        "usePolicyEngineForScope": false,
        "validateScopeClass": "org.forgerock.oauth2.core.plugins.registry.DefaultScopeValidator",
        "validateScopePluginType": "PROVIDER",
        "validateScopeScript": "[Empty]",
      },
      "signEncOAuth2ClientConfig": {
        "authorizationResponseEncryptionAlgorithm": null,
        "authorizationResponseEncryptionMethod": null,
        "authorizationResponseSigningAlgorithm": "RS256",
        "clientJwtPublicKey": null,
        "idTokenEncryptionAlgorithm": "RSA-OAEP-256",
        "idTokenEncryptionEnabled": false,
        "idTokenEncryptionMethod": "A128CBC-HS256",
        "idTokenPublicEncryptionKey": null,
        "idTokenSignedResponseAlg": "RS256",
        "jwkSet": null,
        "jwkStoreCacheMissCacheTime": 60000,
        "jwksCacheTimeout": 3600000,
        "jwksUri": null,
        "mTLSCertificateBoundAccessTokens": false,
        "mTLSSubjectDN": null,
        "mTLSTrustedCert": null,
        "publicKeyLocation": "jwks_uri",
        "requestParameterEncryptedAlg": null,
        "requestParameterEncryptedEncryptionAlgorithm": "A128CBC-HS256",
        "requestParameterSignedAlg": null,
        "tokenEndpointAuthSigningAlgorithm": "RS256",
        "tokenIntrospectionEncryptedResponseAlg": "RSA-OAEP-256",
        "tokenIntrospectionEncryptedResponseEncryptionAlgorithm": "A128CBC-HS256",
        "tokenIntrospectionResponseFormat": "JSON",
        "tokenIntrospectionSignedResponseAlg": "RS256",
        "userinfoEncryptedResponseAlg": null,
        "userinfoEncryptedResponseEncryptionAlgorithm": "A128CBC-HS256",
        "userinfoResponseFormat": "JSON",
        "userinfoSignedResponseAlg": null,
      },
    },
    "RCSClient": {
      "_id": "RCSClient",
      "_provider": {
        "_id": "",
        "_rev": "520068704",
        "_type": {
          "_id": "oauth-oidc",
          "collection": false,
          "name": "OAuth2 Provider",
        },
        "advancedOAuth2Config": {
          "allowClientCredentialsInTokenRequestQueryParameters": true,
          "allowedAudienceValues": [],
          "authenticationAttributes": [
            "uid",
          ],
          "codeVerifierEnforced": "false",
          "defaultScopes": [
            "address",
            "phone",
            "openid",
            "profile",
            "email",
          ],
          "displayNameAttribute": "cn",
          "expClaimRequiredInRequestObject": false,
          "grantTypes": [
            "implicit",
            "urn:ietf:params:oauth:grant-type:saml2-bearer",
            "refresh_token",
            "password",
            "client_credentials",
            "urn:ietf:params:oauth:grant-type:device_code",
            "authorization_code",
            "urn:openid:params:grant-type:ciba",
            "urn:ietf:params:oauth:grant-type:uma-ticket",
            "urn:ietf:params:oauth:grant-type:jwt-bearer",
          ],
          "hashSalt": "&{am.oidc.client.subject.identifier.hash.salt}",
          "macaroonTokenFormat": "V2",
          "maxAgeOfRequestObjectNbfClaim": 0,
          "maxDifferenceBetweenRequestObjectNbfAndExp": 0,
          "moduleMessageEnabledInPasswordGrant": false,
          "nbfClaimRequiredInRequestObject": false,
          "parRequestUriLifetime": 90,
          "passwordGrantAuthService": "PasswordGrant",
          "persistentClaims": [],
          "refreshTokenGracePeriod": 0,
          "requestObjectProcessing": "OIDC",
          "requirePushedAuthorizationRequests": false,
          "responseTypeClasses": [
            "code|org.forgerock.oauth2.core.AuthorizationCodeResponseTypeHandler",
            "device_code|org.forgerock.oauth2.core.TokenResponseTypeHandler",
            "token|org.forgerock.oauth2.core.TokenResponseTypeHandler",
            "id_token|org.forgerock.openidconnect.IdTokenResponseTypeHandler",
          ],
          "supportedScopes": [
            "email|Your email address",
            "openid|",
            "address|Your postal address",
            "phone|Your telephone number(s)",
            "profile|Your personal information",
            "fr:idm:*",
            "am-introspect-all-tokens",
          ],
          "supportedSubjectTypes": [
            "public",
            "pairwise",
          ],
          "tlsCertificateBoundAccessTokensEnabled": true,
          "tlsCertificateRevocationCheckingEnabled": false,
          "tlsClientCertificateHeaderFormat": "URLENCODED_PEM",
          "tokenCompressionEnabled": false,
          "tokenEncryptionEnabled": false,
          "tokenExchangeClasses": [
            "urn:ietf:params:oauth:token-type:access_token=>urn:ietf:params:oauth:token-type:access_token|org.forgerock.oauth2.core.tokenexchange.accesstoken.AccessTokenToAccessTokenExchanger",
            "urn:ietf:params:oauth:token-type:id_token=>urn:ietf:params:oauth:token-type:id_token|org.forgerock.oauth2.core.tokenexchange.idtoken.IdTokenToIdTokenExchanger",
            "urn:ietf:params:oauth:token-type:access_token=>urn:ietf:params:oauth:token-type:id_token|org.forgerock.oauth2.core.tokenexchange.accesstoken.AccessTokenToIdTokenExchanger",
            "urn:ietf:params:oauth:token-type:id_token=>urn:ietf:params:oauth:token-type:access_token|org.forgerock.oauth2.core.tokenexchange.idtoken.IdTokenToAccessTokenExchanger",
          ],
          "tokenSigningAlgorithm": "HS256",
          "tokenValidatorClasses": [
            "urn:ietf:params:oauth:token-type:id_token|org.forgerock.oauth2.core.tokenexchange.idtoken.OidcIdTokenValidator",
            "urn:ietf:params:oauth:token-type:access_token|org.forgerock.oauth2.core.tokenexchange.accesstoken.OAuth2AccessTokenValidator",
          ],
        },
        "advancedOIDCConfig": {
          "alwaysAddClaimsToToken": true,
          "amrMappings": {},
          "authorisedIdmDelegationClients": [],
          "authorisedOpenIdConnectSSOClients": [],
          "claimsParameterSupported": false,
          "defaultACR": [],
          "idTokenInfoClientAuthenticationEnabled": true,
          "includeAllKtyAlgCombinationsInJwksUri": false,
          "loaMapping": {},
          "storeOpsTokens": true,
          "supportedAuthorizationResponseEncryptionAlgorithms": [
            "ECDH-ES+A256KW",
            "ECDH-ES+A192KW",
            "RSA-OAEP",
            "ECDH-ES+A128KW",
            "RSA-OAEP-256",
            "A128KW",
            "A256KW",
            "ECDH-ES",
            "dir",
            "A192KW",
          ],
          "supportedAuthorizationResponseEncryptionEnc": [
            "A256GCM",
            "A192GCM",
            "A128GCM",
            "A128CBC-HS256",
            "A192CBC-HS384",
            "A256CBC-HS512",
          ],
          "supportedAuthorizationResponseSigningAlgorithms": [
            "PS384",
            "RS384",
            "EdDSA",
            "ES384",
            "HS256",
            "HS512",
            "ES256",
            "RS256",
            "HS384",
            "ES512",
            "PS256",
            "PS512",
            "RS512",
          ],
          "supportedRequestParameterEncryptionAlgorithms": [
            "ECDH-ES+A256KW",
            "ECDH-ES+A192KW",
            "ECDH-ES+A128KW",
            "RSA-OAEP",
            "RSA-OAEP-256",
            "A128KW",
            "A256KW",
            "ECDH-ES",
            "dir",
            "A192KW",
          ],
          "supportedRequestParameterEncryptionEnc": [
            "A256GCM",
            "A192GCM",
            "A128GCM",
            "A128CBC-HS256",
            "A192CBC-HS384",
            "A256CBC-HS512",
          ],
          "supportedRequestParameterSigningAlgorithms": [
            "PS384",
            "ES384",
            "RS384",
            "HS256",
            "HS512",
            "ES256",
            "RS256",
            "HS384",
            "ES512",
            "PS256",
            "PS512",
            "RS512",
          ],
          "supportedTokenEndpointAuthenticationSigningAlgorithms": [
            "PS384",
            "ES384",
            "RS384",
            "HS256",
            "HS512",
            "ES256",
            "RS256",
            "HS384",
            "ES512",
            "PS256",
            "PS512",
            "RS512",
          ],
          "supportedTokenIntrospectionResponseEncryptionAlgorithms": [
            "ECDH-ES+A256KW",
            "ECDH-ES+A192KW",
            "RSA-OAEP",
            "ECDH-ES+A128KW",
            "RSA-OAEP-256",
            "A128KW",
            "A256KW",
            "ECDH-ES",
            "dir",
            "A192KW",
          ],
          "supportedTokenIntrospectionResponseEncryptionEnc": [
            "A256GCM",
            "A192GCM",
            "A128GCM",
            "A128CBC-HS256",
            "A192CBC-HS384",
            "A256CBC-HS512",
          ],
          "supportedTokenIntrospectionResponseSigningAlgorithms": [
            "PS384",
            "RS384",
            "EdDSA",
            "ES384",
            "HS256",
            "HS512",
            "ES256",
            "RS256",
            "HS384",
            "ES512",
            "PS256",
            "PS512",
            "RS512",
          ],
          "supportedUserInfoEncryptionAlgorithms": [
            "ECDH-ES+A256KW",
            "ECDH-ES+A192KW",
            "RSA-OAEP",
            "ECDH-ES+A128KW",
            "RSA-OAEP-256",
            "A128KW",
            "A256KW",
            "ECDH-ES",
            "dir",
            "A192KW",
          ],
          "supportedUserInfoEncryptionEnc": [
            "A256GCM",
            "A192GCM",
            "A128GCM",
            "A128CBC-HS256",
            "A192CBC-HS384",
            "A256CBC-HS512",
          ],
          "supportedUserInfoSigningAlgorithms": [
            "ES384",
            "HS256",
            "HS512",
            "ES256",
            "RS256",
            "HS384",
            "ES512",
          ],
          "useForceAuthnForMaxAge": false,
          "useForceAuthnForPromptLogin": false,
        },
        "cibaConfig": {
          "cibaAuthReqIdLifetime": 600,
          "cibaMinimumPollingInterval": 2,
          "supportedCibaSigningAlgorithms": [
            "ES256",
            "PS256",
          ],
        },
        "clientDynamicRegistrationConfig": {
          "allowDynamicRegistration": false,
          "dynamicClientRegistrationScope": "dynamic_client_registration",
          "dynamicClientRegistrationSoftwareStatementRequired": false,
          "generateRegistrationAccessTokens": true,
          "requiredSoftwareStatementAttestedAttributes": [
            "redirect_uris",
          ],
        },
        "consent": {
          "clientsCanSkipConsent": true,
          "enableRemoteConsent": false,
          "supportedRcsRequestEncryptionAlgorithms": [
            "ECDH-ES+A256KW",
            "ECDH-ES+A192KW",
            "RSA-OAEP",
            "ECDH-ES+A128KW",
            "RSA-OAEP-256",
            "A128KW",
            "A256KW",
            "ECDH-ES",
            "dir",
            "A192KW",
          ],
          "supportedRcsRequestEncryptionMethods": [
            "A256GCM",
            "A192GCM",
            "A128GCM",
            "A128CBC-HS256",
            "A192CBC-HS384",
            "A256CBC-HS512",
          ],
          "supportedRcsRequestSigningAlgorithms": [
            "PS384",
            "ES384",
            "RS384",
            "HS256",
            "HS512",
            "ES256",
            "RS256",
            "HS384",
            "ES512",
            "PS256",
            "PS512",
            "RS512",
          ],
          "supportedRcsResponseEncryptionAlgorithms": [
            "ECDH-ES+A256KW",
            "ECDH-ES+A192KW",
            "ECDH-ES+A128KW",
            "RSA-OAEP",
            "RSA-OAEP-256",
            "A128KW",
            "A256KW",
            "ECDH-ES",
            "dir",
            "A192KW",
          ],
          "supportedRcsResponseEncryptionMethods": [
            "A256GCM",
            "A192GCM",
            "A128GCM",
            "A128CBC-HS256",
            "A192CBC-HS384",
            "A256CBC-HS512",
          ],
          "supportedRcsResponseSigningAlgorithms": [
            "PS384",
            "ES384",
            "RS384",
            "HS256",
            "HS512",
            "ES256",
            "RS256",
            "HS384",
            "ES512",
            "PS256",
            "PS512",
            "RS512",
          ],
        },
        "coreOAuth2Config": {
          "accessTokenLifetime": 3600,
          "accessTokenMayActScript": "[Empty]",
          "codeLifetime": 120,
          "issueRefreshToken": true,
          "issueRefreshTokenOnRefreshedToken": true,
          "macaroonTokensEnabled": false,
          "oidcMayActScript": "[Empty]",
          "refreshTokenLifetime": 604800,
          "scopesPolicySet": "oauth2Scopes",
          "statelessTokensEnabled": true,
          "usePolicyEngineForScope": false,
        },
        "coreOIDCConfig": {
          "jwtTokenLifetime": 3600,
          "oidcDiscoveryEndpointEnabled": true,
          "overrideableOIDCClaims": [],
          "supportedClaims": [],
          "supportedIDTokenEncryptionAlgorithms": [
            "ECDH-ES+A256KW",
            "ECDH-ES+A192KW",
            "RSA-OAEP",
            "ECDH-ES+A128KW",
            "RSA-OAEP-256",
            "A128KW",
            "A256KW",
            "ECDH-ES",
            "dir",
            "A192KW",
          ],
          "supportedIDTokenEncryptionMethods": [
            "A256GCM",
            "A192GCM",
            "A128GCM",
            "A128CBC-HS256",
            "A192CBC-HS384",
            "A256CBC-HS512",
          ],
          "supportedIDTokenSigningAlgorithms": [
            "PS384",
            "ES384",
            "RS384",
            "HS256",
            "HS512",
            "ES256",
            "RS256",
            "HS384",
            "ES512",
            "PS256",
            "PS512",
            "RS512",
          ],
        },
        "deviceCodeConfig": {
          "deviceCodeLifetime": 300,
          "devicePollInterval": 5,
          "deviceUserCodeCharacterSet": "234567ACDEFGHJKLMNPQRSTWXYZabcdefhijkmnopqrstwxyz",
          "deviceUserCodeLength": 8,
        },
        "pluginsConfig": {
          "accessTokenEnricherClass": "org.forgerock.openam.oauth2.OpenAMScopeValidator",
          "accessTokenModificationPluginType": "SCRIPTED",
          "accessTokenModificationScript": "39c08084-1238-43e8-857f-2e11005eac49",
          "accessTokenModifierClass": "org.forgerock.openam.oauth2.OpenAMScopeValidator",
          "authorizeEndpointDataProviderClass": "org.forgerock.openam.oauth2.OpenAMScopeValidator",
          "authorizeEndpointDataProviderPluginType": "JAVA",
          "authorizeEndpointDataProviderScript": "[Empty]",
          "evaluateScopeClass": "org.forgerock.openam.oauth2.OpenAMScopeValidator",
          "evaluateScopePluginType": "JAVA",
          "evaluateScopeScript": "[Empty]",
          "oidcClaimsClass": "org.forgerock.openam.oauth2.OpenAMScopeValidator",
          "oidcClaimsPluginType": "SCRIPTED",
          "oidcClaimsScript": "cf3515f0-8278-4ee3-a530-1bad7424c416",
          "userCodeGeneratorClass": "org.forgerock.oauth2.core.plugins.registry.DefaultUserCodeGenerator",
          "validateScopeClass": "org.forgerock.openam.oauth2.OpenAMScopeValidator",
          "validateScopePluginType": "JAVA",
          "validateScopeScript": "[Empty]",
        },
      },
      "_rev": "-318736287",
      "_type": {
        "_id": "OAuth2Client",
        "collection": true,
        "name": "OAuth2 Clients",
      },
      "advancedOAuth2ClientConfig": {
        "clientUri": [],
        "contacts": [],
        "descriptions": [],
        "grantTypes": [
          "client_credentials",
        ],
        "isConsentImplied": false,
        "javascriptOrigins": [],
        "logoUri": [],
        "mixUpMitigation": false,
        "name": [],
        "policyUri": [],
        "requestUris": [],
        "responseTypes": [
          "code",
          "token",
          "id_token",
          "code token",
          "token id_token",
          "code id_token",
          "code token id_token",
          "device_code",
          "device_code id_token",
        ],
        "sectorIdentifierUri": null,
        "subjectType": "Public",
        "tokenEndpointAuthMethod": "client_secret_basic",
        "updateAccessToken": null,
      },
      "coreOAuth2ClientConfig": {
        "accessTokenLifetime": 0,
        "agentgroup": null,
        "authorizationCodeLifetime": 0,
        "clientName": [],
        "clientType": "Confidential",
        "defaultScopes": [],
        "loopbackInterfaceRedirection": false,
        "redirectionUris": [],
        "refreshTokenLifetime": 0,
        "scopes": [
          "fr:idm:*",
        ],
        "status": "Active",
        "userpassword": null,
      },
      "coreOpenIDClientConfig": {
        "claims": [],
        "clientSessionUri": null,
        "defaultAcrValues": [],
        "defaultMaxAge": 600,
        "defaultMaxAgeEnabled": false,
        "jwtTokenLifetime": 0,
        "postLogoutRedirectUri": [],
      },
      "coreUmaClientConfig": {
        "claimsRedirectionUris": [],
      },
      "overrideOAuth2ClientConfig": {
        "accessTokenModificationPluginType": "SCRIPTED",
        "accessTokenModificationScript": "c234ba0b-58a1-4cfd-9567-09edde980745",
        "clientsCanSkipConsent": true,
        "oidcClaimsPluginType": "SCRIPTED",
        "oidcClaimsScript": "1f389a3d-21cf-417c-a6d3-42ea620071f0",
        "providerOverridesEnabled": true,
        "statelessTokensEnabled": true,
      },
      "signEncOAuth2ClientConfig": {
        "clientJwtPublicKey": null,
        "idTokenEncryptionAlgorithm": "RSA-OAEP-256",
        "idTokenEncryptionEnabled": false,
        "idTokenEncryptionMethod": "A128CBC-HS256",
        "idTokenPublicEncryptionKey": null,
        "idTokenSignedResponseAlg": "RS256",
        "jwkSet": null,
        "jwkStoreCacheMissCacheTime": 60000,
        "jwksCacheTimeout": 3600000,
        "jwksUri": "http://am:80/am/oauth2/connect/jwk_uri",
        "mTLSCertificateBoundAccessTokens": false,
        "mTLSSubjectDN": null,
        "mTLSTrustedCert": null,
        "publicKeyLocation": "jwks_uri",
        "requestParameterEncryptedAlg": null,
        "requestParameterEncryptedEncryptionAlgorithm": "A128CBC-HS256",
        "requestParameterSignedAlg": null,
        "tokenEndpointAuthSigningAlgorithm": "RS256",
        "tokenIntrospectionEncryptedResponseAlg": "RSA-OAEP-256",
        "tokenIntrospectionEncryptedResponseEncryptionAlgorithm": "A128CBC-HS256",
        "tokenIntrospectionResponseFormat": "JSON",
        "tokenIntrospectionSignedResponseAlg": "RS256",
        "userinfoEncryptedResponseAlg": null,
        "userinfoEncryptedResponseEncryptionAlgorithm": "A128CBC-HS256",
        "userinfoResponseFormat": "JSON",
        "userinfoSignedResponseAlg": null,
      },
    },
    "d4c3ecbc-4b03-4ad5-b32f-464bda442e3f": {
      "_id": "d4c3ecbc-4b03-4ad5-b32f-464bda442e3f",
      "_provider": {
        "_id": "",
        "_rev": "520068704",
        "_type": {
          "_id": "oauth-oidc",
          "collection": false,
          "name": "OAuth2 Provider",
        },
        "advancedOAuth2Config": {
          "allowClientCredentialsInTokenRequestQueryParameters": true,
          "allowedAudienceValues": [],
          "authenticationAttributes": [
            "uid",
          ],
          "codeVerifierEnforced": "false",
          "defaultScopes": [
            "address",
            "phone",
            "openid",
            "profile",
            "email",
          ],
          "displayNameAttribute": "cn",
          "expClaimRequiredInRequestObject": false,
          "grantTypes": [
            "implicit",
            "urn:ietf:params:oauth:grant-type:saml2-bearer",
            "refresh_token",
            "password",
            "client_credentials",
            "urn:ietf:params:oauth:grant-type:device_code",
            "authorization_code",
            "urn:openid:params:grant-type:ciba",
            "urn:ietf:params:oauth:grant-type:uma-ticket",
            "urn:ietf:params:oauth:grant-type:jwt-bearer",
          ],
          "hashSalt": "&{am.oidc.client.subject.identifier.hash.salt}",
          "macaroonTokenFormat": "V2",
          "maxAgeOfRequestObjectNbfClaim": 0,
          "maxDifferenceBetweenRequestObjectNbfAndExp": 0,
          "moduleMessageEnabledInPasswordGrant": false,
          "nbfClaimRequiredInRequestObject": false,
          "parRequestUriLifetime": 90,
          "passwordGrantAuthService": "PasswordGrant",
          "persistentClaims": [],
          "refreshTokenGracePeriod": 0,
          "requestObjectProcessing": "OIDC",
          "requirePushedAuthorizationRequests": false,
          "responseTypeClasses": [
            "code|org.forgerock.oauth2.core.AuthorizationCodeResponseTypeHandler",
            "device_code|org.forgerock.oauth2.core.TokenResponseTypeHandler",
            "token|org.forgerock.oauth2.core.TokenResponseTypeHandler",
            "id_token|org.forgerock.openidconnect.IdTokenResponseTypeHandler",
          ],
          "supportedScopes": [
            "email|Your email address",
            "openid|",
            "address|Your postal address",
            "phone|Your telephone number(s)",
            "profile|Your personal information",
            "fr:idm:*",
            "am-introspect-all-tokens",
          ],
          "supportedSubjectTypes": [
            "public",
            "pairwise",
          ],
          "tlsCertificateBoundAccessTokensEnabled": true,
          "tlsCertificateRevocationCheckingEnabled": false,
          "tlsClientCertificateHeaderFormat": "URLENCODED_PEM",
          "tokenCompressionEnabled": false,
          "tokenEncryptionEnabled": false,
          "tokenExchangeClasses": [
            "urn:ietf:params:oauth:token-type:access_token=>urn:ietf:params:oauth:token-type:access_token|org.forgerock.oauth2.core.tokenexchange.accesstoken.AccessTokenToAccessTokenExchanger",
            "urn:ietf:params:oauth:token-type:id_token=>urn:ietf:params:oauth:token-type:id_token|org.forgerock.oauth2.core.tokenexchange.idtoken.IdTokenToIdTokenExchanger",
            "urn:ietf:params:oauth:token-type:access_token=>urn:ietf:params:oauth:token-type:id_token|org.forgerock.oauth2.core.tokenexchange.accesstoken.AccessTokenToIdTokenExchanger",
            "urn:ietf:params:oauth:token-type:id_token=>urn:ietf:params:oauth:token-type:access_token|org.forgerock.oauth2.core.tokenexchange.idtoken.IdTokenToAccessTokenExchanger",
          ],
          "tokenSigningAlgorithm": "HS256",
          "tokenValidatorClasses": [
            "urn:ietf:params:oauth:token-type:id_token|org.forgerock.oauth2.core.tokenexchange.idtoken.OidcIdTokenValidator",
            "urn:ietf:params:oauth:token-type:access_token|org.forgerock.oauth2.core.tokenexchange.accesstoken.OAuth2AccessTokenValidator",
          ],
        },
        "advancedOIDCConfig": {
          "alwaysAddClaimsToToken": true,
          "amrMappings": {},
          "authorisedIdmDelegationClients": [],
          "authorisedOpenIdConnectSSOClients": [],
          "claimsParameterSupported": false,
          "defaultACR": [],
          "idTokenInfoClientAuthenticationEnabled": true,
          "includeAllKtyAlgCombinationsInJwksUri": false,
          "loaMapping": {},
          "storeOpsTokens": true,
          "supportedAuthorizationResponseEncryptionAlgorithms": [
            "ECDH-ES+A256KW",
            "ECDH-ES+A192KW",
            "RSA-OAEP",
            "ECDH-ES+A128KW",
            "RSA-OAEP-256",
            "A128KW",
            "A256KW",
            "ECDH-ES",
            "dir",
            "A192KW",
          ],
          "supportedAuthorizationResponseEncryptionEnc": [
            "A256GCM",
            "A192GCM",
            "A128GCM",
            "A128CBC-HS256",
            "A192CBC-HS384",
            "A256CBC-HS512",
          ],
          "supportedAuthorizationResponseSigningAlgorithms": [
            "PS384",
            "RS384",
            "EdDSA",
            "ES384",
            "HS256",
            "HS512",
            "ES256",
            "RS256",
            "HS384",
            "ES512",
            "PS256",
            "PS512",
            "RS512",
          ],
          "supportedRequestParameterEncryptionAlgorithms": [
            "ECDH-ES+A256KW",
            "ECDH-ES+A192KW",
            "ECDH-ES+A128KW",
            "RSA-OAEP",
            "RSA-OAEP-256",
            "A128KW",
            "A256KW",
            "ECDH-ES",
            "dir",
            "A192KW",
          ],
          "supportedRequestParameterEncryptionEnc": [
            "A256GCM",
            "A192GCM",
            "A128GCM",
            "A128CBC-HS256",
            "A192CBC-HS384",
            "A256CBC-HS512",
          ],
          "supportedRequestParameterSigningAlgorithms": [
            "PS384",
            "ES384",
            "RS384",
            "HS256",
            "HS512",
            "ES256",
            "RS256",
            "HS384",
            "ES512",
            "PS256",
            "PS512",
            "RS512",
          ],
          "supportedTokenEndpointAuthenticationSigningAlgorithms": [
            "PS384",
            "ES384",
            "RS384",
            "HS256",
            "HS512",
            "ES256",
            "RS256",
            "HS384",
            "ES512",
            "PS256",
            "PS512",
            "RS512",
          ],
          "supportedTokenIntrospectionResponseEncryptionAlgorithms": [
            "ECDH-ES+A256KW",
            "ECDH-ES+A192KW",
            "RSA-OAEP",
            "ECDH-ES+A128KW",
            "RSA-OAEP-256",
            "A128KW",
            "A256KW",
            "ECDH-ES",
            "dir",
            "A192KW",
          ],
          "supportedTokenIntrospectionResponseEncryptionEnc": [
            "A256GCM",
            "A192GCM",
            "A128GCM",
            "A128CBC-HS256",
            "A192CBC-HS384",
            "A256CBC-HS512",
          ],
          "supportedTokenIntrospectionResponseSigningAlgorithms": [
            "PS384",
            "RS384",
            "EdDSA",
            "ES384",
            "HS256",
            "HS512",
            "ES256",
            "RS256",
            "HS384",
            "ES512",
            "PS256",
            "PS512",
            "RS512",
          ],
          "supportedUserInfoEncryptionAlgorithms": [
            "ECDH-ES+A256KW",
            "ECDH-ES+A192KW",
            "RSA-OAEP",
            "ECDH-ES+A128KW",
            "RSA-OAEP-256",
            "A128KW",
            "A256KW",
            "ECDH-ES",
            "dir",
            "A192KW",
          ],
          "supportedUserInfoEncryptionEnc": [
            "A256GCM",
            "A192GCM",
            "A128GCM",
            "A128CBC-HS256",
            "A192CBC-HS384",
            "A256CBC-HS512",
          ],
          "supportedUserInfoSigningAlgorithms": [
            "ES384",
            "HS256",
            "HS512",
            "ES256",
            "RS256",
            "HS384",
            "ES512",
          ],
          "useForceAuthnForMaxAge": false,
          "useForceAuthnForPromptLogin": false,
        },
        "cibaConfig": {
          "cibaAuthReqIdLifetime": 600,
          "cibaMinimumPollingInterval": 2,
          "supportedCibaSigningAlgorithms": [
            "ES256",
            "PS256",
          ],
        },
        "clientDynamicRegistrationConfig": {
          "allowDynamicRegistration": false,
          "dynamicClientRegistrationScope": "dynamic_client_registration",
          "dynamicClientRegistrationSoftwareStatementRequired": false,
          "generateRegistrationAccessTokens": true,
          "requiredSoftwareStatementAttestedAttributes": [
            "redirect_uris",
          ],
        },
        "consent": {
          "clientsCanSkipConsent": true,
          "enableRemoteConsent": false,
          "supportedRcsRequestEncryptionAlgorithms": [
            "ECDH-ES+A256KW",
            "ECDH-ES+A192KW",
            "RSA-OAEP",
            "ECDH-ES+A128KW",
            "RSA-OAEP-256",
            "A128KW",
            "A256KW",
            "ECDH-ES",
            "dir",
            "A192KW",
          ],
          "supportedRcsRequestEncryptionMethods": [
            "A256GCM",
            "A192GCM",
            "A128GCM",
            "A128CBC-HS256",
            "A192CBC-HS384",
            "A256CBC-HS512",
          ],
          "supportedRcsRequestSigningAlgorithms": [
            "PS384",
            "ES384",
            "RS384",
            "HS256",
            "HS512",
            "ES256",
            "RS256",
            "HS384",
            "ES512",
            "PS256",
            "PS512",
            "RS512",
          ],
          "supportedRcsResponseEncryptionAlgorithms": [
            "ECDH-ES+A256KW",
            "ECDH-ES+A192KW",
            "ECDH-ES+A128KW",
            "RSA-OAEP",
            "RSA-OAEP-256",
            "A128KW",
            "A256KW",
            "ECDH-ES",
            "dir",
            "A192KW",
          ],
          "supportedRcsResponseEncryptionMethods": [
            "A256GCM",
            "A192GCM",
            "A128GCM",
            "A128CBC-HS256",
            "A192CBC-HS384",
            "A256CBC-HS512",
          ],
          "supportedRcsResponseSigningAlgorithms": [
            "PS384",
            "ES384",
            "RS384",
            "HS256",
            "HS512",
            "ES256",
            "RS256",
            "HS384",
            "ES512",
            "PS256",
            "PS512",
            "RS512",
          ],
        },
        "coreOAuth2Config": {
          "accessTokenLifetime": 3600,
          "accessTokenMayActScript": "[Empty]",
          "codeLifetime": 120,
          "issueRefreshToken": true,
          "issueRefreshTokenOnRefreshedToken": true,
          "macaroonTokensEnabled": false,
          "oidcMayActScript": "[Empty]",
          "refreshTokenLifetime": 604800,
          "scopesPolicySet": "oauth2Scopes",
          "statelessTokensEnabled": true,
          "usePolicyEngineForScope": false,
        },
        "coreOIDCConfig": {
          "jwtTokenLifetime": 3600,
          "oidcDiscoveryEndpointEnabled": true,
          "overrideableOIDCClaims": [],
          "supportedClaims": [],
          "supportedIDTokenEncryptionAlgorithms": [
            "ECDH-ES+A256KW",
            "ECDH-ES+A192KW",
            "RSA-OAEP",
            "ECDH-ES+A128KW",
            "RSA-OAEP-256",
            "A128KW",
            "A256KW",
            "ECDH-ES",
            "dir",
            "A192KW",
          ],
          "supportedIDTokenEncryptionMethods": [
            "A256GCM",
            "A192GCM",
            "A128GCM",
            "A128CBC-HS256",
            "A192CBC-HS384",
            "A256CBC-HS512",
          ],
          "supportedIDTokenSigningAlgorithms": [
            "PS384",
            "ES384",
            "RS384",
            "HS256",
            "HS512",
            "ES256",
            "RS256",
            "HS384",
            "ES512",
            "PS256",
            "PS512",
            "RS512",
          ],
        },
        "deviceCodeConfig": {
          "deviceCodeLifetime": 300,
          "devicePollInterval": 5,
          "deviceUserCodeCharacterSet": "234567ACDEFGHJKLMNPQRSTWXYZabcdefhijkmnopqrstwxyz",
          "deviceUserCodeLength": 8,
        },
        "pluginsConfig": {
          "accessTokenEnricherClass": "org.forgerock.openam.oauth2.OpenAMScopeValidator",
          "accessTokenModificationPluginType": "SCRIPTED",
          "accessTokenModificationScript": "39c08084-1238-43e8-857f-2e11005eac49",
          "accessTokenModifierClass": "org.forgerock.openam.oauth2.OpenAMScopeValidator",
          "authorizeEndpointDataProviderClass": "org.forgerock.openam.oauth2.OpenAMScopeValidator",
          "authorizeEndpointDataProviderPluginType": "JAVA",
          "authorizeEndpointDataProviderScript": "[Empty]",
          "evaluateScopeClass": "org.forgerock.openam.oauth2.OpenAMScopeValidator",
          "evaluateScopePluginType": "JAVA",
          "evaluateScopeScript": "[Empty]",
          "oidcClaimsClass": "org.forgerock.openam.oauth2.OpenAMScopeValidator",
          "oidcClaimsPluginType": "SCRIPTED",
          "oidcClaimsScript": "cf3515f0-8278-4ee3-a530-1bad7424c416",
          "userCodeGeneratorClass": "org.forgerock.oauth2.core.plugins.registry.DefaultUserCodeGenerator",
          "validateScopeClass": "org.forgerock.openam.oauth2.OpenAMScopeValidator",
          "validateScopePluginType": "JAVA",
          "validateScopeScript": "[Empty]",
        },
      },
      "_rev": "774164625",
      "_type": {
        "_id": "OAuth2Client",
        "collection": true,
        "name": "OAuth2 Clients",
      },
      "advancedOAuth2ClientConfig": {
        "clientUri": [],
        "contacts": [],
        "customProperties": [],
        "descriptions": [
          "Created by Frodo on 5/13/2023, 8:06:50 PM",
        ],
        "grantTypes": [
          "client_credentials",
        ],
        "isConsentImplied": true,
        "javascriptOrigins": [],
        "logoUri": [],
        "mixUpMitigation": false,
        "name": [],
        "policyUri": [],
        "refreshTokenGracePeriod": 0,
        "requestUris": [],
        "require_pushed_authorization_requests": false,
        "responseTypes": [
          "token",
        ],
        "sectorIdentifierUri": null,
        "softwareIdentity": null,
        "softwareVersion": null,
        "subjectType": "Public",
        "tokenEndpointAuthMethod": "client_secret_basic",
        "tokenExchangeAuthLevel": 0,
        "tosURI": [],
        "updateAccessToken": null,
      },
      "coreOAuth2ClientConfig": {
        "accessTokenLifetime": 3600,
        "authorizationCodeLifetime": 120,
        "clientName": [
          "d4c3ecbc-4b03-4ad5-b32f-464bda442e3f",
        ],
        "clientType": "Confidential",
        "defaultScopes": [
          "fr:idm:*",
        ],
        "loopbackInterfaceRedirection": false,
        "redirectionUris": [],
        "refreshTokenLifetime": 604800,
        "scopes": [
          "fr:idm:*",
          "fr:idc:esv:*",
          "dynamic_client_registration",
        ],
        "status": "Active",
        "userpassword": null,
      },
      "coreOpenIDClientConfig": {
        "backchannel_logout_session_required": false,
        "backchannel_logout_uri": null,
        "claims": [],
        "clientSessionUri": null,
        "defaultAcrValues": [],
        "defaultMaxAge": 600,
        "defaultMaxAgeEnabled": false,
        "jwtTokenLifetime": 3600,
        "postLogoutRedirectUri": [],
      },
      "coreUmaClientConfig": {
        "claimsRedirectionUris": [],
      },
      "overrideOAuth2ClientConfig": {
        "accessTokenMayActScript": "[Empty]",
        "accessTokenModificationPluginType": "PROVIDER",
        "accessTokenModificationScript": "[Empty]",
        "authorizeEndpointDataProviderClass": "org.forgerock.oauth2.core.plugins.registry.DefaultEndpointDataProvider",
        "authorizeEndpointDataProviderPluginType": "PROVIDER",
        "authorizeEndpointDataProviderScript": "[Empty]",
        "clientsCanSkipConsent": false,
        "enableRemoteConsent": false,
        "evaluateScopeClass": "org.forgerock.oauth2.core.plugins.registry.DefaultScopeEvaluator",
        "evaluateScopePluginType": "PROVIDER",
        "evaluateScopeScript": "[Empty]",
        "issueRefreshToken": true,
        "issueRefreshTokenOnRefreshedToken": true,
        "oidcClaimsPluginType": "PROVIDER",
        "oidcClaimsScript": "[Empty]",
        "oidcMayActScript": "[Empty]",
        "overrideableOIDCClaims": [],
        "providerOverridesEnabled": false,
        "remoteConsentServiceId": null,
        "scopesPolicySet": "oauth2Scopes",
        "statelessTokensEnabled": false,
        "tokenEncryptionEnabled": false,
        "usePolicyEngineForScope": false,
        "validateScopeClass": "org.forgerock.oauth2.core.plugins.registry.DefaultScopeValidator",
        "validateScopePluginType": "PROVIDER",
        "validateScopeScript": "[Empty]",
      },
      "signEncOAuth2ClientConfig": {
        "authorizationResponseEncryptionAlgorithm": null,
        "authorizationResponseEncryptionMethod": null,
        "authorizationResponseSigningAlgorithm": "RS256",
        "clientJwtPublicKey": null,
        "idTokenEncryptionAlgorithm": "RSA-OAEP-256",
        "idTokenEncryptionEnabled": false,
        "idTokenEncryptionMethod": "A128CBC-HS256",
        "idTokenPublicEncryptionKey": null,
        "idTokenSignedResponseAlg": "RS256",
        "jwkSet": null,
        "jwkStoreCacheMissCacheTime": 60000,
        "jwksCacheTimeout": 3600000,
        "jwksUri": null,
        "mTLSCertificateBoundAccessTokens": false,
        "mTLSSubjectDN": null,
        "mTLSTrustedCert": null,
        "publicKeyLocation": "jwks_uri",
        "requestParameterEncryptedAlg": null,
        "requestParameterEncryptedEncryptionAlgorithm": "A128CBC-HS256",
        "requestParameterSignedAlg": null,
        "tokenEndpointAuthSigningAlgorithm": "RS256",
        "tokenIntrospectionEncryptedResponseAlg": "RSA-OAEP-256",
        "tokenIntrospectionEncryptedResponseEncryptionAlgorithm": "A128CBC-HS256",
        "tokenIntrospectionResponseFormat": "JSON",
        "tokenIntrospectionSignedResponseAlg": "RS256",
        "userinfoEncryptedResponseAlg": null,
        "userinfoEncryptedResponseEncryptionAlgorithm": "A128CBC-HS256",
        "userinfoResponseFormat": "JSON",
        "userinfoSignedResponseAlg": null,
      },
    },
    "ig-oidc-app": {
      "_id": "ig-oidc-app",
      "_provider": {
        "_id": "",
        "_rev": "520068704",
        "_type": {
          "_id": "oauth-oidc",
          "collection": false,
          "name": "OAuth2 Provider",
        },
        "advancedOAuth2Config": {
          "allowClientCredentialsInTokenRequestQueryParameters": true,
          "allowedAudienceValues": [],
          "authenticationAttributes": [
            "uid",
          ],
          "codeVerifierEnforced": "false",
          "defaultScopes": [
            "address",
            "phone",
            "openid",
            "profile",
            "email",
          ],
          "displayNameAttribute": "cn",
          "expClaimRequiredInRequestObject": false,
          "grantTypes": [
            "implicit",
            "urn:ietf:params:oauth:grant-type:saml2-bearer",
            "refresh_token",
            "password",
            "client_credentials",
            "urn:ietf:params:oauth:grant-type:device_code",
            "authorization_code",
            "urn:openid:params:grant-type:ciba",
            "urn:ietf:params:oauth:grant-type:uma-ticket",
            "urn:ietf:params:oauth:grant-type:jwt-bearer",
          ],
          "hashSalt": "&{am.oidc.client.subject.identifier.hash.salt}",
          "macaroonTokenFormat": "V2",
          "maxAgeOfRequestObjectNbfClaim": 0,
          "maxDifferenceBetweenRequestObjectNbfAndExp": 0,
          "moduleMessageEnabledInPasswordGrant": false,
          "nbfClaimRequiredInRequestObject": false,
          "parRequestUriLifetime": 90,
          "passwordGrantAuthService": "PasswordGrant",
          "persistentClaims": [],
          "refreshTokenGracePeriod": 0,
          "requestObjectProcessing": "OIDC",
          "requirePushedAuthorizationRequests": false,
          "responseTypeClasses": [
            "code|org.forgerock.oauth2.core.AuthorizationCodeResponseTypeHandler",
            "device_code|org.forgerock.oauth2.core.TokenResponseTypeHandler",
            "token|org.forgerock.oauth2.core.TokenResponseTypeHandler",
            "id_token|org.forgerock.openidconnect.IdTokenResponseTypeHandler",
          ],
          "supportedScopes": [
            "email|Your email address",
            "openid|",
            "address|Your postal address",
            "phone|Your telephone number(s)",
            "profile|Your personal information",
            "fr:idm:*",
            "am-introspect-all-tokens",
          ],
          "supportedSubjectTypes": [
            "public",
            "pairwise",
          ],
          "tlsCertificateBoundAccessTokensEnabled": true,
          "tlsCertificateRevocationCheckingEnabled": false,
          "tlsClientCertificateHeaderFormat": "URLENCODED_PEM",
          "tokenCompressionEnabled": false,
          "tokenEncryptionEnabled": false,
          "tokenExchangeClasses": [
            "urn:ietf:params:oauth:token-type:access_token=>urn:ietf:params:oauth:token-type:access_token|org.forgerock.oauth2.core.tokenexchange.accesstoken.AccessTokenToAccessTokenExchanger",
            "urn:ietf:params:oauth:token-type:id_token=>urn:ietf:params:oauth:token-type:id_token|org.forgerock.oauth2.core.tokenexchange.idtoken.IdTokenToIdTokenExchanger",
            "urn:ietf:params:oauth:token-type:access_token=>urn:ietf:params:oauth:token-type:id_token|org.forgerock.oauth2.core.tokenexchange.accesstoken.AccessTokenToIdTokenExchanger",
            "urn:ietf:params:oauth:token-type:id_token=>urn:ietf:params:oauth:token-type:access_token|org.forgerock.oauth2.core.tokenexchange.idtoken.IdTokenToAccessTokenExchanger",
          ],
          "tokenSigningAlgorithm": "HS256",
          "tokenValidatorClasses": [
            "urn:ietf:params:oauth:token-type:id_token|org.forgerock.oauth2.core.tokenexchange.idtoken.OidcIdTokenValidator",
            "urn:ietf:params:oauth:token-type:access_token|org.forgerock.oauth2.core.tokenexchange.accesstoken.OAuth2AccessTokenValidator",
          ],
        },
        "advancedOIDCConfig": {
          "alwaysAddClaimsToToken": true,
          "amrMappings": {},
          "authorisedIdmDelegationClients": [],
          "authorisedOpenIdConnectSSOClients": [],
          "claimsParameterSupported": false,
          "defaultACR": [],
          "idTokenInfoClientAuthenticationEnabled": true,
          "includeAllKtyAlgCombinationsInJwksUri": false,
          "loaMapping": {},
          "storeOpsTokens": true,
          "supportedAuthorizationResponseEncryptionAlgorithms": [
            "ECDH-ES+A256KW",
            "ECDH-ES+A192KW",
            "RSA-OAEP",
            "ECDH-ES+A128KW",
            "RSA-OAEP-256",
            "A128KW",
            "A256KW",
            "ECDH-ES",
            "dir",
            "A192KW",
          ],
          "supportedAuthorizationResponseEncryptionEnc": [
            "A256GCM",
            "A192GCM",
            "A128GCM",
            "A128CBC-HS256",
            "A192CBC-HS384",
            "A256CBC-HS512",
          ],
          "supportedAuthorizationResponseSigningAlgorithms": [
            "PS384",
            "RS384",
            "EdDSA",
            "ES384",
            "HS256",
            "HS512",
            "ES256",
            "RS256",
            "HS384",
            "ES512",
            "PS256",
            "PS512",
            "RS512",
          ],
          "supportedRequestParameterEncryptionAlgorithms": [
            "ECDH-ES+A256KW",
            "ECDH-ES+A192KW",
            "ECDH-ES+A128KW",
            "RSA-OAEP",
            "RSA-OAEP-256",
            "A128KW",
            "A256KW",
            "ECDH-ES",
            "dir",
            "A192KW",
          ],
          "supportedRequestParameterEncryptionEnc": [
            "A256GCM",
            "A192GCM",
            "A128GCM",
            "A128CBC-HS256",
            "A192CBC-HS384",
            "A256CBC-HS512",
          ],
          "supportedRequestParameterSigningAlgorithms": [
            "PS384",
            "ES384",
            "RS384",
            "HS256",
            "HS512",
            "ES256",
            "RS256",
            "HS384",
            "ES512",
            "PS256",
            "PS512",
            "RS512",
          ],
          "supportedTokenEndpointAuthenticationSigningAlgorithms": [
            "PS384",
            "ES384",
            "RS384",
            "HS256",
            "HS512",
            "ES256",
            "RS256",
            "HS384",
            "ES512",
            "PS256",
            "PS512",
            "RS512",
          ],
          "supportedTokenIntrospectionResponseEncryptionAlgorithms": [
            "ECDH-ES+A256KW",
            "ECDH-ES+A192KW",
            "RSA-OAEP",
            "ECDH-ES+A128KW",
            "RSA-OAEP-256",
            "A128KW",
            "A256KW",
            "ECDH-ES",
            "dir",
            "A192KW",
          ],
          "supportedTokenIntrospectionResponseEncryptionEnc": [
            "A256GCM",
            "A192GCM",
            "A128GCM",
            "A128CBC-HS256",
            "A192CBC-HS384",
            "A256CBC-HS512",
          ],
          "supportedTokenIntrospectionResponseSigningAlgorithms": [
            "PS384",
            "RS384",
            "EdDSA",
            "ES384",
            "HS256",
            "HS512",
            "ES256",
            "RS256",
            "HS384",
            "ES512",
            "PS256",
            "PS512",
            "RS512",
          ],
          "supportedUserInfoEncryptionAlgorithms": [
            "ECDH-ES+A256KW",
            "ECDH-ES+A192KW",
            "RSA-OAEP",
            "ECDH-ES+A128KW",
            "RSA-OAEP-256",
            "A128KW",
            "A256KW",
            "ECDH-ES",
            "dir",
            "A192KW",
          ],
          "supportedUserInfoEncryptionEnc": [
            "A256GCM",
            "A192GCM",
            "A128GCM",
            "A128CBC-HS256",
            "A192CBC-HS384",
            "A256CBC-HS512",
          ],
          "supportedUserInfoSigningAlgorithms": [
            "ES384",
            "HS256",
            "HS512",
            "ES256",
            "RS256",
            "HS384",
            "ES512",
          ],
          "useForceAuthnForMaxAge": false,
          "useForceAuthnForPromptLogin": false,
        },
        "cibaConfig": {
          "cibaAuthReqIdLifetime": 600,
          "cibaMinimumPollingInterval": 2,
          "supportedCibaSigningAlgorithms": [
            "ES256",
            "PS256",
          ],
        },
        "clientDynamicRegistrationConfig": {
          "allowDynamicRegistration": false,
          "dynamicClientRegistrationScope": "dynamic_client_registration",
          "dynamicClientRegistrationSoftwareStatementRequired": false,
          "generateRegistrationAccessTokens": true,
          "requiredSoftwareStatementAttestedAttributes": [
            "redirect_uris",
          ],
        },
        "consent": {
          "clientsCanSkipConsent": true,
          "enableRemoteConsent": false,
          "supportedRcsRequestEncryptionAlgorithms": [
            "ECDH-ES+A256KW",
            "ECDH-ES+A192KW",
            "RSA-OAEP",
            "ECDH-ES+A128KW",
            "RSA-OAEP-256",
            "A128KW",
            "A256KW",
            "ECDH-ES",
            "dir",
            "A192KW",
          ],
          "supportedRcsRequestEncryptionMethods": [
            "A256GCM",
            "A192GCM",
            "A128GCM",
            "A128CBC-HS256",
            "A192CBC-HS384",
            "A256CBC-HS512",
          ],
          "supportedRcsRequestSigningAlgorithms": [
            "PS384",
            "ES384",
            "RS384",
            "HS256",
            "HS512",
            "ES256",
            "RS256",
            "HS384",
            "ES512",
            "PS256",
            "PS512",
            "RS512",
          ],
          "supportedRcsResponseEncryptionAlgorithms": [
            "ECDH-ES+A256KW",
            "ECDH-ES+A192KW",
            "ECDH-ES+A128KW",
            "RSA-OAEP",
            "RSA-OAEP-256",
            "A128KW",
            "A256KW",
            "ECDH-ES",
            "dir",
            "A192KW",
          ],
          "supportedRcsResponseEncryptionMethods": [
            "A256GCM",
            "A192GCM",
            "A128GCM",
            "A128CBC-HS256",
            "A192CBC-HS384",
            "A256CBC-HS512",
          ],
          "supportedRcsResponseSigningAlgorithms": [
            "PS384",
            "ES384",
            "RS384",
            "HS256",
            "HS512",
            "ES256",
            "RS256",
            "HS384",
            "ES512",
            "PS256",
            "PS512",
            "RS512",
          ],
        },
        "coreOAuth2Config": {
          "accessTokenLifetime": 3600,
          "accessTokenMayActScript": "[Empty]",
          "codeLifetime": 120,
          "issueRefreshToken": true,
          "issueRefreshTokenOnRefreshedToken": true,
          "macaroonTokensEnabled": false,
          "oidcMayActScript": "[Empty]",
          "refreshTokenLifetime": 604800,
          "scopesPolicySet": "oauth2Scopes",
          "statelessTokensEnabled": true,
          "usePolicyEngineForScope": false,
        },
        "coreOIDCConfig": {
          "jwtTokenLifetime": 3600,
          "oidcDiscoveryEndpointEnabled": true,
          "overrideableOIDCClaims": [],
          "supportedClaims": [],
          "supportedIDTokenEncryptionAlgorithms": [
            "ECDH-ES+A256KW",
            "ECDH-ES+A192KW",
            "RSA-OAEP",
            "ECDH-ES+A128KW",
            "RSA-OAEP-256",
            "A128KW",
            "A256KW",
            "ECDH-ES",
            "dir",
            "A192KW",
          ],
          "supportedIDTokenEncryptionMethods": [
            "A256GCM",
            "A192GCM",
            "A128GCM",
            "A128CBC-HS256",
            "A192CBC-HS384",
            "A256CBC-HS512",
          ],
          "supportedIDTokenSigningAlgorithms": [
            "PS384",
            "ES384",
            "RS384",
            "HS256",
            "HS512",
            "ES256",
            "RS256",
            "HS384",
            "ES512",
            "PS256",
            "PS512",
            "RS512",
          ],
        },
        "deviceCodeConfig": {
          "deviceCodeLifetime": 300,
          "devicePollInterval": 5,
          "deviceUserCodeCharacterSet": "234567ACDEFGHJKLMNPQRSTWXYZabcdefhijkmnopqrstwxyz",
          "deviceUserCodeLength": 8,
        },
        "pluginsConfig": {
          "accessTokenEnricherClass": "org.forgerock.openam.oauth2.OpenAMScopeValidator",
          "accessTokenModificationPluginType": "SCRIPTED",
          "accessTokenModificationScript": "39c08084-1238-43e8-857f-2e11005eac49",
          "accessTokenModifierClass": "org.forgerock.openam.oauth2.OpenAMScopeValidator",
          "authorizeEndpointDataProviderClass": "org.forgerock.openam.oauth2.OpenAMScopeValidator",
          "authorizeEndpointDataProviderPluginType": "JAVA",
          "authorizeEndpointDataProviderScript": "[Empty]",
          "evaluateScopeClass": "org.forgerock.openam.oauth2.OpenAMScopeValidator",
          "evaluateScopePluginType": "JAVA",
          "evaluateScopeScript": "[Empty]",
          "oidcClaimsClass": "org.forgerock.openam.oauth2.OpenAMScopeValidator",
          "oidcClaimsPluginType": "SCRIPTED",
          "oidcClaimsScript": "cf3515f0-8278-4ee3-a530-1bad7424c416",
          "userCodeGeneratorClass": "org.forgerock.oauth2.core.plugins.registry.DefaultUserCodeGenerator",
          "validateScopeClass": "org.forgerock.openam.oauth2.OpenAMScopeValidator",
          "validateScopePluginType": "JAVA",
          "validateScopeScript": "[Empty]",
        },
      },
      "_rev": "1434622129",
      "_type": {
        "_id": "OAuth2Client",
        "collection": true,
        "name": "OAuth2 Clients",
      },
      "advancedOAuth2ClientConfig": {
        "clientUri": [],
        "contacts": [],
        "customProperties": [],
        "descriptions": [],
        "grantTypes": [
          "authorization_code",
          "client_credentials",
          "refresh_token",
        ],
        "isConsentImplied": true,
        "javascriptOrigins": [
          "https://ig.mytestrun.com",
          "https://ig.mytestrun.com:443",
        ],
        "logoUri": [],
        "mixUpMitigation": false,
        "name": [],
        "policyUri": [],
        "refreshTokenGracePeriod": 0,
        "requestUris": [],
        "require_pushed_authorization_requests": false,
        "responseTypes": [
          "code",
          "token",
          "id_token",
        ],
        "sectorIdentifierUri": null,
        "softwareIdentity": null,
        "softwareVersion": null,
        "subjectType": "public",
        "tokenEndpointAuthMethod": "client_secret_basic",
        "tokenExchangeAuthLevel": 0,
        "tosURI": [],
        "updateAccessToken": null,
      },
      "coreOAuth2ClientConfig": {
        "accessTokenLifetime": 3600,
        "authorizationCodeLifetime": 120,
        "clientName": [],
        "clientType": "Confidential",
        "defaultScopes": [],
        "loopbackInterfaceRedirection": false,
        "redirectionUris": [
          "https://ig.mytestrun.com/home/oidc/callback",
        ],
        "refreshTokenLifetime": 604800,
        "scopes": [
          "openid",
          "profile",
          "email",
          "secctx",
        ],
        "status": "Active",
      },
      "coreOpenIDClientConfig": {
        "backchannel_logout_session_required": false,
        "backchannel_logout_uri": null,
        "claims": [],
        "clientSessionUri": null,
        "defaultAcrValues": [],
        "defaultMaxAge": 600,
        "defaultMaxAgeEnabled": false,
        "jwtTokenLifetime": 3600,
        "postLogoutRedirectUri": [],
      },
      "coreUmaClientConfig": {
        "claimsRedirectionUris": [],
      },
      "overrideOAuth2ClientConfig": {
        "accessTokenMayActScript": "[Empty]",
        "accessTokenModificationPluginType": "PROVIDER",
        "accessTokenModificationScript": "[Empty]",
        "authorizeEndpointDataProviderClass": "org.forgerock.oauth2.core.plugins.registry.DefaultEndpointDataProvider",
        "authorizeEndpointDataProviderPluginType": "PROVIDER",
        "authorizeEndpointDataProviderScript": "[Empty]",
        "clientsCanSkipConsent": false,
        "enableRemoteConsent": false,
        "evaluateScopeClass": "org.forgerock.oauth2.core.plugins.registry.DefaultScopeEvaluator",
        "evaluateScopePluginType": "PROVIDER",
        "evaluateScopeScript": "[Empty]",
        "issueRefreshToken": true,
        "issueRefreshTokenOnRefreshedToken": true,
        "oidcClaimsPluginType": "PROVIDER",
        "oidcClaimsScript": "[Empty]",
        "oidcMayActScript": "[Empty]",
        "overrideableOIDCClaims": [],
        "providerOverridesEnabled": false,
        "remoteConsentServiceId": null,
        "scopesPolicySet": "oauth2Scopes",
        "statelessTokensEnabled": false,
        "tokenEncryptionEnabled": false,
        "usePolicyEngineForScope": false,
        "validateScopeClass": "org.forgerock.oauth2.core.plugins.registry.DefaultScopeValidator",
        "validateScopePluginType": "PROVIDER",
        "validateScopeScript": "[Empty]",
      },
      "signEncOAuth2ClientConfig": {
        "authorizationResponseEncryptionAlgorithm": null,
        "authorizationResponseEncryptionMethod": null,
        "authorizationResponseSigningAlgorithm": "RS256",
        "clientJwtPublicKey": null,
        "idTokenEncryptionAlgorithm": "RSA-OAEP-256",
        "idTokenEncryptionEnabled": false,
        "idTokenEncryptionMethod": "A128CBC-HS256",
        "idTokenPublicEncryptionKey": null,
        "idTokenSignedResponseAlg": "RS256",
        "jwkSet": null,
        "jwkStoreCacheMissCacheTime": 60000,
        "jwksCacheTimeout": 3600000,
        "jwksUri": null,
        "mTLSCertificateBoundAccessTokens": false,
        "mTLSSubjectDN": null,
        "mTLSTrustedCert": null,
        "publicKeyLocation": "jwks_uri",
        "requestParameterEncryptedAlg": null,
        "requestParameterEncryptedEncryptionAlgorithm": "A128CBC-HS256",
        "requestParameterSignedAlg": null,
        "tokenEndpointAuthSigningAlgorithm": "RS256",
        "tokenIntrospectionEncryptedResponseAlg": "RSA-OAEP-256",
        "tokenIntrospectionEncryptedResponseEncryptionAlgorithm": "A128CBC-HS256",
        "tokenIntrospectionResponseFormat": "JSON",
        "tokenIntrospectionSignedResponseAlg": "RS256",
        "userinfoEncryptedResponseAlg": null,
        "userinfoEncryptedResponseEncryptionAlgorithm": "A128CBC-HS256",
        "userinfoResponseFormat": "JSON",
        "userinfoSignedResponseAlg": null,
      },
    },
    "test2": {
      "_id": "test2",
      "_provider": {
        "_id": "",
        "_rev": "520068704",
        "_type": {
          "_id": "oauth-oidc",
          "collection": false,
          "name": "OAuth2 Provider",
        },
        "advancedOAuth2Config": {
          "allowClientCredentialsInTokenRequestQueryParameters": true,
          "allowedAudienceValues": [],
          "authenticationAttributes": [
            "uid",
          ],
          "codeVerifierEnforced": "false",
          "defaultScopes": [
            "address",
            "phone",
            "openid",
            "profile",
            "email",
          ],
          "displayNameAttribute": "cn",
          "expClaimRequiredInRequestObject": false,
          "grantTypes": [
            "implicit",
            "urn:ietf:params:oauth:grant-type:saml2-bearer",
            "refresh_token",
            "password",
            "client_credentials",
            "urn:ietf:params:oauth:grant-type:device_code",
            "authorization_code",
            "urn:openid:params:grant-type:ciba",
            "urn:ietf:params:oauth:grant-type:uma-ticket",
            "urn:ietf:params:oauth:grant-type:jwt-bearer",
          ],
          "hashSalt": "&{am.oidc.client.subject.identifier.hash.salt}",
          "macaroonTokenFormat": "V2",
          "maxAgeOfRequestObjectNbfClaim": 0,
          "maxDifferenceBetweenRequestObjectNbfAndExp": 0,
          "moduleMessageEnabledInPasswordGrant": false,
          "nbfClaimRequiredInRequestObject": false,
          "parRequestUriLifetime": 90,
          "passwordGrantAuthService": "PasswordGrant",
          "persistentClaims": [],
          "refreshTokenGracePeriod": 0,
          "requestObjectProcessing": "OIDC",
          "requirePushedAuthorizationRequests": false,
          "responseTypeClasses": [
            "code|org.forgerock.oauth2.core.AuthorizationCodeResponseTypeHandler",
            "device_code|org.forgerock.oauth2.core.TokenResponseTypeHandler",
            "token|org.forgerock.oauth2.core.TokenResponseTypeHandler",
            "id_token|org.forgerock.openidconnect.IdTokenResponseTypeHandler",
          ],
          "supportedScopes": [
            "email|Your email address",
            "openid|",
            "address|Your postal address",
            "phone|Your telephone number(s)",
            "profile|Your personal information",
            "fr:idm:*",
            "am-introspect-all-tokens",
          ],
          "supportedSubjectTypes": [
            "public",
            "pairwise",
          ],
          "tlsCertificateBoundAccessTokensEnabled": true,
          "tlsCertificateRevocationCheckingEnabled": false,
          "tlsClientCertificateHeaderFormat": "URLENCODED_PEM",
          "tokenCompressionEnabled": false,
          "tokenEncryptionEnabled": false,
          "tokenExchangeClasses": [
            "urn:ietf:params:oauth:token-type:access_token=>urn:ietf:params:oauth:token-type:access_token|org.forgerock.oauth2.core.tokenexchange.accesstoken.AccessTokenToAccessTokenExchanger",
            "urn:ietf:params:oauth:token-type:id_token=>urn:ietf:params:oauth:token-type:id_token|org.forgerock.oauth2.core.tokenexchange.idtoken.IdTokenToIdTokenExchanger",
            "urn:ietf:params:oauth:token-type:access_token=>urn:ietf:params:oauth:token-type:id_token|org.forgerock.oauth2.core.tokenexchange.accesstoken.AccessTokenToIdTokenExchanger",
            "urn:ietf:params:oauth:token-type:id_token=>urn:ietf:params:oauth:token-type:access_token|org.forgerock.oauth2.core.tokenexchange.idtoken.IdTokenToAccessTokenExchanger",
          ],
          "tokenSigningAlgorithm": "HS256",
          "tokenValidatorClasses": [
            "urn:ietf:params:oauth:token-type:id_token|org.forgerock.oauth2.core.tokenexchange.idtoken.OidcIdTokenValidator",
            "urn:ietf:params:oauth:token-type:access_token|org.forgerock.oauth2.core.tokenexchange.accesstoken.OAuth2AccessTokenValidator",
          ],
        },
        "advancedOIDCConfig": {
          "alwaysAddClaimsToToken": true,
          "amrMappings": {},
          "authorisedIdmDelegationClients": [],
          "authorisedOpenIdConnectSSOClients": [],
          "claimsParameterSupported": false,
          "defaultACR": [],
          "idTokenInfoClientAuthenticationEnabled": true,
          "includeAllKtyAlgCombinationsInJwksUri": false,
          "loaMapping": {},
          "storeOpsTokens": true,
          "supportedAuthorizationResponseEncryptionAlgorithms": [
            "ECDH-ES+A256KW",
            "ECDH-ES+A192KW",
            "RSA-OAEP",
            "ECDH-ES+A128KW",
            "RSA-OAEP-256",
            "A128KW",
            "A256KW",
            "ECDH-ES",
            "dir",
            "A192KW",
          ],
          "supportedAuthorizationResponseEncryptionEnc": [
            "A256GCM",
            "A192GCM",
            "A128GCM",
            "A128CBC-HS256",
            "A192CBC-HS384",
            "A256CBC-HS512",
          ],
          "supportedAuthorizationResponseSigningAlgorithms": [
            "PS384",
            "RS384",
            "EdDSA",
            "ES384",
            "HS256",
            "HS512",
            "ES256",
            "RS256",
            "HS384",
            "ES512",
            "PS256",
            "PS512",
            "RS512",
          ],
          "supportedRequestParameterEncryptionAlgorithms": [
            "ECDH-ES+A256KW",
            "ECDH-ES+A192KW",
            "ECDH-ES+A128KW",
            "RSA-OAEP",
            "RSA-OAEP-256",
            "A128KW",
            "A256KW",
            "ECDH-ES",
            "dir",
            "A192KW",
          ],
          "supportedRequestParameterEncryptionEnc": [
            "A256GCM",
            "A192GCM",
            "A128GCM",
            "A128CBC-HS256",
            "A192CBC-HS384",
            "A256CBC-HS512",
          ],
          "supportedRequestParameterSigningAlgorithms": [
            "PS384",
            "ES384",
            "RS384",
            "HS256",
            "HS512",
            "ES256",
            "RS256",
            "HS384",
            "ES512",
            "PS256",
            "PS512",
            "RS512",
          ],
          "supportedTokenEndpointAuthenticationSigningAlgorithms": [
            "PS384",
            "ES384",
            "RS384",
            "HS256",
            "HS512",
            "ES256",
            "RS256",
            "HS384",
            "ES512",
            "PS256",
            "PS512",
            "RS512",
          ],
          "supportedTokenIntrospectionResponseEncryptionAlgorithms": [
            "ECDH-ES+A256KW",
            "ECDH-ES+A192KW",
            "RSA-OAEP",
            "ECDH-ES+A128KW",
            "RSA-OAEP-256",
            "A128KW",
            "A256KW",
            "ECDH-ES",
            "dir",
            "A192KW",
          ],
          "supportedTokenIntrospectionResponseEncryptionEnc": [
            "A256GCM",
            "A192GCM",
            "A128GCM",
            "A128CBC-HS256",
            "A192CBC-HS384",
            "A256CBC-HS512",
          ],
          "supportedTokenIntrospectionResponseSigningAlgorithms": [
            "PS384",
            "RS384",
            "EdDSA",
            "ES384",
            "HS256",
            "HS512",
            "ES256",
            "RS256",
            "HS384",
            "ES512",
            "PS256",
            "PS512",
            "RS512",
          ],
          "supportedUserInfoEncryptionAlgorithms": [
            "ECDH-ES+A256KW",
            "ECDH-ES+A192KW",
            "RSA-OAEP",
            "ECDH-ES+A128KW",
            "RSA-OAEP-256",
            "A128KW",
            "A256KW",
            "ECDH-ES",
            "dir",
            "A192KW",
          ],
          "supportedUserInfoEncryptionEnc": [
            "A256GCM",
            "A192GCM",
            "A128GCM",
            "A128CBC-HS256",
            "A192CBC-HS384",
            "A256CBC-HS512",
          ],
          "supportedUserInfoSigningAlgorithms": [
            "ES384",
            "HS256",
            "HS512",
            "ES256",
            "RS256",
            "HS384",
            "ES512",
          ],
          "useForceAuthnForMaxAge": false,
          "useForceAuthnForPromptLogin": false,
        },
        "cibaConfig": {
          "cibaAuthReqIdLifetime": 600,
          "cibaMinimumPollingInterval": 2,
          "supportedCibaSigningAlgorithms": [
            "ES256",
            "PS256",
          ],
        },
        "clientDynamicRegistrationConfig": {
          "allowDynamicRegistration": false,
          "dynamicClientRegistrationScope": "dynamic_client_registration",
          "dynamicClientRegistrationSoftwareStatementRequired": false,
          "generateRegistrationAccessTokens": true,
          "requiredSoftwareStatementAttestedAttributes": [
            "redirect_uris",
          ],
        },
        "consent": {
          "clientsCanSkipConsent": true,
          "enableRemoteConsent": false,
          "supportedRcsRequestEncryptionAlgorithms": [
            "ECDH-ES+A256KW",
            "ECDH-ES+A192KW",
            "RSA-OAEP",
            "ECDH-ES+A128KW",
            "RSA-OAEP-256",
            "A128KW",
            "A256KW",
            "ECDH-ES",
            "dir",
            "A192KW",
          ],
          "supportedRcsRequestEncryptionMethods": [
            "A256GCM",
            "A192GCM",
            "A128GCM",
            "A128CBC-HS256",
            "A192CBC-HS384",
            "A256CBC-HS512",
          ],
          "supportedRcsRequestSigningAlgorithms": [
            "PS384",
            "ES384",
            "RS384",
            "HS256",
            "HS512",
            "ES256",
            "RS256",
            "HS384",
            "ES512",
            "PS256",
            "PS512",
            "RS512",
          ],
          "supportedRcsResponseEncryptionAlgorithms": [
            "ECDH-ES+A256KW",
            "ECDH-ES+A192KW",
            "ECDH-ES+A128KW",
            "RSA-OAEP",
            "RSA-OAEP-256",
            "A128KW",
            "A256KW",
            "ECDH-ES",
            "dir",
            "A192KW",
          ],
          "supportedRcsResponseEncryptionMethods": [
            "A256GCM",
            "A192GCM",
            "A128GCM",
            "A128CBC-HS256",
            "A192CBC-HS384",
            "A256CBC-HS512",
          ],
          "supportedRcsResponseSigningAlgorithms": [
            "PS384",
            "ES384",
            "RS384",
            "HS256",
            "HS512",
            "ES256",
            "RS256",
            "HS384",
            "ES512",
            "PS256",
            "PS512",
            "RS512",
          ],
        },
        "coreOAuth2Config": {
          "accessTokenLifetime": 3600,
          "accessTokenMayActScript": "[Empty]",
          "codeLifetime": 120,
          "issueRefreshToken": true,
          "issueRefreshTokenOnRefreshedToken": true,
          "macaroonTokensEnabled": false,
          "oidcMayActScript": "[Empty]",
          "refreshTokenLifetime": 604800,
          "scopesPolicySet": "oauth2Scopes",
          "statelessTokensEnabled": true,
          "usePolicyEngineForScope": false,
        },
        "coreOIDCConfig": {
          "jwtTokenLifetime": 3600,
          "oidcDiscoveryEndpointEnabled": true,
          "overrideableOIDCClaims": [],
          "supportedClaims": [],
          "supportedIDTokenEncryptionAlgorithms": [
            "ECDH-ES+A256KW",
            "ECDH-ES+A192KW",
            "RSA-OAEP",
            "ECDH-ES+A128KW",
            "RSA-OAEP-256",
            "A128KW",
            "A256KW",
            "ECDH-ES",
            "dir",
            "A192KW",
          ],
          "supportedIDTokenEncryptionMethods": [
            "A256GCM",
            "A192GCM",
            "A128GCM",
            "A128CBC-HS256",
            "A192CBC-HS384",
            "A256CBC-HS512",
          ],
          "supportedIDTokenSigningAlgorithms": [
            "PS384",
            "ES384",
            "RS384",
            "HS256",
            "HS512",
            "ES256",
            "RS256",
            "HS384",
            "ES512",
            "PS256",
            "PS512",
            "RS512",
          ],
        },
        "deviceCodeConfig": {
          "deviceCodeLifetime": 300,
          "devicePollInterval": 5,
          "deviceUserCodeCharacterSet": "234567ACDEFGHJKLMNPQRSTWXYZabcdefhijkmnopqrstwxyz",
          "deviceUserCodeLength": 8,
        },
        "pluginsConfig": {
          "accessTokenEnricherClass": "org.forgerock.openam.oauth2.OpenAMScopeValidator",
          "accessTokenModificationPluginType": "SCRIPTED",
          "accessTokenModificationScript": "39c08084-1238-43e8-857f-2e11005eac49",
          "accessTokenModifierClass": "org.forgerock.openam.oauth2.OpenAMScopeValidator",
          "authorizeEndpointDataProviderClass": "org.forgerock.openam.oauth2.OpenAMScopeValidator",
          "authorizeEndpointDataProviderPluginType": "JAVA",
          "authorizeEndpointDataProviderScript": "[Empty]",
          "evaluateScopeClass": "org.forgerock.openam.oauth2.OpenAMScopeValidator",
          "evaluateScopePluginType": "JAVA",
          "evaluateScopeScript": "[Empty]",
          "oidcClaimsClass": "org.forgerock.openam.oauth2.OpenAMScopeValidator",
          "oidcClaimsPluginType": "SCRIPTED",
          "oidcClaimsScript": "cf3515f0-8278-4ee3-a530-1bad7424c416",
          "userCodeGeneratorClass": "org.forgerock.oauth2.core.plugins.registry.DefaultUserCodeGenerator",
          "validateScopeClass": "org.forgerock.openam.oauth2.OpenAMScopeValidator",
          "validateScopePluginType": "JAVA",
          "validateScopeScript": "[Empty]",
        },
      },
      "_rev": "1445881116",
      "_type": {
        "_id": "OAuth2Client",
        "collection": true,
        "name": "OAuth2 Clients",
      },
      "advancedOAuth2ClientConfig": {
        "clientUri": [],
        "contacts": [],
        "customProperties": [],
        "descriptions": [
          "Modified by Frodo on 4/16/2022, 8:41:59 PM",
        ],
        "grantTypes": [
          "authorization_code",
          "refresh_token",
          "client_credentials",
        ],
        "isConsentImplied": false,
        "javascriptOrigins": [],
        "logoUri": [],
        "mixUpMitigation": false,
        "name": [],
        "policyUri": [],
        "requestUris": [],
        "responseTypes": [
          "code",
          "token",
          "id_token",
        ],
        "sectorIdentifierUri": null,
        "softwareIdentity": null,
        "softwareVersion": null,
        "subjectType": "public",
        "tokenEndpointAuthMethod": "client_secret_basic",
        "tokenExchangeAuthLevel": 0,
        "tosURI": [],
        "updateAccessToken": null,
      },
      "coreOAuth2ClientConfig": {
        "accessTokenLifetime": 0,
        "authorizationCodeLifetime": 0,
        "clientName": [
          "test2",
        ],
        "clientType": "Confidential",
        "defaultScopes": [
          "openid",
        ],
        "loopbackInterfaceRedirection": false,
        "redirectionUris": [],
        "refreshTokenLifetime": 0,
        "scopes": [
          "openid",
          "fr:idm:*",
        ],
        "status": "Active",
        "userpassword": null,
      },
      "coreOpenIDClientConfig": {
        "backchannel_logout_session_required": false,
        "backchannel_logout_uri": null,
        "claims": [],
        "clientSessionUri": null,
        "defaultAcrValues": [],
        "defaultMaxAge": 600,
        "defaultMaxAgeEnabled": false,
        "jwtTokenLifetime": 0,
        "postLogoutRedirectUri": [],
      },
      "coreUmaClientConfig": {
        "claimsRedirectionUris": [],
      },
      "overrideOAuth2ClientConfig": {
        "accessTokenMayActScript": "[Empty]",
        "accessTokenModificationScript": "d22f9a0c-426a-4466-b95e-d0f125b0d5fa",
        "clientsCanSkipConsent": false,
        "enableRemoteConsent": false,
        "issueRefreshToken": true,
        "issueRefreshTokenOnRefreshedToken": true,
        "oidcClaimsScript": "36863ffb-40ec-48b9-94b1-9a99f71cc3b5",
        "oidcMayActScript": "[Empty]",
        "overrideableOIDCClaims": [],
        "providerOverridesEnabled": false,
        "remoteConsentServiceId": null,
        "statelessTokensEnabled": false,
        "tokenEncryptionEnabled": false,
        "usePolicyEngineForScope": false,
      },
      "signEncOAuth2ClientConfig": {
        "clientJwtPublicKey": null,
        "idTokenEncryptionAlgorithm": "RSA-OAEP-256",
        "idTokenEncryptionEnabled": false,
        "idTokenEncryptionMethod": "A128CBC-HS256",
        "idTokenPublicEncryptionKey": null,
        "idTokenSignedResponseAlg": "RS256",
        "jwkSet": null,
        "jwkStoreCacheMissCacheTime": 60000,
        "jwksCacheTimeout": 3600000,
        "jwksUri": null,
        "mTLSCertificateBoundAccessTokens": false,
        "mTLSSubjectDN": null,
        "mTLSTrustedCert": null,
        "publicKeyLocation": "jwks_uri",
        "requestParameterEncryptedAlg": null,
        "requestParameterEncryptedEncryptionAlgorithm": "A128CBC-HS256",
        "requestParameterSignedAlg": null,
        "tokenEndpointAuthSigningAlgorithm": "RS256",
        "tokenIntrospectionEncryptedResponseAlg": "RSA-OAEP-256",
        "tokenIntrospectionEncryptedResponseEncryptionAlgorithm": "A128CBC-HS256",
        "tokenIntrospectionResponseFormat": "JSON",
        "tokenIntrospectionSignedResponseAlg": "RS256",
        "userinfoEncryptedResponseAlg": null,
        "userinfoEncryptedResponseEncryptionAlgorithm": "A128CBC-HS256",
        "userinfoResponseFormat": "JSON",
        "userinfoSignedResponseAlg": null,
      },
    },
  },
  "config": {
    "access": {
      "_id": "access",
      "configs": [
        {
          "actions": "*",
          "methods": "read",
          "pattern": "info/*",
          "roles": "*",
        },
        {
          "actions": "login,logout",
          "methods": "read,action",
          "pattern": "authentication",
          "roles": "*",
        },
        {
          "actions": "*",
          "methods": "read",
          "pattern": "config/fidc/*",
          "roles": "*",
        },
        {
          "actions": "*",
          "methods": "*",
          "pattern": "config/fidc/*",
          "roles": "internal/role/openidm-admin",
        },
        {
          "actions": "*",
          "methods": "read",
          "pattern": "config/ui/themeconfig",
          "roles": "*",
        },
        {
          "actions": "*",
          "methods": "read",
          "pattern": "config/ui/themerealm",
          "roles": "*",
        },
        {
          "actions": "*",
          "methods": "read",
          "pattern": "config/uilocale/*",
          "roles": "*",
        },
        {
          "actions": "*",
          "methods": "read",
          "pattern": "config/fieldPolicy/*",
          "roles": "internal/role/openidm-authorized",
        },
        {
          "actions": "*",
          "methods": "read",
          "pattern": "info/uiconfig",
          "roles": "*",
        },
        {
          "actions": "*",
          "methods": "read",
          "pattern": "config/ui/dashboard",
          "roles": "internal/role/openidm-authorized",
        },
        {
          "actions": "*",
          "methods": "query",
          "pattern": "info/features",
          "roles": "*",
        },
        {
          "actions": "listPrivileges",
          "methods": "action",
          "pattern": "privilege",
          "roles": "*",
        },
        {
          "actions": "*",
          "methods": "read",
          "pattern": "privilege/*",
          "roles": "*",
        },
        {
          "actions": "validate",
          "methods": "action",
          "pattern": "util/validateQueryFilter",
          "roles": "internal/role/openidm-authorized",
        },
        {
          "actions": "*",
          "customAuthz": "checkIfAnyFeatureEnabled('kba')",
          "methods": "read",
          "pattern": "selfservice/kba",
          "roles": "internal/role/openidm-authorized",
        },
        {
          "actions": "*",
          "methods": "read",
          "pattern": "schema/*",
          "roles": "internal/role/openidm-authorized",
        },
        {
          "actions": "*",
          "methods": "action,query",
          "pattern": "consent",
          "roles": "internal/role/openidm-authorized",
        },
        {
          "actions": "*",
          "excludePatterns": "repo,repo/*,file/iwa/*",
          "methods": "*",
          "pattern": "*",
          "roles": "internal/role/openidm-admin",
        },
        {
          "actions": "",
          "methods": "create,read,update,delete,patch,query",
          "pattern": "system/*",
          "roles": "internal/role/openidm-admin",
        },
        {
          "actions": "*",
          "methods": "script",
          "pattern": "system/*",
          "roles": "internal/role/openidm-admin",
        },
        {
          "actions": "test,testConfig,createconfiguration,liveSync,authenticate",
          "methods": "action",
          "pattern": "system/*",
          "roles": "internal/role/openidm-admin",
        },
        {
          "actions": "*",
          "customAuthz": "disallowCommandAction()",
          "methods": "*",
          "pattern": "repo",
          "roles": "internal/role/openidm-admin",
        },
        {
          "actions": "*",
          "customAuthz": "disallowCommandAction()",
          "methods": "*",
          "pattern": "repo/*",
          "roles": "internal/role/openidm-admin",
        },
        {
          "actions": "command",
          "customAuthz": "request.additionalParameters.commandId === 'delete-mapping-links'",
          "methods": "action",
          "pattern": "repo/link",
          "roles": "internal/role/openidm-admin",
        },
        {
          "methods": "create,read,query,patch",
          "pattern": "managed/*",
          "roles": "internal/role/platform-provisioning",
        },
        {
          "methods": "read,query",
          "pattern": "internal/role/*",
          "roles": "internal/role/platform-provisioning",
        },
        {
          "actions": "*",
          "methods": "create,read,action,update",
          "pattern": "profile/*",
          "roles": "internal/role/platform-provisioning",
        },
        {
          "actions": "*",
          "methods": "read,action",
          "pattern": "policy/*",
          "roles": "internal/role/platform-provisioning",
        },
        {
          "methods": "read",
          "pattern": "schema/*",
          "roles": "internal/role/platform-provisioning",
        },
        {
          "actions": "*",
          "methods": "action,query",
          "pattern": "consent",
          "roles": "internal/role/platform-provisioning",
        },
        {
          "methods": "read",
          "pattern": "selfservice/kba",
          "roles": "internal/role/platform-provisioning",
        },
        {
          "methods": "read",
          "pattern": "selfservice/terms",
          "roles": "internal/role/platform-provisioning",
        },
        {
          "methods": "read",
          "pattern": "identityProviders",
          "roles": "internal/role/platform-provisioning",
        },
        {
          "actions": "sendTemplate",
          "methods": "action",
          "pattern": "external/email",
          "roles": "internal/role/platform-provisioning",
        },
        {
          "actions": "authenticate",
          "methods": "action",
          "pattern": "system/*",
          "roles": "internal/role/platform-provisioning",
        },
        {
          "actions": "*",
          "methods": "read,action",
          "pattern": "policy/*",
          "roles": "internal/role/openidm-authorized",
        },
        {
          "actions": "*",
          "methods": "read",
          "pattern": "config/ui/*",
          "roles": "internal/role/openidm-authorized",
        },
        {
          "actions": "bind,unbind",
          "customAuthz": "ownDataOnly()",
          "methods": "read,action,delete",
          "pattern": "*",
          "roles": "internal/role/openidm-authorized",
        },
        {
          "actions": "patch",
          "customAuthz": "ownDataOnly() && onlyEditableManagedObjectProperties('user', [])",
          "methods": "update,patch,action",
          "pattern": "*",
          "roles": "internal/role/openidm-authorized",
        },
        {
          "actions": "patch",
          "customAuthz": "(request.resourcePath === 'selfservice/user/' + context.security.authorization.id) && onlyEditableManagedObjectProperties('user', [])",
          "methods": "patch,action",
          "pattern": "selfservice/user/*",
          "roles": "internal/role/openidm-authorized",
        },
        {
          "actions": "*",
          "methods": "read",
          "pattern": "endpoint/getprocessesforuser",
          "roles": "internal/role/openidm-authorized",
        },
        {
          "actions": "*",
          "methods": "query",
          "pattern": "endpoint/gettasksview",
          "roles": "internal/role/openidm-authorized",
        },
        {
          "actions": "complete",
          "customAuthz": "isMyTask()",
          "methods": "action",
          "pattern": "workflow/taskinstance/*",
          "roles": "internal/role/openidm-authorized",
        },
        {
          "actions": "*",
          "customAuthz": "canUpdateTask()",
          "methods": "read,update",
          "pattern": "workflow/taskinstance/*",
          "roles": "internal/role/openidm-authorized",
        },
        {
          "actions": "*",
          "customAuthz": "isAllowedToStartProcess()",
          "methods": "create",
          "pattern": "workflow/processinstance",
          "roles": "internal/role/openidm-authorized",
        },
        {
          "actions": "read",
          "customAuthz": "isOneOfMyWorkflows()",
          "methods": "*",
          "pattern": "workflow/processdefinition/*",
          "roles": "internal/role/openidm-authorized",
        },
        {
          "actions": "patch",
          "customAuthz": "isQueryOneOf({'managed/user': ['for-userName']}) && restrictPatchToFields(['password'])",
          "methods": "patch,action",
          "pattern": "managed/user",
          "roles": "internal/role/openidm-cert",
        },
        {
          "actions": "*",
          "customAuthz": "ownRelationship()",
          "methods": "read",
          "pattern": "internal/usermeta/*",
          "roles": "internal/role/openidm-authorized",
        },
        {
          "actions": "*",
          "customAuthz": "ownRelationship()",
          "methods": "read,delete",
          "pattern": "internal/notification/*",
          "roles": "internal/role/openidm-authorized",
        },
        {
          "actions": "*",
          "customAuthz": "ownRelationshipCollection(['_meta','_notifications'])",
          "methods": "read,query",
          "pattern": "managed/user/*",
          "roles": "internal/role/openidm-authorized",
        },
        {
          "actions": "",
          "customAuthz": "ownDataOnly()",
          "methods": "read,delete",
          "pattern": "managed/alpha_user/*",
          "roles": "internal/role/openidm-authorized",
        },
        {
          "actions": "patch",
          "customAuthz": "ownDataOnly() && onlyEditableManagedObjectProperties('alpha_user', [])",
          "methods": "update,patch,action",
          "pattern": "managed/alpha_user/*",
          "roles": "internal/role/openidm-authorized",
        },
        {
          "actions": "*",
          "customAuthz": "ownRelationshipCollection(['_meta','_notifications'])",
          "methods": "read,query",
          "pattern": "managed/alpha_user/*",
          "roles": "internal/role/openidm-authorized",
        },
        {
          "actions": "",
          "customAuthz": "ownDataOnly()",
          "methods": "read,delete",
          "pattern": "managed/bravo_user/*",
          "roles": "internal/role/openidm-authorized",
        },
        {
          "actions": "patch",
          "customAuthz": "ownDataOnly() && onlyEditableManagedObjectProperties('bravo_user', [])",
          "methods": "update,patch,action",
          "pattern": "managed/bravo_user/*",
          "roles": "internal/role/openidm-authorized",
        },
        {
          "actions": "*",
          "customAuthz": "ownRelationshipCollection(['_meta','_notifications'])",
          "methods": "read,query",
          "pattern": "managed/bravo_user/*",
          "roles": "internal/role/openidm-authorized",
        },
        {
          "actions": "deleteNotificationsForTarget",
          "customAuthz": "request.additionalParameters.target === (context.security.authorization.component + '/' + context.security.authorization.id)",
          "methods": "action",
          "pattern": "notification",
          "roles": "internal/role/openidm-authorized",
        },
      ],
    },
    "alphaOrgPrivileges": {
      "_id": "alphaOrgPrivileges",
      "privileges": [
        {
          "accessFlags": [
            {
              "attribute": "name",
              "readOnly": false,
            },
            {
              "attribute": "description",
              "readOnly": false,
            },
            {
              "attribute": "owners",
              "readOnly": true,
            },
            {
              "attribute": "admins",
              "readOnly": false,
            },
            {
              "attribute": "members",
              "readOnly": false,
            },
            {
              "attribute": "parent",
              "readOnly": false,
            },
            {
              "attribute": "children",
              "readOnly": false,
            },
            {
              "attribute": "parentIDs",
              "readOnly": true,
            },
            {
              "attribute": "adminIDs",
              "readOnly": true,
            },
            {
              "attribute": "parentAdminIDs",
              "readOnly": true,
            },
            {
              "attribute": "ownerIDs",
              "readOnly": true,
            },
            {
              "attribute": "parentOwnerIDs",
              "readOnly": true,
            },
          ],
          "actions": [],
          "filter": "/ownerIDs eq "{{_id}}" or /parentOwnerIDs eq "{{_id}}"",
          "name": "owner-view-update-delete-orgs",
          "path": "managed/alpha_organization",
          "permissions": [
            "VIEW",
            "UPDATE",
            "DELETE",
          ],
        },
        {
          "accessFlags": [
            {
              "attribute": "name",
              "readOnly": false,
            },
            {
              "attribute": "description",
              "readOnly": false,
            },
            {
              "attribute": "owners",
              "readOnly": true,
            },
            {
              "attribute": "admins",
              "readOnly": false,
            },
            {
              "attribute": "members",
              "readOnly": false,
            },
            {
              "attribute": "parent",
              "readOnly": false,
            },
            {
              "attribute": "children",
              "readOnly": false,
            },
            {
              "attribute": "parentIDs",
              "readOnly": true,
            },
            {
              "attribute": "adminIDs",
              "readOnly": true,
            },
            {
              "attribute": "parentAdminIDs",
              "readOnly": true,
            },
            {
              "attribute": "ownerIDs",
              "readOnly": true,
            },
            {
              "attribute": "parentOwnerIDs",
              "readOnly": true,
            },
          ],
          "actions": [],
          "filter": "/parent pr",
          "name": "owner-create-orgs",
          "path": "managed/alpha_organization",
          "permissions": [
            "CREATE",
          ],
        },
        {
          "accessFlags": [
            {
              "attribute": "userName",
              "readOnly": false,
            },
            {
              "attribute": "password",
              "readOnly": false,
            },
            {
              "attribute": "givenName",
              "readOnly": false,
            },
            {
              "attribute": "sn",
              "readOnly": false,
            },
            {
              "attribute": "mail",
              "readOnly": false,
            },
            {
              "attribute": "description",
              "readOnly": false,
            },
            {
              "attribute": "accountStatus",
              "readOnly": false,
            },
            {
              "attribute": "telephoneNumber",
              "readOnly": false,
            },
            {
              "attribute": "postalAddress",
              "readOnly": false,
            },
            {
              "attribute": "city",
              "readOnly": false,
            },
            {
              "attribute": "postalCode",
              "readOnly": false,
            },
            {
              "attribute": "country",
              "readOnly": false,
            },
            {
              "attribute": "stateProvince",
              "readOnly": false,
            },
            {
              "attribute": "roles",
              "readOnly": false,
            },
            {
              "attribute": "manager",
              "readOnly": false,
            },
            {
              "attribute": "authzRoles",
              "readOnly": false,
            },
            {
              "attribute": "reports",
              "readOnly": false,
            },
            {
              "attribute": "effectiveRoles",
              "readOnly": false,
            },
            {
              "attribute": "effectiveAssignments",
              "readOnly": false,
            },
            {
              "attribute": "lastSync",
              "readOnly": false,
            },
            {
              "attribute": "kbaInfo",
              "readOnly": false,
            },
            {
              "attribute": "preferences",
              "readOnly": false,
            },
            {
              "attribute": "consentedMappings",
              "readOnly": false,
            },
            {
              "attribute": "memberOfOrg",
              "readOnly": false,
            },
            {
              "attribute": "adminOfOrg",
              "readOnly": false,
            },
            {
              "attribute": "ownerOfOrg",
              "readOnly": true,
            },
            {
              "attribute": "memberOfOrgIDs",
              "readOnly": true,
            },
            {
              "attribute": "groups",
              "readOnly": false,
            },
            {
              "attribute": "effectiveGroups",
              "readOnly": false,
            },
          ],
          "actions": [],
          "filter": "/memberOfOrgIDs eq "__org_id_placeholder__"",
          "name": "owner-view-update-delete-admins-and-members",
          "path": "managed/alpha_user",
          "permissions": [
            "VIEW",
            "DELETE",
            "UPDATE",
          ],
        },
        {
          "accessFlags": [
            {
              "attribute": "userName",
              "readOnly": false,
            },
            {
              "attribute": "password",
              "readOnly": false,
            },
            {
              "attribute": "givenName",
              "readOnly": false,
            },
            {
              "attribute": "sn",
              "readOnly": false,
            },
            {
              "attribute": "mail",
              "readOnly": false,
            },
            {
              "attribute": "description",
              "readOnly": false,
            },
            {
              "attribute": "accountStatus",
              "readOnly": false,
            },
            {
              "attribute": "telephoneNumber",
              "readOnly": false,
            },
            {
              "attribute": "postalAddress",
              "readOnly": false,
            },
            {
              "attribute": "city",
              "readOnly": false,
            },
            {
              "attribute": "postalCode",
              "readOnly": false,
            },
            {
              "attribute": "country",
              "readOnly": false,
            },
            {
              "attribute": "stateProvince",
              "readOnly": false,
            },
            {
              "attribute": "roles",
              "readOnly": false,
            },
            {
              "attribute": "manager",
              "readOnly": false,
            },
            {
              "attribute": "authzRoles",
              "readOnly": false,
            },
            {
              "attribute": "reports",
              "readOnly": false,
            },
            {
              "attribute": "effectiveRoles",
              "readOnly": false,
            },
            {
              "attribute": "effectiveAssignments",
              "readOnly": false,
            },
            {
              "attribute": "lastSync",
              "readOnly": false,
            },
            {
              "attribute": "kbaInfo",
              "readOnly": false,
            },
            {
              "attribute": "preferences",
              "readOnly": false,
            },
            {
              "attribute": "consentedMappings",
              "readOnly": false,
            },
            {
              "attribute": "memberOfOrg",
              "readOnly": false,
            },
            {
              "attribute": "adminOfOrg",
              "readOnly": false,
            },
            {
              "attribute": "ownerOfOrg",
              "readOnly": true,
            },
            {
              "attribute": "memberOfOrgIDs",
              "readOnly": true,
            },
            {
              "attribute": "groups",
              "readOnly": false,
            },
            {
              "attribute": "effectiveGroups",
              "readOnly": false,
            },
          ],
          "actions": [],
          "filter": "/memberOfOrg/0 pr and /adminOfOrg/0 pr and !(/ownerOfOrg pr)",
          "name": "owner-create-admins",
          "path": "managed/alpha_user",
          "permissions": [
            "CREATE",
          ],
        },
        {
          "accessFlags": [
            {
              "attribute": "name",
              "readOnly": false,
            },
            {
              "attribute": "description",
              "readOnly": false,
            },
            {
              "attribute": "owners",
              "readOnly": true,
            },
            {
              "attribute": "admins",
              "readOnly": true,
            },
            {
              "attribute": "members",
              "readOnly": false,
            },
            {
              "attribute": "parent",
              "readOnly": false,
            },
            {
              "attribute": "children",
              "readOnly": false,
            },
            {
              "attribute": "parentIDs",
              "readOnly": true,
            },
            {
              "attribute": "adminIDs",
              "readOnly": true,
            },
            {
              "attribute": "parentAdminIDs",
              "readOnly": true,
            },
            {
              "attribute": "ownerIDs",
              "readOnly": true,
            },
            {
              "attribute": "parentOwnerIDs",
              "readOnly": true,
            },
          ],
          "actions": [],
          "filter": "/adminIDs eq "{{_id}}" or /parentAdminIDs eq "{{_id}}"",
          "name": "admin-view-update-delete-orgs",
          "path": "managed/alpha_organization",
          "permissions": [
            "VIEW",
            "UPDATE",
            "DELETE",
          ],
        },
        {
          "accessFlags": [
            {
              "attribute": "name",
              "readOnly": false,
            },
            {
              "attribute": "description",
              "readOnly": false,
            },
            {
              "attribute": "owners",
              "readOnly": true,
            },
            {
              "attribute": "admins",
              "readOnly": true,
            },
            {
              "attribute": "members",
              "readOnly": false,
            },
            {
              "attribute": "parent",
              "readOnly": false,
            },
            {
              "attribute": "children",
              "readOnly": false,
            },
            {
              "attribute": "parentIDs",
              "readOnly": true,
            },
            {
              "attribute": "adminIDs",
              "readOnly": true,
            },
            {
              "attribute": "parentAdminIDs",
              "readOnly": true,
            },
            {
              "attribute": "ownerIDs",
              "readOnly": true,
            },
            {
              "attribute": "parentOwnerIDs",
              "readOnly": true,
            },
          ],
          "actions": [],
          "filter": "/parent pr",
          "name": "admin-create-orgs",
          "path": "managed/alpha_organization",
          "permissions": [
            "CREATE",
          ],
        },
        {
          "accessFlags": [
            {
              "attribute": "userName",
              "readOnly": false,
            },
            {
              "attribute": "password",
              "readOnly": false,
            },
            {
              "attribute": "givenName",
              "readOnly": false,
            },
            {
              "attribute": "sn",
              "readOnly": false,
            },
            {
              "attribute": "mail",
              "readOnly": false,
            },
            {
              "attribute": "description",
              "readOnly": false,
            },
            {
              "attribute": "accountStatus",
              "readOnly": false,
            },
            {
              "attribute": "telephoneNumber",
              "readOnly": false,
            },
            {
              "attribute": "postalAddress",
              "readOnly": false,
            },
            {
              "attribute": "city",
              "readOnly": false,
            },
            {
              "attribute": "postalCode",
              "readOnly": false,
            },
            {
              "attribute": "country",
              "readOnly": false,
            },
            {
              "attribute": "stateProvince",
              "readOnly": false,
            },
            {
              "attribute": "roles",
              "readOnly": false,
            },
            {
              "attribute": "manager",
              "readOnly": false,
            },
            {
              "attribute": "authzRoles",
              "readOnly": false,
            },
            {
              "attribute": "reports",
              "readOnly": false,
            },
            {
              "attribute": "effectiveRoles",
              "readOnly": false,
            },
            {
              "attribute": "effectiveAssignments",
              "readOnly": false,
            },
            {
              "attribute": "lastSync",
              "readOnly": false,
            },
            {
              "attribute": "kbaInfo",
              "readOnly": false,
            },
            {
              "attribute": "preferences",
              "readOnly": false,
            },
            {
              "attribute": "consentedMappings",
              "readOnly": false,
            },
            {
              "attribute": "memberOfOrg",
              "readOnly": false,
            },
            {
              "attribute": "adminOfOrg",
              "readOnly": true,
            },
            {
              "attribute": "ownerOfOrg",
              "readOnly": true,
            },
            {
              "attribute": "memberOfOrgIDs",
              "readOnly": true,
            },
            {
              "attribute": "groups",
              "readOnly": false,
            },
            {
              "attribute": "effectiveGroups",
              "readOnly": false,
            },
          ],
          "actions": [],
          "filter": "/memberOfOrgIDs eq "__org_id_placeholder__"",
          "name": "admin-view-update-delete-members",
          "path": "managed/alpha_user",
          "permissions": [
            "VIEW",
            "DELETE",
            "UPDATE",
          ],
        },
        {
          "accessFlags": [
            {
              "attribute": "userName",
              "readOnly": false,
            },
            {
              "attribute": "password",
              "readOnly": false,
            },
            {
              "attribute": "givenName",
              "readOnly": false,
            },
            {
              "attribute": "sn",
              "readOnly": false,
            },
            {
              "attribute": "mail",
              "readOnly": false,
            },
            {
              "attribute": "description",
              "readOnly": false,
            },
            {
              "attribute": "accountStatus",
              "readOnly": false,
            },
            {
              "attribute": "telephoneNumber",
              "readOnly": false,
            },
            {
              "attribute": "postalAddress",
              "readOnly": false,
            },
            {
              "attribute": "city",
              "readOnly": false,
            },
            {
              "attribute": "postalCode",
              "readOnly": false,
            },
            {
              "attribute": "country",
              "readOnly": false,
            },
            {
              "attribute": "stateProvince",
              "readOnly": false,
            },
            {
              "attribute": "roles",
              "readOnly": false,
            },
            {
              "attribute": "manager",
              "readOnly": false,
            },
            {
              "attribute": "authzRoles",
              "readOnly": false,
            },
            {
              "attribute": "reports",
              "readOnly": false,
            },
            {
              "attribute": "effectiveRoles",
              "readOnly": false,
            },
            {
              "attribute": "effectiveAssignments",
              "readOnly": false,
            },
            {
              "attribute": "lastSync",
              "readOnly": false,
            },
            {
              "attribute": "kbaInfo",
              "readOnly": false,
            },
            {
              "attribute": "preferences",
              "readOnly": false,
            },
            {
              "attribute": "consentedMappings",
              "readOnly": false,
            },
            {
              "attribute": "memberOfOrg",
              "readOnly": false,
            },
            {
              "attribute": "adminOfOrg",
              "readOnly": true,
            },
            {
              "attribute": "ownerOfOrg",
              "readOnly": true,
            },
            {
              "attribute": "memberOfOrgIDs",
              "readOnly": true,
            },
            {
              "attribute": "groups",
              "readOnly": false,
            },
            {
              "attribute": "effectiveGroups",
              "readOnly": false,
            },
          ],
          "actions": [],
          "filter": "/memberOfOrg/0 pr and !(/adminOfOrg pr) and !(/ownerOfOrg pr)",
          "name": "admin-create-members",
          "path": "managed/alpha_user",
          "permissions": [
            "CREATE",
          ],
        },
      ],
    },
    "apiVersion": {
      "_id": "apiVersion",
      "warning": {
        "enabled": {
          "$bool": "&{openidm.apiVersion.warning.enabled|false}",
        },
        "includeScripts": {
          "$bool": "&{openidm.apiVersion.warning.includeScripts|false}",
        },
        "logFilterResourcePaths": [
          "audit",
          "authentication",
          "cluster",
          "config",
          "consent",
          "csv",
          "external/rest",
          "identityProviders",
          "info",
          "internal",
          "internal/role",
          "internal/user",
          "internal/usermeta",
          "managed",
          "managed/assignment",
          "managed/organization",
          "managed/role",
          "managed/user",
          "notification",
          "policy",
          "privilege",
          "profile",
          "recon",
          "recon/assoc",
          "repo",
          "selfservice/kba",
          "selfservice/terms",
          "scheduler/job",
          "scheduler/trigger",
          "schema",
          "sync",
          "sync/mappings",
          "system",
          "taskscanner",
        ],
      },
    },
    "audit": {
      "_id": "audit",
      "auditServiceConfig": {
        "availableAuditEventHandlers": [
          "org.forgerock.audit.handlers.csv.CsvAuditEventHandler",
          "org.forgerock.audit.handlers.elasticsearch.ElasticsearchAuditEventHandler",
          "org.forgerock.audit.handlers.jms.JmsAuditEventHandler",
          "org.forgerock.audit.handlers.json.JsonAuditEventHandler",
          "org.forgerock.audit.handlers.json.stdout.JsonStdoutAuditEventHandler",
          "org.forgerock.openidm.audit.impl.RepositoryAuditEventHandler",
          "org.forgerock.openidm.audit.impl.RouterAuditEventHandler",
          "org.forgerock.audit.handlers.splunk.SplunkAuditEventHandler",
          "org.forgerock.audit.handlers.syslog.SyslogAuditEventHandler",
        ],
        "caseInsensitiveFields": [
          "/access/http/request/headers",
          "/access/http/response/headers",
        ],
        "filterPolicies": {
          "value": {
            "excludeIf": [
              "/access/http/request/cookies/&{com.iplanet.am.cookie.name}",
              "/access/http/request/cookies/session-jwt",
              "/access/http/request/headers/&{com.sun.identity.auth.cookieName}",
              "/access/http/request/headers/&{com.iplanet.am.cookie.name}",
              "/access/http/request/headers/accept-encoding",
              "/access/http/request/headers/accept-language",
              "/access/http/request/headers/Authorization",
              "/access/http/request/headers/cache-control",
              "/access/http/request/headers/connection",
              "/access/http/request/headers/content-length",
              "/access/http/request/headers/content-type",
              "/access/http/request/headers/proxy-authorization",
              "/access/http/request/headers/X-OpenAM-Password",
              "/access/http/request/headers/X-OpenIDM-Password",
              "/access/http/request/queryParameters/access_token",
              "/access/http/request/queryParameters/IDToken1",
              "/access/http/request/queryParameters/id_token_hint",
              "/access/http/request/queryParameters/Login.Token1",
              "/access/http/request/queryParameters/redirect_uri",
              "/access/http/request/queryParameters/requester",
              "/access/http/request/queryParameters/sessionUpgradeSSOTokenId",
              "/access/http/request/queryParameters/tokenId",
              "/access/http/response/headers/Authorization",
              "/access/http/response/headers/Set-Cookie",
              "/access/http/response/headers/X-OpenIDM-Password",
            ],
            "includeIf": [],
          },
        },
        "handlerForQueries": "json",
      },
      "eventHandlers": [
        {
          "class": "org.forgerock.audit.handlers.json.stdout.JsonStdoutAuditEventHandler",
          "config": {
            "name": "json",
            "topics": [
              "access",
              "activity",
              "sync",
              "authentication",
              "config",
            ],
          },
        },
        {
          "class": "org.forgerock.openidm.audit.impl.RepositoryAuditEventHandler",
          "config": {
            "enabled": false,
            "name": "repo",
            "topics": [
              "access",
              "activity",
              "sync",
              "authentication",
              "config",
            ],
          },
        },
      ],
      "eventTopics": {
        "activity": {
          "filter": {
            "actions": [
              "create",
              "update",
              "delete",
              "patch",
              "action",
            ],
          },
          "passwordFields": [
            "password",
          ],
          "watchedFields": [],
        },
        "config": {
          "filter": {
            "actions": [
              "create",
              "update",
              "delete",
              "patch",
              "action",
            ],
          },
        },
      },
      "exceptionFormatter": {
        "file": "bin/defaults/script/audit/stacktraceFormatter.js",
        "type": "text/javascript",
      },
    },
    "auth.profile": {
      "_id": "auth.profile",
      "authenticationRole": "internal/role/openidm-authenticated",
      "authorizationRole": "internal/role/openidm-authorized",
      "profileEnhancementProcesses": [
        "selfservice/termsAndConditions",
        "selfservice/kbaUpdate",
        "selfservice/profile",
      ],
    },
    "authentication": {
      "_id": "authentication",
      "rsFilter": {
        "anonymousUserMapping": {
          "localUser": "internal/user/anonymous",
          "roles": [
            "internal/role/openidm-reg",
          ],
          "userRoles": "authzRoles/*",
        },
        "augmentSecurityContext": {
          "source": "require('auth/orgPrivileges').assignPrivilegesToUser(resource, security, properties, subjectMapping, privileges, security.authorization.component.includes('/alpha_') ? 'alphaOrgPrivileges' : 'bravoOrgPrivileges', 'privilegeAssignments');",
          "type": "text/javascript",
        },
        "cache": {
          "maxTimeout": "300 seconds",
        },
        "clientId": "&{rsfilter.resource.server.client.id}",
        "clientSecret": "&{rsfilter.resource.server.secret}",
        "scopes": [
          "fr:idm:*",
        ],
        "staticUserMapping": [
          {
            "localUser": "internal/user/openidm-admin",
            "roles": [
              "internal/role/openidm-authorized",
              "internal/role/openidm-admin",
            ],
            "subject": "amadmin",
            "userRoles": "authzRoles/*",
          },
          {
            "localUser": "internal/user/idm-provisioning",
            "roles": [
              "internal/role/platform-provisioning",
            ],
            "subject": "idm-provisioning",
          },
          {
            "localUser": "internal/user/idm-provisioning",
            "subject": "RCSClient",
          },
          {
            "localUser": "internal/user/openidm-admin",
            "roles": [
              "internal/role/openidm-authorized",
              "internal/role/openidm-admin",
            ],
            "subject": "23281ea7-739b-4fd1-b953-eaae73a2b497",
            "userRoles": "authzRoles/*",
          },
          {
            "localUser": "internal/user/openidm-admin",
            "roles": [
              "internal/role/openidm-authorized",
              "internal/role/openidm-admin",
            ],
            "subject": "86fca6d7-2f52-4524-92c6-b6f416071455",
            "userRoles": "authzRoles/*",
          },
          {
            "localUser": "internal/user/openidm-admin",
            "roles": [
              "internal/role/openidm-authorized",
              "internal/role/openidm-admin",
            ],
            "subject": "d4c3ecbc-4b03-4ad5-b32f-464bda442e3f",
            "userRoles": "authzRoles/*",
          },
          {
            "localUser": "internal/user/openidm-admin",
            "roles": [
              "internal/role/openidm-authorized",
              "internal/role/openidm-admin",
            ],
            "subject": "49a2981c-e192-4739-a0e6-c7582168bdf5",
            "userRoles": "authzRoles/*",
          },
          {
            "localUser": "internal/user/idm-provisioning",
            "roles": [
              "internal/role/openidm-admin",
            ],
            "subject": "autoid-resource-server",
          },
        ],
        "subjectMapping": [
          {
            "defaultRoles": [
              "internal/role/openidm-authorized",
            ],
            "propertyMapping": {
              "sub": "_id",
            },
            "queryOnResource": "managed/teammember",
            "realm": "/",
            "userRoles": "authzRoles/*",
          },
          {
            "additionalUserFields": [
              "adminOfOrg",
              "ownerOfOrg",
            ],
            "defaultRoles": [
              "internal/role/openidm-authorized",
            ],
            "propertyMapping": {
              "sub": "_id",
            },
            "queryOnResource": "managed/{{substring realm 1}}_user",
            "userRoles": "authzRoles/*",
          },
        ],
        "tokenIntrospectUrl": "http://am.fr-platform/am/oauth2/introspect",
      },
    },
    "bravoOrgPrivileges": {
      "_id": "bravoOrgPrivileges",
      "privileges": [
        {
          "accessFlags": [
            {
              "attribute": "name",
              "readOnly": false,
            },
            {
              "attribute": "description",
              "readOnly": false,
            },
            {
              "attribute": "owners",
              "readOnly": true,
            },
            {
              "attribute": "admins",
              "readOnly": false,
            },
            {
              "attribute": "members",
              "readOnly": false,
            },
            {
              "attribute": "parent",
              "readOnly": false,
            },
            {
              "attribute": "children",
              "readOnly": false,
            },
            {
              "attribute": "parentIDs",
              "readOnly": true,
            },
            {
              "attribute": "adminIDs",
              "readOnly": true,
            },
            {
              "attribute": "parentAdminIDs",
              "readOnly": true,
            },
            {
              "attribute": "ownerIDs",
              "readOnly": true,
            },
            {
              "attribute": "parentOwnerIDs",
              "readOnly": true,
            },
          ],
          "actions": [],
          "filter": "/ownerIDs eq "{{_id}}" or /parentOwnerIDs eq "{{_id}}"",
          "name": "owner-view-update-delete-orgs",
          "path": "managed/bravo_organization",
          "permissions": [
            "VIEW",
            "UPDATE",
            "DELETE",
          ],
        },
        {
          "accessFlags": [
            {
              "attribute": "name",
              "readOnly": false,
            },
            {
              "attribute": "description",
              "readOnly": false,
            },
            {
              "attribute": "owners",
              "readOnly": true,
            },
            {
              "attribute": "admins",
              "readOnly": false,
            },
            {
              "attribute": "members",
              "readOnly": false,
            },
            {
              "attribute": "parent",
              "readOnly": false,
            },
            {
              "attribute": "children",
              "readOnly": false,
            },
            {
              "attribute": "parentIDs",
              "readOnly": true,
            },
            {
              "attribute": "adminIDs",
              "readOnly": true,
            },
            {
              "attribute": "parentAdminIDs",
              "readOnly": true,
            },
            {
              "attribute": "ownerIDs",
              "readOnly": true,
            },
            {
              "attribute": "parentOwnerIDs",
              "readOnly": true,
            },
          ],
          "actions": [],
          "filter": "/parent pr",
          "name": "owner-create-orgs",
          "path": "managed/bravo_organization",
          "permissions": [
            "CREATE",
          ],
        },
        {
          "accessFlags": [
            {
              "attribute": "userName",
              "readOnly": false,
            },
            {
              "attribute": "password",
              "readOnly": false,
            },
            {
              "attribute": "givenName",
              "readOnly": false,
            },
            {
              "attribute": "sn",
              "readOnly": false,
            },
            {
              "attribute": "mail",
              "readOnly": false,
            },
            {
              "attribute": "description",
              "readOnly": false,
            },
            {
              "attribute": "accountStatus",
              "readOnly": false,
            },
            {
              "attribute": "telephoneNumber",
              "readOnly": false,
            },
            {
              "attribute": "postalAddress",
              "readOnly": false,
            },
            {
              "attribute": "city",
              "readOnly": false,
            },
            {
              "attribute": "postalCode",
              "readOnly": false,
            },
            {
              "attribute": "country",
              "readOnly": false,
            },
            {
              "attribute": "stateProvince",
              "readOnly": false,
            },
            {
              "attribute": "roles",
              "readOnly": false,
            },
            {
              "attribute": "manager",
              "readOnly": false,
            },
            {
              "attribute": "authzRoles",
              "readOnly": false,
            },
            {
              "attribute": "reports",
              "readOnly": false,
            },
            {
              "attribute": "effectiveRoles",
              "readOnly": false,
            },
            {
              "attribute": "effectiveAssignments",
              "readOnly": false,
            },
            {
              "attribute": "lastSync",
              "readOnly": false,
            },
            {
              "attribute": "kbaInfo",
              "readOnly": false,
            },
            {
              "attribute": "preferences",
              "readOnly": false,
            },
            {
              "attribute": "consentedMappings",
              "readOnly": false,
            },
            {
              "attribute": "memberOfOrg",
              "readOnly": false,
            },
            {
              "attribute": "adminOfOrg",
              "readOnly": false,
            },
            {
              "attribute": "ownerOfOrg",
              "readOnly": true,
            },
            {
              "attribute": "memberOfOrgIDs",
              "readOnly": true,
            },
            {
              "attribute": "groups",
              "readOnly": false,
            },
            {
              "attribute": "effectiveGroups",
              "readOnly": false,
            },
          ],
          "actions": [],
          "filter": "/memberOfOrgIDs eq "__org_id_placeholder__"",
          "name": "owner-view-update-delete-admins-and-members",
          "path": "managed/bravo_user",
          "permissions": [
            "VIEW",
            "DELETE",
            "UPDATE",
          ],
        },
        {
          "accessFlags": [
            {
              "attribute": "userName",
              "readOnly": false,
            },
            {
              "attribute": "password",
              "readOnly": false,
            },
            {
              "attribute": "givenName",
              "readOnly": false,
            },
            {
              "attribute": "sn",
              "readOnly": false,
            },
            {
              "attribute": "mail",
              "readOnly": false,
            },
            {
              "attribute": "description",
              "readOnly": false,
            },
            {
              "attribute": "accountStatus",
              "readOnly": false,
            },
            {
              "attribute": "telephoneNumber",
              "readOnly": false,
            },
            {
              "attribute": "postalAddress",
              "readOnly": false,
            },
            {
              "attribute": "city",
              "readOnly": false,
            },
            {
              "attribute": "postalCode",
              "readOnly": false,
            },
            {
              "attribute": "country",
              "readOnly": false,
            },
            {
              "attribute": "stateProvince",
              "readOnly": false,
            },
            {
              "attribute": "roles",
              "readOnly": false,
            },
            {
              "attribute": "manager",
              "readOnly": false,
            },
            {
              "attribute": "authzRoles",
              "readOnly": false,
            },
            {
              "attribute": "reports",
              "readOnly": false,
            },
            {
              "attribute": "effectiveRoles",
              "readOnly": false,
            },
            {
              "attribute": "effectiveAssignments",
              "readOnly": false,
            },
            {
              "attribute": "lastSync",
              "readOnly": false,
            },
            {
              "attribute": "kbaInfo",
              "readOnly": false,
            },
            {
              "attribute": "preferences",
              "readOnly": false,
            },
            {
              "attribute": "consentedMappings",
              "readOnly": false,
            },
            {
              "attribute": "memberOfOrg",
              "readOnly": false,
            },
            {
              "attribute": "adminOfOrg",
              "readOnly": false,
            },
            {
              "attribute": "ownerOfOrg",
              "readOnly": true,
            },
            {
              "attribute": "memberOfOrgIDs",
              "readOnly": true,
            },
            {
              "attribute": "groups",
              "readOnly": false,
            },
            {
              "attribute": "effectiveGroups",
              "readOnly": false,
            },
          ],
          "actions": [],
          "filter": "/memberOfOrg/0 pr and /adminOfOrg/0 pr and !(/ownerOfOrg pr)",
          "name": "owner-create-admins",
          "path": "managed/bravo_user",
          "permissions": [
            "CREATE",
          ],
        },
        {
          "accessFlags": [
            {
              "attribute": "name",
              "readOnly": false,
            },
            {
              "attribute": "description",
              "readOnly": false,
            },
            {
              "attribute": "owners",
              "readOnly": true,
            },
            {
              "attribute": "admins",
              "readOnly": true,
            },
            {
              "attribute": "members",
              "readOnly": false,
            },
            {
              "attribute": "parent",
              "readOnly": false,
            },
            {
              "attribute": "children",
              "readOnly": false,
            },
            {
              "attribute": "parentIDs",
              "readOnly": true,
            },
            {
              "attribute": "adminIDs",
              "readOnly": true,
            },
            {
              "attribute": "parentAdminIDs",
              "readOnly": true,
            },
            {
              "attribute": "ownerIDs",
              "readOnly": true,
            },
            {
              "attribute": "parentOwnerIDs",
              "readOnly": true,
            },
          ],
          "actions": [],
          "filter": "/adminIDs eq "{{_id}}" or /parentAdminIDs eq "{{_id}}"",
          "name": "admin-view-update-delete-orgs",
          "path": "managed/bravo_organization",
          "permissions": [
            "VIEW",
            "UPDATE",
            "DELETE",
          ],
        },
        {
          "accessFlags": [
            {
              "attribute": "name",
              "readOnly": false,
            },
            {
              "attribute": "description",
              "readOnly": false,
            },
            {
              "attribute": "owners",
              "readOnly": true,
            },
            {
              "attribute": "admins",
              "readOnly": true,
            },
            {
              "attribute": "members",
              "readOnly": false,
            },
            {
              "attribute": "parent",
              "readOnly": false,
            },
            {
              "attribute": "children",
              "readOnly": false,
            },
            {
              "attribute": "parentIDs",
              "readOnly": true,
            },
            {
              "attribute": "adminIDs",
              "readOnly": true,
            },
            {
              "attribute": "parentAdminIDs",
              "readOnly": true,
            },
            {
              "attribute": "ownerIDs",
              "readOnly": true,
            },
            {
              "attribute": "parentOwnerIDs",
              "readOnly": true,
            },
          ],
          "actions": [],
          "filter": "/parent pr",
          "name": "admin-create-orgs",
          "path": "managed/bravo_organization",
          "permissions": [
            "CREATE",
          ],
        },
        {
          "accessFlags": [
            {
              "attribute": "userName",
              "readOnly": false,
            },
            {
              "attribute": "password",
              "readOnly": false,
            },
            {
              "attribute": "givenName",
              "readOnly": false,
            },
            {
              "attribute": "sn",
              "readOnly": false,
            },
            {
              "attribute": "mail",
              "readOnly": false,
            },
            {
              "attribute": "description",
              "readOnly": false,
            },
            {
              "attribute": "accountStatus",
              "readOnly": false,
            },
            {
              "attribute": "telephoneNumber",
              "readOnly": false,
            },
            {
              "attribute": "postalAddress",
              "readOnly": false,
            },
            {
              "attribute": "city",
              "readOnly": false,
            },
            {
              "attribute": "postalCode",
              "readOnly": false,
            },
            {
              "attribute": "country",
              "readOnly": false,
            },
            {
              "attribute": "stateProvince",
              "readOnly": false,
            },
            {
              "attribute": "roles",
              "readOnly": false,
            },
            {
              "attribute": "manager",
              "readOnly": false,
            },
            {
              "attribute": "authzRoles",
              "readOnly": false,
            },
            {
              "attribute": "reports",
              "readOnly": false,
            },
            {
              "attribute": "effectiveRoles",
              "readOnly": false,
            },
            {
              "attribute": "effectiveAssignments",
              "readOnly": false,
            },
            {
              "attribute": "lastSync",
              "readOnly": false,
            },
            {
              "attribute": "kbaInfo",
              "readOnly": false,
            },
            {
              "attribute": "preferences",
              "readOnly": false,
            },
            {
              "attribute": "consentedMappings",
              "readOnly": false,
            },
            {
              "attribute": "memberOfOrg",
              "readOnly": false,
            },
            {
              "attribute": "adminOfOrg",
              "readOnly": true,
            },
            {
              "attribute": "ownerOfOrg",
              "readOnly": true,
            },
            {
              "attribute": "memberOfOrgIDs",
              "readOnly": true,
            },
            {
              "attribute": "groups",
              "readOnly": false,
            },
            {
              "attribute": "effectiveGroups",
              "readOnly": false,
            },
          ],
          "actions": [],
          "filter": "/memberOfOrgIDs eq "__org_id_placeholder__"",
          "name": "admin-view-update-delete-members",
          "path": "managed/bravo_user",
          "permissions": [
            "VIEW",
            "DELETE",
            "UPDATE",
          ],
        },
        {
          "accessFlags": [
            {
              "attribute": "userName",
              "readOnly": false,
            },
            {
              "attribute": "password",
              "readOnly": false,
            },
            {
              "attribute": "givenName",
              "readOnly": false,
            },
            {
              "attribute": "sn",
              "readOnly": false,
            },
            {
              "attribute": "mail",
              "readOnly": false,
            },
            {
              "attribute": "description",
              "readOnly": false,
            },
            {
              "attribute": "accountStatus",
              "readOnly": false,
            },
            {
              "attribute": "telephoneNumber",
              "readOnly": false,
            },
            {
              "attribute": "postalAddress",
              "readOnly": false,
            },
            {
              "attribute": "city",
              "readOnly": false,
            },
            {
              "attribute": "postalCode",
              "readOnly": false,
            },
            {
              "attribute": "country",
              "readOnly": false,
            },
            {
              "attribute": "stateProvince",
              "readOnly": false,
            },
            {
              "attribute": "roles",
              "readOnly": false,
            },
            {
              "attribute": "manager",
              "readOnly": false,
            },
            {
              "attribute": "authzRoles",
              "readOnly": false,
            },
            {
              "attribute": "reports",
              "readOnly": false,
            },
            {
              "attribute": "effectiveRoles",
              "readOnly": false,
            },
            {
              "attribute": "effectiveAssignments",
              "readOnly": false,
            },
            {
              "attribute": "lastSync",
              "readOnly": false,
            },
            {
              "attribute": "kbaInfo",
              "readOnly": false,
            },
            {
              "attribute": "preferences",
              "readOnly": false,
            },
            {
              "attribute": "consentedMappings",
              "readOnly": false,
            },
            {
              "attribute": "memberOfOrg",
              "readOnly": false,
            },
            {
              "attribute": "adminOfOrg",
              "readOnly": true,
            },
            {
              "attribute": "ownerOfOrg",
              "readOnly": true,
            },
            {
              "attribute": "memberOfOrgIDs",
              "readOnly": true,
            },
            {
              "attribute": "groups",
              "readOnly": false,
            },
            {
              "attribute": "effectiveGroups",
              "readOnly": false,
            },
          ],
          "actions": [],
          "filter": "/memberOfOrg/0 pr and !(/adminOfOrg pr) and !(/ownerOfOrg pr)",
          "name": "admin-create-members",
          "path": "managed/bravo_user",
          "permissions": [
            "CREATE",
          ],
        },
      ],
    },
    "cluster": {
      "_id": "cluster",
      "enabled": true,
      "instanceCheckInInterval": 5000,
      "instanceCheckInOffset": 0,
      "instanceId": "&{openidm.node.id}",
      "instanceRecoveryTimeout": 30000,
      "instanceTimeout": 30000,
    },
    "emailTemplate/FraudNotification": {
      "_id": "emailTemplate/FraudNotification",
      "defaultLocale": "en",
      "displayName": "Fraud Notification",
      "enabled": true,
      "from": "saas@forgerock.com",
      "html": {
        "en": "<div class="content"><p>Hello {{object.givenName}} {{object.sn}},</p><p>we blocked an attempt to access your Expanse account from a suspicious device!</p><p>Your Expanse Security Team.</p></div>",
      },
      "message": {
        "en": "<html><head></head><body style="background-color: #324054; color: #455469; padding: 60px; text-align: center;"><div class="content" style="background-color: red; border-radius: 4px; margin: 0 auto; padding: 48px; width: 235px;"><p>Hello {{object.givenName}} {{object.sn}},</p><p>we blocked an attempt to access your Expanse account from a suspicious device!</p><p>Your Expanse Security Team.</p></div></body></html>",
      },
      "mimeType": "text/html",
      "styles": "body {
 background-color: #324054;
 color: #455469;
 padding: 60px;
 text-align: center 
}
 a {
 text-decoration: none;
 color: #109cf1;
}
 .content {
 background-color: red;
 border-radius: 4px;
 margin: 0 auto;
 padding: 48px;
 width: 235px 
}
 ",
      "subject": {
        "en": "Fraud alert from your Expanse Account!",
      },
    },
    "emailTemplate/MobileEmailOTP": {
      "_id": "emailTemplate/MobileEmailOTP",
      "defaultLocale": "en",
      "displayName": "Mobile Email OTP",
      "enabled": true,
      "from": "saas@forgerock.com",
      "html": {
        "en": "<div class="content"><h3 id="thisisyouronetimepassword">This is your one-time password:</h3><h4 id="objectfrunindexedinteger5">{{object.frUnindexedInteger5}}</h4></div>",
      },
      "message": {
        "en": "<html><head></head><body style="background-color: #324054; color: #455469; padding: 60px; text-align: center;"><div class="content" style="background-color: #fff; border-radius: 4px; margin: 0 auto; padding: 48px; width: 235px;"><h3 id="thisisyouronetimepassword">This is your one-time password:</h3><h4 id="objectfrunindexedinteger5">{{object.frUnindexedInteger5}}</h4></div></body></html>",
      },
      "mimeType": "text/html",
      "styles": "body {
 background-color: #324054;
 color: #455469;
 padding: 60px;
 text-align: center 
}
 a {
 text-decoration: none;
 color: #109cf1;
}
 .content {
 background-color: #fff;
 border-radius: 4px;
 margin: 0 auto;
 padding: 48px;
 width: 235px 
}
 ",
      "subject": {
        "en": "One-Time Password for Login",
      },
    },
    "emailTemplate/UnknownDeviceNotification": {
      "_id": "emailTemplate/UnknownDeviceNotification",
      "defaultLocale": "en",
      "displayName": "Unknown Device Notification",
      "enabled": true,
      "from": "saas@forgerock.com",
      "html": {
        "en": "<div class="content"><p>Hello {{object.givenName}} {{object.sn}},</p><p>your Expanse account was accessed from an unknown device!</p><p>Your Expanse Security Team.</p></div>",
      },
      "message": {
        "en": "<html><head></head><body style="background-color: #324054; color: black; padding: 60px; text-align: center;"><div class="content" style="background-color: orange; border-radius: 4px; margin: 0 auto; padding: 48px; width: 235px;"><p>Hello {{object.givenName}} {{object.sn}},</p><p>your Expanse account was accessed from an unknown device!</p><p>Your Expanse Security Team.</p></div></body></html>",
      },
      "mimeType": "text/html",
      "styles": "body {
 background-color: #324054;
 color: black;
 padding: 60px;
 text-align: center 
}
 a {
 text-decoration: none;
 color: #109cf1;
}
 .content {
 background-color: orange;
 border-radius: 4px;
 margin: 0 auto;
 padding: 48px;
 width: 235px 
}
 ",
      "subject": {
        "en": "Your Expanse account was accessed from an unknown device!",
      },
    },
    "emailTemplate/Welcome": {
      "_id": "emailTemplate/Welcome",
      "defaultLocale": "en",
      "displayName": "Welcome",
      "enabled": true,
      "from": "saas@forgerock.com",
      "html": {
        "en": "<div class="content"><p>Welcome to Expanse, {{object.givenName}}!</p><p><a href="https://openam-huntington-dev.forgeblocks.com/am/XUI/?realm=/alpha#/service/Login">Access your account</a> with your new username: {{object.userName}}</p><p>We are looking forward to servicing all your banking needs!</p><p>Your Expanse Team.</p></div>",
      },
      "message": {
        "en": "<html><head></head><body style="background-color: #324054; color: black; padding: 10px; text-align: left;"><div class="content" style="background-color: #ffffff; border-radius: 4px; margin: 0 auto; padding: 10px; width: 300px;"><p>Welcome to Expanse, {{object.givenName}}!</p><p><a href="https://openam-huntington-dev.forgeblocks.com/am/XUI/?realm=/alpha#/service/Login" style="text-decoration: none; color: #109cf1;">Access your account</a> with your new username: {{object.userName}}</p><p>We are looking forward to servicing all your banking needs!</p><p>Your Expanse Team.</p></div></body></html>",
      },
      "mimeType": "text/html",
      "styles": "body {
 background-color: #324054;
 color: black;
 padding: 10px;
 text-align: left 
}
 a {
 text-decoration: none;
 color: #109cf1;
}
 .content {
 background-color: #ffffff;
 border-radius: 4px;
 margin: 0 auto;
 padding: 10px;
 width: 300px 
}
 ",
      "subject": {
        "en": "Your registration with Expanse",
      },
    },
    "emailTemplate/activation": {
      "_id": "emailTemplate/activation",
      "defaultLocale": "en",
      "displayName": "Activation",
      "enabled": true,
      "from": ""ForgeRock Identity Cloud Team" <saas@forgerock.com>",
      "html": {
        "en": "<div class="content"><p>Welcome {{object.givenName}}.</p><p>Your username is '{{object.userName}}'.</p></div>",
      },
      "message": {
        "en": "<html><head></head><body style="background-color: #324054; color: #455469; padding: 60px; text-align: center;"><div class="content" style="background-color: #fff; border-radius: 4px; margin: 0 auto; padding: 48px; width: 235px;"><p>Welcome {{object.givenName}}.</p><p>Your username is '{{object.userName}}'.</p></div></body></html>",
      },
      "mimeType": "text/html",
      "styles": "body {
	background-color: #324054;
	color: #455469;
	padding: 60px;
	text-align: center
}

a {
	text-decoration: none;
	color: #109cf1;
}

.content {
	background-color: #fff;
	border-radius: 4px;
	margin: 0 auto;
	padding: 48px;
	width: 235px
}
",
      "subject": {
        "en": "Your J.P. Morgan account has been activated",
      },
      "templateId": "activation",
    },
    "emailTemplate/arvestUnknownDeviceNotification": {
      "_id": "emailTemplate/arvestUnknownDeviceNotification",
      "defaultLocale": "en",
      "description": "",
      "displayName": "Arvest Unknown Device Notification",
      "enabled": true,
      "from": ""Arvest IT Security " <admin@arvest-demo.com>",
      "html": {
        "en": "<div class="content"><p>Hello {{object.givenName}} {{object.sn}},</p><p>your Arvest account was accessed from an unknown device!</p><p>Your Arvest Cyber Security Team.</p></div>",
      },
      "message": {
        "en": "<html><head></head><body style="background-color: #324054; color: black; padding: 60px; text-align: center;"><div class="content" style="background-color: orange; border-radius: 4px; margin: 0 auto; padding: 48px; width: 235px;"><p>Hello {{object.givenName}} {{object.sn}},</p><p>your Arvest account was accessed from an unknown device!</p><p>Your Arvest Cyber Security Team.</p></div></body></html>",
      },
      "mimeType": "text/html",
      "styles": "body {
 background-color: #324054;
 color: black;
 padding: 60px;
 text-align: center 
}
 a {
 text-decoration: none;
 color: #109cf1;
}
 .content {
 background-color: orange;
 border-radius: 4px;
 margin: 0 auto;
 padding: 48px;
 width: 235px 
}
 ",
      "subject": {
        "en": "Your Arvest Bank account was accessed from an unknown device!",
      },
      "templateId": "arvestUnknownDeviceNotification",
    },
    "emailTemplate/arvestWelcome": {
      "_id": "emailTemplate/arvestWelcome",
      "defaultLocale": "en",
      "description": "",
      "displayName": "ArvestWelcome",
      "enabled": true,
      "from": ""Arvest Admin" <admin@idcloud-demo.com>",
      "html": {
        "en": "<div class="content"><p>Welcome to Arvest Bank, {{object.givenName}}!</p><p><a href="https://openam-idcloud-demo.forgeblocks.com/am/XUI/?realm=/alpha#/service/IBX_Login">Access your account</a> with your new username: {{object.userName}}</p><p>We are looking forward to servicing all your banking needs!</p><p>Your Arvest Team</p></div>",
      },
      "message": {
        "en": "<html><head></head><body style="background-color: #324054; color: black; padding: 10px; text-align: left;"><div class="content" style="background-color: #ffffff; border-radius: 4px; margin: 0 auto; padding: 10px; width: 300px;"><p>Welcome to Arvest Bank, {{object.givenName}}!</p><p><a href="https://openam-idcloud-demo.forgeblocks.com/am/XUI/?realm=/alpha#/service/IBX_Login" style="text-decoration: none; color: #109cf1;">Access your account</a> with your new username: {{object.userName}}</p><p>We are looking forward to servicing all your banking needs!</p><p>Your Arvest Team</p></div></body></html>",
      },
      "mimeType": "text/html",
      "name": "Welcome",
      "styles": "body {
 background-color: #324054;
 color: black;
 padding: 10px;
 text-align: left 
}
 a {
 text-decoration: none;
 color: #109cf1;
}
 .content {
 background-color: #ffffff;
 border-radius: 4px;
 margin: 0 auto;
 padding: 10px;
 width: 300px 
}
 ",
      "subject": {
        "en": "Your registration with Arvest Bank",
      },
      "templateId": "arvestWelcome",
    },
    "emailTemplate/ebInvitation": {
      "_id": "emailTemplate/ebInvitation",
      "advancedEditor": true,
      "defaultLocale": "en",
      "description": "",
      "displayName": "EBInvitation",
      "enabled": true,
      "from": ""J.P Morgan " <>",
      "html": {
        "en": "",
      },
      "message": {
        "en": "<html>
  <head></head>
  <body style="display: 'flex'; textAlign: 'center'; color: #455469; font-family: 'Open Sans';">
    <div class="content" style="textAlign: 'center'">
      <p> Dear {{object.givenName}}, </p>
      <h4 style="font-weight: 400; font-style: normal;">You have been invited to join
        <b>JPMC Embedded Banking</b>
      </h4>
      <table>
        <tr>
          <td style="text-decoration: none; color: white; background: #155c93; font-						style: normal; font-weight: 700; font-size: 14px; line-height: 22px; border-					radius: 3px; padding: 15px">
            <a href={{object.resumeURI}} style="text-decoration: none; color: white">ACCEPT INVITE</a>
          </td>
        </tr>
      </table>
      <h6 style="color: #999999; font-family: Inter; font-style: normal; font-weight: 400; font-size: 12px; line-height: 16px">Copyright © 2022 of J.P. Morgan Chase & Co.</h6>
    </div>
  </body>
</html>
 ",
      },
      "mimeType": "text/html",
      "name": "invitation",
      "styles": "body {
   margin: 0;
   padding: 0;
   color: #455469;
   font-family: 'Open Sans';
}
 table {
   width:100%;
   border-collapse:collapse;
   border:0;
   border-spacing:0;
   background:#ffffff;
   text-align: center;
}
 tbody {
}
 ",
      "subject": {
        "en": "You're invited to join the JPMC Embedded Banking",
      },
      "templateId": "ebInvitation",
    },
    "emailTemplate/forgottenUsername": {
      "_id": "emailTemplate/forgottenUsername",
      "defaultLocale": "en",
      "enabled": true,
      "from": "",
      "html": {
        "en": "<html><body>{{#if object.userName}}<p>Your username is '{{object.userName}}'.</p>{{else}}If you received this email in error, please disregard.{{/if}}<p><a href="{{object.resumeURI}}">Click here to login</a></p></body></html>",
        "fr": "<html><body>{{#if object.userName}}<p>Votre nom d'utilisateur est '{{object.userName}}'.</p>{{else}}Si vous avez reçu cet e-mail par erreur, veuillez ne pas en tenir compte.{{/if}}<p><a href="{{object.resumeURI}}">Cliquez ici pour vous connecter</a></p></body></html>",
      },
      "message": {
        "en": "<html><head></head><body style="background-color: #324054; color: #455469; padding: 60px; text-align: center;"><div class="content" style="background-color: #fff; border-radius: 4px; margin: 0 auto; padding: 48px; width: 235px;"><p>{{#if object.userName}}Your username is '{{object.userName}}'.</p><p>{{else}}If you received this email in error, please disregard.{{/if}}</p><p><a href="{{object.resumeURI}}" style="text-decoration: none; color: #109cf1;">Click here to login</a></p></div></body></html>",
        "fr": "<html><head></head><body style="background-color: #324054; color: #455469; padding: 60px; text-align: center;"><div class="content" style="background-color: #fff; border-radius: 4px; margin: 0 auto; padding: 48px; width: 235px;">{{#if object.userName}}<p>Votre nom d'utilisateur est '{{object.userName}}'.</p>{{else}}Si vous avez reçu cet e-mail par erreur, veuillez ne pas en tenir compte.{{/if}}<p><a href="{{object.resumeURI}}" style="text-decoration: none; color: #109cf1;">Cliquez ici pour vous connecter</a></p></div></body></html>",
      },
      "mimeType": "text/html",
      "styles": "body{background-color:#324054;color:#5e6d82;padding:60px;text-align:center}a{text-decoration:none;color:#109cf1}.content{background-color:#fff;border-radius:4px;margin:0 auto;padding:48px;width:235px}",
      "subject": {
        "en": "Account Information - username",
        "fr": "Informations sur le compte - nom d'utilisateur",
      },
    },
    "emailTemplate/frEmailUpdated": {
      "_id": "emailTemplate/frEmailUpdated",
      "defaultLocale": "en",
      "enabled": true,
      "from": "",
      "message": {
        "en": "<html><head><style type="text/css">@import url(https://fonts.googleapis.com/css2?family=Open+Sans:ital,wght@0,300;0,400;0,600;0,700;1,300;1,400;1,600;1,700&display=swap);@media screen{.webfont{font-family:"Open Sans","Google Sans",Helvetica,Arial,sans-serif;font-size:15px;font-weight:400}}</style></head><body style="background-color:#f6f8fa;margin:0;padding:0"><div class="webfont" style="background-color:#f6f8fa;color:#5e6d82;padding:48px 0"><div style="margin:0 auto;max-width:600px"><div style="background-color:#fff;border-radius:4px;line-height:1.5"><div style="padding:48px"><div style="text-align:center"><img src="https://www.forgerock.com/img/ForgeRock_Logobug_RGB.png" style="display:block;height:50px;width:45px;margin:0 auto 16px" alt="ForgeRock Logo"><h1 style="font-size:30px;font-weight:300;line-height:1.2;margin-bottom:24px">Your account email has changed</h1></div><p>Your ForgeRock Identity Cloud email has been changed. If you did not request this change, please contact ForgeRock support.</p><p>Thanks,<br>The ForgeRock Team</p></div></div><div style="font-size:13px;margin-top:24px;line-height:1.7;text-align:center">&copy; 2001-{{ object.currentYear }} ForgeRock Inc&reg;, All Rights Reserved.<br>201 Mission St Suite 2900, San Francisco, CA 94105<br><a style="color:#109cf1;text-decoration:none" href="https://www.forgerock.com/privacy-policy">Privacy Policy</a></div></div></div></body></html>",
      },
      "mimeType": "text/html",
      "subject": {
        "en": "Your email has been updated",
      },
    },
    "emailTemplate/frForgotUsername": {
      "_id": "emailTemplate/frForgotUsername",
      "defaultLocale": "en",
      "enabled": true,
      "from": "",
      "message": {
        "en": "<html><head><style type="text/css">@import url(https://fonts.googleapis.com/css2?family=Open+Sans:ital,wght@0,300;0,400;0,600;0,700;1,300;1,400;1,600;1,700&display=swap);@media screen{.webfont{font-family:"Open Sans","Google Sans",Helvetica,Arial,sans-serif;font-size:15px;font-weight:400}}</style></head><body style="background-color:#f6f8fa;margin:0;padding:0"><div class="webfont" style="background-color:#f6f8fa;color:#5e6d82;padding:48px 0"><div style="margin:0 auto;max-width:600px"><div style="background-color:#fff;border-radius:4px;line-height:1.5"><div style="padding:48px"><div style="text-align:center"><img src="https://www.forgerock.com/img/ForgeRock_Logobug_RGB.png" style="height:50px;margin-bottom:16px" alt="ForgeRock Logo"><h1 style="font-size:30px;font-weight:300;line-height:1.2;margin-bottom:24px">Forgot your username?</h1></div><p>Your username is <b>{{ object.userName }}</b>.</p><p style="text-align:center"><a href="{{ object.resumeURI }}" style="background-color:#109cf1;border-radius:4px;color:#fff;display:inline-block;margin:16px 0;padding:13px 22px;text-decoration:none">Sign In to Your Account</a></p><p>If you didn't request this, please ignore this email.</p><p>Thanks,<br>The ForgeRock Team</p></div></div><div style="font-size:13px;margin-top:24px;line-height:1.7;text-align:center">&copy; 2001-{{ object.currentYear }} ForgeRock Inc&reg;, All Rights Reserved.<br>201 Mission St Suite 2900, San Francisco, CA 94105<br><a style="color:#109cf1;text-decoration:none" href="https://www.forgerock.com/privacy-policy">Privacy Policy</a></div></div></div></body></html>",
      },
      "mimeType": "text/html",
      "subject": {
        "en": "Forgot Username",
      },
    },
    "emailTemplate/frOnboarding": {
      "_id": "emailTemplate/frOnboarding",
      "defaultLocale": "en",
      "enabled": true,
      "from": "",
      "message": {
        "en": "<html><head><style type="text/css">@import url(https://fonts.googleapis.com/css2?family=Open+Sans:ital,wght@0,300;0,400;0,600;0,700;1,300;1,400;1,600;1,700&display=swap);@media screen{.webfont{font-family:"Open Sans","Google Sans",Helvetica,Arial,sans-serif;font-size:15px;font-weight:400}}</style></head><body style="background-color:#f6f8fa;margin:0;padding:0"><div class="webfont" style="background-color:#f6f8fa;color:#5e6d82;padding:48px 0"><div style="margin:0 auto;max-width:600px"><div style="background-color:#fff;border-radius:4px;line-height:1.5"><div style="padding:48px"><div style="text-align:center"><img src="https://www.forgerock.com/img/ForgeRock_Logobug_RGB.png" style="display:block;height:50px;width:45px;margin:0 auto 16px" alt="ForgeRock Logo"><h1 style="font-size:30px;font-weight:300;line-height:1.2;margin-bottom:24px">Your account is ready</h1></div><p>Your ForgeRock Identity Cloud account is ready. Click the button below to complete registration and access your environment.</p><p style="text-align:center"><a href="{{ object.resumeURI }}" style="background-color:#109cf1;border-radius:4px;color:#fff;display:inline-block;margin:16px 0;padding:13px 22px;text-decoration:none">Complete Registration</a></p><p>If you did not request this account, please contact ForgeRock support.</p><p>Thanks,<br>The ForgeRock Team</p></div></div><div style="font-size:13px;margin-top:24px;line-height:1.7;text-align:center">&copy; 2001-{{ object.currentYear }} ForgeRock Inc&reg;, All Rights Reserved.<br>201 Mission St Suite 2900, San Francisco, CA 94105<br><a style="color:#109cf1;text-decoration:none" href="https://www.forgerock.com/privacy-policy">Privacy Policy</a></div></div></div></body></html>",
      },
      "mimeType": "text/html",
      "subject": {
        "en": "Complete your ForgeRock Identity Cloud registration",
      },
    },
    "emailTemplate/frPasswordUpdated": {
      "_id": "emailTemplate/frPasswordUpdated",
      "defaultLocale": "en",
      "enabled": true,
      "from": "",
      "message": {
        "en": "<html><head><style type="text/css">@import url(https://fonts.googleapis.com/css2?family=Open+Sans:ital,wght@0,300;0,400;0,600;0,700;1,300;1,400;1,600;1,700&display=swap);@media screen{.webfont{font-family:"Open Sans","Google Sans",Helvetica,Arial,sans-serif;font-size:15px;font-weight:400}}</style></head><body style="background-color:#f6f8fa;margin:0;padding:0"><div class="webfont" style="background-color:#f6f8fa;color:#5e6d82;padding:48px 0"><div style="margin:0 auto;max-width:600px"><div style="background-color:#fff;border-radius:4px;line-height:1.5"><div style="padding:48px"><div style="text-align:center"><img src="https://www.forgerock.com/img/ForgeRock_Logobug_RGB.png" style="display:block;height:50px;width:45px;margin:0 auto 16px" alt="ForgeRock Logo"><h1 style="font-size:30px;font-weight:300;line-height:1.2;margin-bottom:24px">Your account password has changed</h1></div><p>Your ForgeRock Identity Cloud password has been changed. If you did not request this change, please contact ForgeRock support.</p><p>Thanks,<br>The ForgeRock Team</p></div></div><div style="font-size:13px;margin-top:24px;line-height:1.7;text-align:center">&copy; 2001-{{ object.currentYear }} ForgeRock Inc&reg;, All Rights Reserved.<br>201 Mission St Suite 2900, San Francisco, CA 94105<br><a style="color:#109cf1;text-decoration:none" href="https://www.forgerock.com/privacy-policy">Privacy Policy</a></div></div></div></body></html>",
      },
      "mimeType": "text/html",
      "subject": {
        "en": "Your password has been updated",
      },
    },
    "emailTemplate/frProfileUpdated": {
      "_id": "emailTemplate/frProfileUpdated",
      "defaultLocale": "en",
      "enabled": true,
      "from": "",
      "message": {
        "en": "<html><head><style type="text/css">@import url(https://fonts.googleapis.com/css2?family=Open+Sans:ital,wght@0,300;0,400;0,600;0,700;1,300;1,400;1,600;1,700&display=swap);@media screen{.webfont{font-family:"Open Sans","Google Sans",Helvetica,Arial,sans-serif;font-size:15px;font-weight:400}}</style></head><body style="background-color:#f6f8fa;margin:0;padding:0"><div class="webfont" style="background-color:#f6f8fa;color:#5e6d82;padding:48px 0"><div style="margin:0 auto;max-width:600px"><div style="background-color:#fff;border-radius:4px;line-height:1.5"><div style="padding:48px"><div style="text-align:center"><img src="https://www.forgerock.com/img/ForgeRock_Logobug_RGB.png" style="display:block;height:50px;width:45px;margin:0 auto 16px" alt="ForgeRock Logo"><h1 style="font-size:30px;font-weight:300;line-height:1.2;margin-bottom:24px">Your account profile has changed</h1></div><p>Your ForgeRock Identity Cloud profile has been changed. If you did not request this change, please contact ForgeRock support.</p><p>Thanks,<br>The ForgeRock Team</p></div></div><div style="font-size:13px;margin-top:24px;line-height:1.7;text-align:center">&copy; 2001-{{ object.currentYear }} ForgeRock Inc&reg;, All Rights Reserved.<br>201 Mission St Suite 2900, San Francisco, CA 94105<br><a style="color:#109cf1;text-decoration:none" href="https://www.forgerock.com/privacy-policy">Privacy Policy</a></div></div></div></body></html>",
      },
      "mimeType": "text/html",
      "subject": {
        "en": "Your profile has been updated",
      },
    },
    "emailTemplate/frResetPassword": {
      "_id": "emailTemplate/frResetPassword",
      "defaultLocale": "en",
      "enabled": true,
      "from": "",
      "message": {
        "en": "<html><head><style type="text/css">@import url(https://fonts.googleapis.com/css2?family=Open+Sans:ital,wght@0,300;0,400;0,600;0,700;1,300;1,400;1,600;1,700&display=swap);@media screen{.webfont{font-family:"Open Sans","Google Sans",Helvetica,Arial,sans-serif;font-size:15px;font-weight:400}}</style></head><body style="background-color:#f6f8fa;margin:0;padding:0"><div class="webfont" style="background-color:#f6f8fa;color:#5e6d82;padding:48px 0"><div style="margin:0 auto;max-width:600px"><div style="background-color:#fff;border-radius:4px;line-height:1.5"><div style="padding:48px"><div style="text-align:center"><img src="https://www.forgerock.com/img/ForgeRock_Logobug_RGB.png" style="display:block;height:50px;width:45px;margin:0 auto 16px" alt="ForgeRock Logo"><h1 style="font-size:30px;font-weight:300;line-height:1.2;margin-bottom:24px">Reset your password</h1></div><p>It seems you have forgotten the password for your ForgeRock Identity Cloud account. Click the button below to reset your password and access your environment.</p><p style="text-align:center"><a href="{{ object.resumeURI }}" style="background-color:#109cf1;border-radius:4px;color:#fff;display:inline-block;margin:16px 0;padding:13px 22px;text-decoration:none">Reset Password</a></p><p>If you did not request to reset your password, please contact ForgeRock support.</p><p>Thanks,<br>The ForgeRock Team</p></div></div><div style="font-size:13px;margin-top:24px;line-height:1.7;text-align:center">&copy; 2001-{{ object.currentYear }} ForgeRock Inc&reg;, All Rights Reserved.<br>201 Mission St Suite 2900, San Francisco, CA 94105<br><a style="color:#109cf1;text-decoration:none" href="https://www.forgerock.com/privacy-policy">Privacy Policy</a></div></div></div></body></html>",
      },
      "mimeType": "text/html",
      "subject": {
        "en": "Reset your password",
      },
    },
    "emailTemplate/frUsernameUpdated": {
      "_id": "emailTemplate/frUsernameUpdated",
      "defaultLocale": "en",
      "enabled": true,
      "from": "",
      "message": {
        "en": "<html><head><style type="text/css">@import url(https://fonts.googleapis.com/css2?family=Open+Sans:ital,wght@0,300;0,400;0,600;0,700;1,300;1,400;1,600;1,700&display=swap);@media screen{.webfont{font-family:"Open Sans","Google Sans",Helvetica,Arial,sans-serif;font-size:15px;font-weight:400}}</style></head><body style="background-color:#f6f8fa;margin:0;padding:0"><div class="webfont" style="background-color:#f6f8fa;color:#5e6d82;padding:48px 0"><div style="margin:0 auto;max-width:600px"><div style="background-color:#fff;border-radius:4px;line-height:1.5"><div style="padding:48px"><div style="text-align:center"><img src="https://www.forgerock.com/img/ForgeRock_Logobug_RGB.png" style="display:block;height:50px;width:45px;margin:0 auto 16px" alt="ForgeRock Logo"><h1 style="font-size:30px;font-weight:300;line-height:1.2;margin-bottom:24px">Your account username has changed</h1></div><p>Your ForgeRock Identity Cloud username has been changed. If you did not request this change, please contact ForgeRock support.</p><p>Thanks,<br>The ForgeRock Team</p></div></div><div style="font-size:13px;margin-top:24px;line-height:1.7;text-align:center">&copy; 2001-{{ object.currentYear }} ForgeRock Inc&reg;, All Rights Reserved.<br>201 Mission St Suite 2900, San Francisco, CA 94105<br><a style="color:#109cf1;text-decoration:none" href="https://www.forgerock.com/privacy-policy">Privacy Policy</a></div></div></div></body></html>",
      },
      "mimeType": "text/html",
      "subject": {
        "en": "Your username has been updated",
      },
    },
    "emailTemplate/multiFactorEmailLink": {
      "_id": "emailTemplate/multiFactorEmailLink",
      "defaultLocale": "en",
      "enabled": true,
      "from": "",
      "message": {
        "en": "<html><body><h3>You started a login or profile update that requires MFA. </h3><h4><a href="{{object.resumeURI}}">Click to Proceed</a></h4></body></html>",
      },
      "mimeType": "text/html",
      "subject": {
        "en": "Multi-Factor Email for Identity Cloud login",
      },
    },
    "emailTemplate/oneTimePassword": {
      "_id": "emailTemplate/oneTimePassword",
      "defaultLocale": "en",
      "enabled": true,
      "from": "",
      "message": {
        "en": "<h3>This is your one-time password:</h3><h4>{{object.description}}</a></h4>",
      },
      "mimeType": "text/html",
      "subject": {
        "en": "One-Time Password for login",
      },
    },
    "emailTemplate/profileUpdateNotification": {
      "_id": "emailTemplate/profileUpdateNotification",
      "defaultLocale": "en",
      "displayName": "Profile Update Notification",
      "enabled": true,
      "from": "saas@forgerock.com",
      "html": {
        "en": "<div class="content"><p>Hello {{object.givenName}},</p><p>your user profile has been updated. If you did not make those changes yourself or requested them, please contact us immediately.</p><p>Kindest regards.</p></div>",
      },
      "message": {
        "en": "<html><head></head><body style="background-color: #324054; color: #455469; padding: 60px; text-align: center;"><div class="content" style="background-color: #fff; border-radius: 4px; margin: 0 auto; padding: 48px; width: 235px;"><p>Hello {{object.givenName}},</p><p>your user profile has been updated. If you did not make those changes yourself or requested them, please contact us immediately.</p><p>Kindest regards.</p></div></body></html>",
      },
      "mimeType": "text/html",
      "styles": "body {
 background-color: #324054;
 color: #455469;
 padding: 60px;
 text-align: center 
}
 a {
 text-decoration: none;
 color: #109cf1;
}
 .content {
 background-color: #fff;
 border-radius: 4px;
 margin: 0 auto;
 padding: 48px;
 width: 235px 
}
 ",
      "subject": {
        "en": "Your user profile has been updated",
      },
    },
    "emailTemplate/profileUpdateNotificationEmailChange": {
      "_id": "emailTemplate/profileUpdateNotificationEmailChange",
      "defaultLocale": "en",
      "displayName": "Email Address Change Notification",
      "enabled": true,
      "from": "saas@forgerock.com",
      "html": {
        "en": "<div class="content"><p>Hello {{object.givenName}},</p><p>your user profile has been updated and your email address has changed. This email is sent to the old address we had on file. If you did not make those changes yourself or requested them, please contact us immediately.</p><p>Old: {{object.frUnindexedString5}}<br>
New: {{object.mail}}</p><p>Kindest regards.</p></div>",
      },
      "message": {
        "en": "<html><head></head><body style="background-color: #324054; color: #455469; padding: 60px; text-align: left;"><div class="content" style="background-color: #fff; border-radius: 4px; margin: 0 auto; padding: 48px; width: 235px;"><p>Hello {{object.givenName}},</p><p>your user profile has been updated and your email address has changed. This email is sent to the old address we had on file. If you did not make those changes yourself or requested them, please contact us immediately.</p><p>Old: {{object.frUnindexedString5}}<br>
New: {{object.mail}}</p><p>Kindest regards.</p></div></body></html>",
      },
      "mimeType": "text/html",
      "styles": "body {
 background-color: #324054;
 color: #455469;
 padding: 60px;
 text-align: left 
}
 a {
 text-decoration: none;
 color: #109cf1;
}
 .content {
 background-color: #fff;
 border-radius: 4px;
 margin: 0 auto;
 padding: 48px;
 width: 235px 
}
 ",
      "subject": {
        "en": "You email address and profile has been updated",
      },
    },
    "emailTemplate/registration": {
      "_id": "emailTemplate/registration",
      "advancedEditor": true,
      "defaultLocale": "en",
      "displayName": "registration",
      "enabled": true,
      "from": ""J.P Morgan" <sass@forgerock.com>",
      "html": {
        "en": "",
        "fr": "",
      },
      "message": {
        "en": "<html>
  <head></head>
  <body style="color: #455469; text-align: center; font-family: 'Open Sans'; width: 400px; margin: auto;">
    <div class="content" style="background-color: #fff; border-radius: 4px;">
      <h4 id="youhavebeeninvitedtojoinjpmcembeddedbanking" style="font-style: normal; font-weight: 400;">You have been invited to join 
        
        <strong>JPMC Developer Console</strong>
      </h4>
      <p>
        <a href="{{object.resumeURI}}" style="text-decoration: none; color: white; background-color: #1A7B99; padding: 10px">ACCEPT INVITE</a>
      </p>
      <h6 id="copyright2022ofjpmorganchaseco" style="color: #999999; font-family: 'Inter'; -font-style: normal; font-weight: 400; font-size: 12px; line-height: 16px;">Copyright © 2022 of J.P. Morgan Chase & Co.</h6>
    </div>
  </body>
</html>",
        "fr": "<html><head></head><body style="color: #455469; text-align: center; font-family: 'Open Sans'; width: 400px; margin: auto;"><div class="content" style="background-color: #fff; border-radius: 4px;"><h3 id="ceciestvotremaildinscription" style="text-align: left;">Ceci est votre mail d'inscription.</h3><p><a href="{{object.resumeURI}}" style="text-decoration: none; color: white;">Lien de vérification email</a></p></div></body></html>",
      },
      "mimeType": "text/html",
      "styles": "body {
   color: #455469;
   text-align: center;
   font-family: 'Open Sans';
   width: 400px;
   margin: auto;
}
 td {
   text-decoration: none;
   color: white;
   background: #155C93;
   font-style: normal;
   font-weight: 700;
   font-size: 14px;
   line-height: 22px;
   border-radius: 3px;
   padding: 15px;
}
 .content {
   background-color: #fff;
   border-radius: 4px;
}
 h2 {
   margin: 50px;
}
 h3 {
   text-align: left;
}
 h4 {
   font-style: normal;
   font-weight: 400;
}
 h5 {
   color: #666666;
   font-family: 'Inter';
   font-style: normal;
   font-weight: 400;
   font-size: 16px;
   line-height: 24px;
}
 h6 {
   color: #999999;
   font-family: 'Inter';
   -font-style: normal;
   font-weight: 400;
   font-size: 12px;
   line-height: 16px;
}
 table {
   margin: auto;
   background-color: #dedddc;
}
 tr {
   background-color: #dedddc;
}

a {
  text-decoration: none;
  color: white;
} ",
      "subject": {
        "en": "You're invited to join JPMC Embedded Banking",
        "fr": "Créer un nouveau compte",
      },
      "templateId": "registration",
    },
    "emailTemplate/resetPassword": {
      "_id": "emailTemplate/resetPassword",
      "defaultLocale": "en",
      "enabled": true,
      "from": "",
      "message": {
        "en": "<h3>Click to reset your password</h3><h4><a href="{{object.resumeURI}}">Password reset link</a></h4>",
        "fr": "<h3>Cliquez pour réinitialiser votre mot de passe</h3><h4><a href="{{object.resumeURI}}">Mot de passe lien de réinitialisation</a></h4>",
      },
      "mimeType": "text/html",
      "subject": {
        "en": "Reset your password",
        "fr": "Réinitialisez votre mot de passe",
      },
    },
    "emailTemplate/updatePassword": {
      "_id": "emailTemplate/updatePassword",
      "defaultLocale": "en",
      "enabled": true,
      "from": "",
      "html": {
        "en": "<h3>Verify email to update password</h3><p><a href="{{object.resumeURI}}">Update password link</a></p>",
      },
      "message": {
        "en": "<html><head></head><body style="background-color: #324054; color: #5e6d82; padding: 60px; text-align: center;"><div class="content" style="background-color: #fff; border-radius: 4px; margin: 0 auto; padding: 48px; width: 235px;"><h3 id="verifyemailtoupdatepassword">Verify email to update password</h3><p><a href="{{object.resumeURI}}" style="text-decoration: none; color: #109cf1;">Update password link</a></p></div></body></html>",
      },
      "mimeType": "text/html",
      "styles": "body{background-color:#324054;color:#5e6d82;padding:60px;text-align:center}a{text-decoration:none;color:#109cf1}.content{background-color:#fff;border-radius:4px;margin:0 auto;padding:48px;width:235px}",
      "subject": {
        "en": "Update your password",
      },
    },
    "emailTemplate/welcome": {
      "_id": "emailTemplate/welcome",
      "defaultLocale": "en",
      "displayName": "Welcome",
      "enabled": true,
      "from": "saas@forgerock.com",
      "html": {
        "en": "<div class="content"><p>Welcome. Your username is '{{object.userName}}'.</p></div>",
      },
      "message": {
        "en": "<html><head></head><body style="background-color: #324054; color: #5e6d82; padding: 60px; text-align: center;"><div class="content" style="background-color: #fff; border-radius: 4px; margin: 0 auto; padding: 48px; width: 235px;"><p>Welcome. Your username is '{{object.userName}}'.</p></div></body></html>",
      },
      "mimeType": "text/html",
      "styles": "body{
 background-color:#324054;
 color:#5e6d82;
 padding:60px;
 text-align:center
}
a{
 text-decoration:none;
 color:#109cf1
}
.content{
 background-color:#fff;
 border-radius:4px;
 margin:0 auto;
 padding:48px;
 width:235px
}
",
      "subject": {
        "en": "Your account has been created",
      },
    },
    "endpoint/KaTest2": {
      "_id": "endpoint/KaTest2",
      "context": "endpoint/KaTest2",
      "description": "Kates Test",
      "globalsObject": "" {\\n \\"request\\": {\\n \\"method\\": \\"create\\"\\n }\\n }"",
      "source": "var response = {
 "message": "Bye, Kate"
}; 
response;",
      "type": "text/javascript",
    },
    "endpoint/getavailableuserstoassign": {
      "_id": "endpoint/getavailableuserstoassign",
      "file": "workflow/getavailableuserstoassign.js",
      "type": "text/javascript",
    },
    "endpoint/getprocessesforuser": {
      "_id": "endpoint/getprocessesforuser",
      "file": "workflow/getprocessesforuser.js",
      "type": "text/javascript",
    },
    "endpoint/gettasksview": {
      "_id": "endpoint/gettasksview",
      "file": "workflow/gettasksview.js",
      "type": "text/javascript",
    },
    "endpoint/mappingDetails": {
      "_id": "endpoint/mappingDetails",
      "context": "endpoint/mappingDetails",
      "file": "mappingDetails.js",
      "type": "text/javascript",
    },
    "endpoint/oauthproxy": {
      "_id": "endpoint/oauthproxy",
      "context": "endpoint/oauthproxy",
      "file": "oauthProxy.js",
      "type": "text/javascript",
    },
    "endpoint/removeRepoPathFromRelationships": {
      "_id": "endpoint/removeRepoPathFromRelationships",
      "file": "update/removeRepoPathFromRelationships.js",
      "type": "text/javascript",
    },
    "endpoint/repairMetadata": {
      "_id": "endpoint/repairMetadata",
      "file": "meta/metadataScanner.js",
      "type": "text/javascript",
    },
    "endpoint/updateInternalUserAndInternalRoleEntries": {
      "_id": "endpoint/updateInternalUserAndInternalRoleEntries",
      "file": "update/updateInternalUserAndInternalRoleEntries.js",
      "type": "text/javascript",
    },
    "endpoint/validateQueryFilter": {
      "_id": "endpoint/validateQueryFilter",
      "context": "util/validateQueryFilter",
      "source": "try { org.forgerock.json.resource.QueryFilters.parse(request.content._queryFilter).accept(new org.forgerock.util.query.MapFilterVisitor(), null); } catch (e) { throw { 'code' : 400, 'message' : e.message } };",
      "type": "text/javascript",
    },
    "external.email": {
      "_id": "external.email",
      "auth": {
        "enable": true,
        "password": "&{sendgrid.api.key}",
        "username": "apikey",
      },
      "connectiontimeout": 300000,
      "debug": false,
      "from": "&{email.sender.address}",
      "host": "smtp.sendgrid.net",
      "port": 587,
      "smtpProperties": [],
      "ssl": {
        "enable": false,
      },
      "starttls": {
        "enable": true,
      },
      "threadPoolSize": 20,
      "timeout": 300000,
      "writetimeout": 300000,
    },
    "external.emailDefault": {
      "_id": "external.emailDefault",
      "auth": {
        "enable": true,
        "password": "&{sendgrid.api.key}",
        "username": "apikey",
      },
      "connectiontimeout": 300000,
      "debug": false,
      "from": "&{email.sender.address}",
      "host": "smtp.sendgrid.net",
      "port": 587,
      "smtpProperties": [],
      "ssl": {
        "enable": false,
      },
      "starttls": {
        "enable": true,
      },
      "threadPoolSize": 20,
      "timeout": 300000,
      "writetimeout": 300000,
    },
    "external.rest": {
      "_id": "external.rest",
      "hostnameVerifier": "&{openidm.external.rest.hostnameVerifier}",
    },
    "felix.webconsole": {
      "_id": "felix.webconsole",
      "password": "&{openidm.felix.webconsole.password|admin}",
      "username": "&{openidm.felix.webconsole.username|admin}",
    },
    "fieldPolicy/alpha_user": {
      "_id": "fieldPolicy/alpha_user",
      "defaultPasswordStorageScheme": [
        {
          "_id": "PBKDF2-HMAC-SHA256",
        },
      ],
      "passwordAttribute": "password",
      "resourceCollection": "managed/alpha_user",
      "type": "password-policy",
      "validator": [
        {
          "_id": "alpha_userPasswordPolicy-length-based-password-validator",
          "enabled": true,
          "maxPasswordLength": 0,
          "minPasswordLength": 8,
          "type": "length-based",
        },
        {
          "_id": "alpha_userPasswordPolicy-attribute-value-password-validator",
          "checkSubstrings": true,
          "enabled": true,
          "matchAttribute": [
            "mail",
            "userName",
            "givenName",
            "sn",
          ],
          "minSubstringLength": 5,
          "testReversedPassword": true,
          "type": "attribute-value",
        },
        {
          "_id": "alpha_userPasswordPolicy-character-set-password-validator",
          "allowUnclassifiedCharacters": true,
          "characterSet": [
            "1:abcdefghijklmnopqrstuvwxyz",
            "1:ABCDEFGHIJKLMNOPQRSTUVWXYZ",
            "1:0123456789",
            "1:~!@#$%^&*()-_=+[]{}|;:,.<>/?"'\\\`",
          ],
          "enabled": true,
          "type": "character-set",
        },
      ],
    },
    "fieldPolicy/bravo_user": {
      "_id": "fieldPolicy/bravo_user",
      "defaultPasswordStorageScheme": [
        {
          "_id": "PBKDF2-HMAC-SHA256",
        },
      ],
      "passwordAttribute": "password",
      "resourceCollection": "managed/bravo_user",
      "type": "password-policy",
      "validator": [
        {
          "_id": "bravo_userPasswordPolicy-length-based-password-validator",
          "enabled": true,
          "maxPasswordLength": 0,
          "minPasswordLength": 8,
          "type": "length-based",
        },
        {
          "_id": "bravo_userPasswordPolicy-attribute-value-password-validator",
          "checkSubstrings": true,
          "enabled": true,
          "matchAttribute": [
            "mail",
            "userName",
            "givenName",
            "sn",
          ],
          "minSubstringLength": 5,
          "testReversedPassword": true,
          "type": "attribute-value",
        },
        {
          "_id": "bravo_userPasswordPolicy-character-set-password-validator",
          "allowUnclassifiedCharacters": true,
          "characterSet": [
            "1:abcdefghijklmnopqrstuvwxyz",
            "1:ABCDEFGHIJKLMNOPQRSTUVWXYZ",
            "1:0123456789",
            "1:~!@#$%^&*()-_=+[]{}|;:,.<>/?"'\\\`",
          ],
          "enabled": true,
          "type": "character-set",
        },
      ],
    },
    "identityProviders": {
      "_id": "identityProviders",
      "providers": [
        {
          "authenticationIdKey": "sub",
          "authorizationEndpoint": "https://accounts.google.com/o/oauth2/v2/auth",
          "basicAuth": false,
          "clientId": "",
          "clientSecret": "",
          "configClass": "org.forgerock.oauth.clients.oidc.OpenIDConnectClientConfiguration",
          "propertyMap": [
            {
              "source": "sub",
              "target": "id",
            },
            {
              "source": "name",
              "target": "displayName",
            },
            {
              "source": "given_name",
              "target": "givenName",
            },
            {
              "source": "family_name",
              "target": "familyName",
            },
            {
              "source": "picture",
              "target": "photoUrl",
            },
            {
              "source": "email",
              "target": "email",
            },
            {
              "source": "email",
              "target": "username",
            },
            {
              "source": "locale",
              "target": "locale",
            },
          ],
          "provider": "google",
          "redirectUri": "https://localhost:8443/",
          "schema": {
            "$schema": "http://json-schema.org/draft-03/schema",
            "id": "urn:jsonschema:org:forgerock:openidm:identityProviders:api:Google",
            "order": [
              "sub",
              "name",
              "given_name",
              "family_name",
              "picture",
              "email",
              "locale",
            ],
            "properties": {
              "email": {
                "description": "Email Address",
                "searchable": true,
                "title": "Email Address",
                "type": "string",
                "viewable": true,
              },
              "family_name": {
                "description": "Last Name",
                "searchable": true,
                "title": "Last Name",
                "type": "string",
                "viewable": true,
              },
              "given_name": {
                "description": "First Name",
                "searchable": true,
                "title": "First Name",
                "type": "string",
                "viewable": true,
              },
              "locale": {
                "description": "Locale Code",
                "searchable": true,
                "title": "Locale Code",
                "type": "string",
                "viewable": true,
              },
              "name": {
                "description": "Name",
                "searchable": true,
                "title": "Name",
                "type": "string",
                "viewable": true,
              },
              "picture": {
                "description": "Profile Picture URL",
                "searchable": true,
                "title": "Profile Picture URL",
                "type": "string",
                "viewable": true,
              },
              "sub": {
                "description": "ID",
                "searchable": true,
                "title": "ID",
                "type": "string",
                "viewable": true,
              },
            },
            "required": [],
            "title": "Google",
            "type": "object",
            "viewable": true,
          },
          "scope": [
            "openid",
            "profile",
            "email",
          ],
          "tokenEndpoint": "https://www.googleapis.com/oauth2/v4/token",
          "uiConfig": {
            "buttonClass": "",
            "buttonCustomStyle": "background-color: #fff; color: #757575; border-color: #ddd;",
            "buttonCustomStyleHover": "color: #6d6d6d; background-color: #eee; border-color: #ccc;",
            "buttonDisplayName": "Google",
            "buttonImage": "images/g-logo.png",
            "iconBackground": "#4184f3",
            "iconClass": "fa-google",
            "iconFontColor": "white",
          },
          "userInfoEndpoint": "https://www.googleapis.com/oauth2/v3/userinfo",
          "wellKnownEndpoint": "https://accounts.google.com/.well-known/openid-configuration",
        },
        {
          "authenticationIdKey": "id",
          "authorizationEndpoint": "https://www.facebook.com/dialog/oauth",
          "basicAuth": false,
          "clientId": "",
          "clientSecret": "",
          "configClass": "org.forgerock.oauth.clients.oauth2.OAuth2ClientConfiguration",
          "propertyMap": [
            {
              "source": "id",
              "target": "id",
            },
            {
              "source": "name",
              "target": "displayName",
            },
            {
              "source": "first_name",
              "target": "givenName",
            },
            {
              "source": "last_name",
              "target": "familyName",
            },
            {
              "source": "email",
              "target": "email",
            },
            {
              "source": "email",
              "target": "username",
            },
            {
              "source": "locale",
              "target": "locale",
            },
            {
              "source": "picture",
              "target": "photoUrl",
              "transform": {
                "source": "source.data.url",
                "type": "text/javascript",
              },
            },
          ],
          "provider": "facebook",
          "redirectUri": "https://localhost:8443/",
          "schema": {
            "$schema": "http://json-schema.org/draft-03/schema",
            "id": "urn:jsonschema:org:forgerock:openidm:identityProviders:api:Facebook",
            "order": [
              "id",
              "name",
              "first_name",
              "last_name",
              "email",
              "locale",
              "picture",
            ],
            "properties": {
              "email": {
                "description": "Email Address",
                "searchable": true,
                "title": "Email Address",
                "type": "string",
                "viewable": true,
              },
              "first_name": {
                "description": "First Name",
                "searchable": true,
                "title": "First Name",
                "type": "string",
                "viewable": true,
              },
              "id": {
                "description": "ID",
                "searchable": true,
                "title": "ID",
                "type": "string",
                "viewable": true,
              },
              "last_name": {
                "description": "Last Name",
                "searchable": true,
                "title": "Last Name",
                "type": "string",
                "viewable": true,
              },
              "locale": {
                "description": "Locale Code",
                "searchable": true,
                "title": "Locale Code",
                "type": "string",
                "viewable": true,
              },
              "name": {
                "description": "Name",
                "searchable": true,
                "title": "Name",
                "type": "string",
                "viewable": true,
              },
              "picture": {
                "description": "Picture",
                "searchable": true,
                "title": "Picture",
                "type": "object",
                "viewable": true,
              },
            },
            "required": [],
            "title": "Facebook",
            "type": "object",
            "viewable": true,
          },
          "scope": [
            "email",
            "user_birthday",
          ],
          "tokenEndpoint": "https://graph.facebook.com/v2.7/oauth/access_token",
          "uiConfig": {
            "buttonClass": "fa-facebook-official",
            "buttonCustomStyle": "background-color: #3b5998;border-color: #3b5998; color: white;",
            "buttonCustomStyleHover": "background-color: #334b7d;border-color: #334b7d; color: white;",
            "buttonDisplayName": "Facebook",
            "buttonImage": "",
            "iconBackground": "#3b5998",
            "iconClass": "fa-facebook",
            "iconFontColor": "white",
          },
          "userInfoEndpoint": "https://graph.facebook.com/me?fields=id,name,picture,email,first_name,last_name,locale",
        },
        {
          "authenticationIdKey": "id",
          "authorizationEndpoint": "https://www.linkedin.com/oauth/v2/authorization",
          "basicAuth": false,
          "clientId": "",
          "clientSecret": "",
          "configClass": "org.forgerock.oauth.clients.oauth2.OAuth2ClientConfiguration",
          "propertyMap": [
            {
              "source": "id",
              "target": "id",
            },
            {
              "source": "formattedName",
              "target": "displayName",
            },
            {
              "source": "firstName",
              "target": "givenName",
            },
            {
              "source": "lastName",
              "target": "familyName",
            },
            {
              "source": "emailAddress",
              "target": "email",
            },
            {
              "source": "emailAddress",
              "target": "username",
            },
            {
              "source": "location",
              "target": "locale",
              "transform": {
                "source": "source.country.code",
                "type": "text/javascript",
              },
            },
            {
              "source": "pictureUrl",
              "target": "photoUrl",
            },
          ],
          "provider": "linkedIn",
          "redirectUri": "https://localhost:8443/",
          "schema": {
            "$schema": "http://json-schema.org/draft-03/schema",
            "id": "urn:jsonschema:org:forgerock:openidm:identityProviders:api:LinkedIn",
            "order": [
              "id",
              "formattedName",
              "emailAddress",
              "firstName",
              "lastName",
              "location",
            ],
            "properties": {
              "emailAddress": {
                "description": "Email Address",
                "searchable": true,
                "title": "Email Address",
                "type": "string",
                "viewable": true,
              },
              "firstName": {
                "description": "First Name",
                "searchable": true,
                "title": "First Name",
                "type": "string",
                "viewable": true,
              },
              "formattedName": {
                "description": "Formatted Name",
                "searchable": true,
                "title": "Formatted Name",
                "type": "string",
                "viewable": true,
              },
              "id": {
                "description": "ID",
                "searchable": false,
                "title": "ID",
                "type": "string",
                "viewable": true,
              },
              "lastName": {
                "description": "Last Name",
                "searchable": true,
                "title": "Last Name",
                "type": "string",
                "viewable": true,
              },
              "location": {
                "description": "Location",
                "properties": {
                  "country": {
                    "description": "Country",
                    "properties": {
                      "code": {
                        "description": "Locale Code",
                        "title": "Locale Code",
                        "type": "string",
                      },
                    },
                    "title": "Country",
                    "type": "object",
                  },
                  "name": {
                    "description": "Area Name",
                    "title": "Area Name",
                    "type": "string",
                  },
                },
                "searchable": true,
                "title": "Location",
                "type": "object",
                "viewable": true,
              },
              "pictureUrl": {
                "description": "Picture URL",
                "searchable": true,
                "title": "Picture URL",
                "type": "string",
                "viewable": true,
              },
            },
            "required": [],
            "title": "LinkedIn",
            "type": "object",
            "viewable": true,
          },
          "scope": [
            "r_basicprofile",
            "r_emailaddress",
          ],
          "tokenEndpoint": "https://www.linkedin.com/oauth/v2/accessToken",
          "uiConfig": {
            "buttonClass": "fa-linkedin",
            "buttonCustomStyle": "background-color:#0077b5;border-color:#0077b5;color:white;",
            "buttonCustomStyleHover": "background-color:#006ea9; border-color:#006ea9;color:white;",
            "buttonDisplayName": "LinkedIn",
            "buttonImage": "",
            "iconBackground": "#0077b5",
            "iconClass": "fa-linkedin",
            "iconFontColor": "white",
          },
          "userInfoEndpoint": "https://api.linkedin.com/v1/people/~:(id,formatted-name,first-name,last-name,email-address,location,picture-url)?format=json",
        },
        {
          "authenticationIdKey": "user_id",
          "authorizationEndpoint": "https://www.amazon.com/ap/oa",
          "basicAuth": false,
          "clientId": "",
          "clientSecret": "",
          "configClass": "org.forgerock.oauth.clients.oauth2.OAuth2ClientConfiguration",
          "enabled": false,
          "propertyMap": [
            {
              "source": "user_id",
              "target": "id",
            },
            {
              "source": "name",
              "target": "displayName",
            },
            {
              "source": "email",
              "target": "email",
            },
            {
              "source": "email",
              "target": "username",
            },
          ],
          "provider": "amazon",
          "redirectUri": "https://localhost:8443/",
          "schema": {
            "$schema": "http://json-schema.org/draft-03/schema",
            "id": "urn:jsonschema:org:forgerock:openidm:identityProviders:api:Amazon",
            "order": [
              "user_id",
              "name",
              "email",
            ],
            "properties": {
              "email": {
                "description": "Email Address",
                "searchable": true,
                "title": "Email Address",
                "type": "string",
                "viewable": true,
              },
              "name": {
                "description": "Name",
                "searchable": true,
                "title": "Name",
                "type": "string",
                "viewable": true,
              },
              "user_id": {
                "description": "ID",
                "searchable": true,
                "title": "ID",
                "type": "string",
                "viewable": true,
              },
            },
            "required": [],
            "title": "Amazon",
            "type": "object",
            "viewable": true,
          },
          "scope": [
            "profile",
          ],
          "tokenEndpoint": "https://api.amazon.com/auth/o2/token",
          "uiConfig": {
            "buttonClass": "fa-amazon",
            "buttonCustomStyle": "background: linear-gradient(to bottom, #f7e09f 15%,#f5c646 85%);color: black;border-color: #b48c24;",
            "buttonCustomStyleHover": "background: linear-gradient(to bottom, #f6c94e 15%,#f6c94e 85%);color: black;border-color: #b48c24;",
            "buttonDisplayName": "Amazon",
            "buttonImage": "",
            "iconBackground": "#f0c14b",
            "iconClass": "fa-amazon",
            "iconFontColor": "black",
          },
          "userInfoEndpoint": "https://api.amazon.com/user/profile",
        },
        {
          "authenticationIdKey": "username",
          "authorizationEndpoint": "https://public-api.wordpress.com/oauth2/authorize",
          "basicAuth": false,
          "clientId": "",
          "clientSecret": "",
          "configClass": "org.forgerock.oauth.clients.oauth2.OAuth2ClientConfiguration",
          "enabled": false,
          "propertyMap": [
            {
              "source": "username",
              "target": "username",
            },
            {
              "source": "username",
              "target": "id",
            },
            {
              "source": "email",
              "target": "email",
            },
            {
              "source": "avatar_URL",
              "target": "photoUrl",
            },
            {
              "source": "display_name",
              "target": "displayName",
            },
          ],
          "provider": "wordpress",
          "redirectUri": "https://localhost:8443/",
          "schema": {
            "$schema": "http://json-schema.org/draft-03/schema",
            "id": "urn:jsonschema:org:forgerock:openidm:identityProviders:api:Wordpress",
            "order": [
              "username",
              "email",
              "display_name",
              "avatar_URL",
            ],
            "properties": {
              "avatar_URL": {
                "description": "Avatar Url",
                "searchable": true,
                "title": "Avatar Url",
                "type": "string",
                "viewable": true,
              },
              "display_name": {
                "description": "Display Name",
                "searchable": true,
                "title": "Display Name",
                "type": "string",
                "viewable": true,
              },
              "email": {
                "description": "email",
                "searchable": true,
                "title": "email",
                "type": "string",
                "viewable": true,
              },
              "username": {
                "description": "username",
                "searchable": true,
                "title": "username",
                "type": "string",
                "viewable": true,
              },
            },
            "required": [],
            "title": "Wordpress",
            "type": "object",
            "username": "http://jsonschema.net",
            "viewable": true,
          },
          "scope": [
            "auth",
          ],
          "tokenEndpoint": "https://public-api.wordpress.com/oauth2/token",
          "uiConfig": {
            "buttonClass": "fa-wordpress",
            "buttonCustomStyle": "background-color: #0095cc; border-color: #0095cc; color:white;",
            "buttonCustomStyleHover": "background-color: #0095cc; border-color: #0095cc; color:white;",
            "buttonDisplayName": "WordPress",
            "buttonImage": "",
            "iconBackground": "#0095cc",
            "iconClass": "fa-wordpress",
            "iconFontColor": "white",
          },
          "userInfoEndpoint": "https://public-api.wordpress.com/rest/v1.1/me/",
        },
        {
          "authenticationIdKey": "id",
          "authorizationEndpoint": "https://login.microsoftonline.com/common/oauth2/v2.0/authorize",
          "basicAuth": false,
          "clientId": "",
          "clientSecret": "",
          "configClass": "org.forgerock.oauth.clients.oauth2.OAuth2ClientConfiguration",
          "propertyMap": [
            {
              "source": "id",
              "target": "id",
            },
            {
              "source": "displayName",
              "target": "displayName",
            },
            {
              "source": "givenName",
              "target": "givenName",
            },
            {
              "source": "surname",
              "target": "familyName",
            },
            {
              "source": "userPrincipalName",
              "target": "email",
            },
            {
              "source": "userPrincipalName",
              "target": "username",
            },
          ],
          "provider": "microsoft",
          "redirectUri": "https://localhost:8443/",
          "schema": {
            "$schema": "http://json-schema.org/draft-03/schema",
            "id": "urn:jsonschema:org:forgerock:openidm:identityProviders:api:Microsoft",
            "order": [
              "id",
              "displayName",
              "userPrincipalName",
              "givenName",
              "surname",
            ],
            "properties": {
              "displayName": {
                "description": "Name",
                "searchable": true,
                "title": "Name",
                "type": "string",
                "viewable": true,
              },
              "givenName": {
                "description": "First Name",
                "searchable": true,
                "title": "First Name",
                "type": "string",
                "viewable": true,
              },
              "id": {
                "description": "ID",
                "searchable": false,
                "title": "ID",
                "type": "string",
                "viewable": true,
              },
              "surname": {
                "description": "Last Name",
                "searchable": true,
                "title": "Last Name",
                "type": "string",
                "viewable": true,
              },
              "userPrincipalName": {
                "description": "Email Address",
                "searchable": true,
                "title": "Email Address",
                "type": "string",
                "viewable": true,
              },
            },
            "required": [],
            "title": "Microsoft",
            "type": "object",
            "viewable": true,
          },
          "scope": [
            "User.Read",
          ],
          "tokenEndpoint": "https://login.microsoftonline.com/common/oauth2/v2.0/token",
          "uiConfig": {
            "buttonClass": "",
            "buttonCustomStyle": "background-color: #fff; border-color: #8b8b8b; color: #8b8b8b;",
            "buttonCustomStyleHover": "background-color: #fff; border-color: #8b8b8b; color: #8b8b8b;",
            "buttonDisplayName": "Microsoft",
            "buttonImage": "images/microsoft-logo.png",
            "iconBackground": "#0078d7",
            "iconClass": "fa-windows",
            "iconFontColor": "white",
          },
          "userInfoEndpoint": "https://graph.microsoft.com/v1.0/me",
        },
        {
          "apiVersion": "5.73",
          "authenticationIdKey": "id",
          "authorizationEndpoint": "https://oauth.vk.com/authorize",
          "basicAuth": false,
          "clientId": "",
          "clientSecret": "",
          "configClass": "org.forgerock.oauth.clients.vk.VKClientConfiguration",
          "propertyMap": [
            {
              "source": "id",
              "target": "id",
            },
            {
              "source": "first_name",
              "target": "displayName",
            },
            {
              "source": "first_name",
              "target": "givenName",
            },
            {
              "source": "last_name",
              "target": "familyName",
            },
            {
              "source": "email",
              "target": "email",
            },
            {
              "source": "email",
              "target": "username",
            },
            {
              "source": "photo_50",
              "target": "photoUrl",
            },
          ],
          "provider": "vkontakte",
          "redirectUri": "https://localhost:8443/",
          "schema": {
            "$schema": "http://json-schema.org/draft-03/schema",
            "id": "urn:jsonschema:org:forgerock:openidm:identityProviders:api:Vkontakte",
            "order": [
              "id",
              "name",
              "last_name",
              "first_name",
              "email",
            ],
            "properties": {
              "email": {
                "description": "Email Address",
                "searchable": true,
                "title": "Email Address",
                "type": "string",
                "viewable": true,
              },
              "first_name": {
                "description": "First Name",
                "searchable": true,
                "title": "First Name",
                "type": "string",
                "viewable": true,
              },
              "id": {
                "description": "ID",
                "searchable": true,
                "title": "ID",
                "type": "string",
                "viewable": true,
              },
              "last_name": {
                "description": "Last Name",
                "searchable": true,
                "title": "Last Name",
                "type": "string",
                "viewable": true,
              },
              "name": {
                "description": "Name",
                "searchable": true,
                "title": "Name",
                "type": "string",
                "viewable": true,
              },
              "photo_50": {
                "description": "Photo URL",
                "searchable": true,
                "title": "Photo URL",
                "type": "string",
                "viewable": true,
              },
            },
            "required": [],
            "type": "object",
            "viewable": true,
          },
          "scope": [
            "email",
          ],
          "tokenEndpoint": "https://oauth.vk.com/access_token",
          "uiConfig": {
            "buttonClass": "fa-vk",
            "buttonCustomStyle": "background-color: #4c75a3; border-color: #4c75a3;color: white;",
            "buttonCustomStyleHover": "background-color: #43658c; border-color: #43658c;color: white;",
            "buttonDisplayName": "VK",
            "buttonImage": "",
            "iconBackground": "#4c75a3",
            "iconClass": "fa-vk",
            "iconFontColor": "white",
          },
          "userInfoEndpoint": "https://api.vk.com/method/users.get?fields=photo_50",
        },
        {
          "authenticationIdKey": "id",
          "authorizationEndpoint": "https://api.instagram.com/oauth/authorize/",
          "basicAuth": false,
          "clientId": "",
          "clientSecret": "",
          "configClass": "org.forgerock.oauth.clients.instagram.InstagramClientConfiguration",
          "connectionTimeout": 0,
          "propertyMap": [
            {
              "source": "id",
              "target": "id",
            },
            {
              "source": "full_name",
              "target": "displayName",
            },
            {
              "source": "profile_picture",
              "target": "photoUrl",
            },
            {
              "source": "username",
              "target": "username",
            },
          ],
          "provider": "instagram",
          "readTimeout": 0,
          "redirectUri": "https://localhost:8443/",
          "schema": {
            "$schema": "http://json-schema.org/draft-03/schema",
            "id": "urn:jsonschema:org:forgerock:openidm:identityProviders:api:Instagram",
            "order": [
              "id",
              "full_name",
              "profile_picture",
              "photoUrl",
              "username",
            ],
            "properties": {
              "full_name": {
                "description": "Full Name",
                "searchable": true,
                "title": "Full Name",
                "type": "string",
                "viewable": true,
              },
              "id": {
                "description": "ID",
                "searchable": true,
                "title": "ID",
                "type": "string",
                "viewable": true,
              },
              "profile_picture": {
                "description": "Profile Picture URL",
                "searchable": true,
                "title": "Profile Picture URL",
                "type": "string",
                "viewable": true,
              },
              "username": {
                "description": "Username",
                "searchable": true,
                "title": "Username",
                "type": "string",
                "viewable": true,
              },
            },
            "required": [],
            "type": "object",
            "viewable": true,
          },
          "scope": [
            "basic",
            "public_content",
          ],
          "tokenEndpoint": "https://api.instagram.com/oauth/access_token",
          "uiConfig": {
            "buttonClass": "fa-instagram",
            "buttonCustomStyle": "background-color: #3f729b; border-color: #3f729b;color: white;",
            "buttonCustomStyleHover": "background-color: #305777; border-color: #305777;color: white;",
            "buttonDisplayName": "Instagram",
            "buttonImage": "",
            "iconBackground": "#3f729b",
            "iconClass": "fa-instagram",
            "iconFontColor": "white",
          },
          "userInfoEndpoint": "https://api.instagram.com/v1/users/self/",
        },
        {
          "authenticationIdKey": "openid",
          "authorizationEndpoint": "https://open.weixin.qq.com/connect/qrconnect",
          "basicAuth": false,
          "clientId": "",
          "clientSecret": "",
          "configClass": "org.forgerock.oauth.clients.wechat.WeChatClientConfiguration",
          "connectionTimeout": 0,
          "propertyMap": [
            {
              "source": "openid",
              "target": "id",
            },
            {
              "source": "nickname",
              "target": "displayName",
            },
            {
              "source": "nickname",
              "target": "username",
            },
            {
              "source": "headimgurl",
              "target": "photoUrl",
            },
          ],
          "provider": "wechat",
          "readTimeout": 0,
          "redirectUri": "https://localhost:8443/",
          "refreshTokenEndpoint": "https://api.wechat.com/sns/oauth2/refresh_token",
          "schema": {
            "$schema": "http://json-schema.org/draft-03/schema",
            "id": "urn:jsonschema:org:forgerock:openidm:identityProviders:api:Wechat",
            "order": [
              "openid",
              "nickname",
              "headimgurl",
            ],
            "properties": {
              "headimgurl": {
                "description": "Profile Picture URL",
                "searchable": true,
                "title": "Profile Picture URL",
                "type": "string",
                "viewable": true,
              },
              "nickname": {
                "description": "Username",
                "searchable": true,
                "title": "Username",
                "type": "string",
                "viewable": true,
              },
              "openid": {
                "description": "ID",
                "searchable": true,
                "title": "ID",
                "type": "string",
                "viewable": true,
              },
            },
            "required": [],
            "type": "object",
            "viewable": true,
          },
          "scope": [
            "snsapi_login",
          ],
          "tokenEndpoint": "https://api.wechat.com/sns/oauth2/access_token",
          "uiConfig": {
            "buttonClass": "fa-wechat",
            "buttonCustomStyle": "background-color: #09b507; border-color: #09b507;color: white;",
            "buttonCustomStyleHover": "background-color: #09a007; border-color: #09a007;color: white;",
            "buttonDisplayName": "WeChat",
            "buttonImage": "",
            "iconBackground": "#09b507",
            "iconClass": "fa-wechat",
            "iconFontColor": "white",
          },
          "userInfoEndpoint": "https://api.wechat.com/sns/userinfo",
        },
        {
          "authenticationIdKey": "sub",
          "authorizationEndpoint": "https://api.login.yahoo.com/oauth2/request_auth",
          "basicAuth": false,
          "clientId": "",
          "clientSecret": "",
          "configClass": "org.forgerock.oauth.clients.oidc.OpenIDConnectClientConfiguration",
          "propertyMap": [
            {
              "source": "sub",
              "target": "id",
            },
            {
              "source": "name",
              "target": "displayName",
            },
            {
              "source": "given_name",
              "target": "givenName",
            },
            {
              "source": "family_name",
              "target": "familyName",
            },
            {
              "source": "email",
              "target": "email",
            },
            {
              "source": "email",
              "target": "username",
            },
            {
              "source": "locale",
              "target": "locale",
            },
            {
              "source": "picture",
              "target": "photoUrl",
            },
          ],
          "provider": "yahoo",
          "redirectUri": "https://localhost:8443/",
          "schema": {
            "$schema": "http://json-schema.org/draft-03/schema",
            "id": "urn:jsonschema:org:forgerock:openidm:identityProviders:api:Yahoo",
            "order": [
              "sub",
              "name",
              "given_name",
              "family_name",
              "email",
              "locale",
            ],
            "properties": {
              "email": {
                "description": "Email Address",
                "searchable": true,
                "title": "Email Address",
                "type": "string",
                "viewable": true,
              },
              "family_name": {
                "description": "Last Name",
                "searchable": true,
                "title": "Last Name",
                "type": "string",
                "viewable": true,
              },
              "given_name": {
                "description": "First Name",
                "searchable": true,
                "title": "First Name",
                "type": "string",
                "viewable": true,
              },
              "locale": {
                "description": "Locale Code",
                "searchable": true,
                "title": "Locale Code",
                "type": "string",
                "viewable": true,
              },
              "name": {
                "description": "Name",
                "searchable": true,
                "title": "Name",
                "type": "string",
                "viewable": true,
              },
              "picture": {
                "description": "Profile Photo URL",
                "searchable": true,
                "title": "Profile Photo URL",
                "type": "string",
                "viewable": true,
              },
              "sub": {
                "description": "ID",
                "searchable": true,
                "title": "ID",
                "type": "string",
                "viewable": true,
              },
            },
            "required": [],
            "type": "object",
            "viewable": true,
          },
          "scope": [
            "openid",
            "sdpp-w",
          ],
          "tokenEndpoint": "https://api.login.yahoo.com/oauth2/get_token",
          "uiConfig": {
            "buttonClass": "fa-yahoo",
            "buttonCustomStyle": "background-color: #7B0099; border-color: #7B0099; color:white;",
            "buttonCustomStyleHover": "background-color: #7B0099; border-color: #7B0099; color:white;",
            "buttonDisplayName": "Yahoo",
            "buttonImage": "",
            "iconBackground": "#7B0099",
            "iconClass": "fa-yahoo",
            "iconFontColor": "white",
          },
          "wellKnownEndpoint": "https://login.yahoo.com/.well-known/openid-configuration",
        },
        {
          "authenticationIdKey": "user_id",
          "authorizationEndpoint": "https://login.salesforce.com/services/oauth2/authorize",
          "basicAuth": false,
          "clientId": "",
          "clientSecret": "",
          "configClass": "org.forgerock.oauth.clients.oauth2.OAuth2ClientConfiguration",
          "propertyMap": [
            {
              "source": "user_id",
              "target": "id",
            },
            {
              "source": "name",
              "target": "displayName",
            },
            {
              "source": "given_name",
              "target": "givenName",
            },
            {
              "source": "family_name",
              "target": "familyName",
            },
            {
              "source": "email",
              "target": "email",
            },
            {
              "source": "email",
              "target": "username",
            },
            {
              "source": "zoneInfo",
              "target": "locale",
            },
            {
              "source": "picture",
              "target": "photoUrl",
            },
          ],
          "provider": "salesforce",
          "redirectUri": "https://localhost:8443/",
          "schema": {
            "$schema": "http://json-schema.org/draft-03/schema",
            "id": "urn:jsonschema:org:forgerock:openidm:identityProviders:api:Salesforce",
            "order": [
              "user_id",
              "name",
              "given_name",
              "family_name",
              "email",
              "zoneInfo",
              "picture",
            ],
            "properties": {
              "email": {
                "description": "Email Address",
                "searchable": true,
                "title": "Email Address",
                "type": "string",
                "viewable": true,
              },
              "family_name": {
                "description": "Last Name",
                "searchable": true,
                "title": "Last Name",
                "type": "string",
                "viewable": true,
              },
              "given_name": {
                "description": "First Name",
                "searchable": true,
                "title": "First Name",
                "type": "string",
                "viewable": true,
              },
              "name": {
                "description": "Name",
                "searchable": true,
                "title": "Name",
                "type": "string",
                "viewable": true,
              },
              "picture": {
                "description": "Picture URL",
                "searchable": true,
                "title": "Picture URL",
                "type": "string",
                "viewable": true,
              },
              "user_id": {
                "description": "ID",
                "searchable": true,
                "title": "ID",
                "type": "string",
                "viewable": true,
              },
              "zoneInfo": {
                "description": "Locale Code",
                "searchable": true,
                "title": "Locale Code",
                "type": "string",
                "viewable": true,
              },
            },
            "required": [],
            "title": "Salesforce",
            "type": "object",
            "viewable": true,
          },
          "scope": [
            "id",
            "api",
            "web",
          ],
          "tokenEndpoint": "https://login.salesforce.com/services/oauth2/token",
          "uiConfig": {
            "buttonClass": "fa-cloud",
            "buttonCustomStyle": "background-color: #21a0df; border-color: #21a0df; color: white;",
            "buttonCustomStyleHover": "background-color: #21a0df; border-color: #21a0df; color: white;",
            "buttonDisplayName": "Salesforce",
            "buttonImage": "",
            "iconBackground": "#21a0df",
            "iconClass": "fa-cloud",
            "iconFontColor": "white",
          },
          "userInfoEndpoint": "https://login.salesforce.com/services/oauth2/userinfo",
        },
        {
          "authenticationIdKey": "id_str",
          "authorizationEndpoint": "https://api.twitter.com/oauth/authenticate",
          "clientId": "",
          "clientSecret": "",
          "configClass": "org.forgerock.oauth.clients.twitter.TwitterClientConfiguration",
          "propertyMap": [
            {
              "source": "id_str",
              "target": "id",
            },
            {
              "source": "name",
              "target": "displayName",
            },
            {
              "source": "email",
              "target": "email",
            },
            {
              "source": "screen_name",
              "target": "username",
            },
            {
              "source": "profile_image_url",
              "target": "photoUrl",
            },
          ],
          "provider": "twitter",
          "redirectUri": "https://localhost:8443/",
          "requestTokenEndpoint": "https://api.twitter.com/oauth/request_token",
          "schema": {
            "$schema": "http://json-schema.org/draft-03/schema",
            "id": "urn:jsonschema:org:forgerock:openidm:identityProviders:api:Twitter",
            "order": [
              "id_str",
              "name",
              "screen_name",
              "email",
              "profile_image_url",
            ],
            "properties": {
              "email": {
                "description": "Email Address",
                "searchable": true,
                "title": "Email Address",
                "type": "string",
                "viewable": true,
              },
              "id_str": {
                "description": "ID",
                "searchable": true,
                "title": "Id",
                "type": "string",
                "viewable": true,
              },
              "name": {
                "description": "Full Name",
                "searchable": true,
                "title": "Full Name",
                "type": "string",
                "viewable": true,
              },
              "profile_image_url": {
                "description": "Profile Image URL",
                "searchable": true,
                "title": "Profile Image URL",
                "type": "string",
                "viewable": true,
              },
              "screen_name": {
                "description": "User Id",
                "searchable": true,
                "title": "User Id",
                "type": "string",
                "viewable": true,
              },
            },
            "required": [],
            "title": "Twitter",
            "type": "object",
            "viewable": true,
          },
          "tokenEndpoint": "https://api.twitter.com/oauth/access_token",
          "uiConfig": {
            "buttonClass": "fa-twitter",
            "buttonCustomStyle": "background-color: #00b6e9; border-color: #00b6e9; color: #fff;",
            "buttonCustomStyleHover": "background-color: #01abda; border-color: #01abda; color: #fff;",
            "buttonDisplayName": "Twitter",
            "buttonImage": "",
            "iconBackground": "#00b6e9",
            "iconClass": "fa-twitter",
            "iconFontColor": "white",
          },
          "userInfoEndpoint": "https://api.twitter.com/1.1/account/verify_credentials.json",
        },
      ],
    },
    "internal": {
      "_id": "internal",
      "objects": [
        {
          "name": "role",
          "properties": {
            "authzMembers": {
              "items": {
                "resourceCollection": [
                  {
                    "conditionalAssociation": true,
                    "label": "User",
                    "notify": true,
                    "path": "managed/alpha_user",
                    "query": {
                      "fields": [
                        "userName",
                        "givenName",
                        "sn",
                      ],
                      "queryFilter": "true",
                    },
                  },
                ],
              },
            },
          },
        },
      ],
    },
    "jsonstore": {
      "_id": "jsonstore",
      "cleanupDwellSeconds": 600,
      "entryExpireSeconds": 1800,
    },
    "managed": {
      "_id": "managed",
      "objects": [
        {
          "meta": {
            "property": "_meta",
            "resourceCollection": "managed/alpha_usermeta",
            "trackedProperties": [
              "createDate",
              "lastChanged",
            ],
          },
          "name": "alpha_user",
          "notifications": {},
          "schema": {
            "$schema": "http://forgerock.org/json-schema#",
            "description": null,
            "icon": "fa-user",
            "order": [
              "_id",
              "userName",
              "password",
              "givenName",
              "cn",
              "sn",
              "mail",
              "profileImage",
              "description",
              "accountStatus",
              "telephoneNumber",
              "postalAddress",
              "city",
              "postalCode",
              "country",
              "stateProvince",
              "roles",
              "manager",
              "authzRoles",
              "reports",
              "effectiveRoles",
              "effectiveAssignments",
              "lastSync",
              "kbaInfo",
              "preferences",
              "consentedMappings",
              "ownerOfOrg",
              "adminOfOrg",
              "memberOfOrg",
              "memberOfOrgIDs",
              "frIndexedString1",
              "frIndexedString2",
              "frIndexedString3",
              "frIndexedString4",
              "frIndexedString5",
              "frUnindexedString1",
              "frUnindexedString2",
              "frUnindexedString3",
              "frUnindexedString4",
              "frUnindexedString5",
              "frIndexedMultivalued1",
              "frIndexedMultivalued2",
              "frIndexedMultivalued3",
              "frIndexedMultivalued4",
              "frIndexedMultivalued5",
              "frUnindexedMultivalued1",
              "frUnindexedMultivalued2",
              "frUnindexedMultivalued3",
              "frUnindexedMultivalued4",
              "frUnindexedMultivalued5",
              "frIndexedDate1",
              "frIndexedDate2",
              "frIndexedDate3",
              "frIndexedDate4",
              "frIndexedDate5",
              "frUnindexedDate1",
              "frUnindexedDate2",
              "frUnindexedDate3",
              "frUnindexedDate4",
              "frUnindexedDate5",
              "frIndexedInteger1",
              "frIndexedInteger2",
              "frIndexedInteger3",
              "frIndexedInteger4",
              "frIndexedInteger5",
              "frUnindexedInteger1",
              "frUnindexedInteger2",
              "frUnindexedInteger3",
              "frUnindexedInteger4",
              "frUnindexedInteger5",
              "assignedDashboard",
              "aliasList",
              "custom_department",
              "groups",
              "effectiveGroups",
            ],
            "properties": {
              "_id": {
                "description": "User ID",
                "isPersonal": false,
                "policies": [
                  {
                    "params": {
                      "forbiddenChars": [
                        "/",
                      ],
                    },
                    "policyId": "cannot-contain-characters",
                  },
                ],
                "searchable": false,
                "type": "string",
                "usageDescription": null,
                "userEditable": false,
                "viewable": false,
              },
              "accountStatus": {
                "default": "active",
                "description": "Status",
                "isPersonal": false,
                "searchable": true,
                "title": "Status",
                "type": "string",
                "usageDescription": null,
                "userEditable": false,
                "viewable": true,
              },
              "adminOfOrg": {
                "items": {
                  "notifySelf": false,
                  "properties": {
                    "_ref": {
                      "type": "string",
                    },
                    "_refProperties": {
                      "properties": {
                        "_id": {
                          "propName": "_id",
                          "required": false,
                          "type": "string",
                        },
                      },
                      "type": "object",
                    },
                  },
                  "resourceCollection": [
                    {
                      "label": "Organization",
                      "notify": true,
                      "path": "managed/alpha_organization",
                      "query": {
                        "fields": [
                          "name",
                        ],
                        "queryFilter": "true",
                        "sortKeys": [],
                      },
                    },
                  ],
                  "reversePropertyName": "admins",
                  "reverseRelationship": true,
                  "type": "relationship",
                  "validate": true,
                },
                "policies": [],
                "returnByDefault": false,
                "searchable": false,
                "title": "Organizations I Administer",
                "type": "array",
                "userEditable": false,
                "viewable": true,
              },
              "aliasList": {
                "description": "List of identity aliases used primarily to record social IdP subjects for this user",
                "isVirtual": false,
                "items": {
                  "title": "User Alias Names Items",
                  "type": "string",
                },
                "returnByDefault": false,
                "searchable": false,
                "title": "User Alias Names List",
                "type": "array",
                "userEditable": true,
                "viewable": false,
              },
              "assignedDashboard": {
                "description": "List of items to click on for this user",
                "isVirtual": false,
                "items": {
                  "title": "Assigned Dashboard Items",
                  "type": "string",
                },
                "searchable": false,
                "title": "Assigned Dashboard",
                "type": "array",
                "userEditable": false,
                "viewable": true,
              },
              "authzRoles": {
                "description": "Authorization Roles",
                "id": "urn:jsonschema:org:forgerock:openidm:managed:api:User:authzRoles",
                "isPersonal": false,
                "items": {
                  "id": "urn:jsonschema:org:forgerock:openidm:managed:api:User:authzRoles:items",
                  "properties": {
                    "_ref": {
                      "description": "References a relationship from a managed object",
                      "type": "string",
                    },
                    "_refProperties": {
                      "description": "Supports metadata within the relationship",
                      "properties": {
                        "_id": {
                          "description": "_refProperties object ID",
                          "type": "string",
                        },
                      },
                      "title": "Authorization Roles Items _refProperties",
                      "type": "object",
                    },
                  },
                  "resourceCollection": [
                    {
                      "conditionalAssociationField": "condition",
                      "label": "Internal Role",
                      "path": "internal/role",
                      "query": {
                        "fields": [
                          "name",
                        ],
                        "queryFilter": "true",
                      },
                    },
                  ],
                  "reversePropertyName": "authzMembers",
                  "reverseRelationship": true,
                  "title": "Authorization Roles Items",
                  "type": "relationship",
                  "validate": true,
                },
                "returnByDefault": false,
                "title": "Authorization Roles",
                "type": "array",
                "usageDescription": null,
                "userEditable": false,
                "viewable": true,
              },
              "city": {
                "description": "City",
                "isPersonal": false,
                "title": "City",
                "type": "string",
                "usageDescription": null,
                "userEditable": true,
                "viewable": true,
              },
              "cn": {
                "description": "Common Name",
                "isPersonal": true,
                "isVirtual": true,
                "onStore": {
                  "source": "object.cn || (object.givenName + ' ' + object.sn)",
                  "type": "text/javascript",
                },
                "scope": "private",
                "searchable": false,
                "title": "Common Name",
                "type": "string",
                "userEditable": false,
                "viewable": false,
              },
              "consentedMappings": {
                "description": "Consented Mappings",
                "isPersonal": false,
                "isVirtual": false,
                "items": {
                  "items": {
                    "order": [
                      "mapping",
                      "consentDate",
                    ],
                    "properties": {
                      "consentDate": {
                        "description": "Consent Date",
                        "searchable": true,
                        "title": "Consent Date",
                        "type": "string",
                        "userEditable": true,
                        "viewable": true,
                      },
                      "mapping": {
                        "description": "Mapping",
                        "searchable": true,
                        "title": "Mapping",
                        "type": "string",
                        "userEditable": true,
                        "viewable": true,
                      },
                    },
                    "required": [
                      "mapping",
                      "consentDate",
                    ],
                    "title": "Consented Mappings Item",
                    "type": "object",
                  },
                  "title": "Consented Mappings Items",
                  "type": "array",
                },
                "returnByDefault": false,
                "searchable": false,
                "title": "Consented Mappings",
                "type": "array",
                "usageDescription": null,
                "userEditable": true,
                "viewable": false,
              },
              "country": {
                "description": "Country",
                "isPersonal": false,
                "title": "Country",
                "type": "string",
                "usageDescription": null,
                "userEditable": true,
                "viewable": true,
              },
              "custom_department": {
                "description": null,
                "format": null,
                "isVirtual": false,
                "searchable": false,
                "title": "Department",
                "type": "string",
                "userEditable": true,
                "viewable": true,
              },
              "description": {
                "description": "Description",
                "isPersonal": false,
                "searchable": true,
                "title": "Description",
                "type": "string",
                "usageDescription": null,
                "userEditable": true,
                "viewable": true,
              },
              "effectiveAssignments": {
                "description": "Effective Assignments",
                "isPersonal": false,
                "isVirtual": true,
                "items": {
                  "title": "Effective Assignments Items",
                  "type": "object",
                },
                "queryConfig": {
                  "referencedObjectFields": [
                    "*",
                  ],
                  "referencedRelationshipFields": [
                    "roles",
                    "assignments",
                  ],
                },
                "returnByDefault": true,
                "title": "Effective Assignments",
                "type": "array",
                "usageDescription": null,
                "viewable": false,
              },
              "effectiveGroups": {
                "description": "Effective Groups",
                "isPersonal": false,
                "isVirtual": true,
                "items": {
                  "title": "Effective Groups Items",
                  "type": "object",
                },
                "queryConfig": {
                  "referencedRelationshipFields": [
                    "groups",
                  ],
                },
                "returnByDefault": true,
                "title": "Effective Groups",
                "type": "array",
                "usageDescription": "",
                "viewable": false,
              },
              "effectiveRoles": {
                "description": "Effective Roles",
                "isPersonal": false,
                "isVirtual": true,
                "items": {
                  "title": "Effective Roles Items",
                  "type": "object",
                },
                "queryConfig": {
                  "referencedRelationshipFields": [
                    "roles",
                  ],
                },
                "returnByDefault": true,
                "title": "Effective Roles",
                "type": "array",
                "usageDescription": null,
                "viewable": false,
              },
              "frIndexedDate1": {
                "description": "Generic Indexed Date 1",
                "isPersonal": false,
                "title": "Generic Indexed Date 1",
                "type": "string",
                "usageDescription": null,
                "userEditable": true,
                "viewable": false,
              },
              "frIndexedDate2": {
                "description": "Generic Indexed Date 2",
                "isPersonal": false,
                "title": "Generic Indexed Date 2",
                "type": "string",
                "usageDescription": null,
                "userEditable": true,
                "viewable": false,
              },
              "frIndexedDate3": {
                "description": "Generic Indexed Date 3",
                "isPersonal": false,
                "title": "Generic Indexed Date 3",
                "type": "string",
                "usageDescription": null,
                "userEditable": true,
                "viewable": false,
              },
              "frIndexedDate4": {
                "description": "Generic Indexed Date 4",
                "isPersonal": false,
                "title": "Generic Indexed Date 4",
                "type": "string",
                "usageDescription": null,
                "userEditable": true,
                "viewable": false,
              },
              "frIndexedDate5": {
                "description": "Generic Indexed Date 5",
                "isPersonal": false,
                "title": "Generic Indexed Date 5",
                "type": "string",
                "usageDescription": null,
                "userEditable": true,
                "viewable": false,
              },
              "frIndexedInteger1": {
                "description": "Generic Indexed Integer 1",
                "isPersonal": false,
                "title": "Generic Indexed Integer 1",
                "type": "number",
                "usageDescription": null,
                "userEditable": true,
                "viewable": false,
              },
              "frIndexedInteger2": {
                "description": "Generic Indexed Integer 2",
                "isPersonal": false,
                "title": "Generic Indexed Integer 2",
                "type": "number",
                "usageDescription": null,
                "userEditable": true,
                "viewable": false,
              },
              "frIndexedInteger3": {
                "description": "Generic Indexed Integer 3",
                "isPersonal": false,
                "title": "Generic Indexed Integer 3",
                "type": "number",
                "usageDescription": null,
                "userEditable": true,
                "viewable": false,
              },
              "frIndexedInteger4": {
                "description": "Generic Indexed Integer 4",
                "isPersonal": false,
                "title": "Generic Indexed Integer 4",
                "type": "number",
                "usageDescription": null,
                "userEditable": true,
                "viewable": false,
              },
              "frIndexedInteger5": {
                "description": "Generic Indexed Integer 5",
                "isPersonal": false,
                "title": "Generic Indexed Integer 5",
                "type": "number",
                "usageDescription": null,
                "userEditable": true,
                "viewable": false,
              },
              "frIndexedMultivalued1": {
                "description": "Generic Indexed Multivalue 1",
                "isPersonal": false,
                "items": {
                  "type": "string",
                },
                "title": "Generic Indexed Multivalue 1",
                "type": "array",
                "usageDescription": null,
                "userEditable": true,
                "viewable": false,
              },
              "frIndexedMultivalued2": {
                "description": "Generic Indexed Multivalue 2",
                "isPersonal": false,
                "items": {
                  "type": "string",
                },
                "title": "Generic Indexed Multivalue 2",
                "type": "array",
                "usageDescription": null,
                "userEditable": true,
                "viewable": false,
              },
              "frIndexedMultivalued3": {
                "description": "Generic Indexed Multivalue 3",
                "isPersonal": false,
                "items": {
                  "type": "string",
                },
                "title": "Generic Indexed Multivalue 3",
                "type": "array",
                "usageDescription": null,
                "userEditable": true,
                "viewable": false,
              },
              "frIndexedMultivalued4": {
                "description": "Generic Indexed Multivalue 4",
                "isPersonal": false,
                "items": {
                  "type": "string",
                },
                "title": "Generic Indexed Multivalue 4",
                "type": "array",
                "usageDescription": null,
                "userEditable": true,
                "viewable": false,
              },
              "frIndexedMultivalued5": {
                "description": "Generic Indexed Multivalue 5",
                "isPersonal": false,
                "items": {
                  "type": "string",
                },
                "title": "Generic Indexed Multivalue 5",
                "type": "array",
                "usageDescription": null,
                "userEditable": true,
                "viewable": false,
              },
              "frIndexedString1": {
                "description": "Generic Indexed String 1",
                "isPersonal": false,
                "title": "Generic Indexed String 1",
                "type": "string",
                "usageDescription": null,
                "userEditable": true,
                "viewable": false,
              },
              "frIndexedString2": {
                "description": "Generic Indexed String 2",
                "isPersonal": false,
                "title": "Generic Indexed String 2",
                "type": "string",
                "usageDescription": null,
                "userEditable": true,
                "viewable": false,
              },
              "frIndexedString3": {
                "description": "Generic Indexed String 3",
                "isPersonal": false,
                "title": "Generic Indexed String 3",
                "type": "string",
                "usageDescription": null,
                "userEditable": true,
                "viewable": false,
              },
              "frIndexedString4": {
                "description": "Generic Indexed String 4",
                "isPersonal": false,
                "title": "Generic Indexed String 4",
                "type": "string",
                "usageDescription": null,
                "userEditable": true,
                "viewable": false,
              },
              "frIndexedString5": {
                "description": "Generic Indexed String 5",
                "isPersonal": false,
                "title": "Generic Indexed String 5",
                "type": "string",
                "usageDescription": null,
                "userEditable": true,
                "viewable": false,
              },
              "frUnindexedDate1": {
                "description": "Generic Unindexed Date 1",
                "isPersonal": false,
                "title": "Generic Unindexed Date 1",
                "type": "string",
                "usageDescription": null,
                "userEditable": true,
                "viewable": false,
              },
              "frUnindexedDate2": {
                "description": "Generic Unindexed Date 2",
                "isPersonal": false,
                "title": "Generic Unindexed Date 2",
                "type": "string",
                "usageDescription": null,
                "userEditable": true,
                "viewable": false,
              },
              "frUnindexedDate3": {
                "description": "Generic Unindexed Date 3",
                "isPersonal": false,
                "title": "Generic Unindexed Date 3",
                "type": "string",
                "usageDescription": null,
                "userEditable": true,
                "viewable": false,
              },
              "frUnindexedDate4": {
                "description": "Generic Unindexed Date 4",
                "isPersonal": false,
                "title": "Generic Unindexed Date 4",
                "type": "string",
                "usageDescription": null,
                "userEditable": true,
                "viewable": false,
              },
              "frUnindexedDate5": {
                "description": "Generic Unindexed Date 5",
                "isPersonal": false,
                "title": "Generic Unindexed Date 5",
                "type": "string",
                "usageDescription": null,
                "userEditable": true,
                "viewable": false,
              },
              "frUnindexedInteger1": {
                "description": "Generic Unindexed Integer 1",
                "isPersonal": false,
                "title": "Generic Unindexed Integer 1",
                "type": "number",
                "usageDescription": null,
                "userEditable": true,
                "viewable": false,
              },
              "frUnindexedInteger2": {
                "description": "Generic Unindexed Integer 2",
                "isPersonal": false,
                "title": "Generic Unindexed Integer 2",
                "type": "number",
                "usageDescription": null,
                "userEditable": true,
                "viewable": false,
              },
              "frUnindexedInteger3": {
                "description": "Generic Unindexed Integer 3",
                "isPersonal": false,
                "title": "Generic Unindexed Integer 3",
                "type": "number",
                "usageDescription": null,
                "userEditable": true,
                "viewable": false,
              },
              "frUnindexedInteger4": {
                "description": "Generic Unindexed Integer 4",
                "isPersonal": false,
                "title": "Generic Unindexed Integer 4",
                "type": "number",
                "usageDescription": null,
                "userEditable": true,
                "viewable": false,
              },
              "frUnindexedInteger5": {
                "description": "Generic Unindexed Integer 5",
                "isPersonal": false,
                "title": "Generic Unindexed Integer 5",
                "type": "number",
                "usageDescription": null,
                "userEditable": true,
                "viewable": false,
              },
              "frUnindexedMultivalued1": {
                "description": "Generic Unindexed Multivalue 1",
                "isPersonal": false,
                "items": {
                  "type": "string",
                },
                "title": "Generic Unindexed Multivalue 1",
                "type": "array",
                "usageDescription": null,
                "userEditable": true,
                "viewable": false,
              },
              "frUnindexedMultivalued2": {
                "description": "Generic Unindexed Multivalue 2",
                "isPersonal": false,
                "items": {
                  "type": "string",
                },
                "title": "Generic Unindexed Multivalue 2",
                "type": "array",
                "usageDescription": null,
                "userEditable": true,
                "viewable": false,
              },
              "frUnindexedMultivalued3": {
                "description": "Generic Unindexed Multivalue 3",
                "isPersonal": false,
                "items": {
                  "type": "string",
                },
                "title": "Generic Unindexed Multivalue 3",
                "type": "array",
                "usageDescription": null,
                "userEditable": true,
                "viewable": false,
              },
              "frUnindexedMultivalued4": {
                "description": "Generic Unindexed Multivalue 4",
                "isPersonal": false,
                "items": {
                  "type": "string",
                },
                "title": "Generic Unindexed Multivalue 4",
                "type": "array",
                "usageDescription": null,
                "userEditable": true,
                "viewable": false,
              },
              "frUnindexedMultivalued5": {
                "description": "Generic Unindexed Multivalue 5",
                "isPersonal": false,
                "items": {
                  "type": "string",
                },
                "title": "Generic Unindexed Multivalue 5",
                "type": "array",
                "usageDescription": null,
                "userEditable": true,
                "viewable": false,
              },
              "frUnindexedString1": {
                "description": "Username",
                "format": null,
                "isPersonal": false,
                "isVirtual": false,
                "searchable": false,
                "title": "Username",
                "type": "string",
                "usageDescription": null,
                "userEditable": true,
                "viewable": true,
              },
              "frUnindexedString2": {
                "description": "Generic Unindexed String 2",
                "isPersonal": false,
                "title": "Generic Unindexed String 2",
                "type": "string",
                "usageDescription": null,
                "userEditable": true,
                "viewable": false,
              },
              "frUnindexedString3": {
                "description": "Generic Unindexed String 3",
                "isPersonal": false,
                "title": "Generic Unindexed String 3",
                "type": "string",
                "usageDescription": null,
                "userEditable": true,
                "viewable": false,
              },
              "frUnindexedString4": {
                "description": "Generic Unindexed String 4",
                "isPersonal": false,
                "title": "Generic Unindexed String 4",
                "type": "string",
                "usageDescription": null,
                "userEditable": true,
                "viewable": false,
              },
              "frUnindexedString5": {
                "description": "Generic Unindexed String 5",
                "isPersonal": false,
                "title": "Generic Unindexed String 5",
                "type": "string",
                "usageDescription": null,
                "userEditable": true,
                "viewable": false,
              },
              "givenName": {
                "description": "First Name",
                "isPersonal": true,
                "searchable": true,
                "title": "First Name",
                "type": "string",
                "usageDescription": null,
                "userEditable": true,
                "viewable": true,
              },
              "groups": {
                "description": "Groups",
                "id": "urn:jsonschema:org:forgerock:openidm:managed:api:User:groups",
                "isPersonal": false,
                "items": {
                  "id": "urn:jsonschema:org:forgerock:openidm:managed:api:User:groups:items",
                  "notifySelf": true,
                  "properties": {
                    "_ref": {
                      "description": "References a relationship from a managed object",
                      "type": "string",
                    },
                    "_refProperties": {
                      "description": "Supports metadata within the relationship",
                      "properties": {
                        "_grantType": {
                          "description": "Grant Type",
                          "label": "Grant Type",
                          "type": "string",
                        },
                        "_id": {
                          "description": "_refProperties object ID",
                          "type": "string",
                        },
                      },
                      "title": "Groups Items _refProperties",
                      "type": "object",
                    },
                  },
                  "resourceCollection": [
                    {
                      "conditionalAssociationField": "condition",
                      "label": "Group",
                      "path": "managed/alpha_group",
                      "query": {
                        "fields": [],
                        "queryFilter": "true",
                      },
                    },
                  ],
                  "reversePropertyName": "members",
                  "reverseRelationship": true,
                  "title": "Groups Items",
                  "type": "relationship",
                  "validate": true,
                },
                "relationshipGrantTemporalConstraintsEnforced": false,
                "returnByDefault": false,
                "title": "Groups",
                "type": "array",
                "usageDescription": "",
                "userEditable": false,
                "viewable": true,
              },
              "kbaInfo": {
                "description": "KBA Info",
                "isPersonal": true,
                "items": {
                  "order": [
                    "answer",
                    "customQuestion",
                    "questionId",
                  ],
                  "properties": {
                    "answer": {
                      "description": "Answer",
                      "type": "string",
                    },
                    "customQuestion": {
                      "description": "Custom question",
                      "type": "string",
                    },
                    "questionId": {
                      "description": "Question ID",
                      "type": "string",
                    },
                  },
                  "required": [],
                  "title": "KBA Info Items",
                  "type": "object",
                },
                "type": "array",
                "usageDescription": null,
                "userEditable": true,
                "viewable": false,
              },
              "lastSync": {
                "description": "Last Sync timestamp",
                "isPersonal": false,
                "order": [
                  "effectiveAssignments",
                  "timestamp",
                ],
                "properties": {
                  "effectiveAssignments": {
                    "description": "Effective Assignments",
                    "items": {
                      "title": "Effective Assignments Items",
                      "type": "object",
                    },
                    "title": "Effective Assignments",
                    "type": "array",
                  },
                  "timestamp": {
                    "description": "Timestamp",
                    "type": "string",
                  },
                },
                "scope": "private",
                "searchable": false,
                "title": "Last Sync timestamp",
                "type": "object",
                "usageDescription": null,
                "viewable": false,
              },
              "mail": {
                "description": "Email Address",
                "isPersonal": true,
                "policies": [
                  {
                    "policyId": "valid-email-address-format",
                  },
                ],
                "searchable": true,
                "title": "Email Address",
                "type": "string",
                "usageDescription": null,
                "userEditable": true,
                "viewable": true,
              },
              "manager": {
                "description": "Manager",
                "isPersonal": false,
                "properties": {
                  "_ref": {
                    "description": "References a relationship from a managed object",
                    "type": "string",
                  },
                  "_refProperties": {
                    "description": "Supports metadata within the relationship",
                    "properties": {
                      "_id": {
                        "description": "_refProperties object ID",
                        "type": "string",
                      },
                    },
                    "title": "Manager _refProperties",
                    "type": "object",
                  },
                },
                "resourceCollection": [
                  {
                    "label": "User",
                    "path": "managed/alpha_user",
                    "query": {
                      "fields": [
                        "userName",
                        "givenName",
                        "sn",
                      ],
                      "queryFilter": "true",
                    },
                  },
                ],
                "reversePropertyName": "reports",
                "reverseRelationship": true,
                "searchable": false,
                "title": "Manager",
                "type": "relationship",
                "usageDescription": null,
                "userEditable": false,
                "validate": true,
                "viewable": true,
              },
              "memberOfOrg": {
                "items": {
                  "notifySelf": true,
                  "properties": {
                    "_ref": {
                      "type": "string",
                    },
                    "_refProperties": {
                      "properties": {
                        "_id": {
                          "propName": "_id",
                          "required": false,
                          "type": "string",
                        },
                      },
                      "type": "object",
                    },
                  },
                  "resourceCollection": [
                    {
                      "label": "Organization",
                      "notify": false,
                      "path": "managed/alpha_organization",
                      "query": {
                        "fields": [
                          "name",
                        ],
                        "queryFilter": "true",
                        "sortKeys": [],
                      },
                    },
                  ],
                  "reversePropertyName": "members",
                  "reverseRelationship": true,
                  "type": "relationship",
                  "validate": true,
                },
                "policies": [],
                "returnByDefault": false,
                "searchable": false,
                "title": "Organizations to which I Belong",
                "type": "array",
                "userEditable": false,
                "viewable": true,
              },
              "memberOfOrgIDs": {
                "isVirtual": true,
                "items": {
                  "title": "org identifiers",
                  "type": "string",
                },
                "queryConfig": {
                  "flattenProperties": true,
                  "referencedObjectFields": [
                    "_id",
                    "parentIDs",
                  ],
                  "referencedRelationshipFields": [
                    "memberOfOrg",
                  ],
                },
                "returnByDefault": true,
                "searchable": false,
                "title": "MemberOfOrgIDs",
                "type": "array",
                "userEditable": false,
                "viewable": false,
              },
              "ownerOfOrg": {
                "items": {
                  "notifySelf": false,
                  "properties": {
                    "_ref": {
                      "type": "string",
                    },
                    "_refProperties": {
                      "properties": {
                        "_id": {
                          "propName": "_id",
                          "required": false,
                          "type": "string",
                        },
                      },
                      "type": "object",
                    },
                  },
                  "resourceCollection": [
                    {
                      "label": "Organization",
                      "notify": true,
                      "path": "managed/alpha_organization",
                      "query": {
                        "fields": [
                          "name",
                        ],
                        "queryFilter": "true",
                        "sortKeys": [],
                      },
                    },
                  ],
                  "reversePropertyName": "owners",
                  "reverseRelationship": true,
                  "type": "relationship",
                  "validate": true,
                },
                "policies": [],
                "returnByDefault": false,
                "searchable": false,
                "title": "Organizations I Own",
                "type": "array",
                "userEditable": false,
                "viewable": true,
              },
              "password": {
                "description": "Password",
                "isPersonal": false,
                "isProtected": true,
                "scope": "private",
                "searchable": false,
                "title": "Password",
                "type": "string",
                "usageDescription": null,
                "userEditable": true,
                "viewable": false,
              },
              "postalAddress": {
                "description": "Address 1",
                "isPersonal": true,
                "title": "Address 1",
                "type": "string",
                "usageDescription": null,
                "userEditable": true,
                "viewable": true,
              },
              "postalCode": {
                "description": "Postal Code",
                "isPersonal": false,
                "title": "Postal Code",
                "type": "string",
                "usageDescription": null,
                "userEditable": true,
                "viewable": true,
              },
              "preferences": {
                "description": "Preferences",
                "isPersonal": false,
                "order": [
                  "updates",
                  "marketing",
                ],
                "properties": {
                  "marketing": {
                    "description": "Send me special offers and services",
                    "type": "boolean",
                  },
                  "updates": {
                    "description": "Send me news and updates",
                    "type": "boolean",
                  },
                },
                "searchable": false,
                "title": "Preferences",
                "type": "object",
                "usageDescription": null,
                "userEditable": true,
                "viewable": true,
              },
              "profileImage": {
                "description": "Profile Image",
                "isPersonal": true,
                "searchable": true,
                "title": "Profile Image",
                "type": "string",
                "usageDescription": null,
                "userEditable": true,
                "viewable": false,
              },
              "reports": {
                "description": "Direct Reports",
                "isPersonal": false,
                "items": {
                  "id": "urn:jsonschema:org:forgerock:openidm:managed:api:User:reports:items",
                  "properties": {
                    "_ref": {
                      "description": "References a relationship from a managed object",
                      "type": "string",
                    },
                    "_refProperties": {
                      "description": "Supports metadata within the relationship",
                      "properties": {
                        "_id": {
                          "description": "_refProperties object ID",
                          "type": "string",
                        },
                      },
                      "title": "Direct Reports Items _refProperties",
                      "type": "object",
                    },
                  },
                  "resourceCollection": [
                    {
                      "label": "User",
                      "path": "managed/alpha_user",
                      "query": {
                        "fields": [
                          "userName",
                          "givenName",
                          "sn",
                        ],
                        "queryFilter": "true",
                      },
                    },
                  ],
                  "reversePropertyName": "manager",
                  "reverseRelationship": true,
                  "title": "Direct Reports Items",
                  "type": "relationship",
                  "validate": true,
                },
                "returnByDefault": false,
                "title": "Direct Reports",
                "type": "array",
                "usageDescription": null,
                "userEditable": false,
                "viewable": true,
              },
              "roles": {
                "description": "Provisioning Roles",
                "id": "urn:jsonschema:org:forgerock:openidm:managed:api:User:roles",
                "isPersonal": false,
                "items": {
                  "id": "urn:jsonschema:org:forgerock:openidm:managed:api:User:roles:items",
                  "notifySelf": true,
                  "properties": {
                    "_ref": {
                      "description": "References a relationship from a managed object",
                      "type": "string",
                    },
                    "_refProperties": {
                      "description": "Supports metadata within the relationship",
                      "properties": {
                        "_grantType": {
                          "description": "Grant Type",
                          "label": "Grant Type",
                          "type": "string",
                        },
                        "_id": {
                          "description": "_refProperties object ID",
                          "type": "string",
                        },
                      },
                      "title": "Provisioning Roles Items _refProperties",
                      "type": "object",
                    },
                  },
                  "resourceCollection": [
                    {
                      "conditionalAssociationField": "condition",
                      "label": "Role",
                      "path": "managed/alpha_role",
                      "query": {
                        "fields": [
                          "name",
                        ],
                        "queryFilter": "true",
                      },
                    },
                  ],
                  "reversePropertyName": "members",
                  "reverseRelationship": true,
                  "title": "Provisioning Roles Items",
                  "type": "relationship",
                  "validate": true,
                },
                "relationshipGrantTemporalConstraintsEnforced": true,
                "returnByDefault": false,
                "title": "Provisioning Roles",
                "type": "array",
                "usageDescription": null,
                "userEditable": false,
                "viewable": true,
              },
              "sn": {
                "description": "Last Name",
                "isPersonal": true,
                "searchable": true,
                "title": "Last Name",
                "type": "string",
                "usageDescription": null,
                "userEditable": true,
                "viewable": true,
              },
              "stateProvince": {
                "description": "State/Province",
                "isPersonal": false,
                "title": "State/Province",
                "type": "string",
                "usageDescription": null,
                "userEditable": true,
                "viewable": true,
              },
              "telephoneNumber": {
                "description": "Telephone Number",
                "isPersonal": true,
                "pattern": "^\\+?([0-9\\- \\(\\)])*$",
                "title": "Telephone Number",
                "type": "string",
                "usageDescription": null,
                "userEditable": true,
                "viewable": true,
              },
              "userName": {
                "description": "Username",
                "isPersonal": true,
                "minLength": 1,
                "policies": [
                  {
                    "policyId": "valid-username",
                  },
                  {
                    "params": {
                      "forbiddenChars": [
                        "/",
                      ],
                    },
                    "policyId": "cannot-contain-characters",
                  },
                  {
                    "params": {
                      "minLength": 1,
                    },
                    "policyId": "minimum-length",
                  },
                  {
                    "params": {
                      "maxLength": 255,
                    },
                    "policyId": "maximum-length",
                  },
                ],
                "searchable": true,
                "title": "Username",
                "type": "string",
                "usageDescription": null,
                "userEditable": true,
                "viewable": true,
              },
            },
            "required": [
              "userName",
              "givenName",
              "sn",
              "mail",
            ],
            "title": "Alpha realm - User",
            "type": "object",
          },
        },
        {
          "meta": {
            "property": "_meta",
            "resourceCollection": "managed/bravo_usermeta",
            "trackedProperties": [
              "createDate",
              "lastChanged",
            ],
          },
          "name": "bravo_user",
          "notifications": {},
          "schema": {
            "$schema": "http://json-schema.org/draft-03/schema",
            "icon": "fa-user",
            "id": "urn:jsonschema:org:forgerock:openidm:managed:api:User",
            "mat-icon": "people",
            "order": [
              "_id",
              "userName",
              "password",
              "givenName",
              "cn",
              "sn",
              "mail",
              "profileImage",
              "description",
              "accountStatus",
              "telephoneNumber",
              "postalAddress",
              "city",
              "postalCode",
              "country",
              "stateProvince",
              "roles",
              "manager",
              "authzRoles",
              "reports",
              "effectiveRoles",
              "effectiveAssignments",
              "lastSync",
              "kbaInfo",
              "preferences",
              "consentedMappings",
              "ownerOfOrg",
              "adminOfOrg",
              "memberOfOrg",
              "memberOfOrgIDs",
              "frIndexedString1",
              "frIndexedString2",
              "frIndexedString3",
              "frIndexedString4",
              "frIndexedString5",
              "frUnindexedString1",
              "frUnindexedString2",
              "frUnindexedString3",
              "frUnindexedString4",
              "frUnindexedString5",
              "frIndexedMultivalued1",
              "frIndexedMultivalued2",
              "frIndexedMultivalued3",
              "frIndexedMultivalued4",
              "frIndexedMultivalued5",
              "frUnindexedMultivalued1",
              "frUnindexedMultivalued2",
              "frUnindexedMultivalued3",
              "frUnindexedMultivalued4",
              "frUnindexedMultivalued5",
              "frIndexedDate1",
              "frIndexedDate2",
              "frIndexedDate3",
              "frIndexedDate4",
              "frIndexedDate5",
              "frUnindexedDate1",
              "frUnindexedDate2",
              "frUnindexedDate3",
              "frUnindexedDate4",
              "frUnindexedDate5",
              "frIndexedInteger1",
              "frIndexedInteger2",
              "frIndexedInteger3",
              "frIndexedInteger4",
              "frIndexedInteger5",
              "frUnindexedInteger1",
              "frUnindexedInteger2",
              "frUnindexedInteger3",
              "frUnindexedInteger4",
              "frUnindexedInteger5",
              "assignedDashboard",
              "groups",
              "effectiveGroups",
            ],
            "properties": {
              "_id": {
                "description": "User ID",
                "isPersonal": false,
                "policies": [
                  {
                    "params": {
                      "forbiddenChars": [
                        "/",
                      ],
                    },
                    "policyId": "cannot-contain-characters",
                  },
                ],
                "searchable": false,
                "type": "string",
                "usageDescription": "",
                "userEditable": false,
                "viewable": false,
              },
              "accountStatus": {
                "default": "active",
                "description": "Status",
                "isPersonal": false,
                "searchable": true,
                "title": "Status",
                "type": "string",
                "usageDescription": "",
                "userEditable": false,
                "viewable": true,
              },
              "adminOfOrg": {
                "items": {
                  "notifySelf": false,
                  "properties": {
                    "_ref": {
                      "type": "string",
                    },
                    "_refProperties": {
                      "properties": {
                        "_id": {
                          "propName": "_id",
                          "required": false,
                          "type": "string",
                        },
                      },
                      "type": "object",
                    },
                  },
                  "resourceCollection": [
                    {
                      "label": "Organization",
                      "notify": true,
                      "path": "managed/bravo_organization",
                      "query": {
                        "fields": [
                          "name",
                        ],
                        "queryFilter": "true",
                        "sortKeys": [],
                      },
                    },
                  ],
                  "reversePropertyName": "admins",
                  "reverseRelationship": true,
                  "type": "relationship",
                  "validate": true,
                },
                "policies": [],
                "returnByDefault": false,
                "searchable": false,
                "title": "Organizations I Administer",
                "type": "array",
                "userEditable": false,
                "viewable": true,
              },
              "aliasList": {
                "description": "List of identity aliases used primarily to record social IdP subjects for this user",
                "isVirtual": false,
                "items": {
                  "title": "User Alias Names Items",
                  "type": "string",
                },
                "returnByDefault": false,
                "searchable": false,
                "title": "User Alias Names List",
                "type": "array",
                "userEditable": true,
                "viewable": false,
              },
              "assignedDashboard": {
                "description": "List of items to click on for this user",
                "isVirtual": false,
                "items": {
                  "title": "Assigned Dashboard Items",
                  "type": "string",
                },
                "searchable": false,
                "title": "Assigned Dashboard",
                "type": "array",
                "userEditable": false,
                "viewable": true,
              },
              "authzRoles": {
                "description": "Authorization Roles",
                "id": "urn:jsonschema:org:forgerock:openidm:managed:api:User:authzRoles",
                "isPersonal": false,
                "items": {
                  "id": "urn:jsonschema:org:forgerock:openidm:managed:api:User:authzRoles:items",
                  "properties": {
                    "_ref": {
                      "description": "References a relationship from a managed object",
                      "type": "string",
                    },
                    "_refProperties": {
                      "description": "Supports metadata within the relationship",
                      "properties": {
                        "_id": {
                          "description": "_refProperties object ID",
                          "type": "string",
                        },
                      },
                      "title": "Authorization Roles Items _refProperties",
                      "type": "object",
                    },
                  },
                  "resourceCollection": [
                    {
                      "conditionalAssociationField": "condition",
                      "label": "Internal Role",
                      "path": "internal/role",
                      "query": {
                        "fields": [
                          "name",
                        ],
                        "queryFilter": "true",
                      },
                    },
                  ],
                  "reversePropertyName": "authzMembers",
                  "reverseRelationship": true,
                  "title": "Authorization Roles Items",
                  "type": "relationship",
                  "validate": true,
                },
                "returnByDefault": false,
                "title": "Authorization Roles",
                "type": "array",
                "usageDescription": "",
                "userEditable": false,
                "viewable": true,
              },
              "city": {
                "description": "City",
                "isPersonal": false,
                "title": "City",
                "type": "string",
                "usageDescription": "",
                "userEditable": true,
                "viewable": true,
              },
              "cn": {
                "description": "Common Name",
                "isPersonal": true,
                "isVirtual": true,
                "onStore": {
                  "source": "object.cn || (object.givenName + ' ' + object.sn)",
                  "type": "text/javascript",
                },
                "scope": "private",
                "searchable": false,
                "title": "Common Name",
                "type": "string",
                "userEditable": false,
                "viewable": false,
              },
              "consentedMappings": {
                "description": "Consented Mappings",
                "isPersonal": false,
                "isVirtual": false,
                "items": {
                  "items": {
                    "order": [
                      "mapping",
                      "consentDate",
                    ],
                    "properties": {
                      "consentDate": {
                        "description": "Consent Date",
                        "searchable": true,
                        "title": "Consent Date",
                        "type": "string",
                        "userEditable": true,
                        "viewable": true,
                      },
                      "mapping": {
                        "description": "Mapping",
                        "searchable": true,
                        "title": "Mapping",
                        "type": "string",
                        "userEditable": true,
                        "viewable": true,
                      },
                    },
                    "required": [
                      "mapping",
                      "consentDate",
                    ],
                    "title": "Consented Mappings Item",
                    "type": "object",
                  },
                  "title": "Consented Mappings Items",
                  "type": "array",
                },
                "returnByDefault": false,
                "searchable": false,
                "title": "Consented Mappings",
                "type": "array",
                "usageDescription": "",
                "userEditable": true,
                "viewable": false,
              },
              "country": {
                "description": "Country",
                "isPersonal": false,
                "title": "Country",
                "type": "string",
                "usageDescription": "",
                "userEditable": true,
                "viewable": true,
              },
              "description": {
                "description": "Description",
                "isPersonal": false,
                "searchable": true,
                "title": "Description",
                "type": "string",
                "usageDescription": "",
                "userEditable": true,
                "viewable": true,
              },
              "effectiveAssignments": {
                "description": "Effective Assignments",
                "isPersonal": false,
                "isVirtual": true,
                "items": {
                  "title": "Effective Assignments Items",
                  "type": "object",
                },
                "queryConfig": {
                  "referencedObjectFields": [
                    "*",
                  ],
                  "referencedRelationshipFields": [
                    "roles",
                    "assignments",
                  ],
                },
                "returnByDefault": true,
                "title": "Effective Assignments",
                "type": "array",
                "usageDescription": "",
                "viewable": false,
              },
              "effectiveGroups": {
                "description": "Effective Groups",
                "isPersonal": false,
                "isVirtual": true,
                "items": {
                  "title": "Effective Groups Items",
                  "type": "object",
                },
                "queryConfig": {
                  "referencedRelationshipFields": [
                    "groups",
                  ],
                },
                "returnByDefault": true,
                "title": "Effective Groups",
                "type": "array",
                "usageDescription": "",
                "viewable": false,
              },
              "effectiveRoles": {
                "description": "Effective Roles",
                "isPersonal": false,
                "isVirtual": true,
                "items": {
                  "title": "Effective Roles Items",
                  "type": "object",
                },
                "queryConfig": {
                  "referencedRelationshipFields": [
                    "roles",
                  ],
                },
                "returnByDefault": true,
                "title": "Effective Roles",
                "type": "array",
                "usageDescription": "",
                "viewable": false,
              },
              "frIndexedDate1": {
                "description": "Generic Indexed Date 1",
                "isPersonal": false,
                "title": "Generic Indexed Date 1",
                "type": "string",
                "usageDescription": "",
                "userEditable": true,
                "viewable": true,
              },
              "frIndexedDate2": {
                "description": "Generic Indexed Date 2",
                "isPersonal": false,
                "title": "Generic Indexed Date 2",
                "type": "string",
                "usageDescription": "",
                "userEditable": true,
                "viewable": true,
              },
              "frIndexedDate3": {
                "description": "Generic Indexed Date 3",
                "isPersonal": false,
                "title": "Generic Indexed Date 3",
                "type": "string",
                "usageDescription": "",
                "userEditable": true,
                "viewable": true,
              },
              "frIndexedDate4": {
                "description": "Generic Indexed Date 4",
                "isPersonal": false,
                "title": "Generic Indexed Date 4",
                "type": "string",
                "usageDescription": "",
                "userEditable": true,
                "viewable": true,
              },
              "frIndexedDate5": {
                "description": "Generic Indexed Date 5",
                "isPersonal": false,
                "title": "Generic Indexed Date 5",
                "type": "string",
                "usageDescription": "",
                "userEditable": true,
                "viewable": true,
              },
              "frIndexedInteger1": {
                "description": "Generic Indexed Integer 1",
                "isPersonal": false,
                "title": "Generic Indexed Integer 1",
                "type": "number",
                "usageDescription": "",
                "userEditable": true,
                "viewable": true,
              },
              "frIndexedInteger2": {
                "description": "Generic Indexed Integer 2",
                "isPersonal": false,
                "title": "Generic Indexed Integer 2",
                "type": "number",
                "usageDescription": "",
                "userEditable": true,
                "viewable": true,
              },
              "frIndexedInteger3": {
                "description": "Generic Indexed Integer 3",
                "isPersonal": false,
                "title": "Generic Indexed Integer 3",
                "type": "number",
                "usageDescription": "",
                "userEditable": true,
                "viewable": true,
              },
              "frIndexedInteger4": {
                "description": "Generic Indexed Integer 4",
                "isPersonal": false,
                "title": "Generic Indexed Integer 4",
                "type": "number",
                "usageDescription": "",
                "userEditable": true,
                "viewable": true,
              },
              "frIndexedInteger5": {
                "description": "Generic Indexed Integer 5",
                "isPersonal": false,
                "title": "Generic Indexed Integer 5",
                "type": "number",
                "usageDescription": "",
                "userEditable": true,
                "viewable": true,
              },
              "frIndexedMultivalued1": {
                "description": "Generic Indexed Multivalue 1",
                "isPersonal": false,
                "items": {
                  "type": "string",
                },
                "title": "Generic Indexed Multivalue 1",
                "type": "array",
                "usageDescription": "",
                "userEditable": true,
                "viewable": true,
              },
              "frIndexedMultivalued2": {
                "description": "Generic Indexed Multivalue 2",
                "isPersonal": false,
                "items": {
                  "type": "string",
                },
                "title": "Generic Indexed Multivalue 2",
                "type": "array",
                "usageDescription": "",
                "userEditable": true,
                "viewable": true,
              },
              "frIndexedMultivalued3": {
                "description": "Generic Indexed Multivalue 3",
                "isPersonal": false,
                "items": {
                  "type": "string",
                },
                "title": "Generic Indexed Multivalue 3",
                "type": "array",
                "usageDescription": "",
                "userEditable": true,
                "viewable": true,
              },
              "frIndexedMultivalued4": {
                "description": "Generic Indexed Multivalue 4",
                "isPersonal": false,
                "items": {
                  "type": "string",
                },
                "title": "Generic Indexed Multivalue 4",
                "type": "array",
                "usageDescription": "",
                "userEditable": true,
                "viewable": true,
              },
              "frIndexedMultivalued5": {
                "description": "Generic Indexed Multivalue 5",
                "isPersonal": false,
                "items": {
                  "type": "string",
                },
                "title": "Generic Indexed Multivalue 5",
                "type": "array",
                "usageDescription": "",
                "userEditable": true,
                "viewable": true,
              },
              "frIndexedString1": {
                "description": "Generic Indexed String 1",
                "isPersonal": false,
                "title": "Generic Indexed String 1",
                "type": "string",
                "usageDescription": "",
                "userEditable": true,
                "viewable": true,
              },
              "frIndexedString2": {
                "description": "Generic Indexed String 2",
                "isPersonal": false,
                "title": "Generic Indexed String 2",
                "type": "string",
                "usageDescription": "",
                "userEditable": true,
                "viewable": true,
              },
              "frIndexedString3": {
                "description": "Generic Indexed String 3",
                "isPersonal": false,
                "title": "Generic Indexed String 3",
                "type": "string",
                "usageDescription": "",
                "userEditable": true,
                "viewable": true,
              },
              "frIndexedString4": {
                "description": "Generic Indexed String 4",
                "isPersonal": false,
                "title": "Generic Indexed String 4",
                "type": "string",
                "usageDescription": "",
                "userEditable": true,
                "viewable": true,
              },
              "frIndexedString5": {
                "description": "Generic Indexed String 5",
                "isPersonal": false,
                "title": "Generic Indexed String 5",
                "type": "string",
                "usageDescription": "",
                "userEditable": true,
                "viewable": true,
              },
              "frUnindexedDate1": {
                "description": "Generic Unindexed Date 1",
                "isPersonal": false,
                "title": "Generic Unindexed Date 1",
                "type": "string",
                "usageDescription": "",
                "userEditable": true,
                "viewable": true,
              },
              "frUnindexedDate2": {
                "description": "Generic Unindexed Date 2",
                "isPersonal": false,
                "title": "Generic Unindexed Date 2",
                "type": "string",
                "usageDescription": "",
                "userEditable": true,
                "viewable": true,
              },
              "frUnindexedDate3": {
                "description": "Generic Unindexed Date 3",
                "isPersonal": false,
                "title": "Generic Unindexed Date 3",
                "type": "string",
                "usageDescription": "",
                "userEditable": true,
                "viewable": true,
              },
              "frUnindexedDate4": {
                "description": "Generic Unindexed Date 4",
                "isPersonal": false,
                "title": "Generic Unindexed Date 4",
                "type": "string",
                "usageDescription": "",
                "userEditable": true,
                "viewable": true,
              },
              "frUnindexedDate5": {
                "description": "Generic Unindexed Date 5",
                "isPersonal": false,
                "title": "Generic Unindexed Date 5",
                "type": "string",
                "usageDescription": "",
                "userEditable": true,
                "viewable": true,
              },
              "frUnindexedInteger1": {
                "description": "Generic Unindexed Integer 1",
                "isPersonal": false,
                "title": "Generic Unindexed Integer 1",
                "type": "number",
                "usageDescription": "",
                "userEditable": true,
                "viewable": true,
              },
              "frUnindexedInteger2": {
                "description": "Generic Unindexed Integer 2",
                "isPersonal": false,
                "title": "Generic Unindexed Integer 2",
                "type": "number",
                "usageDescription": "",
                "userEditable": true,
                "viewable": true,
              },
              "frUnindexedInteger3": {
                "description": "Generic Unindexed Integer 3",
                "isPersonal": false,
                "title": "Generic Unindexed Integer 3",
                "type": "number",
                "usageDescription": "",
                "userEditable": true,
                "viewable": true,
              },
              "frUnindexedInteger4": {
                "description": "Generic Unindexed Integer 4",
                "isPersonal": false,
                "title": "Generic Unindexed Integer 4",
                "type": "number",
                "usageDescription": "",
                "userEditable": true,
                "viewable": true,
              },
              "frUnindexedInteger5": {
                "description": "Generic Unindexed Integer 5",
                "isPersonal": false,
                "title": "Generic Unindexed Integer 5",
                "type": "number",
                "usageDescription": "",
                "userEditable": true,
                "viewable": true,
              },
              "frUnindexedMultivalued1": {
                "description": "Generic Unindexed Multivalue 1",
                "isPersonal": false,
                "items": {
                  "type": "string",
                },
                "title": "Generic Unindexed Multivalue 1",
                "type": "array",
                "usageDescription": "",
                "userEditable": true,
                "viewable": true,
              },
              "frUnindexedMultivalued2": {
                "description": "Generic Unindexed Multivalue 2",
                "isPersonal": false,
                "items": {
                  "type": "string",
                },
                "title": "Generic Unindexed Multivalue 2",
                "type": "array",
                "usageDescription": "",
                "userEditable": true,
                "viewable": true,
              },
              "frUnindexedMultivalued3": {
                "description": "Generic Unindexed Multivalue 3",
                "isPersonal": false,
                "items": {
                  "type": "string",
                },
                "title": "Generic Unindexed Multivalue 3",
                "type": "array",
                "usageDescription": "",
                "userEditable": true,
                "viewable": true,
              },
              "frUnindexedMultivalued4": {
                "description": "Generic Unindexed Multivalue 4",
                "isPersonal": false,
                "items": {
                  "type": "string",
                },
                "title": "Generic Unindexed Multivalue 4",
                "type": "array",
                "usageDescription": "",
                "userEditable": true,
                "viewable": true,
              },
              "frUnindexedMultivalued5": {
                "description": "Generic Unindexed Multivalue 5",
                "isPersonal": false,
                "items": {
                  "type": "string",
                },
                "title": "Generic Unindexed Multivalue 5",
                "type": "array",
                "usageDescription": "",
                "userEditable": true,
                "viewable": true,
              },
              "frUnindexedString1": {
                "description": "Generic Unindexed String 1",
                "isPersonal": false,
                "title": "Generic Unindexed String 1",
                "type": "string",
                "usageDescription": "",
                "userEditable": true,
                "viewable": true,
              },
              "frUnindexedString2": {
                "description": "Generic Unindexed String 2",
                "isPersonal": false,
                "title": "Generic Unindexed String 2",
                "type": "string",
                "usageDescription": "",
                "userEditable": true,
                "viewable": true,
              },
              "frUnindexedString3": {
                "description": "Generic Unindexed String 3",
                "isPersonal": false,
                "title": "Generic Unindexed String 3",
                "type": "string",
                "usageDescription": "",
                "userEditable": true,
                "viewable": true,
              },
              "frUnindexedString4": {
                "description": "Generic Unindexed String 4",
                "isPersonal": false,
                "title": "Generic Unindexed String 4",
                "type": "string",
                "usageDescription": "",
                "userEditable": true,
                "viewable": true,
              },
              "frUnindexedString5": {
                "description": "Generic Unindexed String 5",
                "isPersonal": false,
                "title": "Generic Unindexed String 5",
                "type": "string",
                "usageDescription": "",
                "userEditable": true,
                "viewable": true,
              },
              "givenName": {
                "description": "First Name",
                "isPersonal": true,
                "searchable": true,
                "title": "First Name",
                "type": "string",
                "usageDescription": "",
                "userEditable": true,
                "viewable": true,
              },
              "groups": {
                "description": "Groups",
                "id": "urn:jsonschema:org:forgerock:openidm:managed:api:User:groups",
                "isPersonal": false,
                "items": {
                  "id": "urn:jsonschema:org:forgerock:openidm:managed:api:User:groups:items",
                  "notifySelf": true,
                  "properties": {
                    "_ref": {
                      "description": "References a relationship from a managed object",
                      "type": "string",
                    },
                    "_refProperties": {
                      "description": "Supports metadata within the relationship",
                      "properties": {
                        "_grantType": {
                          "description": "Grant Type",
                          "label": "Grant Type",
                          "type": "string",
                        },
                        "_id": {
                          "description": "_refProperties object ID",
                          "type": "string",
                        },
                      },
                      "title": "Groups Items _refProperties",
                      "type": "object",
                    },
                  },
                  "resourceCollection": [
                    {
                      "conditionalAssociationField": "condition",
                      "label": "Group",
                      "path": "managed/bravo_group",
                      "query": {
                        "fields": [],
                        "queryFilter": "true",
                      },
                    },
                  ],
                  "reversePropertyName": "members",
                  "reverseRelationship": true,
                  "title": "Groups Items",
                  "type": "relationship",
                  "validate": true,
                },
                "relationshipGrantTemporalConstraintsEnforced": false,
                "returnByDefault": false,
                "title": "Groups",
                "type": "array",
                "usageDescription": "",
                "userEditable": false,
                "viewable": true,
              },
              "kbaInfo": {
                "description": "KBA Info",
                "isPersonal": true,
                "items": {
                  "order": [
                    "answer",
                    "customQuestion",
                    "questionId",
                  ],
                  "properties": {
                    "answer": {
                      "description": "Answer",
                      "type": "string",
                    },
                    "customQuestion": {
                      "description": "Custom question",
                      "type": "string",
                    },
                    "questionId": {
                      "description": "Question ID",
                      "type": "string",
                    },
                  },
                  "required": [],
                  "title": "KBA Info Items",
                  "type": "object",
                },
                "type": "array",
                "usageDescription": "",
                "userEditable": true,
                "viewable": false,
              },
              "lastSync": {
                "description": "Last Sync timestamp",
                "isPersonal": false,
                "order": [
                  "effectiveAssignments",
                  "timestamp",
                ],
                "properties": {
                  "effectiveAssignments": {
                    "description": "Effective Assignments",
                    "items": {
                      "title": "Effective Assignments Items",
                      "type": "object",
                    },
                    "title": "Effective Assignments",
                    "type": "array",
                  },
                  "timestamp": {
                    "description": "Timestamp",
                    "type": "string",
                  },
                },
                "required": [],
                "scope": "private",
                "searchable": false,
                "title": "Last Sync timestamp",
                "type": "object",
                "usageDescription": "",
                "viewable": false,
              },
              "mail": {
                "description": "Email Address",
                "isPersonal": true,
                "policies": [
                  {
                    "policyId": "valid-email-address-format",
                  },
                ],
                "searchable": true,
                "title": "Email Address",
                "type": "string",
                "usageDescription": "",
                "userEditable": true,
                "viewable": true,
              },
              "manager": {
                "description": "Manager",
                "isPersonal": false,
                "properties": {
                  "_ref": {
                    "description": "References a relationship from a managed object",
                    "type": "string",
                  },
                  "_refProperties": {
                    "description": "Supports metadata within the relationship",
                    "properties": {
                      "_id": {
                        "description": "_refProperties object ID",
                        "type": "string",
                      },
                    },
                    "title": "Manager _refProperties",
                    "type": "object",
                  },
                },
                "resourceCollection": [
                  {
                    "label": "User",
                    "path": "managed/bravo_user",
                    "query": {
                      "fields": [
                        "userName",
                        "givenName",
                        "sn",
                      ],
                      "queryFilter": "true",
                    },
                  },
                ],
                "reversePropertyName": "reports",
                "reverseRelationship": true,
                "searchable": false,
                "title": "Manager",
                "type": "relationship",
                "usageDescription": "",
                "userEditable": false,
                "validate": true,
                "viewable": true,
              },
              "memberOfOrg": {
                "items": {
                  "notifySelf": true,
                  "properties": {
                    "_ref": {
                      "type": "string",
                    },
                    "_refProperties": {
                      "properties": {
                        "_id": {
                          "propName": "_id",
                          "required": false,
                          "type": "string",
                        },
                      },
                      "type": "object",
                    },
                  },
                  "resourceCollection": [
                    {
                      "label": "Organization",
                      "notify": false,
                      "path": "managed/bravo_organization",
                      "query": {
                        "fields": [
                          "name",
                        ],
                        "queryFilter": "true",
                        "sortKeys": [],
                      },
                    },
                  ],
                  "reversePropertyName": "members",
                  "reverseRelationship": true,
                  "type": "relationship",
                  "validate": true,
                },
                "policies": [],
                "returnByDefault": false,
                "searchable": false,
                "title": "Organizations to which I Belong",
                "type": "array",
                "userEditable": false,
                "viewable": true,
              },
              "memberOfOrgIDs": {
                "isVirtual": true,
                "items": {
                  "title": "org identifiers",
                  "type": "string",
                },
                "queryConfig": {
                  "flattenProperties": true,
                  "referencedObjectFields": [
                    "_id",
                    "parentIDs",
                  ],
                  "referencedRelationshipFields": [
                    "memberOfOrg",
                  ],
                },
                "returnByDefault": true,
                "searchable": false,
                "title": "MemberOfOrgIDs",
                "type": "array",
                "userEditable": false,
                "viewable": false,
              },
              "ownerOfOrg": {
                "items": {
                  "notifySelf": false,
                  "properties": {
                    "_ref": {
                      "type": "string",
                    },
                    "_refProperties": {
                      "properties": {
                        "_id": {
                          "propName": "_id",
                          "required": false,
                          "type": "string",
                        },
                      },
                      "type": "object",
                    },
                  },
                  "resourceCollection": [
                    {
                      "label": "Organization",
                      "notify": true,
                      "path": "managed/bravo_organization",
                      "query": {
                        "fields": [
                          "name",
                        ],
                        "queryFilter": "true",
                        "sortKeys": [],
                      },
                    },
                  ],
                  "reversePropertyName": "owners",
                  "reverseRelationship": true,
                  "type": "relationship",
                  "validate": true,
                },
                "policies": [],
                "returnByDefault": false,
                "searchable": false,
                "title": "Organizations I Own",
                "type": "array",
                "userEditable": false,
                "viewable": true,
              },
              "password": {
                "description": "Password",
                "isPersonal": false,
                "isProtected": true,
                "scope": "private",
                "searchable": false,
                "title": "Password",
                "type": "string",
                "usageDescription": "",
                "userEditable": true,
                "viewable": false,
              },
              "postalAddress": {
                "description": "Address 1",
                "isPersonal": true,
                "title": "Address 1",
                "type": "string",
                "usageDescription": "",
                "userEditable": true,
                "viewable": true,
              },
              "postalCode": {
                "description": "Postal Code",
                "isPersonal": false,
                "title": "Postal Code",
                "type": "string",
                "usageDescription": "",
                "userEditable": true,
                "viewable": true,
              },
              "preferences": {
                "description": "Preferences",
                "isPersonal": false,
                "order": [
                  "updates",
                  "marketing",
                ],
                "properties": {
                  "marketing": {
                    "description": "Send me special offers and services",
                    "type": "boolean",
                  },
                  "updates": {
                    "description": "Send me news and updates",
                    "type": "boolean",
                  },
                },
                "required": [],
                "searchable": false,
                "title": "Preferences",
                "type": "object",
                "usageDescription": "",
                "userEditable": true,
                "viewable": true,
              },
              "profileImage": {
                "description": "Profile Image",
                "isPersonal": true,
                "searchable": true,
                "title": "Profile Image",
                "type": "string",
                "usageDescription": "",
                "userEditable": true,
                "viewable": false,
              },
              "reports": {
                "description": "Direct Reports",
                "isPersonal": false,
                "items": {
                  "id": "urn:jsonschema:org:forgerock:openidm:managed:api:User:reports:items",
                  "properties": {
                    "_ref": {
                      "description": "References a relationship from a managed object",
                      "type": "string",
                    },
                    "_refProperties": {
                      "description": "Supports metadata within the relationship",
                      "properties": {
                        "_id": {
                          "description": "_refProperties object ID",
                          "type": "string",
                        },
                      },
                      "title": "Direct Reports Items _refProperties",
                      "type": "object",
                    },
                  },
                  "resourceCollection": [
                    {
                      "label": "User",
                      "path": "managed/bravo_user",
                      "query": {
                        "fields": [
                          "userName",
                          "givenName",
                          "sn",
                        ],
                        "queryFilter": "true",
                      },
                    },
                  ],
                  "reversePropertyName": "manager",
                  "reverseRelationship": true,
                  "title": "Direct Reports Items",
                  "type": "relationship",
                  "validate": true,
                },
                "returnByDefault": false,
                "title": "Direct Reports",
                "type": "array",
                "usageDescription": "",
                "userEditable": false,
                "viewable": true,
              },
              "roles": {
                "description": "Provisioning Roles",
                "id": "urn:jsonschema:org:forgerock:openidm:managed:api:User:roles",
                "isPersonal": false,
                "items": {
                  "id": "urn:jsonschema:org:forgerock:openidm:managed:api:User:roles:items",
                  "notifySelf": true,
                  "properties": {
                    "_ref": {
                      "description": "References a relationship from a managed object",
                      "type": "string",
                    },
                    "_refProperties": {
                      "description": "Supports metadata within the relationship",
                      "properties": {
                        "_grantType": {
                          "description": "Grant Type",
                          "label": "Grant Type",
                          "type": "string",
                        },
                        "_id": {
                          "description": "_refProperties object ID",
                          "type": "string",
                        },
                      },
                      "title": "Provisioning Roles Items _refProperties",
                      "type": "object",
                    },
                  },
                  "resourceCollection": [
                    {
                      "conditionalAssociationField": "condition",
                      "label": "Role",
                      "path": "managed/bravo_role",
                      "query": {
                        "fields": [
                          "name",
                        ],
                        "queryFilter": "true",
                      },
                    },
                  ],
                  "reversePropertyName": "members",
                  "reverseRelationship": true,
                  "title": "Provisioning Roles Items",
                  "type": "relationship",
                  "validate": true,
                },
                "relationshipGrantTemporalConstraintsEnforced": true,
                "returnByDefault": false,
                "title": "Provisioning Roles",
                "type": "array",
                "usageDescription": "",
                "userEditable": false,
                "viewable": true,
              },
              "sn": {
                "description": "Last Name",
                "isPersonal": true,
                "searchable": true,
                "title": "Last Name",
                "type": "string",
                "usageDescription": "",
                "userEditable": true,
                "viewable": true,
              },
              "stateProvince": {
                "description": "State/Province",
                "isPersonal": false,
                "title": "State/Province",
                "type": "string",
                "usageDescription": "",
                "userEditable": true,
                "viewable": true,
              },
              "telephoneNumber": {
                "description": "Telephone Number",
                "isPersonal": true,
                "pattern": "^\\+?([0-9\\- \\(\\)])*$",
                "title": "Telephone Number",
                "type": "string",
                "usageDescription": "",
                "userEditable": true,
                "viewable": true,
              },
              "userName": {
                "description": "Username",
                "isPersonal": true,
                "minLength": 1,
                "policies": [
                  {
                    "policyId": "valid-username",
                  },
                  {
                    "params": {
                      "forbiddenChars": [
                        "/",
                      ],
                    },
                    "policyId": "cannot-contain-characters",
                  },
                  {
                    "params": {
                      "minLength": 1,
                    },
                    "policyId": "minimum-length",
                  },
                  {
                    "params": {
                      "maxLength": 255,
                    },
                    "policyId": "maximum-length",
                  },
                ],
                "searchable": true,
                "title": "Username",
                "type": "string",
                "usageDescription": "",
                "userEditable": true,
                "viewable": true,
              },
            },
            "required": [
              "userName",
              "givenName",
              "sn",
              "mail",
            ],
            "title": "Bravo realm - User",
            "type": "object",
            "viewable": true,
          },
        },
        {
          "name": "alpha_role",
          "schema": {
            "$schema": "http://forgerock.org/json-schema#",
            "description": "",
            "icon": "fa-check-square-o",
            "id": "urn:jsonschema:org:forgerock:openidm:managed:api:Role",
            "mat-icon": "assignment_ind",
            "order": [
              "_id",
              "name",
              "description",
              "members",
              "assignments",
              "condition",
              "temporalConstraints",
            ],
            "properties": {
              "_id": {
                "description": "Role ID",
                "searchable": false,
                "title": "Name",
                "type": "string",
                "viewable": false,
              },
              "assignments": {
                "description": "Managed Assignments",
                "items": {
                  "id": "urn:jsonschema:org:forgerock:openidm:managed:api:Role:assignments:items",
                  "notifySelf": true,
                  "properties": {
                    "_ref": {
                      "description": "References a relationship from a managed object",
                      "type": "string",
                    },
                    "_refProperties": {
                      "description": "Supports metadata within the relationship",
                      "properties": {
                        "_id": {
                          "description": "_refProperties object ID",
                          "type": "string",
                        },
                      },
                      "title": "Managed Assignments Items _refProperties",
                      "type": "object",
                    },
                  },
                  "resourceCollection": [
                    {
                      "label": "Assignment",
                      "path": "managed/alpha_assignment",
                      "query": {
                        "fields": [
                          "name",
                        ],
                        "queryFilter": "true",
                      },
                    },
                  ],
                  "reversePropertyName": "roles",
                  "reverseRelationship": true,
                  "title": "Managed Assignments Items",
                  "type": "relationship",
                  "validate": true,
                },
                "notifyRelationships": [
                  "members",
                ],
                "returnByDefault": false,
                "title": "Managed Assignments",
                "type": "array",
                "viewable": true,
              },
              "condition": {
                "description": "A conditional filter for this role",
                "isConditional": true,
                "searchable": false,
                "title": "Condition",
                "type": "string",
                "viewable": false,
              },
              "description": {
                "description": "The role description, used for display purposes.",
                "searchable": true,
                "title": "Description",
                "type": "string",
                "viewable": true,
              },
              "members": {
                "description": "Role Members",
                "items": {
                  "id": "urn:jsonschema:org:forgerock:openidm:managed:api:Role:members:items",
                  "properties": {
                    "_ref": {
                      "description": "References a relationship from a managed object",
                      "type": "string",
                    },
                    "_refProperties": {
                      "description": "Supports metadata within the relationship",
                      "properties": {
                        "_grantType": {
                          "description": "Grant Type",
                          "label": "Grant Type",
                          "type": "string",
                        },
                        "_id": {
                          "description": "_refProperties object ID",
                          "type": "string",
                        },
                      },
                      "title": "Role Members Items _refProperties",
                      "type": "object",
                    },
                  },
                  "resourceCollection": [
                    {
                      "conditionalAssociation": true,
                      "label": "User",
                      "notify": true,
                      "path": "managed/alpha_user",
                      "query": {
                        "fields": [
                          "userName",
                          "givenName",
                          "sn",
                        ],
                        "queryFilter": "true",
                      },
                    },
                  ],
                  "reversePropertyName": "roles",
                  "reverseRelationship": true,
                  "title": "Role Members Items",
                  "type": "relationship",
                  "validate": true,
                },
                "relationshipGrantTemporalConstraintsEnforced": true,
                "returnByDefault": false,
                "title": "Role Members",
                "type": "array",
                "viewable": true,
              },
              "name": {
                "description": "The role name, used for display purposes.",
                "searchable": true,
                "title": "Name",
                "type": "string",
                "viewable": true,
              },
              "temporalConstraints": {
                "description": "An array of temporal constraints for a role",
                "isTemporalConstraint": true,
                "items": {
                  "order": [
                    "duration",
                  ],
                  "properties": {
                    "duration": {
                      "description": "Duration",
                      "type": "string",
                    },
                  },
                  "required": [
                    "duration",
                  ],
                  "title": "Temporal Constraints Items",
                  "type": "object",
                },
                "notifyRelationships": [
                  "members",
                ],
                "returnByDefault": true,
                "title": "Temporal Constraints",
                "type": "array",
                "viewable": false,
              },
            },
            "required": [
              "name",
            ],
            "title": "Alpha realm - Role",
            "type": "object",
          },
        },
        {
          "name": "bravo_role",
          "schema": {
            "$schema": "http://forgerock.org/json-schema#",
            "description": "",
            "icon": "fa-check-square-o",
            "id": "urn:jsonschema:org:forgerock:openidm:managed:api:Role",
            "mat-icon": "assignment_ind",
            "order": [
              "_id",
              "name",
              "description",
              "members",
              "assignments",
              "condition",
              "temporalConstraints",
            ],
            "properties": {
              "_id": {
                "description": "Role ID",
                "searchable": false,
                "title": "Name",
                "type": "string",
                "viewable": false,
              },
              "assignments": {
                "description": "Managed Assignments",
                "items": {
                  "id": "urn:jsonschema:org:forgerock:openidm:managed:api:Role:assignments:items",
                  "notifySelf": true,
                  "properties": {
                    "_ref": {
                      "description": "References a relationship from a managed object",
                      "type": "string",
                    },
                    "_refProperties": {
                      "description": "Supports metadata within the relationship",
                      "properties": {
                        "_id": {
                          "description": "_refProperties object ID",
                          "type": "string",
                        },
                      },
                      "title": "Managed Assignments Items _refProperties",
                      "type": "object",
                    },
                  },
                  "resourceCollection": [
                    {
                      "label": "Assignment",
                      "path": "managed/bravo_assignment",
                      "query": {
                        "fields": [
                          "name",
                        ],
                        "queryFilter": "true",
                      },
                    },
                  ],
                  "reversePropertyName": "roles",
                  "reverseRelationship": true,
                  "title": "Managed Assignments Items",
                  "type": "relationship",
                  "validate": true,
                },
                "notifyRelationships": [
                  "members",
                ],
                "returnByDefault": false,
                "title": "Managed Assignments",
                "type": "array",
                "viewable": true,
              },
              "condition": {
                "description": "A conditional filter for this role",
                "isConditional": true,
                "searchable": false,
                "title": "Condition",
                "type": "string",
                "viewable": false,
              },
              "description": {
                "description": "The role description, used for display purposes.",
                "searchable": true,
                "title": "Description",
                "type": "string",
                "viewable": true,
              },
              "members": {
                "description": "Role Members",
                "items": {
                  "id": "urn:jsonschema:org:forgerock:openidm:managed:api:Role:members:items",
                  "properties": {
                    "_ref": {
                      "description": "References a relationship from a managed object",
                      "type": "string",
                    },
                    "_refProperties": {
                      "description": "Supports metadata within the relationship",
                      "properties": {
                        "_grantType": {
                          "description": "Grant Type",
                          "label": "Grant Type",
                          "type": "string",
                        },
                        "_id": {
                          "description": "_refProperties object ID",
                          "type": "string",
                        },
                      },
                      "title": "Role Members Items _refProperties",
                      "type": "object",
                    },
                  },
                  "resourceCollection": [
                    {
                      "conditionalAssociation": true,
                      "label": "User",
                      "notify": true,
                      "path": "managed/bravo_user",
                      "query": {
                        "fields": [
                          "userName",
                          "givenName",
                          "sn",
                        ],
                        "queryFilter": "true",
                      },
                    },
                  ],
                  "reversePropertyName": "roles",
                  "reverseRelationship": true,
                  "title": "Role Members Items",
                  "type": "relationship",
                  "validate": true,
                },
                "relationshipGrantTemporalConstraintsEnforced": true,
                "returnByDefault": false,
                "title": "Role Members",
                "type": "array",
                "viewable": true,
              },
              "name": {
                "description": "The role name, used for display purposes.",
                "searchable": true,
                "title": "Name",
                "type": "string",
                "viewable": true,
              },
              "temporalConstraints": {
                "description": "An array of temporal constraints for a role",
                "isTemporalConstraint": true,
                "items": {
                  "order": [
                    "duration",
                  ],
                  "properties": {
                    "duration": {
                      "description": "Duration",
                      "type": "string",
                    },
                  },
                  "required": [
                    "duration",
                  ],
                  "title": "Temporal Constraints Items",
                  "type": "object",
                },
                "notifyRelationships": [
                  "members",
                ],
                "returnByDefault": true,
                "title": "Temporal Constraints",
                "type": "array",
                "viewable": false,
              },
            },
            "required": [
              "name",
            ],
            "title": "Bravo realm - Role",
            "type": "object",
          },
        },
        {
          "name": "alpha_assignment",
          "schema": {
            "$schema": "http://forgerock.org/json-schema#",
            "description": "A role assignment",
            "icon": "fa-key",
            "id": "urn:jsonschema:org:forgerock:openidm:managed:api:Assignment",
            "mat-icon": "vpn_key",
            "order": [
              "_id",
              "name",
              "description",
              "mapping",
              "attributes",
              "linkQualifiers",
              "roles",
            ],
            "properties": {
              "_id": {
                "description": "The assignment ID",
                "searchable": false,
                "title": "Name",
                "type": "string",
                "viewable": false,
              },
              "attributes": {
                "description": "The attributes operated on by this assignment.",
                "items": {
                  "order": [
                    "assignmentOperation",
                    "unassignmentOperation",
                    "name",
                    "value",
                  ],
                  "properties": {
                    "assignmentOperation": {
                      "description": "Assignment operation",
                      "type": "string",
                    },
                    "name": {
                      "description": "Name",
                      "type": "string",
                    },
                    "unassignmentOperation": {
                      "description": "Unassignment operation",
                      "type": "string",
                    },
                    "value": {
                      "description": "Value",
                      "type": "string",
                    },
                  },
                  "required": [],
                  "title": "Assignment Attributes Items",
                  "type": "object",
                },
                "notifyRelationships": [
                  "roles",
                ],
                "title": "Assignment Attributes",
                "type": "array",
                "viewable": true,
              },
              "description": {
                "description": "The assignment description, used for display purposes.",
                "searchable": true,
                "title": "Description",
                "type": "string",
                "viewable": true,
              },
              "linkQualifiers": {
                "description": "Conditional link qualifiers to restrict this assignment to.",
                "items": {
                  "title": "Link Qualifiers Items",
                  "type": "string",
                },
                "title": "Link Qualifiers",
                "type": "array",
                "viewable": true,
              },
              "mapping": {
                "description": "The name of the mapping this assignment applies to",
                "policies": [
                  {
                    "policyId": "mapping-exists",
                  },
                ],
                "searchable": true,
                "title": "Mapping",
                "type": "string",
                "viewable": true,
              },
              "name": {
                "description": "The assignment name, used for display purposes.",
                "searchable": true,
                "title": "Name",
                "type": "string",
                "viewable": true,
              },
              "roles": {
                "description": "Managed Roles",
                "items": {
                  "id": "urn:jsonschema:org:forgerock:openidm:managed:api:Assignment:roles:items",
                  "properties": {
                    "_ref": {
                      "description": "References a relationship from a managed object",
                      "type": "string",
                    },
                    "_refProperties": {
                      "description": "Supports metadata within the relationship",
                      "properties": {
                        "_id": {
                          "description": "_refProperties object ID",
                          "type": "string",
                        },
                      },
                      "title": "Managed Roles Items _refProperties",
                      "type": "object",
                    },
                  },
                  "resourceCollection": [
                    {
                      "label": "Role",
                      "notify": true,
                      "path": "managed/alpha_role",
                      "query": {
                        "fields": [
                          "name",
                        ],
                        "queryFilter": "true",
                      },
                    },
                  ],
                  "reversePropertyName": "assignments",
                  "reverseRelationship": true,
                  "title": "Managed Roles Items",
                  "type": "relationship",
                  "validate": true,
                },
                "returnByDefault": false,
                "title": "Managed Roles",
                "type": "array",
                "userEditable": false,
                "viewable": true,
              },
            },
            "required": [
              "name",
              "description",
              "mapping",
            ],
            "title": "Alpha realm - Assignment",
            "type": "object",
          },
        },
        {
          "name": "bravo_assignment",
          "schema": {
            "$schema": "http://forgerock.org/json-schema#",
            "description": "A role assignment",
            "icon": "fa-key",
            "id": "urn:jsonschema:org:forgerock:openidm:managed:api:Assignment",
            "mat-icon": "vpn_key",
            "order": [
              "_id",
              "name",
              "description",
              "mapping",
              "attributes",
              "linkQualifiers",
              "roles",
            ],
            "properties": {
              "_id": {
                "description": "The assignment ID",
                "searchable": false,
                "title": "Name",
                "type": "string",
                "viewable": false,
              },
              "attributes": {
                "description": "The attributes operated on by this assignment.",
                "items": {
                  "order": [
                    "assignmentOperation",
                    "unassignmentOperation",
                    "name",
                    "value",
                  ],
                  "properties": {
                    "assignmentOperation": {
                      "description": "Assignment operation",
                      "type": "string",
                    },
                    "name": {
                      "description": "Name",
                      "type": "string",
                    },
                    "unassignmentOperation": {
                      "description": "Unassignment operation",
                      "type": "string",
                    },
                    "value": {
                      "description": "Value",
                      "type": "string",
                    },
                  },
                  "required": [],
                  "title": "Assignment Attributes Items",
                  "type": "object",
                },
                "notifyRelationships": [
                  "roles",
                ],
                "title": "Assignment Attributes",
                "type": "array",
                "viewable": true,
              },
              "description": {
                "description": "The assignment description, used for display purposes.",
                "searchable": true,
                "title": "Description",
                "type": "string",
                "viewable": true,
              },
              "linkQualifiers": {
                "description": "Conditional link qualifiers to restrict this assignment to.",
                "items": {
                  "title": "Link Qualifiers Items",
                  "type": "string",
                },
                "title": "Link Qualifiers",
                "type": "array",
                "viewable": true,
              },
              "mapping": {
                "description": "The name of the mapping this assignment applies to",
                "policies": [
                  {
                    "policyId": "mapping-exists",
                  },
                ],
                "searchable": true,
                "title": "Mapping",
                "type": "string",
                "viewable": true,
              },
              "name": {
                "description": "The assignment name, used for display purposes.",
                "searchable": true,
                "title": "Name",
                "type": "string",
                "viewable": true,
              },
              "roles": {
                "description": "Managed Roles",
                "items": {
                  "id": "urn:jsonschema:org:forgerock:openidm:managed:api:Assignment:roles:items",
                  "properties": {
                    "_ref": {
                      "description": "References a relationship from a managed object",
                      "type": "string",
                    },
                    "_refProperties": {
                      "description": "Supports metadata within the relationship",
                      "properties": {
                        "_id": {
                          "description": "_refProperties object ID",
                          "type": "string",
                        },
                      },
                      "title": "Managed Roles Items _refProperties",
                      "type": "object",
                    },
                  },
                  "resourceCollection": [
                    {
                      "label": "Role",
                      "notify": true,
                      "path": "managed/bravo_role",
                      "query": {
                        "fields": [
                          "name",
                        ],
                        "queryFilter": "true",
                      },
                    },
                  ],
                  "reversePropertyName": "assignments",
                  "reverseRelationship": true,
                  "title": "Managed Roles Items",
                  "type": "relationship",
                  "validate": true,
                },
                "returnByDefault": false,
                "title": "Managed Roles",
                "type": "array",
                "userEditable": false,
                "viewable": true,
              },
            },
            "required": [
              "name",
              "description",
              "mapping",
            ],
            "title": "Bravo realm - Assignment",
            "type": "object",
          },
        },
        {
          "name": "alpha_organization",
          "schema": {
            "$schema": "http://forgerock.org/json-schema#",
            "description": "An organization or tenant, whose resources are managed by organizational admins.",
            "icon": "fa-building",
            "order": [
              "name",
              "description",
              "owners",
              "admins",
              "members",
              "parent",
              "children",
              "adminIDs",
              "ownerIDs",
              "parentAdminIDs",
              "parentOwnerIDs",
              "parentIDs",
              "test",
            ],
            "properties": {
              "adminIDs": {
                "isVirtual": true,
                "items": {
                  "title": "admin ids",
                  "type": "string",
                },
                "queryConfig": {
                  "flattenProperties": true,
                  "referencedObjectFields": [
                    "_id",
                  ],
                  "referencedRelationshipFields": [
                    "admins",
                  ],
                },
                "returnByDefault": true,
                "searchable": false,
                "title": "Admin user ids",
                "type": "array",
                "userEditable": false,
                "viewable": false,
              },
              "admins": {
                "items": {
                  "notifySelf": true,
                  "properties": {
                    "_ref": {
                      "type": "string",
                    },
                    "_refProperties": {
                      "properties": {
                        "_id": {
                          "propName": "_id",
                          "required": false,
                          "type": "string",
                        },
                      },
                      "type": "object",
                    },
                  },
                  "resourceCollection": [
                    {
                      "label": "User",
                      "notify": false,
                      "path": "managed/alpha_user",
                      "query": {
                        "fields": [
                          "userName",
                          "givenName",
                          "sn",
                        ],
                        "queryFilter": "true",
                        "sortKeys": [],
                      },
                    },
                  ],
                  "reversePropertyName": "adminOfOrg",
                  "reverseRelationship": true,
                  "type": "relationship",
                  "validate": true,
                },
                "notifyRelationships": [
                  "children",
                ],
                "returnByDefault": false,
                "searchable": false,
                "title": "Administrators",
                "type": "array",
                "userEditable": false,
                "viewable": true,
              },
              "children": {
                "description": "Child Organizations",
                "items": {
                  "notifySelf": true,
                  "properties": {
                    "_ref": {
                      "type": "string",
                    },
                    "_refProperties": {
                      "properties": {
                        "_id": {
                          "propName": "_id",
                          "required": false,
                          "type": "string",
                        },
                      },
                      "type": "object",
                    },
                  },
                  "resourceCollection": [
                    {
                      "label": "Organization",
                      "notify": true,
                      "path": "managed/alpha_organization",
                      "query": {
                        "fields": [
                          "name",
                          "description",
                        ],
                        "queryFilter": "true",
                        "sortKeys": [],
                      },
                    },
                  ],
                  "reversePropertyName": "parent",
                  "reverseRelationship": true,
                  "type": "relationship",
                  "validate": true,
                },
                "policies": [],
                "returnByDefault": false,
                "searchable": false,
                "title": "Child Organizations",
                "type": "array",
                "userEditable": false,
                "viewable": false,
              },
              "description": {
                "searchable": true,
                "title": "Description",
                "type": "string",
                "userEditable": true,
                "viewable": true,
              },
              "members": {
                "items": {
                  "notifySelf": false,
                  "properties": {
                    "_ref": {
                      "type": "string",
                    },
                    "_refProperties": {
                      "properties": {
                        "_id": {
                          "propName": "_id",
                          "required": false,
                          "type": "string",
                        },
                      },
                      "type": "object",
                    },
                  },
                  "resourceCollection": [
                    {
                      "label": "User",
                      "notify": true,
                      "path": "managed/alpha_user",
                      "query": {
                        "fields": [
                          "userName",
                          "givenName",
                          "sn",
                        ],
                        "queryFilter": "true",
                        "sortKeys": [],
                      },
                    },
                  ],
                  "reversePropertyName": "memberOfOrg",
                  "reverseRelationship": true,
                  "type": "relationship",
                  "validate": true,
                },
                "returnByDefault": false,
                "searchable": false,
                "title": "Members",
                "type": "array",
                "userEditable": false,
                "viewable": true,
              },
              "name": {
                "searchable": true,
                "title": "Name",
                "type": "string",
                "userEditable": true,
                "viewable": true,
              },
              "ownerIDs": {
                "isVirtual": true,
                "items": {
                  "title": "owner ids",
                  "type": "string",
                },
                "queryConfig": {
                  "flattenProperties": true,
                  "referencedObjectFields": [
                    "_id",
                  ],
                  "referencedRelationshipFields": [
                    "owners",
                  ],
                },
                "returnByDefault": true,
                "searchable": false,
                "title": "Owner user ids",
                "type": "array",
                "userEditable": false,
                "viewable": false,
              },
              "owners": {
                "items": {
                  "notifySelf": true,
                  "properties": {
                    "_ref": {
                      "type": "string",
                    },
                    "_refProperties": {
                      "properties": {
                        "_id": {
                          "propName": "_id",
                          "required": false,
                          "type": "string",
                        },
                      },
                      "type": "object",
                    },
                  },
                  "resourceCollection": [
                    {
                      "label": "User",
                      "notify": false,
                      "path": "managed/alpha_user",
                      "query": {
                        "fields": [
                          "userName",
                          "givenName",
                          "sn",
                        ],
                        "queryFilter": "true",
                        "sortKeys": [],
                      },
                    },
                  ],
                  "reversePropertyName": "ownerOfOrg",
                  "reverseRelationship": true,
                  "type": "relationship",
                  "validate": true,
                },
                "notifyRelationships": [
                  "children",
                ],
                "returnByDefault": false,
                "searchable": false,
                "title": "Owner",
                "type": "array",
                "userEditable": false,
                "viewable": true,
              },
              "parent": {
                "description": "Parent Organization",
                "notifyRelationships": [
                  "children",
                  "members",
                ],
                "notifySelf": true,
                "properties": {
                  "_ref": {
                    "type": "string",
                  },
                  "_refProperties": {
                    "properties": {
                      "_id": {
                        "propName": "_id",
                        "required": false,
                        "type": "string",
                      },
                    },
                    "type": "object",
                  },
                },
                "resourceCollection": [
                  {
                    "label": "Organization",
                    "notify": false,
                    "path": "managed/alpha_organization",
                    "query": {
                      "fields": [
                        "name",
                        "description",
                      ],
                      "queryFilter": "true",
                      "sortKeys": [],
                    },
                  },
                ],
                "returnByDefault": false,
                "reversePropertyName": "children",
                "reverseRelationship": true,
                "searchable": false,
                "title": "Parent Organization",
                "type": "relationship",
                "userEditable": false,
                "validate": true,
                "viewable": true,
              },
              "parentAdminIDs": {
                "isVirtual": true,
                "items": {
                  "title": "user ids of parent admins",
                  "type": "string",
                },
                "queryConfig": {
                  "flattenProperties": true,
                  "referencedObjectFields": [
                    "adminIDs",
                    "parentAdminIDs",
                  ],
                  "referencedRelationshipFields": [
                    "parent",
                  ],
                },
                "returnByDefault": true,
                "searchable": false,
                "title": "user ids of parent admins",
                "type": "array",
                "userEditable": false,
                "viewable": false,
              },
              "parentIDs": {
                "isVirtual": true,
                "items": {
                  "title": "parent org ids",
                  "type": "string",
                },
                "queryConfig": {
                  "flattenProperties": true,
                  "referencedObjectFields": [
                    "_id",
                    "parentIDs",
                  ],
                  "referencedRelationshipFields": [
                    "parent",
                  ],
                },
                "returnByDefault": true,
                "searchable": false,
                "title": "parent org ids",
                "type": "array",
                "userEditable": false,
                "viewable": false,
              },
              "parentOwnerIDs": {
                "isVirtual": true,
                "items": {
                  "title": "user ids of parent owners",
                  "type": "string",
                },
                "queryConfig": {
                  "flattenProperties": true,
                  "referencedObjectFields": [
                    "ownerIDs",
                    "parentOwnerIDs",
                  ],
                  "referencedRelationshipFields": [
                    "parent",
                  ],
                },
                "returnByDefault": true,
                "searchable": false,
                "title": "user ids of parent owners",
                "type": "array",
                "userEditable": false,
                "viewable": false,
              },
              "test": {
                "searchable": true,
                "title": "test",
                "type": "string",
                "userEditable": true,
                "viewable": true,
              },
            },
            "required": [
              "name",
            ],
            "title": "Alpha realm - Organization",
            "type": "object",
          },
        },
        {
          "name": "bravo_organization",
          "schema": {
            "$schema": "http://forgerock.org/json-schema#",
            "description": "An organization or tenant, whose resources are managed by organizational admins.",
            "icon": "fa-building",
            "order": [
              "name",
              "description",
              "owners",
              "admins",
              "members",
              "parent",
              "children",
              "adminIDs",
              "ownerIDs",
              "parentAdminIDs",
              "parentOwnerIDs",
              "parentIDs",
            ],
            "properties": {
              "adminIDs": {
                "isVirtual": true,
                "items": {
                  "title": "admin ids",
                  "type": "string",
                },
                "queryConfig": {
                  "flattenProperties": true,
                  "referencedObjectFields": [
                    "_id",
                  ],
                  "referencedRelationshipFields": [
                    "admins",
                  ],
                },
                "returnByDefault": true,
                "searchable": false,
                "title": "Admin user ids",
                "type": "array",
                "userEditable": false,
                "viewable": false,
              },
              "admins": {
                "items": {
                  "notifySelf": true,
                  "properties": {
                    "_ref": {
                      "type": "string",
                    },
                    "_refProperties": {
                      "properties": {
                        "_id": {
                          "propName": "_id",
                          "required": false,
                          "type": "string",
                        },
                      },
                      "type": "object",
                    },
                  },
                  "resourceCollection": [
                    {
                      "label": "User",
                      "notify": false,
                      "path": "managed/bravo_user",
                      "query": {
                        "fields": [
                          "userName",
                          "givenName",
                          "sn",
                        ],
                        "queryFilter": "true",
                        "sortKeys": [],
                      },
                    },
                  ],
                  "reversePropertyName": "adminOfOrg",
                  "reverseRelationship": true,
                  "type": "relationship",
                  "validate": true,
                },
                "notifyRelationships": [
                  "children",
                ],
                "returnByDefault": false,
                "searchable": false,
                "title": "Administrators",
                "type": "array",
                "userEditable": false,
                "viewable": true,
              },
              "children": {
                "description": "Child Organizations",
                "items": {
                  "notifySelf": true,
                  "properties": {
                    "_ref": {
                      "type": "string",
                    },
                    "_refProperties": {
                      "properties": {
                        "_id": {
                          "propName": "_id",
                          "required": false,
                          "type": "string",
                        },
                      },
                      "type": "object",
                    },
                  },
                  "resourceCollection": [
                    {
                      "label": "Organization",
                      "notify": true,
                      "path": "managed/bravo_organization",
                      "query": {
                        "fields": [
                          "name",
                          "description",
                        ],
                        "queryFilter": "true",
                        "sortKeys": [],
                      },
                    },
                  ],
                  "reversePropertyName": "parent",
                  "reverseRelationship": true,
                  "type": "relationship",
                  "validate": true,
                },
                "policies": [],
                "returnByDefault": false,
                "searchable": false,
                "title": "Child Organizations",
                "type": "array",
                "userEditable": false,
                "viewable": false,
              },
              "description": {
                "searchable": true,
                "title": "Description",
                "type": "string",
                "userEditable": true,
                "viewable": true,
              },
              "members": {
                "items": {
                  "notifySelf": false,
                  "properties": {
                    "_ref": {
                      "type": "string",
                    },
                    "_refProperties": {
                      "properties": {
                        "_id": {
                          "propName": "_id",
                          "required": false,
                          "type": "string",
                        },
                      },
                      "type": "object",
                    },
                  },
                  "resourceCollection": [
                    {
                      "label": "User",
                      "notify": true,
                      "path": "managed/bravo_user",
                      "query": {
                        "fields": [
                          "userName",
                          "givenName",
                          "sn",
                        ],
                        "queryFilter": "true",
                        "sortKeys": [],
                      },
                    },
                  ],
                  "reversePropertyName": "memberOfOrg",
                  "reverseRelationship": true,
                  "type": "relationship",
                  "validate": true,
                },
                "returnByDefault": false,
                "searchable": false,
                "title": "Members",
                "type": "array",
                "userEditable": false,
                "viewable": true,
              },
              "name": {
                "searchable": true,
                "title": "Name",
                "type": "string",
                "userEditable": true,
                "viewable": true,
              },
              "ownerIDs": {
                "isVirtual": true,
                "items": {
                  "title": "owner ids",
                  "type": "string",
                },
                "queryConfig": {
                  "flattenProperties": true,
                  "referencedObjectFields": [
                    "_id",
                  ],
                  "referencedRelationshipFields": [
                    "owners",
                  ],
                },
                "returnByDefault": true,
                "searchable": false,
                "title": "Owner user ids",
                "type": "array",
                "userEditable": false,
                "viewable": false,
              },
              "owners": {
                "items": {
                  "notifySelf": true,
                  "properties": {
                    "_ref": {
                      "type": "string",
                    },
                    "_refProperties": {
                      "properties": {
                        "_id": {
                          "propName": "_id",
                          "required": false,
                          "type": "string",
                        },
                      },
                      "type": "object",
                    },
                  },
                  "resourceCollection": [
                    {
                      "label": "User",
                      "notify": false,
                      "path": "managed/bravo_user",
                      "query": {
                        "fields": [
                          "userName",
                          "givenName",
                          "sn",
                        ],
                        "queryFilter": "true",
                        "sortKeys": [],
                      },
                    },
                  ],
                  "reversePropertyName": "ownerOfOrg",
                  "reverseRelationship": true,
                  "type": "relationship",
                  "validate": true,
                },
                "notifyRelationships": [
                  "children",
                ],
                "returnByDefault": false,
                "searchable": false,
                "title": "Owner",
                "type": "array",
                "userEditable": false,
                "viewable": true,
              },
              "parent": {
                "description": "Parent Organization",
                "notifyRelationships": [
                  "children",
                  "members",
                ],
                "notifySelf": true,
                "properties": {
                  "_ref": {
                    "type": "string",
                  },
                  "_refProperties": {
                    "properties": {
                      "_id": {
                        "propName": "_id",
                        "required": false,
                        "type": "string",
                      },
                    },
                    "type": "object",
                  },
                },
                "resourceCollection": [
                  {
                    "label": "Organization",
                    "notify": false,
                    "path": "managed/bravo_organization",
                    "query": {
                      "fields": [
                        "name",
                        "description",
                      ],
                      "queryFilter": "true",
                      "sortKeys": [],
                    },
                  },
                ],
                "returnByDefault": false,
                "reversePropertyName": "children",
                "reverseRelationship": true,
                "searchable": false,
                "title": "Parent Organization",
                "type": "relationship",
                "userEditable": false,
                "validate": true,
                "viewable": true,
              },
              "parentAdminIDs": {
                "isVirtual": true,
                "items": {
                  "title": "user ids of parent admins",
                  "type": "string",
                },
                "queryConfig": {
                  "flattenProperties": true,
                  "referencedObjectFields": [
                    "adminIDs",
                    "parentAdminIDs",
                  ],
                  "referencedRelationshipFields": [
                    "parent",
                  ],
                },
                "returnByDefault": true,
                "searchable": false,
                "title": "user ids of parent admins",
                "type": "array",
                "userEditable": false,
                "viewable": false,
              },
              "parentIDs": {
                "isVirtual": true,
                "items": {
                  "title": "parent org ids",
                  "type": "string",
                },
                "queryConfig": {
                  "flattenProperties": true,
                  "referencedObjectFields": [
                    "_id",
                    "parentIDs",
                  ],
                  "referencedRelationshipFields": [
                    "parent",
                  ],
                },
                "returnByDefault": true,
                "searchable": false,
                "title": "parent org ids",
                "type": "array",
                "userEditable": false,
                "viewable": false,
              },
              "parentOwnerIDs": {
                "isVirtual": true,
                "items": {
                  "title": "user ids of parent owners",
                  "type": "string",
                },
                "queryConfig": {
                  "flattenProperties": true,
                  "referencedObjectFields": [
                    "ownerIDs",
                    "parentOwnerIDs",
                  ],
                  "referencedRelationshipFields": [
                    "parent",
                  ],
                },
                "returnByDefault": true,
                "searchable": false,
                "title": "user ids of parent owners",
                "type": "array",
                "userEditable": false,
                "viewable": false,
              },
            },
            "required": [
              "name",
            ],
            "title": "Bravo realm - Organization",
            "type": "object",
          },
        },
        {
          "name": "alpha_group",
          "schema": {
            "$schema": "http://forgerock.org/json-schema#",
            "icon": "fa-group",
            "id": "urn:jsonschema:org:forgerock:openidm:managed:api:Group",
            "mat-icon": "group",
            "order": [
              "_id",
              "name",
              "description",
              "condition",
              "members",
            ],
            "properties": {
              "_id": {
                "description": "Group ID",
                "isPersonal": false,
                "policies": [
                  {
                    "params": {
                      "propertyName": "name",
                    },
                    "policyId": "id-must-equal-property",
                  },
                ],
                "searchable": false,
                "type": "string",
                "usageDescription": "",
                "userEditable": false,
                "viewable": false,
              },
              "condition": {
                "description": "A filter for conditionally assigned members",
                "isConditional": true,
                "policies": [
                  {
                    "policyId": "valid-query-filter",
                  },
                ],
                "searchable": false,
                "title": "Condition",
                "type": "string",
                "viewable": false,
              },
              "description": {
                "description": "Group Description",
                "searchable": true,
                "title": "Description",
                "type": "string",
                "userEditable": false,
                "viewable": true,
              },
              "members": {
                "description": "Group Members",
                "items": {
                  "id": "urn:jsonschema:org:forgerock:openidm:managed:api:Group:members:items",
                  "properties": {
                    "_ref": {
                      "description": "References a relationship from a managed object",
                      "type": "string",
                    },
                    "_refProperties": {
                      "description": "Supports metadata within the relationship",
                      "properties": {
                        "_grantType": {
                          "description": "Grant Type",
                          "label": "Grant Type",
                          "type": "string",
                        },
                        "_id": {
                          "description": "_refProperties object ID",
                          "type": "string",
                        },
                      },
                      "title": "Group Members Items _refProperties",
                      "type": "object",
                    },
                  },
                  "resourceCollection": [
                    {
                      "conditionalAssociation": true,
                      "label": "User",
                      "notify": true,
                      "path": "managed/alpha_user",
                      "query": {
                        "fields": [
                          "userName",
                          "givenName",
                          "sn",
                        ],
                        "queryFilter": "true",
                      },
                    },
                  ],
                  "reversePropertyName": "groups",
                  "reverseRelationship": true,
                  "title": "Group Members Items",
                  "type": "relationship",
                  "validate": true,
                },
                "policies": [],
                "returnByDefault": false,
                "searchable": false,
                "title": "Members",
                "type": "array",
                "userEditable": false,
                "viewable": true,
              },
              "name": {
                "description": "Group Name",
                "policies": [
                  {
                    "policyId": "required",
                  },
                  {
                    "params": {
                      "forbiddenChars": [
                        "/*",
                      ],
                    },
                    "policyId": "cannot-contain-characters",
                  },
                ],
                "searchable": false,
                "title": "Name",
                "type": "string",
                "viewable": true,
              },
            },
            "required": [
              "name",
            ],
            "title": "Alpha realm - Group",
            "viewable": true,
          },
        },
        {
          "name": "bravo_group",
          "schema": {
            "$schema": "http://forgerock.org/json-schema#",
            "icon": "fa-group",
            "id": "urn:jsonschema:org:forgerock:openidm:managed:api:Group",
            "mat-icon": "group",
            "order": [
              "_id",
              "name",
              "description",
              "condition",
              "members",
            ],
            "properties": {
              "_id": {
                "description": "Group ID",
                "isPersonal": false,
                "policies": [
                  {
                    "params": {
                      "propertyName": "name",
                    },
                    "policyId": "id-must-equal-property",
                  },
                ],
                "searchable": false,
                "type": "string",
                "usageDescription": "",
                "userEditable": false,
                "viewable": false,
              },
              "condition": {
                "description": "A filter for conditionally assigned members",
                "isConditional": true,
                "policies": [
                  {
                    "policyId": "valid-query-filter",
                  },
                ],
                "searchable": false,
                "title": "Condition",
                "type": "string",
                "viewable": false,
              },
              "description": {
                "description": "Group Description",
                "searchable": true,
                "title": "Description",
                "type": "string",
                "userEditable": false,
                "viewable": true,
              },
              "members": {
                "description": "Group Members",
                "items": {
                  "id": "urn:jsonschema:org:forgerock:openidm:managed:api:Group:members:items",
                  "properties": {
                    "_ref": {
                      "description": "References a relationship from a managed object",
                      "type": "string",
                    },
                    "_refProperties": {
                      "description": "Supports metadata within the relationship",
                      "properties": {
                        "_grantType": {
                          "description": "Grant Type",
                          "label": "Grant Type",
                          "type": "string",
                        },
                        "_id": {
                          "description": "_refProperties object ID",
                          "type": "string",
                        },
                      },
                      "title": "Group Members Items _refProperties",
                      "type": "object",
                    },
                  },
                  "resourceCollection": [
                    {
                      "conditionalAssociation": true,
                      "label": "User",
                      "notify": true,
                      "path": "managed/bravo_user",
                      "query": {
                        "fields": [
                          "userName",
                          "givenName",
                          "sn",
                        ],
                        "queryFilter": "true",
                      },
                    },
                  ],
                  "reversePropertyName": "groups",
                  "reverseRelationship": true,
                  "title": "Group Members Items",
                  "type": "relationship",
                  "validate": true,
                },
                "policies": [],
                "returnByDefault": false,
                "searchable": false,
                "title": "Members",
                "type": "array",
                "userEditable": false,
                "viewable": true,
              },
              "name": {
                "description": "Group Name",
                "policies": [
                  {
                    "policyId": "required",
                  },
                  {
                    "params": {
                      "forbiddenChars": [
                        "/*",
                      ],
                    },
                    "policyId": "cannot-contain-characters",
                  },
                ],
                "searchable": false,
                "title": "Name",
                "type": "string",
                "viewable": true,
              },
            },
            "required": [
              "name",
            ],
            "title": "Bravo realm - Group",
            "viewable": true,
          },
        },
      ],
    },
    "metrics": {
      "_id": "metrics",
      "enabled": true,
      "prometheusRole": "&{openidm.prometheus.role}",
    },
    "notification/passwordUpdate": {
      "_id": "notification/passwordUpdate",
      "condition": {
        "file": "propertiesModifiedFilter.groovy",
        "globals": {
          "propertiesToCheck": [
            "password",
          ],
        },
        "type": "groovy",
      },
      "enabled": false,
      "methods": [
        "update",
        "patch",
      ],
      "notification": {
        "message": "Your password has been updated.",
        "notificationType": "info",
      },
      "path": "managed/alpha_user/*",
      "target": {
        "resource": "managed/alpha_user/{{response/_id}}",
      },
    },
    "notification/profileUpdate": {
      "_id": "notification/profileUpdate",
      "condition": {
        "file": "propertiesModifiedFilter.groovy",
        "globals": {
          "propertiesToCheck": [
            "userName",
            "givenName",
            "sn",
            "mail",
            "description",
            "accountStatus",
            "telephoneNumber",
            "postalAddress",
            "address2",
            "city",
            "postalCode",
            "country",
            "stateProvince",
            "preferences",
          ],
        },
        "type": "groovy",
      },
      "enabled": false,
      "methods": [
        "update",
        "patch",
      ],
      "notification": {
        "message": "Your profile has been updated.",
        "notificationType": "info",
      },
      "path": "managed/alpha_user/*",
      "target": {
        "resource": "managed/alpha_user/{{response/_id}}",
      },
    },
    "notificationFactory": {
      "_id": "notificationFactory",
      "enabled": false,
      "threadPool": {
        "maxPoolThreads": 10,
        "maxQueueSize": 20000,
        "steadyPoolThreads": 2,
        "threadKeepAlive": 60,
      },
    },
    "policy": {
      "_id": "policy",
      "additionalFiles": [],
      "file": "policy.js",
      "resources": [
        {
          "calculatedProperties": {
            "source": "require('selfServicePolicies').getRegistrationProperties()",
            "type": "text/javascript",
          },
          "resource": "selfservice/registration",
        },
        {
          "calculatedProperties": {
            "source": "require('selfServicePolicies').getResetProperties()",
            "type": "text/javascript",
          },
          "resource": "selfservice/reset",
        },
        {
          "properties": [
            {
              "name": "_id",
              "policies": [
                {
                  "params": {
                    "forbiddenChars": [
                      "/",
                    ],
                  },
                  "policyId": "cannot-contain-characters",
                },
              ],
            },
            {
              "name": "password",
              "policies": [
                {
                  "params": {
                    "minLength": 8,
                  },
                  "policyId": "minimum-length",
                },
              ],
            },
          ],
          "resource": "internal/user/*",
        },
        {
          "properties": [
            {
              "name": "name",
              "policies": [
                {
                  "policyId": "required",
                },
                {
                  "policyId": "not-empty",
                },
                {
                  "params": {
                    "forbiddenChars": [
                      "/*",
                    ],
                  },
                  "policyId": "cannot-contain-characters",
                },
              ],
            },
            {
              "name": "temporalConstraints",
              "policies": [
                {
                  "policyId": "valid-temporal-constraints",
                },
              ],
            },
            {
              "name": "condition",
              "policies": [
                {
                  "policyId": "valid-query-filter",
                },
              ],
            },
            {
              "name": "privileges",
              "policies": [
                {
                  "params": {
                    "types": [
                      "array",
                    ],
                  },
                  "policyId": "valid-type",
                },
                {
                  "params": {
                    "properties": [
                      {
                        "name": "name",
                        "policies": [
                          {
                            "policyId": "required",
                          },
                          {
                            "policyId": "not-empty",
                          },
                          {
                            "params": {
                              "types": [
                                "string",
                              ],
                            },
                            "policyId": "valid-type",
                          },
                        ],
                      },
                      {
                        "name": "path",
                        "policies": [
                          {
                            "policyId": "required",
                          },
                          {
                            "policyId": "not-empty",
                          },
                          {
                            "params": {
                              "forbiddenChars": [
                                "/*",
                              ],
                            },
                            "policyId": "cannot-contain-characters",
                          },
                          {
                            "policyId": "valid-privilege-path",
                          },
                        ],
                      },
                      {
                        "name": "accessFlags",
                        "policies": [
                          {
                            "policyId": "required",
                          },
                          {
                            "policyId": "not-empty",
                          },
                          {
                            "params": {
                              "types": [
                                "array",
                              ],
                            },
                            "policyId": "valid-type",
                          },
                          {
                            "policyId": "valid-accessFlags-object",
                          },
                        ],
                      },
                      {
                        "name": "actions",
                        "policies": [
                          {
                            "policyId": "required",
                          },
                          {
                            "params": {
                              "types": [
                                "array",
                              ],
                            },
                            "policyId": "valid-type",
                          },
                        ],
                      },
                      {
                        "name": "permissions",
                        "policies": [
                          {
                            "policyId": "required",
                          },
                          {
                            "policyId": "not-empty",
                          },
                          {
                            "params": {
                              "types": [
                                "array",
                              ],
                            },
                            "policyId": "valid-type",
                          },
                          {
                            "policyId": "valid-permissions",
                          },
                        ],
                      },
                      {
                        "name": "filter",
                        "policies": [
                          {
                            "params": {
                              "types": [
                                "string",
                                "null",
                              ],
                            },
                            "policyId": "valid-type",
                          },
                          {
                            "policyId": "valid-query-filter",
                          },
                        ],
                      },
                    ],
                  },
                  "policyId": "valid-array-items",
                },
              ],
            },
          ],
          "resource": "internal/role/*",
        },
        {
          "properties": [
            {
              "name": "temporalConstraints",
              "policies": [
                {
                  "policyId": "valid-temporal-constraints",
                },
              ],
            },
            {
              "name": "condition",
              "policies": [
                {
                  "policyId": "valid-query-filter",
                },
              ],
            },
          ],
          "resource": "managed/role/*",
        },
      ],
      "type": "text/javascript",
    },
    "privilegeAssignments": {
      "_id": "privilegeAssignments",
      "privilegeAssignments": [
        {
          "name": "ownerPrivileges",
          "privileges": [
            "owner-view-update-delete-orgs",
            "owner-create-orgs",
            "owner-view-update-delete-admins-and-members",
            "owner-create-admins",
            "admin-view-update-delete-members",
            "admin-create-members",
          ],
          "relationshipField": "ownerOfOrg",
        },
        {
          "name": "adminPrivileges",
          "privileges": [
            "admin-view-update-delete-orgs",
            "admin-create-orgs",
            "admin-view-update-delete-members",
            "admin-create-members",
          ],
          "relationshipField": "adminOfOrg",
        },
      ],
    },
    "privileges": {
      "_id": "privileges",
      "privileges": [
        {
          "accessFlags": [
            {
              "attribute": "name",
              "readOnly": false,
            },
            {
              "attribute": "description",
              "readOnly": false,
            },
            {
              "attribute": "owners",
              "readOnly": true,
            },
            {
              "attribute": "admins",
              "readOnly": false,
            },
            {
              "attribute": "members",
              "readOnly": false,
            },
            {
              "attribute": "parent",
              "readOnly": false,
            },
            {
              "attribute": "children",
              "readOnly": false,
            },
            {
              "attribute": "parentIDs",
              "readOnly": true,
            },
            {
              "attribute": "adminIDs",
              "readOnly": true,
            },
            {
              "attribute": "parentAdminIDs",
              "readOnly": true,
            },
            {
              "attribute": "ownerIDs",
              "readOnly": true,
            },
            {
              "attribute": "parentOwnerIDs",
              "readOnly": true,
            },
          ],
          "actions": [],
          "filter": "/ownerIDs eq "{{_id}}" or /parentOwnerIDs eq "{{_id}}"",
          "name": "owner-view-update-delete-orgs",
          "path": "managed/organization",
          "permissions": [
            "VIEW",
            "UPDATE",
            "DELETE",
          ],
        },
        {
          "accessFlags": [
            {
              "attribute": "name",
              "readOnly": false,
            },
            {
              "attribute": "description",
              "readOnly": false,
            },
            {
              "attribute": "owners",
              "readOnly": true,
            },
            {
              "attribute": "admins",
              "readOnly": false,
            },
            {
              "attribute": "members",
              "readOnly": false,
            },
            {
              "attribute": "parent",
              "readOnly": false,
            },
            {
              "attribute": "children",
              "readOnly": false,
            },
            {
              "attribute": "parentIDs",
              "readOnly": true,
            },
            {
              "attribute": "adminIDs",
              "readOnly": true,
            },
            {
              "attribute": "parentAdminIDs",
              "readOnly": true,
            },
            {
              "attribute": "ownerIDs",
              "readOnly": true,
            },
            {
              "attribute": "parentOwnerIDs",
              "readOnly": true,
            },
          ],
          "actions": [],
          "filter": "/parent pr",
          "name": "owner-create-orgs",
          "path": "managed/organization",
          "permissions": [
            "CREATE",
          ],
        },
        {
          "accessFlags": [
            {
              "attribute": "userName",
              "readOnly": false,
            },
            {
              "attribute": "password",
              "readOnly": false,
            },
            {
              "attribute": "givenName",
              "readOnly": false,
            },
            {
              "attribute": "sn",
              "readOnly": false,
            },
            {
              "attribute": "mail",
              "readOnly": false,
            },
            {
              "attribute": "description",
              "readOnly": false,
            },
            {
              "attribute": "accountStatus",
              "readOnly": false,
            },
            {
              "attribute": "telephoneNumber",
              "readOnly": false,
            },
            {
              "attribute": "postalAddress",
              "readOnly": false,
            },
            {
              "attribute": "city",
              "readOnly": false,
            },
            {
              "attribute": "postalCode",
              "readOnly": false,
            },
            {
              "attribute": "country",
              "readOnly": false,
            },
            {
              "attribute": "stateProvince",
              "readOnly": false,
            },
            {
              "attribute": "roles",
              "readOnly": false,
            },
            {
              "attribute": "manager",
              "readOnly": false,
            },
            {
              "attribute": "authzRoles",
              "readOnly": false,
            },
            {
              "attribute": "reports",
              "readOnly": false,
            },
            {
              "attribute": "effectiveRoles",
              "readOnly": false,
            },
            {
              "attribute": "effectiveAssignments",
              "readOnly": false,
            },
            {
              "attribute": "lastSync",
              "readOnly": false,
            },
            {
              "attribute": "kbaInfo",
              "readOnly": false,
            },
            {
              "attribute": "preferences",
              "readOnly": false,
            },
            {
              "attribute": "consentedMappings",
              "readOnly": false,
            },
            {
              "attribute": "memberOfOrg",
              "readOnly": false,
            },
            {
              "attribute": "adminOfOrg",
              "readOnly": false,
            },
            {
              "attribute": "ownerOfOrg",
              "readOnly": true,
            },
            {
              "attribute": "memberOfOrgIDs",
              "readOnly": true,
            },
          ],
          "actions": [],
          "filter": "/memberOfOrgIDs eq "__org_id_placeholder__"",
          "name": "owner-view-update-delete-admins-and-members",
          "path": "managed/user",
          "permissions": [
            "VIEW",
            "DELETE",
            "UPDATE",
          ],
        },
        {
          "accessFlags": [
            {
              "attribute": "userName",
              "readOnly": false,
            },
            {
              "attribute": "password",
              "readOnly": false,
            },
            {
              "attribute": "givenName",
              "readOnly": false,
            },
            {
              "attribute": "sn",
              "readOnly": false,
            },
            {
              "attribute": "mail",
              "readOnly": false,
            },
            {
              "attribute": "description",
              "readOnly": false,
            },
            {
              "attribute": "accountStatus",
              "readOnly": false,
            },
            {
              "attribute": "telephoneNumber",
              "readOnly": false,
            },
            {
              "attribute": "postalAddress",
              "readOnly": false,
            },
            {
              "attribute": "city",
              "readOnly": false,
            },
            {
              "attribute": "postalCode",
              "readOnly": false,
            },
            {
              "attribute": "country",
              "readOnly": false,
            },
            {
              "attribute": "stateProvince",
              "readOnly": false,
            },
            {
              "attribute": "roles",
              "readOnly": false,
            },
            {
              "attribute": "manager",
              "readOnly": false,
            },
            {
              "attribute": "authzRoles",
              "readOnly": false,
            },
            {
              "attribute": "reports",
              "readOnly": false,
            },
            {
              "attribute": "effectiveRoles",
              "readOnly": false,
            },
            {
              "attribute": "effectiveAssignments",
              "readOnly": false,
            },
            {
              "attribute": "lastSync",
              "readOnly": false,
            },
            {
              "attribute": "kbaInfo",
              "readOnly": false,
            },
            {
              "attribute": "preferences",
              "readOnly": false,
            },
            {
              "attribute": "consentedMappings",
              "readOnly": false,
            },
            {
              "attribute": "memberOfOrg",
              "readOnly": false,
            },
            {
              "attribute": "adminOfOrg",
              "readOnly": false,
            },
            {
              "attribute": "ownerOfOrg",
              "readOnly": true,
            },
            {
              "attribute": "memberOfOrgIDs",
              "readOnly": true,
            },
          ],
          "actions": [],
          "filter": "/memberOfOrg/0 pr and /adminOfOrg/0 pr and !(/ownerOfOrg pr)",
          "name": "owner-create-admins",
          "path": "managed/user",
          "permissions": [
            "CREATE",
          ],
        },
        {
          "accessFlags": [
            {
              "attribute": "name",
              "readOnly": false,
            },
            {
              "attribute": "description",
              "readOnly": false,
            },
            {
              "attribute": "owners",
              "readOnly": true,
            },
            {
              "attribute": "admins",
              "readOnly": true,
            },
            {
              "attribute": "members",
              "readOnly": false,
            },
            {
              "attribute": "parent",
              "readOnly": false,
            },
            {
              "attribute": "children",
              "readOnly": false,
            },
            {
              "attribute": "parentIDs",
              "readOnly": true,
            },
            {
              "attribute": "adminIDs",
              "readOnly": true,
            },
            {
              "attribute": "parentAdminIDs",
              "readOnly": true,
            },
            {
              "attribute": "ownerIDs",
              "readOnly": true,
            },
            {
              "attribute": "parentOwnerIDs",
              "readOnly": true,
            },
          ],
          "actions": [],
          "filter": "/adminIDs eq "{{_id}}" or /parentAdminIDs eq "{{_id}}"",
          "name": "admin-view-update-delete-orgs",
          "path": "managed/organization",
          "permissions": [
            "VIEW",
            "UPDATE",
            "DELETE",
          ],
        },
        {
          "accessFlags": [
            {
              "attribute": "name",
              "readOnly": false,
            },
            {
              "attribute": "description",
              "readOnly": false,
            },
            {
              "attribute": "owners",
              "readOnly": true,
            },
            {
              "attribute": "admins",
              "readOnly": true,
            },
            {
              "attribute": "members",
              "readOnly": false,
            },
            {
              "attribute": "parent",
              "readOnly": false,
            },
            {
              "attribute": "children",
              "readOnly": false,
            },
            {
              "attribute": "parentIDs",
              "readOnly": true,
            },
            {
              "attribute": "adminIDs",
              "readOnly": true,
            },
            {
              "attribute": "parentAdminIDs",
              "readOnly": true,
            },
            {
              "attribute": "ownerIDs",
              "readOnly": true,
            },
            {
              "attribute": "parentOwnerIDs",
              "readOnly": true,
            },
          ],
          "actions": [],
          "filter": "/parent pr",
          "name": "admin-create-orgs",
          "path": "managed/organization",
          "permissions": [
            "CREATE",
          ],
        },
        {
          "accessFlags": [
            {
              "attribute": "userName",
              "readOnly": false,
            },
            {
              "attribute": "password",
              "readOnly": false,
            },
            {
              "attribute": "givenName",
              "readOnly": false,
            },
            {
              "attribute": "sn",
              "readOnly": false,
            },
            {
              "attribute": "mail",
              "readOnly": false,
            },
            {
              "attribute": "description",
              "readOnly": false,
            },
            {
              "attribute": "accountStatus",
              "readOnly": false,
            },
            {
              "attribute": "telephoneNumber",
              "readOnly": false,
            },
            {
              "attribute": "postalAddress",
              "readOnly": false,
            },
            {
              "attribute": "city",
              "readOnly": false,
            },
            {
              "attribute": "postalCode",
              "readOnly": false,
            },
            {
              "attribute": "country",
              "readOnly": false,
            },
            {
              "attribute": "stateProvince",
              "readOnly": false,
            },
            {
              "attribute": "roles",
              "readOnly": false,
            },
            {
              "attribute": "manager",
              "readOnly": false,
            },
            {
              "attribute": "authzRoles",
              "readOnly": false,
            },
            {
              "attribute": "reports",
              "readOnly": false,
            },
            {
              "attribute": "effectiveRoles",
              "readOnly": false,
            },
            {
              "attribute": "effectiveAssignments",
              "readOnly": false,
            },
            {
              "attribute": "lastSync",
              "readOnly": false,
            },
            {
              "attribute": "kbaInfo",
              "readOnly": false,
            },
            {
              "attribute": "preferences",
              "readOnly": false,
            },
            {
              "attribute": "consentedMappings",
              "readOnly": false,
            },
            {
              "attribute": "memberOfOrg",
              "readOnly": false,
            },
            {
              "attribute": "adminOfOrg",
              "readOnly": true,
            },
            {
              "attribute": "ownerOfOrg",
              "readOnly": true,
            },
            {
              "attribute": "memberOfOrgIDs",
              "readOnly": true,
            },
          ],
          "actions": [],
          "filter": "/memberOfOrgIDs eq "__org_id_placeholder__"",
          "name": "admin-view-update-delete-members",
          "path": "managed/user",
          "permissions": [
            "VIEW",
            "DELETE",
            "UPDATE",
          ],
        },
        {
          "accessFlags": [
            {
              "attribute": "userName",
              "readOnly": false,
            },
            {
              "attribute": "password",
              "readOnly": false,
            },
            {
              "attribute": "givenName",
              "readOnly": false,
            },
            {
              "attribute": "sn",
              "readOnly": false,
            },
            {
              "attribute": "mail",
              "readOnly": false,
            },
            {
              "attribute": "description",
              "readOnly": false,
            },
            {
              "attribute": "accountStatus",
              "readOnly": false,
            },
            {
              "attribute": "telephoneNumber",
              "readOnly": false,
            },
            {
              "attribute": "postalAddress",
              "readOnly": false,
            },
            {
              "attribute": "city",
              "readOnly": false,
            },
            {
              "attribute": "postalCode",
              "readOnly": false,
            },
            {
              "attribute": "country",
              "readOnly": false,
            },
            {
              "attribute": "stateProvince",
              "readOnly": false,
            },
            {
              "attribute": "roles",
              "readOnly": false,
            },
            {
              "attribute": "manager",
              "readOnly": false,
            },
            {
              "attribute": "authzRoles",
              "readOnly": false,
            },
            {
              "attribute": "reports",
              "readOnly": false,
            },
            {
              "attribute": "effectiveRoles",
              "readOnly": false,
            },
            {
              "attribute": "effectiveAssignments",
              "readOnly": false,
            },
            {
              "attribute": "lastSync",
              "readOnly": false,
            },
            {
              "attribute": "kbaInfo",
              "readOnly": false,
            },
            {
              "attribute": "preferences",
              "readOnly": false,
            },
            {
              "attribute": "consentedMappings",
              "readOnly": false,
            },
            {
              "attribute": "memberOfOrg",
              "readOnly": false,
            },
            {
              "attribute": "adminOfOrg",
              "readOnly": true,
            },
            {
              "attribute": "ownerOfOrg",
              "readOnly": true,
            },
            {
              "attribute": "memberOfOrgIDs",
              "readOnly": true,
            },
          ],
          "actions": [],
          "filter": "/memberOfOrg/0 pr and !(/adminOfOrg pr) and !(/ownerOfOrg pr)",
          "name": "admin-create-members",
          "path": "managed/user",
          "permissions": [
            "CREATE",
          ],
        },
      ],
    },
    "process/access": {
      "_id": "process/access",
      "workflowAccess": [
        {
          "propertiesCheck": {
            "matches": ".*",
            "property": "_id",
            "requiresRole": "internal/role/openidm-authorized",
          },
        },
        {
          "propertiesCheck": {
            "matches": ".*",
            "property": "_id",
            "requiresRole": "internal/role/openidm-admin",
          },
        },
      ],
    },
    "provisioner.openicf.connectorinfoprovider": {
      "_id": "provisioner.openicf.connectorinfoprovider",
      "connectorsLocation": "connectors",
      "remoteConnectorClients": [],
      "remoteConnectorClientsGroups": [],
      "remoteConnectorServers": [],
      "remoteConnectorServersGroups": [],
    },
    "repo.ds": {
      "_id": "repo.ds",
      "commands": {
        "delete-mapping-links": {
          "_queryFilter": "/linkType eq "\${mapping}"",
          "operation": "DELETE",
        },
        "delete-target-ids-for-recon": {
          "_queryFilter": "/reconId eq "\${reconId}"",
          "operation": "DELETE",
        },
      },
      "embedded": false,
      "ldapConnectionFactories": {
        "bind": {
          "availabilityCheckIntervalSeconds": 30,
          "availabilityCheckTimeoutMilliSeconds": 10000,
          "connectionPoolSize": 50,
          "connectionSecurity": "none",
          "heartBeatIntervalSeconds": 60,
          "heartBeatTimeoutMilliSeconds": 10000,
          "primaryLdapServers": [
            {
              "hostname": "userstore-0.userstore",
              "port": 1389,
            },
          ],
          "secondaryLdapServers": [
            {
              "hostname": "userstore-2.userstore",
              "port": 1389,
            },
          ],
        },
        "root": {
          "authentication": {
            "simple": {
              "bindDn": "uid=admin",
              "bindPassword": "&{userstore.password}",
            },
          },
          "inheritFrom": "bind",
        },
      },
      "maxConnectionAttempts": 5,
      "queries": {
        "explicit": {
          "credential-internaluser-query": {
            "_queryFilter": "/_id eq "\${username}"",
          },
          "credential-query": {
            "_queryFilter": "/userName eq "\${username}"",
          },
          "for-userName": {
            "_queryFilter": "/userName eq "\${uid}"",
          },
          "links-for-firstId": {
            "_queryFilter": "/linkType eq "\${linkType}" AND /firstId = "\${firstId}"",
          },
          "links-for-linkType": {
            "_queryFilter": "/linkType eq "\${linkType}"",
          },
          "query-all": {
            "_queryFilter": "true",
          },
          "query-all-ids": {
            "_fields": "_id,_rev",
            "_queryFilter": "true",
          },
        },
        "generic": {
          "credential-internaluser-query": {
            "_queryFilter": "/_id eq "\${username}"",
          },
          "credential-query": {
            "_queryFilter": "/userName eq "\${username}"",
          },
          "find-relationship-edges": {
            "_queryFilter": "((/firstResourceCollection eq "\${firstResourceCollection}" and /firstResourceId eq "\${firstResourceId}" and /firstPropertyName eq "\${firstPropertyName}") and (/secondResourceCollection eq "\${secondResourceCollection}" and /secondResourceId eq "\${secondResourceId}" and /secondPropertyName eq "\${secondPropertyName}")) or ((/firstResourceCollection eq "\${secondResourceCollection}" and /firstResourceId eq "\${secondResourceId}" and /firstPropertyName eq "\${secondPropertyName}") and (/secondResourceCollection eq "\${firstResourceCollection}" and /secondResourceId eq "\${firstResourceId}" and /secondPropertyName eq "\${firstPropertyName}"))",
          },
          "find-relationships-for-resource": {
            "_queryFilter": "(/firstResourceCollection eq "\${resourceCollection}" and /firstResourceId eq "\${resourceId}" and /firstPropertyName eq "\${propertyName}") or (/secondResourceCollection eq "\${resourceCollection}" and /secondResourceId eq "\${resourceId}" and /secondPropertyName eq "\${propertyName}")",
          },
          "for-userName": {
            "_queryFilter": "/userName eq "\${uid}"",
          },
          "get-by-field-value": {
            "_queryFilter": "/\${field} eq "\${value}"",
          },
          "get-notifications-for-user": {
            "_queryFilter": "/receiverId eq "\${userId}"",
            "_sortKeys": "-createDate",
          },
          "get-recons": {
            "_fields": "reconId,mapping,activitydate",
            "_queryFilter": "/entryType eq "summary"",
            "_sortKeys": "-activitydate",
          },
          "links-for-firstId": {
            "_queryFilter": "/linkType eq "\${linkType}" AND /firstId = "\${firstId}"",
          },
          "links-for-linkType": {
            "_queryFilter": "/linkType eq "\${linkType}"",
          },
          "query-all": {
            "_queryFilter": "true",
          },
          "query-all-ids": {
            "_fields": "_id,_rev",
            "_queryFilter": "true",
          },
          "query-cluster-events": {
            "_queryFilter": "/instanceId eq "\${instanceId}"",
          },
          "query-cluster-failed-instances": {
            "_queryFilter": "/timestamp le \${timestamp} and (/state eq "1" or /state eq "2")",
          },
          "query-cluster-instances": {
            "_queryFilter": "true",
          },
          "query-cluster-running-instances": {
            "_queryFilter": "/state eq 1",
          },
        },
      },
      "resourceMapping": {
        "defaultMapping": {
          "dnTemplate": "ou=generic,dc=openidm,dc=example,dc=com",
        },
        "explicitMapping": {
          "clusteredrecontargetids": {
            "dnTemplate": "ou=clusteredrecontargetids,dc=openidm,dc=example,dc=com",
            "objectClasses": [
              "uidObject",
              "fr-idm-recon-clusteredTargetIds",
            ],
            "properties": {
              "_id": {
                "isRequired": true,
                "ldapAttribute": "uid",
                "type": "simple",
                "writability": "createOnly",
              },
              "reconId": {
                "ldapAttribute": "fr-idm-recon-id",
                "type": "simple",
              },
              "targetIds": {
                "ldapAttribute": "fr-idm-recon-targetIds",
                "type": "json",
              },
            },
          },
          "dsconfig/attributeValue": {
            "dnTemplate": "cn=Password Validators,cn=config",
            "objectClasses": [
              "ds-cfg-password-validator",
              "ds-cfg-attribute-value-password-validator",
            ],
            "properties": {
              "_id": {
                "isRequired": true,
                "ldapAttribute": "cn",
                "type": "simple",
                "writability": "createOnly",
              },
              "checkSubstrings": {
                "ldapAttribute": "ds-cfg-check-substrings",
                "type": "simple",
              },
              "enabled": {
                "ldapAttribute": "ds-cfg-enabled",
                "type": "simple",
              },
              "javaClass": {
                "ldapAttribute": "ds-cfg-java-class",
                "type": "simple",
              },
              "matchAttribute": {
                "isMultiValued": true,
                "ldapAttribute": "ds-cfg-match-attribute",
                "type": "simple",
              },
              "minSubstringLength": {
                "ldapAttribute": "ds-cfg-min-substring-length",
                "type": "simple",
              },
              "testReversedPassword": {
                "isRequired": true,
                "ldapAttribute": "ds-cfg-test-reversed-password",
                "type": "simple",
              },
            },
          },
          "dsconfig/characterSet": {
            "dnTemplate": "cn=Password Validators,cn=config",
            "objectClasses": [
              "ds-cfg-password-validator",
              "ds-cfg-character-set-password-validator",
            ],
            "properties": {
              "_id": {
                "isRequired": true,
                "ldapAttribute": "cn",
                "type": "simple",
                "writability": "createOnly",
              },
              "allowUnclassifiedCharacters": {
                "isRequired": true,
                "ldapAttribute": "ds-cfg-allow-unclassified-characters",
                "type": "simple",
              },
              "characterSet": {
                "isMultiValued": true,
                "ldapAttribute": "ds-cfg-character-set",
                "type": "simple",
              },
              "enabled": {
                "ldapAttribute": "ds-cfg-enabled",
                "type": "simple",
              },
              "javaClass": {
                "ldapAttribute": "ds-cfg-java-class",
                "type": "simple",
              },
              "minCharacterSets": {
                "ldapAttribute": "ds-cfg-min-character-sets",
                "type": "simple",
              },
            },
          },
          "dsconfig/dictionary": {
            "dnTemplate": "cn=Password Validators,cn=config",
            "objectClasses": [
              "ds-cfg-password-validator",
              "ds-cfg-dictionary-password-validator",
            ],
            "properties": {
              "_id": {
                "isRequired": true,
                "ldapAttribute": "cn",
                "type": "simple",
                "writability": "createOnly",
              },
              "caseSensitiveValidation": {
                "isRequired": true,
                "ldapAttribute": "ds-cfg-case-sensitive-validation",
                "type": "simple",
              },
              "checkSubstrings": {
                "ldapAttribute": "ds-cfg-check-substrings",
                "type": "simple",
              },
              "dictionaryFile": {
                "isRequired": true,
                "ldapAttribute": "ds-cfg-dictionary-file",
                "type": "simple",
              },
              "enabled": {
                "ldapAttribute": "ds-cfg-enabled",
                "type": "simple",
              },
              "javaClass": {
                "ldapAttribute": "ds-cfg-java-class",
                "type": "simple",
              },
              "minSubstringLength": {
                "ldapAttribute": "ds-cfg-min-substring-length",
                "type": "simple",
              },
              "testReversedPassword": {
                "isRequired": true,
                "ldapAttribute": "ds-cfg-test-reversed-password",
                "type": "simple",
              },
            },
          },
          "dsconfig/lengthBased": {
            "dnTemplate": "cn=Password Validators,cn=config",
            "objectClasses": [
              "ds-cfg-password-validator",
              "ds-cfg-length-based-password-validator",
            ],
            "properties": {
              "_id": {
                "isRequired": true,
                "ldapAttribute": "cn",
                "type": "simple",
                "writability": "createOnly",
              },
              "enabled": {
                "ldapAttribute": "ds-cfg-enabled",
                "type": "simple",
              },
              "javaClass": {
                "ldapAttribute": "ds-cfg-java-class",
                "type": "simple",
              },
              "maxPasswordLength": {
                "ldapAttribute": "ds-cfg-max-password-length",
                "type": "simple",
              },
              "minPasswordLength": {
                "ldapAttribute": "ds-cfg-min-password-length",
                "type": "simple",
              },
            },
          },
          "dsconfig/passwordPolicies": {
            "dnTemplate": "cn=Password Policies,cn=config",
            "objectClasses": [
              "ds-cfg-password-policy",
              "ds-cfg-authentication-policy",
            ],
            "properties": {
              "_id": {
                "isRequired": true,
                "ldapAttribute": "cn",
                "type": "simple",
                "writability": "createOnly",
              },
              "allowPreEncodedPasswords": {
                "ldapAttribute": "ds-cfg-allow-pre-encoded-passwords",
                "type": "simple",
              },
              "defaultPasswordStorageScheme": {
                "isMultiValued": true,
                "isRequired": true,
                "ldapAttribute": "ds-cfg-default-password-storage-scheme",
                "type": "simple",
              },
              "deprecatedPasswordStorageScheme": {
                "isMultiValued": true,
                "ldapAttribute": "ds-cfg-deprecated-password-storage-scheme",
                "type": "simple",
              },
              "maxPasswordAge": {
                "ldapAttribute": "ds-cfg-max-password-age",
                "type": "simple",
              },
              "passwordAttribute": {
                "isRequired": true,
                "ldapAttribute": "ds-cfg-password-attribute",
                "type": "simple",
              },
              "passwordHistoryCount": {
                "ldapAttribute": "ds-cfg-password-history-count",
                "type": "simple",
              },
              "validator": {
                "isMultiValued": true,
                "ldapAttribute": "ds-cfg-password-validator",
                "type": "simple",
              },
            },
          },
          "dsconfig/repeatedCharacters": {
            "dnTemplate": "cn=Password Validators,cn=config",
            "objectClasses": [
              "ds-cfg-password-validator",
              "ds-cfg-repeated-characters-password-validator",
            ],
            "properties": {
              "_id": {
                "isRequired": true,
                "ldapAttribute": "cn",
                "type": "simple",
                "writability": "createOnly",
              },
              "caseSensitiveValidation": {
                "isRequired": true,
                "ldapAttribute": "ds-cfg-case-sensitive-validation",
                "type": "simple",
              },
              "enabled": {
                "ldapAttribute": "ds-cfg-enabled",
                "type": "simple",
              },
              "javaClass": {
                "ldapAttribute": "ds-cfg-java-class",
                "type": "simple",
              },
              "maxConsecutiveLength": {
                "isRequired": true,
                "ldapAttribute": "ds-cfg-max-consecutive-length",
                "type": "simple",
              },
            },
          },
          "dsconfig/similarityBased": {
            "dnTemplate": "cn=Password Validators,cn=config",
            "objectClasses": [
              "ds-cfg-password-validator",
              "ds-cfg-similarity-based-password-validator",
            ],
            "properties": {
              "_id": {
                "isRequired": true,
                "ldapAttribute": "cn",
                "type": "simple",
                "writability": "createOnly",
              },
              "enabled": {
                "ldapAttribute": "ds-cfg-enabled",
                "type": "simple",
              },
              "javaClass": {
                "ldapAttribute": "ds-cfg-java-class",
                "type": "simple",
              },
              "minPasswordDifference": {
                "isRequired": true,
                "ldapAttribute": "ds-cfg-min-password-difference",
                "type": "simple",
              },
            },
          },
          "dsconfig/uniqueCharacters": {
            "dnTemplate": "cn=Password Validators,cn=config",
            "objectClasses": [
              "ds-cfg-password-validator",
              "ds-cfg-unique-characters-password-validator",
            ],
            "properties": {
              "_id": {
                "isRequired": true,
                "ldapAttribute": "cn",
                "type": "simple",
                "writability": "createOnly",
              },
              "caseSensitiveValidation": {
                "isRequired": true,
                "ldapAttribute": "ds-cfg-case-sensitive-validation",
                "type": "simple",
              },
              "enabled": {
                "ldapAttribute": "ds-cfg-enabled",
                "type": "simple",
              },
              "javaClass": {
                "ldapAttribute": "ds-cfg-java-class",
                "type": "simple",
              },
              "minUniqueCharacters": {
                "isRequired": true,
                "ldapAttribute": "ds-cfg-min-unique-characters",
                "type": "simple",
              },
            },
          },
          "dsconfig/userDefinedVirtualAttribute": {
            "dnTemplate": "cn=Virtual Attributes,cn=config",
            "objectClasses": [
              "ds-cfg-user-defined-virtual-attribute",
              "ds-cfg-virtual-attribute",
            ],
            "properties": {
              "_id": {
                "isRequired": true,
                "ldapAttribute": "cn",
                "type": "simple",
                "writability": "createOnly",
              },
              "attributeType": {
                "isRequired": true,
                "ldapAttribute": "ds-cfg-attribute-type",
                "type": "simple",
              },
              "baseDn": {
                "isMultiValued": true,
                "ldapAttribute": "ds-cfg-base-dn",
                "type": "simple",
              },
              "conflictBehavior": {
                "ldapAttribute": "ds-cfg-conflict-behavior",
                "type": "simple",
              },
              "enabled": {
                "isRequired": true,
                "ldapAttribute": "ds-cfg-enabled",
                "type": "simple",
              },
              "filter": {
                "isMultiValued": true,
                "ldapAttribute": "ds-cfg-filter",
                "type": "simple",
              },
              "groupDn": {
                "ldapAttribute": "ds-cfg-group-dn",
                "type": "simple",
              },
              "javaClass": {
                "isRequired": true,
                "ldapAttribute": "ds-cfg-java-class",
                "type": "simple",
              },
              "scope": {
                "ldapAttribute": "ds-cfg-scope",
                "type": "simple",
              },
              "value": {
                "isMultiValued": true,
                "isRequired": true,
                "ldapAttribute": "ds-cfg-value",
                "type": "simple",
              },
            },
          },
          "identities/admin": {
            "dnTemplate": "o=root,ou=identities",
            "isReadOnly": true,
            "namingStrategy": {
              "dnAttribute": "ou",
              "type": "clientDnNaming",
            },
            "objectClasses": [
              "organizationalunit",
            ],
            "properties": {
              "_id": {
                "ldapAttribute": "ou",
                "primaryKey": true,
                "type": "simple",
              },
              "_rev": {
                "ldapAttribute": "etag",
                "type": "simple",
              },
              "count": {
                "isRequired": true,
                "ldapAttribute": "numSubordinates",
                "type": "simple",
                "writability": "readOnly",
              },
            },
          },
          "identities/alpha": {
            "dnTemplate": "o=alpha,o=root,ou=identities",
            "isReadOnly": true,
            "namingStrategy": {
              "dnAttribute": "ou",
              "type": "clientDnNaming",
            },
            "objectClasses": [
              "organizationalunit",
            ],
            "properties": {
              "_id": {
                "ldapAttribute": "ou",
                "primaryKey": true,
                "type": "simple",
              },
              "_rev": {
                "ldapAttribute": "etag",
                "type": "simple",
              },
              "count": {
                "isRequired": true,
                "ldapAttribute": "numSubordinates",
                "type": "simple",
                "writability": "readOnly",
              },
            },
          },
          "identities/bravo": {
            "dnTemplate": "o=bravo,o=root,ou=identities",
            "isReadOnly": true,
            "namingStrategy": {
              "dnAttribute": "ou",
              "type": "clientDnNaming",
            },
            "objectClasses": [
              "organizationalunit",
            ],
            "properties": {
              "_id": {
                "ldapAttribute": "ou",
                "primaryKey": true,
                "type": "simple",
              },
              "_rev": {
                "ldapAttribute": "etag",
                "type": "simple",
              },
              "count": {
                "isRequired": true,
                "ldapAttribute": "numSubordinates",
                "type": "simple",
                "writability": "readOnly",
              },
            },
          },
          "internal/role": {
            "dnTemplate": "ou=roles,ou=internal,dc=openidm,dc=example,dc=com",
            "objectClasses": [
              "fr-idm-internal-role",
            ],
            "properties": {
              "_id": {
                "isRequired": true,
                "ldapAttribute": "cn",
                "type": "simple",
                "writability": "createOnly",
              },
              "authzMembers": {
                "isMultiValued": true,
                "propertyName": "authzRoles",
                "resourcePath": "managed/alpha_user",
                "type": "reverseReference",
              },
              "condition": {
                "ldapAttribute": "fr-idm-condition",
                "type": "simple",
              },
              "description": {
                "ldapAttribute": "description",
                "type": "simple",
              },
              "name": {
                "ldapAttribute": "fr-idm-name",
                "type": "simple",
              },
              "privileges": {
                "isMultiValued": true,
                "ldapAttribute": "fr-idm-privilege",
                "type": "json",
              },
              "temporalConstraints": {
                "isMultiValued": true,
                "ldapAttribute": "fr-idm-temporal-constraints",
                "type": "json",
              },
            },
          },
          "internal/user": {
            "dnTemplate": "ou=users,ou=internal,dc=openidm,dc=example,dc=com",
            "objectClasses": [
              "uidObject",
              "fr-idm-internal-user",
            ],
            "properties": {
              "_id": {
                "isRequired": true,
                "ldapAttribute": "uid",
                "type": "simple",
                "writability": "createOnly",
              },
              "password": {
                "ldapAttribute": "fr-idm-password",
                "type": "json",
              },
            },
          },
          "link": {
            "dnTemplate": "ou=links,dc=openidm,dc=example,dc=com",
            "objectClasses": [
              "uidObject",
              "fr-idm-link",
            ],
            "properties": {
              "_id": {
                "isRequired": true,
                "ldapAttribute": "uid",
                "type": "simple",
                "writability": "createOnly",
              },
              "firstId": {
                "ldapAttribute": "fr-idm-link-firstId",
                "type": "simple",
              },
              "linkQualifier": {
                "ldapAttribute": "fr-idm-link-qualifier",
                "type": "simple",
              },
              "linkType": {
                "ldapAttribute": "fr-idm-link-type",
                "type": "simple",
              },
              "secondId": {
                "ldapAttribute": "fr-idm-link-secondId",
                "type": "simple",
              },
            },
          },
          "locks": {
            "dnTemplate": "ou=locks,dc=openidm,dc=example,dc=com",
            "objectClasses": [
              "uidObject",
              "fr-idm-lock",
            ],
            "properties": {
              "_id": {
                "isRequired": true,
                "ldapAttribute": "uid",
                "type": "simple",
                "writability": "createOnly",
              },
              "nodeId": {
                "ldapAttribute": "fr-idm-lock-nodeid",
                "type": "simple",
              },
            },
          },
          "managed/teammember": {
            "dnTemplate": "ou=people,o=root,ou=identities",
            "namingStrategy": {
              "dnAttribute": "fr-idm-uuid",
              "type": "clientDnNaming",
            },
            "nativeId": false,
            "objectClasses": [
              "person",
              "organizationalPerson",
              "inetOrgPerson",
              "fraas-admin",
              "iplanet-am-user-service",
              "deviceProfilesContainer",
              "devicePrintProfilesContainer",
              "kbaInfoContainer",
              "fr-idm-managed-user-explicit",
              "forgerock-am-dashboard-service",
              "inetuser",
              "iplanet-am-auth-configuration-service",
              "iplanet-am-managed-person",
              "iPlanetPreferences",
              "oathDeviceProfilesContainer",
              "pushDeviceProfilesContainer",
              "sunAMAuthAccountLockout",
              "sunFMSAML2NameIdentifier",
              "webauthnDeviceProfilesContainer",
              "fr-idm-hybrid-obj",
            ],
            "properties": {
              "_id": {
                "ldapAttribute": "fr-idm-uuid",
                "primaryKey": true,
                "type": "simple",
              },
              "_meta": {
                "isMultiValued": false,
                "ldapAttribute": "fr-idm-managed-user-meta",
                "primaryKey": "uid",
                "resourcePath": "managed/teammembermeta",
                "type": "reference",
              },
              "accountStatus": {
                "ldapAttribute": "inetUserStatus",
                "type": "simple",
              },
              "cn": {
                "ldapAttribute": "cn",
                "type": "simple",
              },
              "givenName": {
                "ldapAttribute": "givenName",
                "type": "simple",
              },
              "inviteDate": {
                "ldapAttribute": "fr-idm-inviteDate",
                "type": "simple",
              },
              "jurisdiction": {
                "ldapAttribute": "fr-idm-jurisdiction",
                "type": "simple",
              },
              "mail": {
                "ldapAttribute": "mail",
                "type": "simple",
              },
              "onboardDate": {
                "ldapAttribute": "fr-idm-onboardDate",
                "type": "simple",
              },
              "password": {
                "ldapAttribute": "userPassword",
                "type": "simple",
              },
              "sn": {
                "ldapAttribute": "sn",
                "type": "simple",
              },
              "userName": {
                "ldapAttribute": "uid",
                "type": "simple",
              },
            },
          },
          "managed/teammembergroup": {
            "dnTemplate": "ou=groups,o=root,ou=identities",
            "objectClasses": [
              "groupofuniquenames",
            ],
            "properties": {
              "_id": {
                "ldapAttribute": "cn",
                "primaryKey": true,
                "type": "simple",
              },
              "members": {
                "isMultiValued": true,
                "ldapAttribute": "uniqueMember",
                "type": "simple",
              },
            },
          },
          "recon/assoc": {
            "dnTemplate": "ou=assoc,ou=recon,dc=openidm,dc=example,dc=com",
            "namingStrategy": {
              "dnAttribute": "fr-idm-reconassoc-reconid",
              "type": "clientDnNaming",
            },
            "objectClasses": [
              "fr-idm-reconassoc",
            ],
            "properties": {
              "_id": {
                "isRequired": true,
                "ldapAttribute": "fr-idm-reconassoc-reconid",
                "type": "simple",
              },
              "finishTime": {
                "ldapAttribute": "fr-idm-reconassoc-finishtime",
                "type": "simple",
              },
              "isAnalysis": {
                "ldapAttribute": "fr-idm-reconassoc-isanalysis",
                "type": "simple",
              },
              "mapping": {
                "ldapAttribute": "fr-idm-reconassoc-mapping",
                "type": "simple",
              },
              "sourceResourceCollection": {
                "ldapAttribute": "fr-idm-reconassoc-sourceresourcecollection",
                "type": "simple",
              },
              "targetResourceCollection": {
                "ldapAttribute": "fr-idm-reconassoc-targetresourcecollection",
                "type": "simple",
              },
            },
            "subResources": {
              "entry": {
                "namingStrategy": {
                  "dnAttribute": "uid",
                  "type": "clientDnNaming",
                },
                "resource": "recon-assoc-entry",
                "type": "collection",
              },
            },
          },
          "recon/assoc/entry": {
            "objectClasses": [
              "uidObject",
              "fr-idm-reconassocentry",
            ],
            "properties": {
              "_id": {
                "isRequired": true,
                "ldapAttribute": "uid",
                "type": "simple",
              },
              "action": {
                "ldapAttribute": "fr-idm-reconassocentry-action",
                "type": "simple",
              },
              "ambiguousTargetObjectIds": {
                "ldapAttribute": "fr-idm-reconassocentry-ambiguoustargetobjectids",
                "type": "simple",
              },
              "exception": {
                "ldapAttribute": "fr-idm-reconassocentry-exception",
                "type": "simple",
              },
              "isAnalysis": {
                "ldapAttribute": "fr-idm-reconassoc-isanalysis",
                "type": "simple",
              },
              "linkQualifier": {
                "ldapAttribute": "fr-idm-reconassocentry-linkqualifier",
                "type": "simple",
              },
              "mapping": {
                "ldapAttribute": "fr-idm-reconassoc-mapping",
                "type": "simple",
              },
              "message": {
                "ldapAttribute": "fr-idm-reconassocentry-message",
                "type": "simple",
              },
              "messageDetail": {
                "ldapAttribute": "fr-idm-reconassocentry-messagedetail",
                "type": "simple",
              },
              "phase": {
                "ldapAttribute": "fr-idm-reconassocentry-phase",
                "type": "simple",
              },
              "reconId": {
                "ldapAttribute": "fr-idm-reconassocentry-reconid",
                "type": "simple",
              },
              "situation": {
                "ldapAttribute": "fr-idm-reconassocentry-situation",
                "type": "simple",
              },
              "sourceObjectId": {
                "ldapAttribute": "fr-idm-reconassocentry-sourceObjectId",
                "type": "simple",
              },
              "sourceResourceCollection": {
                "ldapAttribute": "fr-idm-reconassoc-sourceresourcecollection",
                "type": "simple",
              },
              "status": {
                "ldapAttribute": "fr-idm-reconassocentry-status",
                "type": "simple",
              },
              "targetObjectId": {
                "ldapAttribute": "fr-idm-reconassocentry-targetObjectId",
                "type": "simple",
              },
              "targetResourceCollection": {
                "ldapAttribute": "fr-idm-reconassoc-targetresourcecollection",
                "type": "simple",
              },
            },
            "resourceName": "recon-assoc-entry",
            "subResourceRouting": [
              {
                "prefix": "entry",
                "template": "recon/assoc/{reconId}/entry",
              },
            ],
          },
          "sync/queue": {
            "dnTemplate": "ou=queue,ou=sync,dc=openidm,dc=example,dc=com",
            "objectClasses": [
              "uidObject",
              "fr-idm-syncqueue",
            ],
            "properties": {
              "_id": {
                "isRequired": true,
                "ldapAttribute": "uid",
                "type": "simple",
                "writability": "createOnly",
              },
              "context": {
                "ldapAttribute": "fr-idm-syncqueue-context",
                "type": "json",
              },
              "createDate": {
                "ldapAttribute": "fr-idm-syncqueue-createdate",
                "type": "simple",
              },
              "mapping": {
                "ldapAttribute": "fr-idm-syncqueue-mapping",
                "type": "simple",
              },
              "newObject": {
                "ldapAttribute": "fr-idm-syncqueue-newobject",
                "type": "json",
              },
              "nodeId": {
                "ldapAttribute": "fr-idm-syncqueue-nodeid",
                "type": "simple",
              },
              "objectRev": {
                "ldapAttribute": "fr-idm-syncqueue-objectRev",
                "type": "simple",
              },
              "oldObject": {
                "ldapAttribute": "fr-idm-syncqueue-oldobject",
                "type": "json",
              },
              "remainingRetries": {
                "ldapAttribute": "fr-idm-syncqueue-remainingretries",
                "type": "simple",
              },
              "resourceCollection": {
                "ldapAttribute": "fr-idm-syncqueue-resourcecollection",
                "type": "simple",
              },
              "resourceId": {
                "ldapAttribute": "fr-idm-syncqueue-resourceid",
                "type": "simple",
              },
              "state": {
                "ldapAttribute": "fr-idm-syncqueue-state",
                "type": "simple",
              },
              "syncAction": {
                "ldapAttribute": "fr-idm-syncqueue-syncaction",
                "type": "simple",
              },
            },
          },
        },
        "genericMapping": {
          "cluster/*": {
            "dnTemplate": "ou=cluster,dc=openidm,dc=example,dc=com",
            "jsonAttribute": "fr-idm-cluster-json",
            "jsonQueryEqualityMatchingRule": "caseIgnoreJsonQueryMatchClusterObject",
            "objectClasses": [
              "uidObject",
              "fr-idm-cluster-obj",
            ],
          },
          "config": {
            "dnTemplate": "ou=config,dc=openidm,dc=example,dc=com",
          },
          "file": {
            "dnTemplate": "ou=file,dc=openidm,dc=example,dc=com",
          },
          "internal/notification": {
            "dnTemplate": "ou=notification,ou=internal,dc=openidm,dc=example,dc=com",
            "jsonAttribute": "fr-idm-notification-json",
            "jsonQueryEqualityMatchingRule": "caseIgnoreJsonQueryMatch",
            "objectClasses": [
              "uidObject",
              "fr-idm-notification",
            ],
            "properties": {
              "target": {
                "propertyName": "_notifications",
                "resourcePath": "managed/alpha_user",
                "type": "reverseReference",
              },
            },
          },
          "internal/usermeta": {
            "dnTemplate": "ou=usermeta,ou=internal,dc=openidm,dc=example,dc=com",
            "jsonAttribute": "fr-idm-json",
            "jsonQueryEqualityMatchingRule": "caseIgnoreJsonQueryMatch",
            "objectClasses": [
              "uidObject",
              "fr-idm-generic-obj",
            ],
            "properties": {
              "target": {
                "propertyName": "_meta",
                "resourcePath": "managed/alpha_user",
                "type": "reverseReference",
              },
            },
          },
          "jsonstorage": {
            "dnTemplate": "ou=jsonstorage,dc=openidm,dc=example,dc=com",
          },
          "managed/*": {
            "dnTemplate": "ou=managed,dc=openidm,dc=example,dc=com",
          },
          "managed/alpha_group": {
            "dnTemplate": "ou=groups,o=alpha,o=root,ou=identities",
            "idGenerator": {
              "propertyName": "name",
              "type": "property",
            },
            "jsonAttribute": "fr-idm-managed-group-json",
            "jsonQueryEqualityMatchingRule": "caseIgnoreJsonQueryMatch",
            "namingStrategy": {
              "dnAttribute": "cn",
              "type": "clientDnNaming",
            },
            "nativeId": false,
            "objectClasses": [
              "top",
              "groupOfURLs",
              "fr-idm-managed-group",
            ],
            "properties": {
              "_id": {
                "ldapAttribute": "cn",
                "primaryKey": true,
                "type": "simple",
                "writability": "createOnly",
              },
              "_rev": {
                "ldapAttribute": "etag",
                "type": "simple",
              },
              "condition": {
                "ldapAttribute": "fr-idm-managed-group-condition",
                "type": "simple",
              },
              "description": {
                "ldapAttribute": "description",
                "type": "simple",
              },
              "members": {
                "isMultiValued": true,
                "propertyName": "groups",
                "resourcePath": "managed/alpha_user",
                "type": "reverseReference",
              },
            },
          },
          "managed/alpha_organization": {
            "dnTemplate": "ou=organization,o=alpha,o=root,ou=identities",
            "jsonAttribute": "fr-idm-managed-organization-json",
            "jsonQueryEqualityMatchingRule": "caseIgnoreJsonQueryMatch",
            "objectClasses": [
              "uidObject",
              "fr-idm-managed-organization",
              "fr-ext-attrs",
            ],
            "properties": {
              "_id": {
                "ldapAttribute": "uid",
                "type": "simple",
              },
              "admins": {
                "isMultiValued": true,
                "propertyName": "adminOfOrg",
                "resourcePath": "managed/alpha_user",
                "type": "reverseReference",
              },
              "children": {
                "isMultiValued": true,
                "propertyName": "parent",
                "resourcePath": "managed/alpha_organization",
                "type": "reverseReference",
              },
              "members": {
                "isMultiValued": true,
                "propertyName": "memberOfOrg",
                "resourcePath": "managed/alpha_user",
                "type": "reverseReference",
              },
              "name": {
                "ldapAttribute": "fr-idm-managed-organization-name",
                "type": "simple",
              },
              "owners": {
                "isMultiValued": true,
                "propertyName": "ownerOfOrg",
                "resourcePath": "managed/alpha_user",
                "type": "reverseReference",
              },
              "parent": {
                "ldapAttribute": "fr-idm-managed-organization-parent",
                "primaryKey": "uid",
                "resourcePath": "managed/alpha_organization",
                "type": "reference",
              },
            },
          },
          "managed/alpha_role": {
            "dnTemplate": "ou=role,o=alpha,o=root,ou=identities",
            "jsonAttribute": "fr-idm-managed-role-json",
            "jsonQueryEqualityMatchingRule": "caseIgnoreJsonQueryMatchManagedRole",
            "objectClasses": [
              "uidObject",
              "fr-idm-managed-role",
            ],
            "properties": {
              "members": {
                "isMultiValued": true,
                "propertyName": "roles",
                "resourcePath": "managed/alpha_user",
                "type": "reverseReference",
              },
            },
          },
          "managed/alpha_user": {
            "dnTemplate": "ou=user,o=alpha,o=root,ou=identities",
            "jsonAttribute": "fr-idm-custom-attrs",
            "jsonQueryEqualityMatchingRule": "caseIgnoreJsonQueryMatch",
            "namingStrategy": {
              "dnAttribute": "fr-idm-uuid",
              "type": "clientDnNaming",
            },
            "nativeId": false,
            "objectClasses": [
              "person",
              "organizationalPerson",
              "inetOrgPerson",
              "iplanet-am-user-service",
              "devicePrintProfilesContainer",
              "deviceProfilesContainer",
              "kbaInfoContainer",
              "fr-idm-managed-user-explicit",
              "forgerock-am-dashboard-service",
              "inetuser",
              "iplanet-am-auth-configuration-service",
              "iplanet-am-managed-person",
              "iPlanetPreferences",
              "oathDeviceProfilesContainer",
              "pushDeviceProfilesContainer",
              "sunAMAuthAccountLockout",
              "sunFMSAML2NameIdentifier",
              "webauthnDeviceProfilesContainer",
              "fr-idm-hybrid-obj",
              "fr-ext-attrs",
            ],
            "properties": {
              "_id": {
                "ldapAttribute": "fr-idm-uuid",
                "primaryKey": true,
                "type": "simple",
              },
              "_meta": {
                "isMultiValued": false,
                "ldapAttribute": "fr-idm-managed-user-meta",
                "primaryKey": "uid",
                "resourcePath": "managed/alpha_usermeta",
                "type": "reference",
              },
              "_notifications": {
                "isMultiValued": true,
                "ldapAttribute": "fr-idm-managed-user-notifications",
                "primaryKey": "uid",
                "resourcePath": "internal/notification",
                "type": "reference",
              },
              "_rev": {
                "ldapAttribute": "etag",
                "type": "simple",
              },
              "accountStatus": {
                "ldapAttribute": "inetUserStatus",
                "type": "simple",
              },
              "adminOfOrg": {
                "isMultiValued": true,
                "ldapAttribute": "fr-idm-managed-organization-admin",
                "primaryKey": "uid",
                "resourcePath": "managed/alpha_organization",
                "type": "reference",
              },
              "aliasList": {
                "isMultiValued": true,
                "ldapAttribute": "iplanet-am-user-alias-list",
                "type": "simple",
              },
              "assignedDashboard": {
                "isMultiValued": true,
                "ldapAttribute": "assignedDashboard",
                "type": "simple",
              },
              "authzRoles": {
                "isMultiValued": true,
                "ldapAttribute": "fr-idm-managed-user-authzroles-internal-role",
                "primaryKey": "cn",
                "resourcePath": "internal/role",
                "type": "reference",
              },
              "city": {
                "ldapAttribute": "l",
                "type": "simple",
              },
              "cn": {
                "ldapAttribute": "cn",
                "type": "simple",
              },
              "consentedMappings": {
                "isMultiValued": true,
                "ldapAttribute": "fr-idm-consentedMapping",
                "type": "json",
              },
              "country": {
                "ldapAttribute": "co",
                "type": "simple",
              },
              "description": {
                "ldapAttribute": "description",
                "type": "simple",
              },
              "displayName": {
                "ldapAttribute": "displayName",
                "type": "simple",
              },
              "effectiveAssignments": {
                "isMultiValued": true,
                "ldapAttribute": "fr-idm-effectiveAssignment",
                "type": "json",
              },
              "effectiveGroups": {
                "isMultiValued": true,
                "ldapAttribute": "fr-idm-effectiveGroup",
                "type": "json",
              },
              "effectiveRoles": {
                "isMultiValued": true,
                "ldapAttribute": "fr-idm-effectiveRole",
                "type": "json",
              },
              "frIndexedDate1": {
                "ldapAttribute": "fr-attr-idate1",
                "type": "simple",
              },
              "frIndexedDate2": {
                "ldapAttribute": "fr-attr-idate2",
                "type": "simple",
              },
              "frIndexedDate3": {
                "ldapAttribute": "fr-attr-idate3",
                "type": "simple",
              },
              "frIndexedDate4": {
                "ldapAttribute": "fr-attr-idate4",
                "type": "simple",
              },
              "frIndexedDate5": {
                "ldapAttribute": "fr-attr-idate5",
                "type": "simple",
              },
              "frIndexedInteger1": {
                "ldapAttribute": "fr-attr-iint1",
                "type": "simple",
              },
              "frIndexedInteger2": {
                "ldapAttribute": "fr-attr-iint2",
                "type": "simple",
              },
              "frIndexedInteger3": {
                "ldapAttribute": "fr-attr-iint3",
                "type": "simple",
              },
              "frIndexedInteger4": {
                "ldapAttribute": "fr-attr-iint4",
                "type": "simple",
              },
              "frIndexedInteger5": {
                "ldapAttribute": "fr-attr-iint5",
                "type": "simple",
              },
              "frIndexedMultivalued1": {
                "isMultiValued": true,
                "ldapAttribute": "fr-attr-imulti1",
                "type": "simple",
              },
              "frIndexedMultivalued2": {
                "isMultiValued": true,
                "ldapAttribute": "fr-attr-imulti2",
                "type": "simple",
              },
              "frIndexedMultivalued3": {
                "isMultiValued": true,
                "ldapAttribute": "fr-attr-imulti3",
                "type": "simple",
              },
              "frIndexedMultivalued4": {
                "isMultiValued": true,
                "ldapAttribute": "fr-attr-imulti4",
                "type": "simple",
              },
              "frIndexedMultivalued5": {
                "isMultiValued": true,
                "ldapAttribute": "fr-attr-imulti5",
                "type": "simple",
              },
              "frIndexedString1": {
                "ldapAttribute": "fr-attr-istr1",
                "type": "simple",
              },
              "frIndexedString2": {
                "ldapAttribute": "fr-attr-istr2",
                "type": "simple",
              },
              "frIndexedString3": {
                "ldapAttribute": "fr-attr-istr3",
                "type": "simple",
              },
              "frIndexedString4": {
                "ldapAttribute": "fr-attr-istr4",
                "type": "simple",
              },
              "frIndexedString5": {
                "ldapAttribute": "fr-attr-istr5",
                "type": "simple",
              },
              "frUnindexedDate1": {
                "ldapAttribute": "fr-attr-date1",
                "type": "simple",
              },
              "frUnindexedDate2": {
                "ldapAttribute": "fr-attr-date2",
                "type": "simple",
              },
              "frUnindexedDate3": {
                "ldapAttribute": "fr-attr-date3",
                "type": "simple",
              },
              "frUnindexedDate4": {
                "ldapAttribute": "fr-attr-date4",
                "type": "simple",
              },
              "frUnindexedDate5": {
                "ldapAttribute": "fr-attr-date5",
                "type": "simple",
              },
              "frUnindexedInteger1": {
                "ldapAttribute": "fr-attr-int1",
                "type": "simple",
              },
              "frUnindexedInteger2": {
                "ldapAttribute": "fr-attr-int2",
                "type": "simple",
              },
              "frUnindexedInteger3": {
                "ldapAttribute": "fr-attr-int3",
                "type": "simple",
              },
              "frUnindexedInteger4": {
                "ldapAttribute": "fr-attr-int4",
                "type": "simple",
              },
              "frUnindexedInteger5": {
                "ldapAttribute": "fr-attr-int5",
                "type": "simple",
              },
              "frUnindexedMultivalued1": {
                "isMultiValued": true,
                "ldapAttribute": "fr-attr-multi1",
                "type": "simple",
              },
              "frUnindexedMultivalued2": {
                "isMultiValued": true,
                "ldapAttribute": "fr-attr-multi2",
                "type": "simple",
              },
              "frUnindexedMultivalued3": {
                "isMultiValued": true,
                "ldapAttribute": "fr-attr-multi3",
                "type": "simple",
              },
              "frUnindexedMultivalued4": {
                "isMultiValued": true,
                "ldapAttribute": "fr-attr-multi4",
                "type": "simple",
              },
              "frUnindexedMultivalued5": {
                "isMultiValued": true,
                "ldapAttribute": "fr-attr-multi5",
                "type": "simple",
              },
              "frUnindexedString1": {
                "ldapAttribute": "fr-attr-str1",
                "type": "simple",
              },
              "frUnindexedString2": {
                "ldapAttribute": "fr-attr-str2",
                "type": "simple",
              },
              "frUnindexedString3": {
                "ldapAttribute": "fr-attr-str3",
                "type": "simple",
              },
              "frUnindexedString4": {
                "ldapAttribute": "fr-attr-str4",
                "type": "simple",
              },
              "frUnindexedString5": {
                "ldapAttribute": "fr-attr-str5",
                "type": "simple",
              },
              "givenName": {
                "ldapAttribute": "givenName",
                "type": "simple",
              },
              "groups": {
                "isMultiValued": true,
                "ldapAttribute": "fr-idm-managed-user-groups",
                "primaryKey": "cn",
                "resourcePath": "managed/alpha_group",
                "type": "reference",
              },
              "kbaInfo": {
                "isMultiValued": true,
                "ldapAttribute": "fr-idm-kbaInfo",
                "type": "json",
              },
              "lastSync": {
                "ldapAttribute": "fr-idm-lastSync",
                "type": "json",
              },
              "mail": {
                "ldapAttribute": "mail",
                "type": "simple",
              },
              "manager": {
                "isMultiValued": false,
                "ldapAttribute": "fr-idm-managed-user-manager",
                "primaryKey": "uid",
                "resourcePath": "managed/alpha_user",
                "type": "reference",
              },
              "memberOfOrg": {
                "isMultiValued": true,
                "ldapAttribute": "fr-idm-managed-organization-member",
                "primaryKey": "uid",
                "resourcePath": "managed/alpha_organization",
                "type": "reference",
              },
              "memberOfOrgIDs": {
                "isMultiValued": true,
                "ldapAttribute": "fr-idm-managed-user-memberoforgid",
                "type": "simple",
              },
              "ownerOfOrg": {
                "isMultiValued": true,
                "ldapAttribute": "fr-idm-managed-organization-owner",
                "primaryKey": "uid",
                "resourcePath": "managed/alpha_organization",
                "type": "reference",
              },
              "password": {
                "ldapAttribute": "userPassword",
                "type": "simple",
              },
              "postalAddress": {
                "ldapAttribute": "street",
                "type": "simple",
              },
              "postalCode": {
                "ldapAttribute": "postalCode",
                "type": "simple",
              },
              "preferences": {
                "ldapAttribute": "fr-idm-preferences",
                "type": "json",
              },
              "profileImage": {
                "ldapAttribute": "labeledURI",
                "type": "simple",
              },
              "reports": {
                "isMultiValued": true,
                "propertyName": "manager",
                "resourcePath": "managed/alpha_user",
                "type": "reverseReference",
              },
              "roles": {
                "isMultiValued": true,
                "ldapAttribute": "fr-idm-managed-user-roles",
                "primaryKey": "uid",
                "resourcePath": "managed/alpha_role",
                "type": "reference",
              },
              "sn": {
                "ldapAttribute": "sn",
                "type": "simple",
              },
              "stateProvince": {
                "ldapAttribute": "st",
                "type": "simple",
              },
              "telephoneNumber": {
                "ldapAttribute": "telephoneNumber",
                "type": "simple",
              },
              "userName": {
                "ldapAttribute": "uid",
                "type": "simple",
              },
            },
          },
          "managed/alpha_usermeta": {
            "dnTemplate": "ou=usermeta,o=alpha,o=root,ou=identities",
            "jsonAttribute": "fr-idm-json",
            "jsonQueryEqualityMatchingRule": "caseIgnoreJsonQueryMatch",
            "objectClasses": [
              "uidObject",
              "fr-idm-generic-obj",
            ],
            "properties": {
              "target": {
                "propertyName": "_meta",
                "resourcePath": "managed/alpha_user",
                "type": "reverseReference",
              },
            },
          },
          "managed/bravo_group": {
            "dnTemplate": "ou=groups,o=bravo,o=root,ou=identities",
            "idGenerator": {
              "propertyName": "name",
              "type": "property",
            },
            "jsonAttribute": "fr-idm-managed-group-json",
            "jsonQueryEqualityMatchingRule": "caseIgnoreJsonQueryMatch",
            "namingStrategy": {
              "dnAttribute": "cn",
              "type": "clientDnNaming",
            },
            "nativeId": false,
            "objectClasses": [
              "top",
              "groupOfURLs",
              "fr-idm-managed-group",
            ],
            "properties": {
              "_id": {
                "ldapAttribute": "cn",
                "primaryKey": true,
                "type": "simple",
                "writability": "createOnly",
              },
              "_rev": {
                "ldapAttribute": "etag",
                "type": "simple",
              },
              "condition": {
                "ldapAttribute": "fr-idm-managed-group-condition",
                "type": "simple",
              },
              "description": {
                "ldapAttribute": "description",
                "type": "simple",
              },
              "members": {
                "isMultiValued": true,
                "propertyName": "groups",
                "resourcePath": "managed/bravo_user",
                "type": "reverseReference",
              },
            },
          },
          "managed/bravo_organization": {
            "dnTemplate": "ou=organization,o=bravo,o=root,ou=identities",
            "jsonAttribute": "fr-idm-managed-organization-json",
            "jsonQueryEqualityMatchingRule": "caseIgnoreJsonQueryMatch",
            "objectClasses": [
              "uidObject",
              "fr-idm-managed-organization",
              "fr-ext-attrs",
            ],
            "properties": {
              "_id": {
                "ldapAttribute": "uid",
                "type": "simple",
              },
              "admins": {
                "isMultiValued": true,
                "propertyName": "adminOfOrg",
                "resourcePath": "managed/bravo_user",
                "type": "reverseReference",
              },
              "children": {
                "isMultiValued": true,
                "propertyName": "parent",
                "resourcePath": "managed/bravo_organization",
                "type": "reverseReference",
              },
              "members": {
                "isMultiValued": true,
                "propertyName": "memberOfOrg",
                "resourcePath": "managed/bravo_user",
                "type": "reverseReference",
              },
              "name": {
                "ldapAttribute": "fr-idm-managed-organization-name",
                "type": "simple",
              },
              "owners": {
                "isMultiValued": true,
                "propertyName": "ownerOfOrg",
                "resourcePath": "managed/bravo_user",
                "type": "reverseReference",
              },
              "parent": {
                "ldapAttribute": "fr-idm-managed-organization-parent",
                "primaryKey": "uid",
                "resourcePath": "managed/bravo_organization",
                "type": "reference",
              },
            },
          },
          "managed/bravo_role": {
            "dnTemplate": "ou=role,o=bravo,o=root,ou=identities",
            "jsonAttribute": "fr-idm-managed-role-json",
            "jsonQueryEqualityMatchingRule": "caseIgnoreJsonQueryMatchManagedRole",
            "objectClasses": [
              "uidObject",
              "fr-idm-managed-role",
            ],
            "properties": {
              "members": {
                "isMultiValued": true,
                "propertyName": "roles",
                "resourcePath": "managed/bravo_user",
                "type": "reverseReference",
              },
            },
          },
          "managed/bravo_user": {
            "dnTemplate": "ou=user,o=bravo,o=root,ou=identities",
            "jsonAttribute": "fr-idm-custom-attrs",
            "jsonQueryEqualityMatchingRule": "caseIgnoreJsonQueryMatch",
            "namingStrategy": {
              "dnAttribute": "fr-idm-uuid",
              "type": "clientDnNaming",
            },
            "nativeId": false,
            "objectClasses": [
              "person",
              "organizationalPerson",
              "inetOrgPerson",
              "iplanet-am-user-service",
              "devicePrintProfilesContainer",
              "deviceProfilesContainer",
              "kbaInfoContainer",
              "fr-idm-managed-user-explicit",
              "forgerock-am-dashboard-service",
              "inetuser",
              "iplanet-am-auth-configuration-service",
              "iplanet-am-managed-person",
              "iPlanetPreferences",
              "oathDeviceProfilesContainer",
              "pushDeviceProfilesContainer",
              "sunAMAuthAccountLockout",
              "sunFMSAML2NameIdentifier",
              "webauthnDeviceProfilesContainer",
              "fr-idm-hybrid-obj",
              "fr-ext-attrs",
            ],
            "properties": {
              "_id": {
                "ldapAttribute": "fr-idm-uuid",
                "primaryKey": true,
                "type": "simple",
              },
              "_meta": {
                "isMultiValued": false,
                "ldapAttribute": "fr-idm-managed-user-meta",
                "primaryKey": "uid",
                "resourcePath": "managed/bravo_usermeta",
                "type": "reference",
              },
              "_notifications": {
                "isMultiValued": true,
                "ldapAttribute": "fr-idm-managed-user-notifications",
                "primaryKey": "uid",
                "resourcePath": "internal/notification",
                "type": "reference",
              },
              "_rev": {
                "ldapAttribute": "etag",
                "type": "simple",
              },
              "accountStatus": {
                "ldapAttribute": "inetUserStatus",
                "type": "simple",
              },
              "adminOfOrg": {
                "isMultiValued": true,
                "ldapAttribute": "fr-idm-managed-organization-admin",
                "primaryKey": "uid",
                "resourcePath": "managed/bravo_organization",
                "type": "reference",
              },
              "aliasList": {
                "isMultiValued": true,
                "ldapAttribute": "iplanet-am-user-alias-list",
                "type": "simple",
              },
              "assignedDashboard": {
                "isMultiValued": true,
                "ldapAttribute": "assignedDashboard",
                "type": "simple",
              },
              "authzRoles": {
                "isMultiValued": true,
                "ldapAttribute": "fr-idm-managed-user-authzroles-internal-role",
                "primaryKey": "cn",
                "resourcePath": "internal/role",
                "type": "reference",
              },
              "city": {
                "ldapAttribute": "l",
                "type": "simple",
              },
              "cn": {
                "ldapAttribute": "cn",
                "type": "simple",
              },
              "consentedMappings": {
                "isMultiValued": true,
                "ldapAttribute": "fr-idm-consentedMapping",
                "type": "json",
              },
              "country": {
                "ldapAttribute": "co",
                "type": "simple",
              },
              "description": {
                "ldapAttribute": "description",
                "type": "simple",
              },
              "displayName": {
                "ldapAttribute": "displayName",
                "type": "simple",
              },
              "effectiveAssignments": {
                "isMultiValued": true,
                "ldapAttribute": "fr-idm-effectiveAssignment",
                "type": "json",
              },
              "effectiveGroups": {
                "isMultiValued": true,
                "ldapAttribute": "fr-idm-effectiveGroup",
                "type": "json",
              },
              "effectiveRoles": {
                "isMultiValued": true,
                "ldapAttribute": "fr-idm-effectiveRole",
                "type": "json",
              },
              "frIndexedDate1": {
                "ldapAttribute": "fr-attr-idate1",
                "type": "simple",
              },
              "frIndexedDate2": {
                "ldapAttribute": "fr-attr-idate2",
                "type": "simple",
              },
              "frIndexedDate3": {
                "ldapAttribute": "fr-attr-idate3",
                "type": "simple",
              },
              "frIndexedDate4": {
                "ldapAttribute": "fr-attr-idate4",
                "type": "simple",
              },
              "frIndexedDate5": {
                "ldapAttribute": "fr-attr-idate5",
                "type": "simple",
              },
              "frIndexedInteger1": {
                "ldapAttribute": "fr-attr-iint1",
                "type": "simple",
              },
              "frIndexedInteger2": {
                "ldapAttribute": "fr-attr-iint2",
                "type": "simple",
              },
              "frIndexedInteger3": {
                "ldapAttribute": "fr-attr-iint3",
                "type": "simple",
              },
              "frIndexedInteger4": {
                "ldapAttribute": "fr-attr-iint4",
                "type": "simple",
              },
              "frIndexedInteger5": {
                "ldapAttribute": "fr-attr-iint5",
                "type": "simple",
              },
              "frIndexedMultivalued1": {
                "isMultiValued": true,
                "ldapAttribute": "fr-attr-imulti1",
                "type": "simple",
              },
              "frIndexedMultivalued2": {
                "isMultiValued": true,
                "ldapAttribute": "fr-attr-imulti2",
                "type": "simple",
              },
              "frIndexedMultivalued3": {
                "isMultiValued": true,
                "ldapAttribute": "fr-attr-imulti3",
                "type": "simple",
              },
              "frIndexedMultivalued4": {
                "isMultiValued": true,
                "ldapAttribute": "fr-attr-imulti4",
                "type": "simple",
              },
              "frIndexedMultivalued5": {
                "isMultiValued": true,
                "ldapAttribute": "fr-attr-imulti5",
                "type": "simple",
              },
              "frIndexedString1": {
                "ldapAttribute": "fr-attr-istr1",
                "type": "simple",
              },
              "frIndexedString2": {
                "ldapAttribute": "fr-attr-istr2",
                "type": "simple",
              },
              "frIndexedString3": {
                "ldapAttribute": "fr-attr-istr3",
                "type": "simple",
              },
              "frIndexedString4": {
                "ldapAttribute": "fr-attr-istr4",
                "type": "simple",
              },
              "frIndexedString5": {
                "ldapAttribute": "fr-attr-istr5",
                "type": "simple",
              },
              "frUnindexedDate1": {
                "ldapAttribute": "fr-attr-date1",
                "type": "simple",
              },
              "frUnindexedDate2": {
                "ldapAttribute": "fr-attr-date2",
                "type": "simple",
              },
              "frUnindexedDate3": {
                "ldapAttribute": "fr-attr-date3",
                "type": "simple",
              },
              "frUnindexedDate4": {
                "ldapAttribute": "fr-attr-date4",
                "type": "simple",
              },
              "frUnindexedDate5": {
                "ldapAttribute": "fr-attr-date5",
                "type": "simple",
              },
              "frUnindexedInteger1": {
                "ldapAttribute": "fr-attr-int1",
                "type": "simple",
              },
              "frUnindexedInteger2": {
                "ldapAttribute": "fr-attr-int2",
                "type": "simple",
              },
              "frUnindexedInteger3": {
                "ldapAttribute": "fr-attr-int3",
                "type": "simple",
              },
              "frUnindexedInteger4": {
                "ldapAttribute": "fr-attr-int4",
                "type": "simple",
              },
              "frUnindexedInteger5": {
                "ldapAttribute": "fr-attr-int5",
                "type": "simple",
              },
              "frUnindexedMultivalued1": {
                "isMultiValued": true,
                "ldapAttribute": "fr-attr-multi1",
                "type": "simple",
              },
              "frUnindexedMultivalued2": {
                "isMultiValued": true,
                "ldapAttribute": "fr-attr-multi2",
                "type": "simple",
              },
              "frUnindexedMultivalued3": {
                "isMultiValued": true,
                "ldapAttribute": "fr-attr-multi3",
                "type": "simple",
              },
              "frUnindexedMultivalued4": {
                "isMultiValued": true,
                "ldapAttribute": "fr-attr-multi4",
                "type": "simple",
              },
              "frUnindexedMultivalued5": {
                "isMultiValued": true,
                "ldapAttribute": "fr-attr-multi5",
                "type": "simple",
              },
              "frUnindexedString1": {
                "ldapAttribute": "fr-attr-str1",
                "type": "simple",
              },
              "frUnindexedString2": {
                "ldapAttribute": "fr-attr-str2",
                "type": "simple",
              },
              "frUnindexedString3": {
                "ldapAttribute": "fr-attr-str3",
                "type": "simple",
              },
              "frUnindexedString4": {
                "ldapAttribute": "fr-attr-str4",
                "type": "simple",
              },
              "frUnindexedString5": {
                "ldapAttribute": "fr-attr-str5",
                "type": "simple",
              },
              "givenName": {
                "ldapAttribute": "givenName",
                "type": "simple",
              },
              "groups": {
                "isMultiValued": true,
                "ldapAttribute": "fr-idm-managed-user-groups",
                "primaryKey": "cn",
                "resourcePath": "managed/bravo_group",
                "type": "reference",
              },
              "kbaInfo": {
                "isMultiValued": true,
                "ldapAttribute": "fr-idm-kbaInfo",
                "type": "json",
              },
              "lastSync": {
                "ldapAttribute": "fr-idm-lastSync",
                "type": "json",
              },
              "mail": {
                "ldapAttribute": "mail",
                "type": "simple",
              },
              "manager": {
                "isMultiValued": false,
                "ldapAttribute": "fr-idm-managed-user-manager",
                "primaryKey": "uid",
                "resourcePath": "managed/bravo_user",
                "type": "reference",
              },
              "memberOfOrg": {
                "isMultiValued": true,
                "ldapAttribute": "fr-idm-managed-organization-member",
                "primaryKey": "uid",
                "resourcePath": "managed/bravo_organization",
                "type": "reference",
              },
              "memberOfOrgIDs": {
                "isMultiValued": true,
                "ldapAttribute": "fr-idm-managed-user-memberoforgid",
                "type": "simple",
              },
              "ownerOfOrg": {
                "isMultiValued": true,
                "ldapAttribute": "fr-idm-managed-organization-owner",
                "primaryKey": "uid",
                "resourcePath": "managed/bravo_organization",
                "type": "reference",
              },
              "password": {
                "ldapAttribute": "userPassword",
                "type": "simple",
              },
              "postalAddress": {
                "ldapAttribute": "street",
                "type": "simple",
              },
              "postalCode": {
                "ldapAttribute": "postalCode",
                "type": "simple",
              },
              "preferences": {
                "ldapAttribute": "fr-idm-preferences",
                "type": "json",
              },
              "profileImage": {
                "ldapAttribute": "labeledURI",
                "type": "simple",
              },
              "reports": {
                "isMultiValued": true,
                "propertyName": "manager",
                "resourcePath": "managed/bravo_user",
                "type": "reverseReference",
              },
              "roles": {
                "isMultiValued": true,
                "ldapAttribute": "fr-idm-managed-user-roles",
                "primaryKey": "uid",
                "resourcePath": "managed/bravo_role",
                "type": "reference",
              },
              "sn": {
                "ldapAttribute": "sn",
                "type": "simple",
              },
              "stateProvince": {
                "ldapAttribute": "st",
                "type": "simple",
              },
              "telephoneNumber": {
                "ldapAttribute": "telephoneNumber",
                "type": "simple",
              },
              "userName": {
                "ldapAttribute": "uid",
                "type": "simple",
              },
            },
          },
          "managed/bravo_usermeta": {
            "dnTemplate": "ou=usermeta,o=bravo,o=root,ou=identities",
            "jsonAttribute": "fr-idm-json",
            "jsonQueryEqualityMatchingRule": "caseIgnoreJsonQueryMatch",
            "objectClasses": [
              "uidObject",
              "fr-idm-generic-obj",
            ],
            "properties": {
              "target": {
                "propertyName": "_meta",
                "resourcePath": "managed/bravo_user",
                "type": "reverseReference",
              },
            },
          },
          "managed/teammembermeta": {
            "dnTemplate": "ou=teammembermeta,o=root,ou=identities",
            "jsonAttribute": "fr-idm-json",
            "jsonQueryEqualityMatchingRule": "caseIgnoreJsonQueryMatch",
            "objectClasses": [
              "uidObject",
              "fr-idm-generic-obj",
            ],
            "properties": {
              "target": {
                "propertyName": "_meta",
                "resourcePath": "managed/teammember",
                "type": "reverseReference",
              },
            },
          },
          "reconprogressstate": {
            "dnTemplate": "ou=reconprogressstate,dc=openidm,dc=example,dc=com",
          },
          "relationships": {
            "dnTemplate": "ou=relationships,dc=openidm,dc=example,dc=com",
            "jsonAttribute": "fr-idm-relationship-json",
            "jsonQueryEqualityMatchingRule": "caseIgnoreJsonQueryMatchRelationship",
            "objectClasses": [
              "uidObject",
              "fr-idm-relationship",
            ],
          },
          "scheduler": {
            "dnTemplate": "ou=scheduler,dc=openidm,dc=example,dc=com",
          },
          "scheduler/*": {
            "dnTemplate": "ou=scheduler,dc=openidm,dc=example,dc=com",
          },
          "ui/*": {
            "dnTemplate": "ou=ui,dc=openidm,dc=example,dc=com",
          },
          "updates": {
            "dnTemplate": "ou=updates,dc=openidm,dc=example,dc=com",
          },
        },
      },
      "rest2LdapOptions": {
        "mvccAttribute": "etag",
        "readOnUpdatePolicy": "controls",
        "returnNullForMissingProperties": true,
        "useMvcc": true,
        "usePermissiveModify": true,
        "useSubtreeDelete": true,
      },
      "security": {
        "keyManager": "jvm",
        "trustManager": "jvm",
      },
    },
    "repo.init": {
      "_id": "repo.init",
      "insert": {
        "internal/role": [
          {
            "description": "Administrative access",
            "id": "openidm-admin",
            "name": "openidm-admin",
          },
          {
            "description": "Basic minimum user",
            "id": "openidm-authorized",
            "name": "openidm-authorized",
          },
          {
            "description": "Anonymous access",
            "id": "openidm-reg",
            "name": "openidm-reg",
          },
          {
            "description": "Authenticated via certificate",
            "id": "openidm-cert",
            "name": "openidm-cert",
          },
          {
            "description": "Allowed to reassign workflow tasks",
            "id": "openidm-tasks-manager",
            "name": "openidm-tasks-manager",
          },
          {
            "description": "Platform provisioning access",
            "id": "platform-provisioning",
            "name": "platform-provisioning",
          },
        ],
        "internal/user": [
          {
            "id": "openidm-admin",
            "password": "&{openidm.admin.password}",
          },
          {
            "id": "anonymous",
            "password": "anonymous",
          },
          {
            "id": "idm-provisioning",
          },
          {
            "id": "connector-server-client",
          },
        ],
      },
    },
    "router": {
      "_id": "router",
      "filters": [
        {
          "condition": {
            "source": "context.caller.external === true || context.current.name === 'selfservice'",
            "type": "text/javascript",
          },
          "onRequest": {
            "source": "require('fraas-authz').testAccess()",
            "type": "text/javascript",
          },
          "pattern": "^(managed|internal)($|(/.+))",
        },
        {
          "condition": {
            "source": "context.caller.external === true || context.current.name === 'selfservice'",
            "type": "text/javascript",
          },
          "evaluatePrivileges": true,
          "onRequest": {
            "source": "require('router-authz').testAccess()",
            "type": "text/javascript",
          },
        },
        {
          "methods": [
            "create",
            "update",
          ],
          "onRequest": {
            "file": "policyFilter.js",
            "type": "text/javascript",
          },
          "pattern": "^(managed|system|internal)($|(/.+))",
        },
        {
          "condition": {
            "source": "context.caller.external === true && (typeof context.privilege === 'undefined' || Object.keys(context.privilege.matchingPrivileges).length === 0)",
            "type": "text/javascript",
          },
          "onResponse": {
            "source": "require('relationshipFilter').filterResponse()",
            "type": "text/javascript",
          },
          "pattern": "^(managed|internal)($|(/.+))",
        },
        {
          "condition": {
            "source": "require('emailFilter').isAdminTemplate()",
            "type": "text/javascript",
          },
          "methods": [
            "action",
          ],
          "onRequest": {
            "source": "require('emailFilter').handleAdminTemplate()",
            "type": "text/javascript",
          },
          "pattern": "^external/email",
        },
        {
          "methods": [
            "create",
            "patch",
            "read",
            "update",
          ],
          "onRequest": {
            "source": "require('userPropertyConversion').filterRequest();",
            "type": "text/javascript",
          },
          "pattern": "^(repo/managed/alpha_user|repo/managed/bravo_user)($|(/.+))",
        },
        {
          "methods": [
            "create",
            "read",
            "update",
            "delete",
            "patch",
          ],
          "onResponse": {
            "source": "require('userPropertyConversion').filterResponse();",
            "type": "text/javascript",
          },
          "pattern": "^(repo/managed/alpha_user|repo/managed/bravo_user)($|(/.+))",
        },
        {
          "methods": [
            "create",
            "patch",
            "update",
          ],
          "onRequest": {
            "file": "script/checkRequestPropertiesFilter.js",
            "type": "text/javascript",
          },
          "pattern": "^(managed/alpha_user|managed/bravo_user)($|(/.+))",
        },
        {
          "methods": [
            "patch",
            "update",
          ],
          "onRequest": {
            "file": "script/checkSchemaPropertiesFilter.js",
            "type": "text/javascript",
          },
          "pattern": "^config/managed$",
        },
      ],
    },
    "scheduler": {
      "_id": "scheduler",
      "scheduler": {
        "executePersistentSchedules": {
          "$bool": "&{openidm.scheduler.execute.persistent.schedules}",
        },
      },
      "threadPool": {
        "threadCount": 10,
      },
    },
    "script": {
      "ECMAScript": {
        "#javascript.debug": "&{openidm.script.javascript.debug}",
        "javascript.recompile.minimumInterval": 60000,
      },
      "Groovy": {
        "#groovy.disabled.global.ast.transformations": "",
        "#groovy.errors.tolerance": 10,
        "#groovy.output.debug": false,
        "#groovy.output.verbose": false,
        "#groovy.script.base": "#any class extends groovy.lang.Script",
        "#groovy.script.extension": ".groovy",
        "#groovy.source.encoding": "utf-8 #default US-ASCII",
        "#groovy.target.bytecode": "1.5",
        "#groovy.target.indy": true,
        "#groovy.warnings": "likely errors #othere values [none,likely,possible,paranoia]",
        "groovy.classpath": "&{idm.install.dir}/lib",
        "groovy.recompile": true,
        "groovy.recompile.minimumInterval": 60000,
        "groovy.source.encoding": "UTF-8",
        "groovy.target.directory": "&{idm.install.dir}/classes",
      },
      "_id": "script",
      "properties": {},
      "sources": {
        "default": {
          "directory": "&{idm.install.dir}/bin/defaults/script",
        },
        "install": {
          "directory": "&{idm.install.dir}",
        },
        "project": {
          "directory": "&{idm.instance.dir}",
        },
        "project-script": {
          "directory": "&{idm.instance.dir}/script",
        },
      },
    },
    "secrets": {
      "_id": "secrets",
      "populateDefaults": true,
      "stores": [
        {
          "class": "org.forgerock.openidm.secrets.config.FileBasedStore",
          "config": {
            "file": "&{openidm.keystore.location|&{idm.install.dir}/security/keystore.jceks}",
            "mappings": [
              {
                "aliases": [
                  "&{openidm.config.crypto.alias|openidm-sym-default}",
                  "openidm-localhost",
                ],
                "secretId": "idm.default",
                "types": [
                  "ENCRYPT",
                  "DECRYPT",
                ],
              },
              {
                "aliases": [
                  "&{openidm.config.crypto.alias|openidm-sym-default}",
                ],
                "secretId": "idm.config.encryption",
                "types": [
                  "ENCRYPT",
                  "DECRYPT",
                ],
              },
              {
                "aliases": [
                  "&{openidm.config.crypto.alias|openidm-sym-default}",
                ],
                "secretId": "idm.password.encryption",
                "types": [
                  "ENCRYPT",
                  "DECRYPT",
                ],
              },
              {
                "aliases": [
                  "&{openidm.https.keystore.cert.alias|openidm-localhost}",
                ],
                "secretId": "idm.jwt.session.module.encryption",
                "types": [
                  "ENCRYPT",
                  "DECRYPT",
                ],
              },
              {
                "aliases": [
                  "&{openidm.config.crypto.jwtsession.hmackey.alias|openidm-jwtsessionhmac-key}",
                ],
                "secretId": "idm.jwt.session.module.signing",
                "types": [
                  "SIGN",
                  "VERIFY",
                ],
              },
              {
                "aliases": [
                  "selfservice",
                ],
                "secretId": "idm.selfservice.encryption",
                "types": [
                  "ENCRYPT",
                  "DECRYPT",
                ],
              },
              {
                "aliases": [
                  "&{openidm.config.crypto.selfservice.sharedkey.alias|openidm-selfservice-key}",
                ],
                "secretId": "idm.selfservice.signing",
                "types": [
                  "SIGN",
                  "VERIFY",
                ],
              },
            ],
            "providerName": "&{openidm.keystore.provider|SunJCE}",
            "storePassword": "&{openidm.keystore.password|changeit}",
            "storetype": "&{openidm.keystore.type|JCEKS}",
          },
          "name": "mainKeyStore",
        },
        {
          "class": "org.forgerock.openidm.secrets.config.FileBasedStore",
          "config": {
            "file": "&{openidm.truststore.location|&{idm.install.dir}/security/truststore}",
            "mappings": [],
            "providerName": "&{openidm.truststore.provider|SUN}",
            "storePassword": "&{openidm.truststore.password|changeit}",
            "storetype": "&{openidm.truststore.type|JKS}",
          },
          "name": "mainTrustStore",
        },
      ],
    },
    "selfservice.kba": {
      "_id": "selfservice.kba",
      "kbaPropertyName": "kbaInfo",
      "minimumAnswersToDefine": 1,
      "minimumAnswersToVerify": 1,
      "questions": {
        "1": {
          "en": "What's your favorite color?",
        },
      },
    },
    "selfservice.propertymap": {
      "_id": "selfservice.propertymap",
      "properties": [
        {
          "source": "givenName",
          "target": "givenName",
        },
        {
          "source": "familyName",
          "target": "sn",
        },
        {
          "source": "email",
          "target": "mail",
        },
        {
          "condition": "/object/postalAddress  pr",
          "source": "postalAddress",
          "target": "postalAddress",
        },
        {
          "condition": "/object/addressLocality  pr",
          "source": "addressLocality",
          "target": "city",
        },
        {
          "condition": "/object/addressRegion  pr",
          "source": "addressRegion",
          "target": "stateProvince",
        },
        {
          "condition": "/object/postalCode  pr",
          "source": "postalCode",
          "target": "postalCode",
        },
        {
          "condition": "/object/country  pr",
          "source": "country",
          "target": "country",
        },
        {
          "condition": "/object/phone  pr",
          "source": "phone",
          "target": "telephoneNumber",
        },
        {
          "source": "username",
          "target": "userName",
        },
      ],
    },
    "selfservice.terms": {
      "_id": "selfservice.terms",
      "active": "0.0",
      "uiConfig": {
        "buttonText": "Accept",
        "displayName": "We've updated our terms",
        "purpose": "You must accept the updated terms in order to proceed.",
      },
      "versions": [
        {
          "createDate": "2019-10-28T04:20:11.320Z",
          "termsTranslations": {
            "en": "Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.",
          },
          "version": "0.0",
        },
      ],
    },
    "selfservice/registration": {
      "_id": "selfservice/registration",
      "allInOneRegistration": true,
      "snapshotToken": {
        "encryptionMethod": "A128CBC_HS256",
        "jweAlgorithm": "RSAES_PKCS1_V1_5",
        "jwsAlgorithm": "HS256",
        "tokenExpiry": 300,
        "type": "jwt",
      },
      "stageConfigs": [
        {
          "name": "parameters",
          "parameterNames": [
            "returnParams",
          ],
        },
        {
          "identityEmailField": "mail",
          "identityServiceUrl": "managed/alpha_user",
          "name": "idmUserDetails",
          "registrationProperties": [
            "userName",
            "givenName",
            "sn",
            "mail",
          ],
          "socialRegistrationEnabled": false,
        },
        {
          "kbaConfig": null,
          "name": "kbaSecurityAnswerDefinitionStage",
        },
        {
          "identityServiceUrl": "managed/alpha_user",
          "name": "selfRegistration",
        },
        {
          "identityPasswordField": "password",
          "identityUsernameField": "userName",
          "name": "localAutoLogin",
          "successUrl": "",
        },
      ],
      "storage": "stateless",
    },
    "selfservice/reset": {
      "_id": "selfservice/reset",
      "snapshotToken": {
        "encryptionMethod": "A128CBC_HS256",
        "jweAlgorithm": "RSAES_PKCS1_V1_5",
        "jwsAlgorithm": "HS256",
        "tokenExpiry": 300,
        "type": "jwt",
      },
      "stageConfigs": [
        {
          "name": "parameters",
          "parameterNames": [
            "returnParams",
          ],
        },
        {
          "identityEmailField": "mail",
          "identityIdField": "_id",
          "identityServiceUrl": "managed/alpha_user",
          "identityUsernameField": "userName",
          "name": "userQuery",
          "validQueryFields": [
            "userName",
            "mail",
            "givenName",
            "sn",
          ],
        },
        {
          "identityServiceUrl": "managed/alpha_user",
          "kbaConfig": null,
          "kbaPropertyName": "kbaInfo",
          "name": "kbaSecurityAnswerVerificationStage",
        },
        {
          "identityPasswordField": "password",
          "identityServiceUrl": "managed/alpha_user",
          "name": "resetStage",
        },
      ],
      "storage": "stateless",
    },
    "servletfilter/cors": {
      "_id": "servletfilter/cors",
      "classPathURLs": [],
      "filterClass": "org.eclipse.jetty.servlets.CrossOriginFilter",
      "initParams": {
        "allowCredentials": false,
        "allowedHeaders": "authorization,accept,content-type,origin,x-requested-with,cache-control,accept-api-version",
        "allowedMethods": "GET,POST,PUT,DELETE,PATCH",
        "allowedOrigins": "*",
        "chainPreflight": false,
        "exposedHeaders": "WWW-Authenticate",
      },
      "requestAttributes": {},
      "scriptExtensions": {},
      "systemProperties": {},
      "urlPatterns": [
        "/*",
      ],
    },
    "servletfilter/payload": {
      "_id": "servletfilter/payload",
      "classPathURLs": [],
      "filterClass": "org.forgerock.openidm.jetty.LargePayloadServletFilter",
      "initParams": {
        "maxRequestSizeInMegabytes": 5,
      },
      "requestAttributes": {},
      "scriptExtensions": {},
      "systemProperties": {},
      "urlPatterns": [
        "&{openidm.servlet.alias}/*",
      ],
    },
    "servletfilter/upload": {
      "_id": "servletfilter/upload",
      "classPathURLs": [],
      "filterClass": "org.forgerock.openidm.jetty.LargePayloadServletFilter",
      "initParams": {
        "maxRequestSizeInMegabytes": 50,
      },
      "requestAttributes": {},
      "scriptExtensions": {},
      "systemProperties": {},
      "urlPatterns": [
        "&{openidm.servlet.upload.alias}/*",
      ],
    },
    "ui.context/admin": {
      "_id": "ui.context/admin",
      "defaultDir": "&{idm.install.dir}/ui/admin/default",
      "enabled": true,
      "extensionDir": "&{idm.install.dir}/ui/admin/extension",
      "responseHeaders": {
        "X-Frame-Options": "SAMEORIGIN",
      },
      "urlContextRoot": "/admin",
    },
    "ui.context/api": {
      "_id": "ui.context/api",
      "authEnabled": true,
      "cacheEnabled": false,
      "defaultDir": "&{idm.install.dir}/ui/api/default",
      "enabled": true,
      "extensionDir": "&{idm.install.dir}/ui/api/extension",
      "urlContextRoot": "/api",
    },
    "ui.context/enduser": {
      "_id": "ui.context/enduser",
      "defaultDir": "&{idm.install.dir}/ui/enduser",
      "enabled": true,
      "responseHeaders": {
        "X-Frame-Options": "DENY",
      },
      "urlContextRoot": "/",
    },
    "ui.context/oauth": {
      "_id": "ui.context/oauth",
      "cacheEnabled": true,
      "defaultDir": "&{idm.install.dir}/ui/oauth/default",
      "enabled": true,
      "extensionDir": "&{idm.install.dir}/ui/oauth/extension",
      "urlContextRoot": "/oauthReturn",
    },
    "ui/configuration": {
      "_id": "ui/configuration",
      "configuration": {
        "defaultNotificationType": "info",
        "forgotUsername": false,
        "lang": "en",
        "notificationTypes": {
          "error": {
            "iconPath": "images/notifications/error.png",
            "name": "common.notification.types.error",
          },
          "info": {
            "iconPath": "images/notifications/info.png",
            "name": "common.notification.types.info",
          },
          "warning": {
            "iconPath": "images/notifications/warning.png",
            "name": "common.notification.types.warning",
          },
        },
        "passwordReset": true,
        "passwordResetLink": "",
        "platformSettings": {
          "adminOauthClient": "idmAdminClient",
          "adminOauthClientScopes": "fr:idm:*",
          "amUrl": "/am",
          "loginUrl": "",
        },
        "roles": {
          "internal/role/openidm-admin": "ui-admin",
          "internal/role/openidm-authorized": "ui-user",
        },
        "selfRegistration": true,
      },
    },
    "ui/dashboard": {
      "_id": "ui/dashboard",
      "adminDashboards": [
        {
          "isDefault": true,
          "name": "Quick Start",
          "widgets": [
            {
              "cards": [
                {
                  "href": "#resource/managed/alpha_user/list/",
                  "icon": "fa-user",
                  "name": "Manage Users",
                },
                {
                  "href": "#resource/managed/alpha_role/list/",
                  "icon": "fa-check-square-o",
                  "name": "Manage Roles",
                },
                {
                  "href": "#connectors/add/",
                  "icon": "fa-database",
                  "name": "Add Connector",
                },
                {
                  "href": "#mapping/add/",
                  "icon": "fa-map-marker",
                  "name": "Create Mapping",
                },
                {
                  "href": "#managed/add/",
                  "icon": "fa-tablet",
                  "name": "Add Device",
                },
                {
                  "href": "#settings/",
                  "icon": "fa-user",
                  "name": "Configure System Preferences",
                },
              ],
              "size": "large",
              "type": "quickStart",
            },
          ],
        },
        {
          "isDefault": false,
          "name": "System Monitoring",
          "widgets": [
            {
              "legendRange": {
                "month": [
                  500,
                  2500,
                  5000,
                ],
                "week": [
                  10,
                  30,
                  90,
                  270,
                  810,
                ],
                "year": [
                  10000,
                  40000,
                  100000,
                  250000,
                ],
              },
              "maxRange": "#24423c",
              "minRange": "#b0d4cd",
              "size": "large",
              "type": "audit",
            },
            {
              "size": "large",
              "type": "clusterStatus",
            },
            {
              "size": "large",
              "type": "systemHealthFull",
            },
            {
              "barchart": "false",
              "size": "large",
              "type": "lastRecon",
            },
          ],
        },
        {
          "isDefault": false,
          "name": "Resource Report",
          "widgets": [
            {
              "selected": "activeUsers",
              "size": "x-small",
              "type": "counter",
            },
            {
              "selected": "rolesEnabled",
              "size": "x-small",
              "type": "counter",
            },
            {
              "selected": "activeConnectors",
              "size": "x-small",
              "type": "counter",
            },
            {
              "size": "large",
              "type": "resourceList",
            },
          ],
        },
        {
          "isDefault": false,
          "name": "Business Report",
          "widgets": [
            {
              "graphType": "fa-pie-chart",
              "providers": [
                "Username/Password",
              ],
              "size": "x-small",
              "type": "signIns",
              "widgetTitle": "Sign-Ins",
            },
            {
              "graphType": "fa-bar-chart",
              "size": "x-small",
              "type": "passwordResets",
              "widgetTitle": "Password Resets",
            },
            {
              "graphType": "fa-line-chart",
              "providers": [
                "Username/Password",
              ],
              "size": "x-small",
              "type": "newRegistrations",
              "widgetTitle": "New Registrations",
            },
            {
              "size": "x-small",
              "timezone": {
                "hours": "07",
                "minutes": "00",
                "negative": true,
              },
              "type": "socialLogin",
            },
            {
              "selected": "socialEnabled",
              "size": "x-small",
              "type": "counter",
            },
            {
              "selected": "manualRegistrations",
              "size": "x-small",
              "type": "counter",
            },
          ],
        },
      ],
      "dashboard": {
        "widgets": [
          {
            "size": "large",
            "type": "Welcome",
          },
        ],
      },
    },
    "ui/profile": {
      "_id": "ui/profile",
      "tabs": [
        {
          "name": "personalInfoTab",
          "view": "org/forgerock/openidm/ui/user/profile/personalInfo/PersonalInfoTab",
        },
        {
          "name": "signInAndSecurity",
          "view": "org/forgerock/openidm/ui/user/profile/signInAndSecurity/SignInAndSecurityTab",
        },
        {
          "name": "preference",
          "view": "org/forgerock/openidm/ui/user/profile/PreferencesTab",
        },
        {
          "name": "trustedDevice",
          "view": "org/forgerock/openidm/ui/user/profile/TrustedDevicesTab",
        },
        {
          "name": "oauthApplication",
          "view": "org/forgerock/openidm/ui/user/profile/OauthApplicationsTab",
        },
        {
          "name": "privacyAndConsent",
          "view": "org/forgerock/openidm/ui/user/profile/PrivacyAndConsentTab",
        },
        {
          "name": "sharing",
          "view": "org/forgerock/openidm/ui/user/profile/uma/SharingTab",
        },
        {
          "name": "auditHistory",
          "view": "org/forgerock/openidm/ui/user/profile/uma/ActivityTab",
        },
        {
          "name": "accountControls",
          "view": "org/forgerock/openidm/ui/user/profile/accountControls/AccountControlsTab",
        },
      ],
    },
    "ui/themeconfig": {
      "_id": "ui/themeconfig",
      "icon": "favicon.ico",
      "path": "",
      "settings": {
        "footer": {
          "mailto": "info@forgerock.com",
        },
        "loginLogo": {
          "alt": "ForgeRock",
          "height": "104px",
          "src": "images/login-logo-dark.png",
          "title": "ForgeRock",
          "width": "210px",
        },
        "logo": {
          "alt": "ForgeRock",
          "src": "images/logo-horizontal-white.png",
          "title": "ForgeRock",
        },
      },
      "stylesheets": [
        "css/bootstrap-3.4.1-custom.css",
        "css/structure.css",
        "css/theme.css",
      ],
    },
    "ui/themerealm": {
      "_id": "ui/themerealm",
      "realm": {
        "/": [
          {
            "_id": "d6636b33-111b-40f2-870d-f4dcb7281e43",
            "accountCardBackgroundColor": "#ffffff",
            "accountCardHeaderColor": "#23282e",
            "accountCardInnerBorderColor": "#e7eef4",
            "accountCardInputBackgroundColor": "#ffffff",
            "accountCardInputBorderColor": "#c0c9d5",
            "accountCardInputLabelColor": "#5e6d82",
            "accountCardInputSelectColor": "#e4f4fd",
            "accountCardInputTextColor": "#23282e",
            "accountCardOuterBorderColor": "#e7eef4",
            "accountCardShadow": 3,
            "accountCardTabActiveBorderColor": "#109cf1",
            "accountCardTabActiveColor": "#e4f4fd",
            "accountCardTextColor": "#5e6d82",
            "accountFooter": "<div class="d-flex justify-content-center py-4 w-100"><span class="pr-1">© 2022</span>
<a href="#" target="_blank" class="text-body">My Company, Inc</a><a href="#" target="_blank" style="color: #0000ee" class="pl-3 text-body">Privacy Policy</a><a href="#" target="_blank" style="color: #0000ee" class="pl-3 text-body">Terms & Conditions</a></div>",
            "accountFooterEnabled": false,
            "accountNavigationBackgroundColor": "#ffffff",
            "accountNavigationTextColor": "#455469",
            "accountNavigationToggleBorderColor": "#e7eef4",
            "accountTableRowHoverColor": "#f6f8fa",
            "backgroundColor": "#324054",
            "backgroundImage": "",
            "buttonRounded": 5,
            "favicon": "https://cdn.forgerock.com/platform/themes/starter/logo-starter.svg",
            "fontFamily": "Open Sans",
            "isDefault": false,
            "journeyCardBackgroundColor": "#ffffff",
            "journeyCardShadow": 3,
            "journeyCardTextColor": "#5e6d82",
            "journeyCardTitleColor": "#23282e",
            "journeyFooter": "<div class="d-flex justify-content-center py-4 w-100"><span class="pr-1">© 2022</span>
<a href="#" target="_blank" class="text-body">My Company, Inc</a><a href="#" target="_blank" style="color: #0000ee" class="pl-3 text-body">Privacy Policy</a><a href="#" target="_blank" style="color: #0000ee" class="pl-3 text-body">Terms & Conditions</a></div>",
            "journeyFooterEnabled": false,
            "journeyHeader": "<div class="d-flex justify-content-center py-4 flex-grow-1">Header Content</div>",
            "journeyHeaderEnabled": false,
            "journeyInputBackgroundColor": "#ffffff",
            "journeyInputBorderColor": "#c0c9d5",
            "journeyInputLabelColor": "#5e6d82",
            "journeyInputSelectColor": "#e4f4fd",
            "journeyInputTextColor": "#23282e",
            "journeyJustifiedContent": "",
            "journeyJustifiedContentEnabled": false,
            "journeyLayout": "card",
            "journeyTheaterMode": false,
            "linkActiveColor": "#004067",
            "linkColor": "#0070b3",
            "linkedTrees": [],
            "logo": "https://cdn.forgerock.com/platform/themes/starter/logo-starter.svg",
            "logoAltText": "Logo",
            "logoEnabled": true,
            "logoHeight": "56",
            "logoProfile": "https://cdn.forgerock.com/platform/themes/starter/logo-starter-full.svg",
            "logoProfileAltText": "Logo",
            "logoProfileCollapsed": "https://cdn.forgerock.com/platform/themes/starter/logo-starter.svg",
            "logoProfileCollapsedAltText": "Logo",
            "logoProfileHeight": "24",
            "name": "Starter Theme",
            "primaryColor": "#324054",
            "primaryOffColor": "#242E3C",
            "profileBackgroundColor": "#ffffff",
            "profileMenuHighlightColor": "#f6f8fa",
            "profileMenuHoverColor": "#f6f8fa",
            "profileMenuHoverTextColor": "#455469",
            "profileMenuTextHighlightColor": "#455469",
            "textColor": "#ffffff",
            "topBarBackgroundColor": "#ffffff",
            "topBarBorderColor": "#e7eef4",
            "topBarHeaderColor": "#23282e",
            "topBarTextColor": "#69788b",
          },
        ],
        "alpha": [
          {
            "_id": "84bbd22e-6def-459f-91c9-4c9aa4e0bec0",
            "accountFooter": "<div class="d-flex justify-content-center py-4 w-100"><span class="pr-1">© 2021</span>
<a href="#" target="_blank" class="text-body">My Company, Inc</a><a href="#" target="_blank" style="color: #0000ee" class="pl-3 text-body">Privacy Policy</a><a href="#" target="_blank" style="color: #0000ee" class="pl-3 text-body">Terms & Conditions</a></div>",
            "accountFooterEnabled": false,
            "accountPageSections": {
              "accountControls": {
                "enabled": false,
              },
              "accountSecurity": {
                "enabled": true,
                "subsections": {
                  "password": {
                    "enabled": true,
                  },
                  "securityQuestions": {
                    "enabled": false,
                  },
                  "twoStepVerification": {
                    "enabled": true,
                  },
                  "username": {
                    "enabled": true,
                  },
                },
              },
              "consent": {
                "enabled": false,
              },
              "oauthApplications": {
                "enabled": false,
              },
              "personalInformation": {
                "enabled": true,
              },
              "preferences": {
                "enabled": false,
              },
              "social": {
                "enabled": false,
              },
              "trustedDevices": {
                "enabled": true,
              },
            },
            "backgroundColor": "#FFFFFF",
            "backgroundImage": "",
            "bodyText": "#000000",
            "buttonRounded": "0",
            "dangerColor": "#f7685b",
            "favicon": "",
            "isDefault": false,
            "journeyFooter": "<div class="d-flex justify-content-center py-4 w-100"><span class="pr-1">© 2021</span>
<a href="#" target="_blank" class="text-body">My Company, Inc</a><a href="#" target="_blank" style="color: #0000ee" class="pl-3 text-body">Privacy Policy</a><a href="#" target="_blank" style="color: #0000ee" class="pl-3 text-body">Terms & Conditions</a></div>",
            "journeyFooterEnabled": false,
            "journeyHeader": "<div class="d-flex justify-content-center py-4 flex-grow-1">Header Content</div>",
            "journeyHeaderEnabled": false,
            "journeyJustifiedContent": "",
            "journeyJustifiedContentEnabled": false,
            "journeyLayout": "card",
            "journeyTheaterMode": false,
            "linkActiveColor": "#000000",
            "linkColor": "#000000",
            "linkedTrees": [],
            "logo": "https://cdn.forgerock.com/platform/themes/contrast/logo-contrast.svg",
            "logoAltText": "Contrast",
            "logoEnabled": true,
            "logoHeight": "72",
            "logoProfile": "data:image/svg+xml,%0A%3Csvg width='46' height='46' viewBox='0 0 46 46' fill='none' xmlns='http://www.w3.org/2000/svg'%3E%3Cpath d='M24.3477 13.5664H43.9438C43.5192 12.6317 43.0319 11.734 42.4905 10.8711H24.3477V13.5664Z' fill='black'/%3E%3Cpath d='M24.3477 8.17578H40.5261C39.6996 7.2052 38.7974 6.30182 37.8224 5.48047H24.3477V8.17578Z' fill='black'/%3E%3Cpath d='M24.3477 40.5195H37.8224C38.7975 39.6982 39.6996 38.7948 40.5261 37.8242H24.3477V40.5195Z' fill='black'/%3E%3Cpath d='M24.3477 2.78516H33.8482C31.0136 1.27039 27.7313 0.198195 24.3477 0V2.78516Z' fill='black'/%3E%3Cpath d='M24.3477 18.957H45.6208C45.4566 18.0405 45.2557 17.1372 44.9856 16.2617H24.3477V18.957Z' fill='black'/%3E%3Cpath d='M24.3477 21.6523V24.3477H45.9317C45.958 23.8992 46 23.4549 46 23C46 22.5451 45.958 22.1008 45.9317 21.6523H24.3477Z' fill='black'/%3E%3Cpath d='M0 23C0 35.1781 9.64778 45.2964 21.6523 46V0C9.64778 0.703566 0 10.8219 0 23Z' fill='black'/%3E%3Cpath d='M24.3477 46C27.7313 45.8018 31.0136 44.7296 33.8482 43.2148H24.3477V46Z' fill='black'/%3E%3Cpath d='M45.6208 27.043H24.3477V29.7383H44.9857C45.2557 28.8628 45.4566 27.9595 45.6208 27.043V27.043Z' fill='black'/%3E%3Cpath d='M24.3477 35.1289H42.4905C43.0319 34.266 43.5192 33.3683 43.9438 32.4336H24.3477V35.1289Z' fill='black'/%3E%3C/svg%3E%0A",
            "logoProfileAltText": "Contrast",
            "logoProfileCollapsed": "data:image/svg+xml,%0A%3Csvg width='46' height='46' viewBox='0 0 46 46' fill='none' xmlns='http://www.w3.org/2000/svg'%3E%3Cpath d='M24.3477 13.5664H43.9438C43.5192 12.6317 43.0319 11.734 42.4905 10.8711H24.3477V13.5664Z' fill='black'/%3E%3Cpath d='M24.3477 8.17578H40.5261C39.6996 7.2052 38.7974 6.30182 37.8224 5.48047H24.3477V8.17578Z' fill='black'/%3E%3Cpath d='M24.3477 40.5195H37.8224C38.7975 39.6982 39.6996 38.7948 40.5261 37.8242H24.3477V40.5195Z' fill='black'/%3E%3Cpath d='M24.3477 2.78516H33.8482C31.0136 1.27039 27.7313 0.198195 24.3477 0V2.78516Z' fill='black'/%3E%3Cpath d='M24.3477 18.957H45.6208C45.4566 18.0405 45.2557 17.1372 44.9856 16.2617H24.3477V18.957Z' fill='black'/%3E%3Cpath d='M24.3477 21.6523V24.3477H45.9317C45.958 23.8992 46 23.4549 46 23C46 22.5451 45.958 22.1008 45.9317 21.6523H24.3477Z' fill='black'/%3E%3Cpath d='M0 23C0 35.1781 9.64778 45.2964 21.6523 46V0C9.64778 0.703566 0 10.8219 0 23Z' fill='black'/%3E%3Cpath d='M24.3477 46C27.7313 45.8018 31.0136 44.7296 33.8482 43.2148H24.3477V46Z' fill='black'/%3E%3Cpath d='M45.6208 27.043H24.3477V29.7383H44.9857C45.2557 28.8628 45.4566 27.9595 45.6208 27.043V27.043Z' fill='black'/%3E%3Cpath d='M24.3477 35.1289H42.4905C43.0319 34.266 43.5192 33.3683 43.9438 32.4336H24.3477V35.1289Z' fill='black'/%3E%3C/svg%3E%0A",
            "logoProfileCollapsedAltText": "",
            "logoProfileCollapsedHeight": "22",
            "logoProfileHeight": "22",
            "name": "Contrast",
            "pageTitle": "#23282e",
            "primaryColor": "#000000",
            "primaryOffColor": "#000000",
            "profileBackgroundColor": "#FFFFFF",
            "profileMenuHighlightColor": "#FFFFFF",
            "profileMenuHoverColor": "#FFFFFF",
            "profileMenuHoverTextColor": "#000000",
            "profileMenuTextHighlightColor": "#455469",
            "secondaryColor": "#69788b",
            "textColor": "#ffffff",
          },
          {
            "_id": "05ef90a8-10f2-47fd-a481-c8c52f49e48f",
            "accountFooter": "<footer class="w-100">
            <div class="d-flex flex-column flex-md-row justify-content-center align-items-center py-4">
              <div class="container w-100">
                <div class="mt-5 py-4 border-top border-darkened">
                  <div class="row" style="color: #23282e;">
                    <div class="col-4 col-md-3 col-lg-2">
                      <h5 style="font-weight: 600; font-size: 0.9375rem;">Company</h5>
                      <ul class="nav mb-4 flex-column">
                        <li class="nav-item"><a href="#" class="nav-link px-0 py-1" target="_self">About Us</a></li>
                        <li class="nav-item"><a href="#" class="nav-link px-0 py-1" target="_self">Contact Us</a></li>
                        <li class="nav-item"><a href="#" class="nav-link px-0 py-1" target="_self">Privacy &amp; Terms</a></li>
                      </ul>
                    </div>
                    <div class="col-4 col-md-3 col-lg-2">
                      <h5 style="font-weight: 600; font-size: 0.9375rem;">Support</h5>
                      <ul class="nav mb-4 flex-column">
                        <li class="nav-item"><a href="#" class="nav-link px-0 py-1" target="_self">Help Center</a></li>
                        <li class="nav-item"><a href="#" class="nav-link px-0 py-1" target="_self">Docs</a></li>
                        <li class="nav-item"><a href="#" class="nav-link px-0 py-1" target="_self">Privacy &amp; Terms</a></li>
                      </ul>
                    </div>
                    <div class="col-4 col-md-3 col-lg-2">
                      <h5 style="font-weight: 600; font-size: 0.9375rem;">Community</h5>
                      <ul class="nav mb-4 flex-column">
                        <li class="nav-item"><a href="#" class="nav-link px-0 py-1" target="_self">Facebook</a></li>
                        <li class="nav-item"><a href="#" class="nav-link px-0 py-1" target="_self">Twitter</a></li>
                        <li class="nav-item"><a href="#" class="nav-link px-0 py-1" target="_self">Forum</a></li>
                      </ul>
                    </div>
                    <div class="col-12 col-lg-6" style="color: #5e6d82">
                      <div class="d-flex align-items-center justify-content-lg-end py-4 py-lg-0">
                        <span class="pr-1">&copy; 2021</span>
                        <a href="#" class="text-decoration-none" target="_self" style="color: #5e6d82">Rob Roy Markets, Inc</a>
                      </div>
                    </div>
                  </div>
                </div> 
              </div>
            </div>
          </footer>
",
            "accountFooterEnabled": true,
            "accountPageSections": {
              "accountControls": {
                "enabled": false,
              },
              "accountSecurity": {
                "enabled": true,
                "subsections": {
                  "password": {
                    "enabled": true,
                  },
                  "securityQuestions": {
                    "enabled": false,
                  },
                  "twoStepVerification": {
                    "enabled": true,
                  },
                  "username": {
                    "enabled": true,
                  },
                },
              },
              "consent": {
                "enabled": false,
              },
              "oauthApplications": {
                "enabled": false,
              },
              "personalInformation": {
                "enabled": true,
              },
              "preferences": {
                "enabled": false,
              },
              "social": {
                "enabled": false,
              },
              "trustedDevices": {
                "enabled": true,
              },
            },
            "backgroundColor": "#FFFFFF",
            "backgroundImage": "",
            "bodyText": "#5E6D82",
            "buttonRounded": "50",
            "dangerColor": "#f7685b",
            "favicon": "",
            "isDefault": false,
            "journeyFooter": "<footer class="w-100">
    <div class="d-flex flex-column flex-md-row justify-content-center align-items-center py-4">
        <div class="container w-100">
            <div class="mt-5 py-4 border-top border-darkened">
                <div class="row" style="color: #23282e;">
                    <div class="col-4 col-md-3 col-lg-2">
                        <h5 style="font-weight: 600; font-size: 0.9375rem;">
                            Company
                        </h5>
                        <ul class="nav mb-4 flex-column">
                            <li class="nav-item">
                                <a href="#" class="nav-link px-0 py-1" target="_self">About Us</a>
                            </li>
                            <li class="nav-item">
                                <a href="#" class="nav-link px-0 py-1" target="_self">Contact Us</a>
                            </li>
                            <li class="nav-item">
                                <a href="#" class="nav-link px-0 py-1" target="_self">Privacy &amp; Terms</a>
                            </li>
                        </ul>
                    </div>
                    <div class="col-4 col-md-3 col-lg-2">
                        <h5 style="font-weight: 600; font-size: 0.9375rem;">
                            Support
                        </h5>
                        <ul class="nav mb-4 flex-column">
                            <li class="nav-item">
                                <a href="#" class="nav-link px-0 py-1" target="_self">Help Center</a>
                            </li>
                            <li class="nav-item">
                                <a href="#" class="nav-link px-0 py-1" target="_self">Docs</a>
                            </li>
                            <li class="nav-item">
                                <a href="#" class="nav-link px-0 py-1" target="_self">Privacy &amp; Terms</a>
                            </li>
                        </ul>
                    </div>
                    <div class="col-4 col-md-3 col-lg-2">
                        <h5 style="font-weight: 600; font-size: 0.9375rem;">
                            Community
                        </h5>
                        <ul class="nav mb-4 flex-column">
                            <li class="nav-item">
                                <a href="#" class="nav-link px-0 py-1" target="_self">Facebook</a>
                            </li>
                            <li class="nav-item">
                                <a href="#" class="nav-link px-0 py-1" target="_self">Twitter</a>
                            </li>
                            <li class="nav-item">
                                <a href="#" class="nav-link px-0 py-1" target="_self">Forum</a>
                            </li>
                        </ul>
                    </div>
                    <div class="col-12 col-lg-6">
                        <div class="d-flex align-items-center justify-content-lg-end py-4 py-lg-0">
                            <span class="pr-1">&copy; 2021</span>
                            <a href="#" class="text-decoration-none" target="_self">Highlander, Inc.</a>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</footer>

",
            "journeyFooterEnabled": true,
            "journeyHeader": "<header>
            <nav
              class="navbar shadow-lg navbar-light bg-white navbar-expand-lg"
            >
              <a href="#" target="_self" class="navbar-brand">
                <img
                  src="https://cdn.forgerock.com/platform/themes/highlander/logo-highlander-full.svg"
                  alt="Logo"
                  style="height: 28px"
                />
              </a>
              <div
                class="navbar-collapse d-none d-lg-flex"
                id="navbarSupportedContent"
              >
                <ul class="navbar-nav mr-auto">
                  <li class="nav-item">
                    <a class="nav-link" href="#">Link</a>
                  </li>
                  <li class="nav-item">
                    <a
                      class="nav-link disabled"
                      href="#"
                      tabindex="-1"
                      aria-disabled="true"
                      >Disabled</a
                    >
                  </li>
                </ul>
                <ul class="navbar-nav ml-auto">
                  <li class="nav-item">
                    <a href="#" target="_self" class="nav-link">Link</a>
                  </li>
                </ul>
              </div>
            </nav>
          </header>
",
            "journeyHeaderEnabled": true,
            "journeyJustifiedContent": "",
            "journeyJustifiedContentEnabled": false,
            "journeyLayout": "card",
            "journeyTheaterMode": false,
            "linkActiveColor": "#C60819",
            "linkColor": "#EB0A1E",
            "linkedTrees": [],
            "logo": "",
            "logoAltText": "",
            "logoEnabled": true,
            "logoHeight": "40",
            "logoProfile": "https://cdn.forgerock.com/platform/themes/highlander/logo-highlander-full.svg",
            "logoProfileAltText": "Highlander",
            "logoProfileCollapsed": "https://cdn.forgerock.com/platform/themes/highlander/logo-highlander-icon.svg",
            "logoProfileCollapsedAltText": "Highlander",
            "logoProfileCollapsedHeight": "28",
            "logoProfileHeight": "28",
            "name": "Highlander",
            "pageTitle": "#23282e",
            "primaryColor": "#EB0A1E",
            "primaryOffColor": "#C60819",
            "profileBackgroundColor": "#FFFFFF",
            "profileMenuHighlightColor": "#FFFFFF",
            "profileMenuHoverColor": "#FFFFFF",
            "profileMenuHoverTextColor": "#455469",
            "profileMenuTextHighlightColor": "#EB0A1E",
            "secondaryColor": "#69788b",
            "textColor": "#ffffff",
          },
          {
            "_id": "f19b7f5a-48dc-4c53-bfac-eeed5966511a",
            "accountFooter": "<footer class="w-100">
            <div class="d-flex flex-column flex-md-row justify-content-center align-items-center py-4">
              <div class="container w-100">
                <div class="mt-5 py-4 border-top border-darkened">
                  <div class="row" style="color: #23282e;">
                    <div class="col-4 col-md-3 col-lg-2">
                      <h5 style="font-weight: 600; font-size: 0.9375rem;">Company</h5>
                      <ul class="nav mb-4 flex-column">
                        <li class="nav-item"><a href="#" class="nav-link px-0 py-1" target="_self">About Us</a></li>
                        <li class="nav-item"><a href="#" class="nav-link px-0 py-1" target="_self">Contact Us</a></li>
                        <li class="nav-item"><a href="#" class="nav-link px-0 py-1" target="_self">Privacy &amp; Terms</a></li>
                      </ul>
                    </div>
                    <div class="col-4 col-md-3 col-lg-2">
                      <h5 style="font-weight: 600; font-size: 0.9375rem;">Support</h5>
                      <ul class="nav mb-4 flex-column">
                        <li class="nav-item"><a href="#" class="nav-link px-0 py-1" target="_self">Help Center</a></li>
                        <li class="nav-item"><a href="#" class="nav-link px-0 py-1" target="_self">Docs</a></li>
                        <li class="nav-item"><a href="#" class="nav-link px-0 py-1" target="_self">Privacy &amp; Terms</a></li>
                      </ul>
                    </div>
                    <div class="col-4 col-md-3 col-lg-2">
                      <h5 style="font-weight: 600; font-size: 0.9375rem;">Community</h5>
                      <ul class="nav mb-4 flex-column">
                        <li class="nav-item"><a href="#" class="nav-link px-0 py-1" target="_self">Facebook</a></li>
                        <li class="nav-item"><a href="#" class="nav-link px-0 py-1" target="_self">Twitter</a></li>
                        <li class="nav-item"><a href="#" class="nav-link px-0 py-1" target="_self">Forum</a></li>
                      </ul>
                    </div>
                    <div class="col-12 col-lg-6">
                      <div class="d-flex align-items-center justify-content-lg-end py-4 py-lg-0">
                        <span class="pr-1">&copy; 2021</span>
                        <a href="#" class="text-decoration-none" target="_self">Rob Roy Markets, Inc</a>
                      </div>
                    </div>
                  </div>
                </div> 
              </div>
            </div>
          </footer>
",
            "accountFooterEnabled": true,
            "accountPageSections": {
              "accountControls": {
                "enabled": false,
              },
              "accountSecurity": {
                "enabled": true,
                "subsections": {
                  "password": {
                    "enabled": true,
                  },
                  "securityQuestions": {
                    "enabled": false,
                  },
                  "twoStepVerification": {
                    "enabled": true,
                  },
                  "username": {
                    "enabled": true,
                  },
                },
              },
              "consent": {
                "enabled": false,
              },
              "oauthApplications": {
                "enabled": false,
              },
              "personalInformation": {
                "enabled": true,
              },
              "preferences": {
                "enabled": false,
              },
              "social": {
                "enabled": false,
              },
              "trustedDevices": {
                "enabled": true,
              },
            },
            "backgroundColor": "#FFFFFF",
            "backgroundImage": "",
            "bodyText": "#5E6D82",
            "buttonRounded": "50",
            "dangerColor": "#f7685b",
            "favicon": "",
            "isDefault": false,
            "journeyFooter": "<footer class="w-100">
            <div
              class="
                d-flex
                flex-column flex-md-row
                justify-content-center
                align-items-center
                py-4
              "
            >
              <div class="container w-100">
                <div class="mt-5 py-4 border-top border-darkened">
                  <div class="row" style="color: #23282e">
                    <div class="col-4 col-md-3 col-lg-2">
                      <h5 style="font-weight: 600; font-size: 0.9375rem">
                        Company
                      </h5>
                      <ul class="nav mb-4 flex-column">
                        <li class="nav-item">
                          <a href="#" class="nav-link px-0 py-1" target="_self"
                            >About Us</a
                          >
                        </li>
                        <li class="nav-item">
                          <a href="#" class="nav-link px-0 py-1" target="_self"
                            >Contact Us</a
                          >
                        </li>
                        <li class="nav-item">
                          <a href="#" class="nav-link px-0 py-1" target="_self"
                            >Privacy &amp; Terms</a
                          >
                        </li>
                      </ul>
                    </div>
                    <div class="col-4 col-md-3 col-lg-2">
                      <h5 style="font-weight: 600; font-size: 0.9375rem">
                        Support
                      </h5>
                      <ul class="nav mb-4 flex-column">
                        <li class="nav-item">
                          <a href="#" class="nav-link px-0 py-1" target="_self"
                            >Help Center</a
                          >
                        </li>
                        <li class="nav-item">
                          <a href="#" class="nav-link px-0 py-1" target="_self"
                            >Docs</a
                          >
                        </li>
                        <li class="nav-item">
                          <a href="#" class="nav-link px-0 py-1" target="_self"
                            >Privacy &amp; Terms</a
                          >
                        </li>
                      </ul>
                    </div>
                    <div class="col-4 col-md-3 col-lg-2">
                      <h5 style="font-weight: 600; font-size: 0.9375rem">
                        Community
                      </h5>
                      <ul class="nav mb-4 flex-column">
                        <li class="nav-item">
                          <a href="#" class="nav-link px-0 py-1" target="_self"
                            >Facebook</a
                          >
                        </li>
                        <li class="nav-item">
                          <a href="#" class="nav-link px-0 py-1" target="_self"
                            >Twitter</a
                          >
                        </li>
                        <li class="nav-item">
                          <a href="#" class="nav-link px-0 py-1" target="_self"
                            >Forum</a
                          >
                        </li>
                      </ul>
                    </div>
                    <div class="col-12 col-lg-6">
                      <div
                        class="
                          d-flex
                          align-items-center
                          justify-content-lg-end
                          py-4 py-lg-0
                        "
                      >
                        <span class="pr-1">&copy; 2021</span>
                        <a href="#" class="text-decoration-none" target="_self"
                          >Rob Roy Markets, Inc</a
                        >
                      </div>
                    </div>
                  </div>
                </div>
              </div>
            </div>
          </footer>
",
            "journeyFooterEnabled": true,
            "journeyHeader": "<header>
            <nav
              class="navbar shadow-lg navbar-light bg-white navbar-expand-lg"
            >
              <a href="#" target="_self" class="navbar-brand">
                <img
                  src="https://cdn.forgerock.com/platform/themes/robroy/logo-robroy-full.svg"
                  alt="Logo"
                  style="height: 28px"
                />
              </a>
              <div
                class="navbar-collapse d-none d-lg-flex"
                id="navbarSupportedContent"
              >
                <ul class="navbar-nav mr-auto">
                  <li class="nav-item">
                    <a class="nav-link" href="#">Link</a>
                  </li>
                  <li class="nav-item">
                    <a
                      class="nav-link disabled"
                      href="#"
                      tabindex="-1"
                      aria-disabled="true"
                      >Disabled</a
                    >
                  </li>
                </ul>
                <ul class="navbar-nav ml-auto">
                  <li class="nav-item">
                    <a href="#" target="_self" class="nav-link">Link</a>
                  </li>
                </ul>
              </div>
            </nav>
          </header>
",
            "journeyHeaderEnabled": true,
            "journeyJustifiedContent": "<img src="https://cdn.forgerock.com/platform/themes/robroy/illustration-robroy.svg" class="w-100">",
            "journeyJustifiedContentEnabled": true,
            "journeyLayout": "justified-right",
            "journeyTheaterMode": false,
            "linkActiveColor": "#49871E",
            "linkColor": "#5AA625",
            "linkedTrees": [],
            "logo": "",
            "logoAltText": "",
            "logoEnabled": true,
            "logoHeight": "40",
            "logoProfile": "data:image/svg+xml,%0A%3Csvg width='156' height='34' viewBox='0 0 156 34' fill='none' xmlns='http://www.w3.org/2000/svg'%3E%3Cg clip-path='url(%23clip0)'%3E%3Cpath d='M32.5539 32.5538C32.5539 32.5538 17.0796 35.6024 7.23861 25.7614C-2.60242 15.9204 0.446148 0.446137 0.446148 0.446137C0.446148 0.446137 15.9204 -2.60243 25.7614 7.23866C35.6024 17.0797 32.5539 32.5538 32.5539 32.5538Z' fill='%23C3EA21'/%3E%3Cpath d='M32.5537 32.554C32.5537 32.554 17.0795 35.6026 7.23845 25.7615C-2.60257 15.9205 0.445995 0.446289 0.445995 0.446289L32.5537 32.554Z' fill='%238ADB53'/%3E%3C/g%3E%3Cpath d='M51.053 25.38L53.186 25.11V8.964L51.161 8.586V6.939H55.076C55.418 6.939 55.796 6.93 56.21 6.912C56.624 6.894 56.939 6.876 57.155 6.858C58.091 6.786 58.865 6.75 59.477 6.75C61.331 6.75 62.816 6.939 63.932 7.317C65.048 7.695 65.858 8.271 66.362 9.045C66.866 9.819 67.118 10.836 67.118 12.096C67.118 13.338 66.785 14.49 66.119 15.552C65.453 16.614 64.49 17.343 63.23 17.739C63.95 18.045 64.589 18.603 65.147 19.413C65.705 20.223 66.299 21.276 66.929 22.572C67.379 23.454 67.721 24.093 67.955 24.489C68.207 24.867 68.45 25.083 68.684 25.137L69.575 25.407V27H64.985C64.697 27 64.391 26.712 64.067 26.136C63.761 25.542 63.356 24.615 62.852 23.355C62.258 21.879 61.745 20.727 61.313 19.899C60.881 19.071 60.422 18.558 59.936 18.36H57.155V25.11L59.639 25.38V27H51.053V25.38ZM59.639 16.713C60.665 16.713 61.466 16.344 62.042 15.606C62.618 14.868 62.906 13.761 62.906 12.285C62.906 10.971 62.618 9.999 62.042 9.369C61.484 8.739 60.512 8.424 59.126 8.424C58.622 8.424 58.19 8.451 57.83 8.505C57.488 8.541 57.263 8.559 57.155 8.559V16.659C57.371 16.695 57.893 16.713 58.721 16.713H59.639ZM70.674 19.521C70.674 17.829 71.007 16.389 71.673 15.201C72.357 14.013 73.266 13.122 74.4 12.528C75.534 11.916 76.767 11.61 78.099 11.61C80.367 11.61 82.113 12.312 83.337 13.716C84.579 15.102 85.2 16.992 85.2 19.386C85.2 21.096 84.858 22.554 84.174 23.76C83.508 24.948 82.608 25.839 81.474 26.433C80.358 27.009 79.125 27.297 77.775 27.297C75.525 27.297 73.779 26.604 72.537 25.218C71.295 23.814 70.674 21.915 70.674 19.521ZM77.991 25.542C80.025 25.542 81.042 23.58 81.042 19.656C81.042 17.604 80.799 16.047 80.313 14.985C79.827 13.905 79.035 13.365 77.937 13.365C75.849 13.365 74.805 15.327 74.805 19.251C74.805 21.303 75.057 22.869 75.561 23.949C76.083 25.011 76.893 25.542 77.991 25.542ZM86.4395 5.454L91.3805 4.86H91.4345L92.1905 5.373V13.338C92.6765 12.852 93.2705 12.447 93.9725 12.123C94.6925 11.781 95.4665 11.61 96.2945 11.61C98.0225 11.61 99.4265 12.222 100.506 13.446C101.604 14.652 102.153 16.506 102.153 19.008C102.153 20.556 101.829 21.96 101.181 23.22C100.533 24.48 99.5975 25.479 98.3735 26.217C97.1675 26.937 95.7635 27.297 94.1615 27.297C92.7395 27.297 91.5065 27.18 90.4625 26.946C89.4185 26.694 88.7525 26.469 88.4645 26.271V7.182L86.4395 6.858V5.454ZM94.8635 13.986C94.3235 13.986 93.8105 14.112 93.3245 14.364C92.8565 14.598 92.4785 14.868 92.1905 15.174V25.029C92.2985 25.227 92.5505 25.389 92.9465 25.515C93.3425 25.641 93.7925 25.704 94.2965 25.704C95.4485 25.704 96.3665 25.173 97.0505 24.111C97.7525 23.031 98.1035 21.438 98.1035 19.332C98.1035 17.514 97.8065 16.173 97.2125 15.309C96.6185 14.427 95.8355 13.986 94.8635 13.986Z' fill='black'/%3E%3Cpath d='M104.183 25.38L106.316 25.11V8.964L104.291 8.586V6.939H108.206C108.548 6.939 108.926 6.93 109.34 6.912C109.754 6.894 110.069 6.876 110.285 6.858C111.221 6.786 111.995 6.75 112.607 6.75C114.461 6.75 115.946 6.939 117.062 7.317C118.178 7.695 118.988 8.271 119.492 9.045C119.996 9.819 120.248 10.836 120.248 12.096C120.248 13.338 119.915 14.49 119.249 15.552C118.583 16.614 117.62 17.343 116.36 17.739C117.08 18.045 117.719 18.603 118.277 19.413C118.835 20.223 119.429 21.276 120.059 22.572C120.509 23.454 120.851 24.093 121.085 24.489C121.337 24.867 121.58 25.083 121.814 25.137L122.705 25.407V27H118.115C117.827 27 117.521 26.712 117.197 26.136C116.891 25.542 116.486 24.615 115.982 23.355C115.388 21.879 114.875 20.727 114.443 19.899C114.011 19.071 113.552 18.558 113.066 18.36H110.285V25.11L112.769 25.38V27H104.183V25.38ZM112.769 16.713C113.795 16.713 114.596 16.344 115.172 15.606C115.748 14.868 116.036 13.761 116.036 12.285C116.036 10.971 115.748 9.999 115.172 9.369C114.614 8.739 113.642 8.424 112.256 8.424C111.752 8.424 111.32 8.451 110.96 8.505C110.618 8.541 110.393 8.559 110.285 8.559V16.659C110.501 16.695 111.023 16.713 111.851 16.713H112.769ZM123.804 19.521C123.804 17.829 124.137 16.389 124.803 15.201C125.487 14.013 126.396 13.122 127.53 12.528C128.664 11.916 129.897 11.61 131.229 11.61C133.497 11.61 135.243 12.312 136.467 13.716C137.709 15.102 138.33 16.992 138.33 19.386C138.33 21.096 137.988 22.554 137.304 23.76C136.638 24.948 135.738 25.839 134.604 26.433C133.488 27.009 132.255 27.297 130.905 27.297C128.655 27.297 126.909 26.604 125.667 25.218C124.425 23.814 123.804 21.915 123.804 19.521ZM131.121 25.542C133.155 25.542 134.172 23.58 134.172 19.656C134.172 17.604 133.929 16.047 133.443 14.985C132.957 13.905 132.165 13.365 131.067 13.365C128.979 13.365 127.935 15.327 127.935 19.251C127.935 21.303 128.187 22.869 128.691 23.949C129.213 25.011 130.023 25.542 131.121 25.542ZM143.187 33.723C142.863 33.723 142.512 33.696 142.134 33.642C141.774 33.588 141.513 33.525 141.351 33.453V30.564C141.477 30.636 141.729 30.708 142.107 30.78C142.485 30.852 142.827 30.888 143.133 30.888C144.033 30.888 144.771 30.591 145.347 29.997C145.941 29.403 146.49 28.404 146.994 27H145.536L140.46 13.905L139.245 13.554V11.988H146.67V13.554L144.699 13.878L147.102 21.357L148.074 24.543L148.911 21.357L151.125 13.878L149.424 13.554V11.988H155.283V13.554L153.96 13.878C152.97 16.902 151.989 19.818 151.017 22.626C150.045 25.434 149.478 27.009 149.316 27.351C148.74 28.863 148.191 30.069 147.669 30.969C147.147 31.869 146.526 32.553 145.806 33.021C145.086 33.489 144.213 33.723 143.187 33.723Z' fill='%236CBE34'/%3E%3Cdefs%3E%3CclipPath id='clip0'%3E%3Crect width='33' height='33' fill='white' transform='matrix(-1 0 0 1 33 0)'/%3E%3C/clipPath%3E%3C/defs%3E%3C/svg%3E%0A",
            "logoProfileAltText": "RobRoy",
            "logoProfileCollapsed": "data:image/svg+xml,%0A%3Csvg width='33' height='33' viewBox='0 0 33 33' fill='none' xmlns='http://www.w3.org/2000/svg'%3E%3Cg clip-path='url(%23clip0)'%3E%3Cpath d='M32.5539 32.5538C32.5539 32.5538 17.0796 35.6024 7.23861 25.7614C-2.60242 15.9204 0.446148 0.446137 0.446148 0.446137C0.446148 0.446137 15.9204 -2.60243 25.7614 7.23866C35.6024 17.0797 32.5539 32.5538 32.5539 32.5538Z' fill='%23C3EA21'/%3E%3Cpath d='M32.5537 32.554C32.5537 32.554 17.0795 35.6026 7.23845 25.7615C-2.60257 15.9205 0.445996 0.446289 0.445996 0.446289L32.5537 32.554Z' fill='%238ADB53'/%3E%3C/g%3E%3Cdefs%3E%3CclipPath id='clip0'%3E%3Crect width='33' height='33' fill='white' transform='matrix(-1 0 0 1 33 0)'/%3E%3C/clipPath%3E%3C/defs%3E%3C/svg%3E%0A",
            "logoProfileCollapsedAltText": "RobRoy",
            "logoProfileCollapsedHeight": "28",
            "logoProfileHeight": "28",
            "name": "Robroy",
            "pageTitle": "#23282e",
            "primaryColor": "#5AA625",
            "primaryOffColor": "#49871E",
            "profileBackgroundColor": "#FFFFFF",
            "profileMenuHighlightColor": "#FFFFFF",
            "profileMenuHoverColor": "#FFFFFF",
            "profileMenuHoverTextColor": "#455469",
            "profileMenuTextHighlightColor": "#5AA625",
            "secondaryColor": "#69788b",
            "textColor": "#ffffff",
          },
          {
            "_id": "022ba5cf-a2e4-49a8-ae6d-2ca54abf6573",
            "accountFooter": "<div class="d-flex justify-content-center py-4 w-100"><span class="pr-1">© 2021</span>
<a href="#" target="_blank" class="text-body">My Company, Inc</a><a href="#" target="_blank" style="color: #0000ee" class="pl-3 text-body">Privacy Policy</a><a href="#" target="_blank" style="color: #0000ee" class="pl-3 text-body">Terms & Conditions</a></div>",
            "accountFooterEnabled": false,
            "accountPageSections": {
              "accountControls": {
                "enabled": false,
              },
              "accountSecurity": {
                "enabled": true,
                "subsections": {
                  "password": {
                    "enabled": true,
                  },
                  "securityQuestions": {
                    "enabled": false,
                  },
                  "twoStepVerification": {
                    "enabled": true,
                  },
                  "username": {
                    "enabled": true,
                  },
                },
              },
              "consent": {
                "enabled": false,
              },
              "oauthApplications": {
                "enabled": false,
              },
              "personalInformation": {
                "enabled": true,
              },
              "preferences": {
                "enabled": false,
              },
              "social": {
                "enabled": false,
              },
              "trustedDevices": {
                "enabled": true,
              },
            },
            "backgroundColor": "#324054",
            "backgroundImage": "",
            "bodyText": "#23282e",
            "buttonRounded": 5,
            "dangerColor": "#f7685b",
            "favicon": "",
            "isDefault": true,
            "journeyFooter": "<div class="d-flex justify-content-center py-4 w-100"><span class="pr-1">© 2021</span>
<a href="#" target="_blank" class="text-body">My Company, Inc</a><a href="#" target="_blank" style="color: #0000ee" class="pl-3 text-body">Privacy Policy</a><a href="#" target="_blank" style="color: #0000ee" class="pl-3 text-body">Terms & Conditions</a></div>",
            "journeyFooterEnabled": false,
            "journeyHeader": "<div class="d-flex justify-content-center py-4 flex-grow-1">Header Content</div>",
            "journeyHeaderEnabled": false,
            "journeyJustifiedContent": "",
            "journeyJustifiedContentEnabled": false,
            "journeyLayout": "card",
            "journeyTheaterMode": false,
            "linkActiveColor": "#0c85cf",
            "linkColor": "#109cf1",
            "linkedTrees": [],
            "logo": "",
            "logoAltText": "",
            "logoHeight": "40",
            "logoProfile": "",
            "logoProfileAltText": "",
            "logoProfileCollapsed": "",
            "logoProfileCollapsedAltText": "",
            "logoProfileCollapsedHeight": "40",
            "logoProfileHeight": "40",
            "name": "Starter Theme",
            "pageTitle": "#23282e",
            "primaryColor": "#324054",
            "primaryOffColor": "#242E3C",
            "profileBackgroundColor": "#f6f8fa",
            "profileMenuHighlightColor": "#f3f5f8",
            "profileMenuHoverColor": "#324054",
            "profileMenuHoverTextColor": "#ffffff",
            "profileMenuTextHighlightColor": "#455469",
            "secondaryColor": "#69788b",
            "textColor": "#ffffff",
          },
          {
            "_id": "4c7cb08c-7a9f-4cb6-9211-60654548cae9",
            "accountCardBackgroundColor": "#ffffff",
            "accountCardHeaderColor": "#23282e",
            "accountCardInnerBorderColor": "#e7eef4",
            "accountCardInputBackgroundColor": "#ffffff",
            "accountCardInputBorderColor": "#c0c9d5",
            "accountCardInputLabelColor": "#5e6d82",
            "accountCardInputSelectColor": "#e4f4fd",
            "accountCardInputTextColor": "#23282e",
            "accountCardOuterBorderColor": "#e7eef4",
            "accountCardShadow": 3,
            "accountCardTabActiveBorderColor": "#109cf1",
            "accountCardTabActiveColor": "#e4f4fd",
            "accountCardTextColor": "#5e6d82",
            "accountFooter": "<footer>
  <div class="container-md">
    <div class="py-3 d-flex flex-column flex-sm-row flex-md-column flex-lg-row justify-content-between align-items-center w-100">
      <div class="text-nowrap">
        <span class="pr-1">© 2022</span>
        <a href="#" target="_blank" class="notranslate text-body">Zardoz, Inc</a>
      </div>
      <ul class="nav">
        <li class="nav-item">
          <a href="#" class="nav-link">Privacy Policy</a>
        </li>
        <li class="nav-item">
          <a href="#" class="nav-link">Terms of Use</a>
        </li>
      </ul>
    </div>
  </div>
</footer>
",
            "accountFooterEnabled": true,
            "accountNavigationBackgroundColor": "#ffffff",
            "accountNavigationTextColor": "#455469",
            "accountNavigationToggleBorderColor": "#e7eef4",
            "accountPageSections": {
              "accountControls": {
                "enabled": false,
              },
              "accountSecurity": {
                "enabled": true,
                "subsections": {
                  "password": {
                    "enabled": true,
                  },
                  "securityQuestions": {
                    "enabled": false,
                  },
                  "twoStepVerification": {
                    "enabled": true,
                  },
                  "username": {
                    "enabled": true,
                  },
                },
              },
              "consent": {
                "enabled": false,
              },
              "oauthApplications": {
                "enabled": false,
              },
              "personalInformation": {
                "enabled": true,
              },
              "preferences": {
                "enabled": false,
              },
              "social": {
                "enabled": false,
              },
              "trustedDevices": {
                "enabled": true,
              },
            },
            "accountTableRowHoverColor": "#f6f8fa",
            "backgroundColor": "#FFFFFF",
            "backgroundImage": "",
            "bodyText": "#5E6D82",
            "boldLinks": false,
            "buttonRounded": "50",
            "dangerColor": "#f7685b",
            "favicon": "",
            "fontFamily": "Open Sans",
            "isDefault": false,
            "journeyCardBackgroundColor": "#ffffff",
            "journeyCardBorderRadius": 4,
            "journeyCardHeaderBackgroundColor": "#ffffff",
            "journeyCardShadow": 3,
            "journeyCardTextColor": "#5e6d82",
            "journeyCardTitleColor": "#23282e",
            "journeyFloatingLabels": true,
            "journeyFooter": "<footer>
            <div class="container-md">
            <div class="py-3 d-flex flex-column flex-sm-row flex-md-column flex-lg-row justify-content-between align-items-center w-100">
              <div class="text-nowrap">
                <span class="pr-1">© 2022</span>
                <a href="#" target="_blank" class="notranslate text-body">Zardoz, Inc</a>
              </div>
              <ul class="nav">
                <li class="nav-item">
                  <a href="#" class="nav-link">Privacy Policy</a>
                </li>
                <li class="nav-item">
                  <a href="#" class="nav-link">Terms of Use</a>
                </li>
              </ul>
            </div>
            </div>
          </footer>
",
            "journeyFooterEnabled": true,
            "journeyHeader": "<div class="d-flex justify-content-center py-4 flex-grow-1">Header Content</div>",
            "journeyHeaderEnabled": false,
            "journeyInputBackgroundColor": "#ffffff",
            "journeyInputBorderColor": "#c0c9d5",
            "journeyInputLabelColor": "#5e6d82",
            "journeyInputSelectColor": "#e4f4fd",
            "journeyInputTextColor": "#23282e",
            "journeyJustifiedContent": "<div style="display: flex; background-color: black; height: 100vh;">
    <div class="d-none d-md-flex justify-content-center align-items-center p-5" style="background-image: url(https://cdn.forgerock.com/platform/themes/zardoz/background-zardoz.png);
    background-size: cover;"><h1 class="text-center display-3" style="color: rgb(255, 255, 255);">Uptime &amp; Performance Benchmarking Made Easy</h1></div>
</div>

",
            "journeyJustifiedContentEnabled": true,
            "journeyLayout": "justified-right",
            "journeySignInButtonPosition": "flex-column",
            "journeyTheaterMode": true,
            "linkActiveColor": "#007661",
            "linkColor": "#009C80",
            "linkedTrees": [],
            "logo": "https://cdn.forgerock.com/platform/themes/zardoz/logo-zardoz.svg",
            "logoAltText": "Zardoz Logo",
            "logoEnabled": true,
            "logoHeight": "47",
            "logoProfile": "https://cdn.forgerock.com/platform/themes/zardoz/logo-zardoz.svg",
            "logoProfileAltText": "Zardaz Logo",
            "logoProfileCollapsed": "https://cdn.forgerock.com/platform/themes/zardoz/logo-zardoz.svg",
            "logoProfileCollapsedAltText": "Zardaz Logo",
            "logoProfileCollapsedHeight": "28",
            "logoProfileHeight": "40",
            "name": "Zardoz",
            "pageTitle": "#23282e",
            "primaryColor": "#009C80",
            "primaryOffColor": "#007661",
            "profileBackgroundColor": "#FFFFFF",
            "profileMenuHighlightColor": "#FFFFFF",
            "profileMenuHoverColor": "#FFFFFF",
            "profileMenuHoverTextColor": "#455469",
            "profileMenuTextHighlightColor": "#009C80",
            "secondaryColor": "#69788b",
            "switchBackgroundColor": "#c0c9d5",
            "textColor": "#ffffff",
            "topBarBackgroundColor": "#ffffff",
            "topBarBorderColor": "#e7eef4",
            "topBarHeaderColor": "#23282e",
            "topBarTextColor": "#69788b",
          },
        ],
        "bravo": [
          {
            "_id": "84bbd22e-6def-459f-91c9-4c9aa4e0bec0",
            "accountFooter": "<div class="d-flex justify-content-center py-4 w-100"><span class="pr-1">© 2021</span>
<a href="#" target="_blank" class="text-body">My Company, Inc</a><a href="#" target="_blank" style="color: #0000ee" class="pl-3 text-body">Privacy Policy</a><a href="#" target="_blank" style="color: #0000ee" class="pl-3 text-body">Terms & Conditions</a></div>",
            "accountFooterEnabled": false,
            "accountPageSections": {
              "accountControls": {
                "enabled": false,
              },
              "accountSecurity": {
                "enabled": true,
                "subsections": {
                  "password": {
                    "enabled": true,
                  },
                  "securityQuestions": {
                    "enabled": false,
                  },
                  "twoStepVerification": {
                    "enabled": true,
                  },
                  "username": {
                    "enabled": true,
                  },
                },
              },
              "consent": {
                "enabled": false,
              },
              "oauthApplications": {
                "enabled": false,
              },
              "personalInformation": {
                "enabled": true,
              },
              "preferences": {
                "enabled": false,
              },
              "social": {
                "enabled": false,
              },
              "trustedDevices": {
                "enabled": true,
              },
            },
            "backgroundColor": "#FFFFFF",
            "backgroundImage": "",
            "bodyText": "#000000",
            "buttonRounded": "0",
            "dangerColor": "#f7685b",
            "favicon": "",
            "isDefault": false,
            "journeyFooter": "<div class="d-flex justify-content-center py-4 w-100"><span class="pr-1">© 2021</span>
<a href="#" target="_blank" class="text-body">My Company, Inc</a><a href="#" target="_blank" style="color: #0000ee" class="pl-3 text-body">Privacy Policy</a><a href="#" target="_blank" style="color: #0000ee" class="pl-3 text-body">Terms & Conditions</a></div>",
            "journeyFooterEnabled": false,
            "journeyHeader": "<div class="d-flex justify-content-center py-4 flex-grow-1">Header Content</div>",
            "journeyHeaderEnabled": false,
            "journeyJustifiedContent": "",
            "journeyJustifiedContentEnabled": false,
            "journeyLayout": "card",
            "journeyTheaterMode": false,
            "linkActiveColor": "#000000",
            "linkColor": "#000000",
            "linkedTrees": [],
            "logo": "https://cdn.forgerock.com/platform/themes/contrast/logo-contrast.svg",
            "logoAltText": "Contrast",
            "logoEnabled": true,
            "logoHeight": "72",
            "logoProfile": "data:image/svg+xml,%0A%3Csvg width='46' height='46' viewBox='0 0 46 46' fill='none' xmlns='http://www.w3.org/2000/svg'%3E%3Cpath d='M24.3477 13.5664H43.9438C43.5192 12.6317 43.0319 11.734 42.4905 10.8711H24.3477V13.5664Z' fill='black'/%3E%3Cpath d='M24.3477 8.17578H40.5261C39.6996 7.2052 38.7974 6.30182 37.8224 5.48047H24.3477V8.17578Z' fill='black'/%3E%3Cpath d='M24.3477 40.5195H37.8224C38.7975 39.6982 39.6996 38.7948 40.5261 37.8242H24.3477V40.5195Z' fill='black'/%3E%3Cpath d='M24.3477 2.78516H33.8482C31.0136 1.27039 27.7313 0.198195 24.3477 0V2.78516Z' fill='black'/%3E%3Cpath d='M24.3477 18.957H45.6208C45.4566 18.0405 45.2557 17.1372 44.9856 16.2617H24.3477V18.957Z' fill='black'/%3E%3Cpath d='M24.3477 21.6523V24.3477H45.9317C45.958 23.8992 46 23.4549 46 23C46 22.5451 45.958 22.1008 45.9317 21.6523H24.3477Z' fill='black'/%3E%3Cpath d='M0 23C0 35.1781 9.64778 45.2964 21.6523 46V0C9.64778 0.703566 0 10.8219 0 23Z' fill='black'/%3E%3Cpath d='M24.3477 46C27.7313 45.8018 31.0136 44.7296 33.8482 43.2148H24.3477V46Z' fill='black'/%3E%3Cpath d='M45.6208 27.043H24.3477V29.7383H44.9857C45.2557 28.8628 45.4566 27.9595 45.6208 27.043V27.043Z' fill='black'/%3E%3Cpath d='M24.3477 35.1289H42.4905C43.0319 34.266 43.5192 33.3683 43.9438 32.4336H24.3477V35.1289Z' fill='black'/%3E%3C/svg%3E%0A",
            "logoProfileAltText": "Contrast",
            "logoProfileCollapsed": "data:image/svg+xml,%0A%3Csvg width='46' height='46' viewBox='0 0 46 46' fill='none' xmlns='http://www.w3.org/2000/svg'%3E%3Cpath d='M24.3477 13.5664H43.9438C43.5192 12.6317 43.0319 11.734 42.4905 10.8711H24.3477V13.5664Z' fill='black'/%3E%3Cpath d='M24.3477 8.17578H40.5261C39.6996 7.2052 38.7974 6.30182 37.8224 5.48047H24.3477V8.17578Z' fill='black'/%3E%3Cpath d='M24.3477 40.5195H37.8224C38.7975 39.6982 39.6996 38.7948 40.5261 37.8242H24.3477V40.5195Z' fill='black'/%3E%3Cpath d='M24.3477 2.78516H33.8482C31.0136 1.27039 27.7313 0.198195 24.3477 0V2.78516Z' fill='black'/%3E%3Cpath d='M24.3477 18.957H45.6208C45.4566 18.0405 45.2557 17.1372 44.9856 16.2617H24.3477V18.957Z' fill='black'/%3E%3Cpath d='M24.3477 21.6523V24.3477H45.9317C45.958 23.8992 46 23.4549 46 23C46 22.5451 45.958 22.1008 45.9317 21.6523H24.3477Z' fill='black'/%3E%3Cpath d='M0 23C0 35.1781 9.64778 45.2964 21.6523 46V0C9.64778 0.703566 0 10.8219 0 23Z' fill='black'/%3E%3Cpath d='M24.3477 46C27.7313 45.8018 31.0136 44.7296 33.8482 43.2148H24.3477V46Z' fill='black'/%3E%3Cpath d='M45.6208 27.043H24.3477V29.7383H44.9857C45.2557 28.8628 45.4566 27.9595 45.6208 27.043V27.043Z' fill='black'/%3E%3Cpath d='M24.3477 35.1289H42.4905C43.0319 34.266 43.5192 33.3683 43.9438 32.4336H24.3477V35.1289Z' fill='black'/%3E%3C/svg%3E%0A",
            "logoProfileCollapsedAltText": "",
            "logoProfileCollapsedHeight": "22",
            "logoProfileHeight": "22",
            "name": "Contrast",
            "pageTitle": "#23282e",
            "primaryColor": "#000000",
            "primaryOffColor": "#000000",
            "profileBackgroundColor": "#FFFFFF",
            "profileMenuHighlightColor": "#FFFFFF",
            "profileMenuHoverColor": "#FFFFFF",
            "profileMenuHoverTextColor": "#000000",
            "profileMenuTextHighlightColor": "#455469",
            "secondaryColor": "#69788b",
            "textColor": "#ffffff",
          },
          {
            "_id": "05ef90a8-10f2-47fd-a481-c8c52f49e48f",
            "accountFooter": "<footer class="w-100">
            <div class="d-flex flex-column flex-md-row justify-content-center align-items-center py-4">
              <div class="container w-100">
                <div class="mt-5 py-4 border-top border-darkened">
                  <div class="row" style="color: #23282e;">
                    <div class="col-4 col-md-3 col-lg-2">
                      <h5 style="font-weight: 600; font-size: 0.9375rem;">Company</h5>
                      <ul class="nav mb-4 flex-column">
                        <li class="nav-item"><a href="#" class="nav-link px-0 py-1" target="_self">About Us</a></li>
                        <li class="nav-item"><a href="#" class="nav-link px-0 py-1" target="_self">Contact Us</a></li>
                        <li class="nav-item"><a href="#" class="nav-link px-0 py-1" target="_self">Privacy &amp; Terms</a></li>
                      </ul>
                    </div>
                    <div class="col-4 col-md-3 col-lg-2">
                      <h5 style="font-weight: 600; font-size: 0.9375rem;">Support</h5>
                      <ul class="nav mb-4 flex-column">
                        <li class="nav-item"><a href="#" class="nav-link px-0 py-1" target="_self">Help Center</a></li>
                        <li class="nav-item"><a href="#" class="nav-link px-0 py-1" target="_self">Docs</a></li>
                        <li class="nav-item"><a href="#" class="nav-link px-0 py-1" target="_self">Privacy &amp; Terms</a></li>
                      </ul>
                    </div>
                    <div class="col-4 col-md-3 col-lg-2">
                      <h5 style="font-weight: 600; font-size: 0.9375rem;">Community</h5>
                      <ul class="nav mb-4 flex-column">
                        <li class="nav-item"><a href="#" class="nav-link px-0 py-1" target="_self">Facebook</a></li>
                        <li class="nav-item"><a href="#" class="nav-link px-0 py-1" target="_self">Twitter</a></li>
                        <li class="nav-item"><a href="#" class="nav-link px-0 py-1" target="_self">Forum</a></li>
                      </ul>
                    </div>
                    <div class="col-12 col-lg-6" style="color: #5e6d82">
                      <div class="d-flex align-items-center justify-content-lg-end py-4 py-lg-0">
                        <span class="pr-1">&copy; 2021</span>
                        <a href="#" class="text-decoration-none" target="_self" style="color: #5e6d82">Rob Roy Markets, Inc</a>
                      </div>
                    </div>
                  </div>
                </div> 
              </div>
            </div>
          </footer>
",
            "accountFooterEnabled": true,
            "accountPageSections": {
              "accountControls": {
                "enabled": false,
              },
              "accountSecurity": {
                "enabled": true,
                "subsections": {
                  "password": {
                    "enabled": true,
                  },
                  "securityQuestions": {
                    "enabled": false,
                  },
                  "twoStepVerification": {
                    "enabled": true,
                  },
                  "username": {
                    "enabled": true,
                  },
                },
              },
              "consent": {
                "enabled": false,
              },
              "oauthApplications": {
                "enabled": false,
              },
              "personalInformation": {
                "enabled": true,
              },
              "preferences": {
                "enabled": false,
              },
              "social": {
                "enabled": false,
              },
              "trustedDevices": {
                "enabled": true,
              },
            },
            "backgroundColor": "#FFFFFF",
            "backgroundImage": "",
            "bodyText": "#5E6D82",
            "buttonRounded": "50",
            "dangerColor": "#f7685b",
            "favicon": "",
            "isDefault": false,
            "journeyFooter": "<footer class="w-100">
    <div class="d-flex flex-column flex-md-row justify-content-center align-items-center py-4">
        <div class="container w-100">
            <div class="mt-5 py-4 border-top border-darkened">
                <div class="row" style="color: #23282e;">
                    <div class="col-4 col-md-3 col-lg-2">
                        <h5 style="font-weight: 600; font-size: 0.9375rem;">
                            Company
                        </h5>
                        <ul class="nav mb-4 flex-column">
                            <li class="nav-item">
                                <a href="#" class="nav-link px-0 py-1" target="_self">About Us</a>
                            </li>
                            <li class="nav-item">
                                <a href="#" class="nav-link px-0 py-1" target="_self">Contact Us</a>
                            </li>
                            <li class="nav-item">
                                <a href="#" class="nav-link px-0 py-1" target="_self">Privacy &amp; Terms</a>
                            </li>
                        </ul>
                    </div>
                    <div class="col-4 col-md-3 col-lg-2">
                        <h5 style="font-weight: 600; font-size: 0.9375rem;">
                            Support
                        </h5>
                        <ul class="nav mb-4 flex-column">
                            <li class="nav-item">
                                <a href="#" class="nav-link px-0 py-1" target="_self">Help Center</a>
                            </li>
                            <li class="nav-item">
                                <a href="#" class="nav-link px-0 py-1" target="_self">Docs</a>
                            </li>
                            <li class="nav-item">
                                <a href="#" class="nav-link px-0 py-1" target="_self">Privacy &amp; Terms</a>
                            </li>
                        </ul>
                    </div>
                    <div class="col-4 col-md-3 col-lg-2">
                        <h5 style="font-weight: 600; font-size: 0.9375rem;">
                            Community
                        </h5>
                        <ul class="nav mb-4 flex-column">
                            <li class="nav-item">
                                <a href="#" class="nav-link px-0 py-1" target="_self">Facebook</a>
                            </li>
                            <li class="nav-item">
                                <a href="#" class="nav-link px-0 py-1" target="_self">Twitter</a>
                            </li>
                            <li class="nav-item">
                                <a href="#" class="nav-link px-0 py-1" target="_self">Forum</a>
                            </li>
                        </ul>
                    </div>
                    <div class="col-12 col-lg-6">
                        <div class="d-flex align-items-center justify-content-lg-end py-4 py-lg-0">
                            <span class="pr-1">&copy; 2021</span>
                            <a href="#" class="text-decoration-none" target="_self">Highlander, Inc.</a>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</footer>

",
            "journeyFooterEnabled": true,
            "journeyHeader": "<header>
            <nav
              class="navbar shadow-lg navbar-light bg-white navbar-expand-lg"
            >
              <a href="#" target="_self" class="navbar-brand">
                <img
                  src="https://cdn.forgerock.com/platform/themes/highlander/logo-highlander-full.svg"
                  alt="Logo"
                  style="height: 28px"
                />
              </a>
              <div
                class="navbar-collapse d-none d-lg-flex"
                id="navbarSupportedContent"
              >
                <ul class="navbar-nav mr-auto">
                  <li class="nav-item">
                    <a class="nav-link" href="#">Link</a>
                  </li>
                  <li class="nav-item">
                    <a
                      class="nav-link disabled"
                      href="#"
                      tabindex="-1"
                      aria-disabled="true"
                      >Disabled</a
                    >
                  </li>
                </ul>
                <ul class="navbar-nav ml-auto">
                  <li class="nav-item">
                    <a href="#" target="_self" class="nav-link">Link</a>
                  </li>
                </ul>
              </div>
            </nav>
          </header>
",
            "journeyHeaderEnabled": true,
            "journeyJustifiedContent": "",
            "journeyJustifiedContentEnabled": false,
            "journeyLayout": "card",
            "journeyTheaterMode": false,
            "linkActiveColor": "#C60819",
            "linkColor": "#EB0A1E",
            "linkedTrees": [],
            "logo": "",
            "logoAltText": "",
            "logoEnabled": true,
            "logoHeight": "40",
            "logoProfile": "https://cdn.forgerock.com/platform/themes/highlander/logo-highlander-full.svg",
            "logoProfileAltText": "Highlander",
            "logoProfileCollapsed": "https://cdn.forgerock.com/platform/themes/highlander/logo-highlander-icon.svg",
            "logoProfileCollapsedAltText": "Highlander",
            "logoProfileCollapsedHeight": "28",
            "logoProfileHeight": "28",
            "name": "Highlander",
            "pageTitle": "#23282e",
            "primaryColor": "#EB0A1E",
            "primaryOffColor": "#C60819",
            "profileBackgroundColor": "#FFFFFF",
            "profileMenuHighlightColor": "#FFFFFF",
            "profileMenuHoverColor": "#FFFFFF",
            "profileMenuHoverTextColor": "#455469",
            "profileMenuTextHighlightColor": "#EB0A1E",
            "secondaryColor": "#69788b",
            "textColor": "#ffffff",
          },
          {
            "_id": "f19b7f5a-48dc-4c53-bfac-eeed5966511a",
            "accountFooter": "<footer class="w-100">
            <div class="d-flex flex-column flex-md-row justify-content-center align-items-center py-4">
              <div class="container w-100">
                <div class="mt-5 py-4 border-top border-darkened">
                  <div class="row" style="color: #23282e;">
                    <div class="col-4 col-md-3 col-lg-2">
                      <h5 style="font-weight: 600; font-size: 0.9375rem;">Company</h5>
                      <ul class="nav mb-4 flex-column">
                        <li class="nav-item"><a href="#" class="nav-link px-0 py-1" target="_self">About Us</a></li>
                        <li class="nav-item"><a href="#" class="nav-link px-0 py-1" target="_self">Contact Us</a></li>
                        <li class="nav-item"><a href="#" class="nav-link px-0 py-1" target="_self">Privacy &amp; Terms</a></li>
                      </ul>
                    </div>
                    <div class="col-4 col-md-3 col-lg-2">
                      <h5 style="font-weight: 600; font-size: 0.9375rem;">Support</h5>
                      <ul class="nav mb-4 flex-column">
                        <li class="nav-item"><a href="#" class="nav-link px-0 py-1" target="_self">Help Center</a></li>
                        <li class="nav-item"><a href="#" class="nav-link px-0 py-1" target="_self">Docs</a></li>
                        <li class="nav-item"><a href="#" class="nav-link px-0 py-1" target="_self">Privacy &amp; Terms</a></li>
                      </ul>
                    </div>
                    <div class="col-4 col-md-3 col-lg-2">
                      <h5 style="font-weight: 600; font-size: 0.9375rem;">Community</h5>
                      <ul class="nav mb-4 flex-column">
                        <li class="nav-item"><a href="#" class="nav-link px-0 py-1" target="_self">Facebook</a></li>
                        <li class="nav-item"><a href="#" class="nav-link px-0 py-1" target="_self">Twitter</a></li>
                        <li class="nav-item"><a href="#" class="nav-link px-0 py-1" target="_self">Forum</a></li>
                      </ul>
                    </div>
                    <div class="col-12 col-lg-6">
                      <div class="d-flex align-items-center justify-content-lg-end py-4 py-lg-0">
                        <span class="pr-1">&copy; 2021</span>
                        <a href="#" class="text-decoration-none" target="_self">Rob Roy Markets, Inc</a>
                      </div>
                    </div>
                  </div>
                </div> 
              </div>
            </div>
          </footer>
",
            "accountFooterEnabled": true,
            "accountPageSections": {
              "accountControls": {
                "enabled": false,
              },
              "accountSecurity": {
                "enabled": true,
                "subsections": {
                  "password": {
                    "enabled": true,
                  },
                  "securityQuestions": {
                    "enabled": false,
                  },
                  "twoStepVerification": {
                    "enabled": true,
                  },
                  "username": {
                    "enabled": true,
                  },
                },
              },
              "consent": {
                "enabled": false,
              },
              "oauthApplications": {
                "enabled": false,
              },
              "personalInformation": {
                "enabled": true,
              },
              "preferences": {
                "enabled": false,
              },
              "social": {
                "enabled": false,
              },
              "trustedDevices": {
                "enabled": true,
              },
            },
            "backgroundColor": "#FFFFFF",
            "backgroundImage": "",
            "bodyText": "#5E6D82",
            "buttonRounded": "50",
            "dangerColor": "#f7685b",
            "favicon": "",
            "isDefault": false,
            "journeyFooter": "<footer class="w-100">
            <div
              class="
                d-flex
                flex-column flex-md-row
                justify-content-center
                align-items-center
                py-4
              "
            >
              <div class="container w-100">
                <div class="mt-5 py-4 border-top border-darkened">
                  <div class="row" style="color: #23282e">
                    <div class="col-4 col-md-3 col-lg-2">
                      <h5 style="font-weight: 600; font-size: 0.9375rem">
                        Company
                      </h5>
                      <ul class="nav mb-4 flex-column">
                        <li class="nav-item">
                          <a href="#" class="nav-link px-0 py-1" target="_self"
                            >About Us</a
                          >
                        </li>
                        <li class="nav-item">
                          <a href="#" class="nav-link px-0 py-1" target="_self"
                            >Contact Us</a
                          >
                        </li>
                        <li class="nav-item">
                          <a href="#" class="nav-link px-0 py-1" target="_self"
                            >Privacy &amp; Terms</a
                          >
                        </li>
                      </ul>
                    </div>
                    <div class="col-4 col-md-3 col-lg-2">
                      <h5 style="font-weight: 600; font-size: 0.9375rem">
                        Support
                      </h5>
                      <ul class="nav mb-4 flex-column">
                        <li class="nav-item">
                          <a href="#" class="nav-link px-0 py-1" target="_self"
                            >Help Center</a
                          >
                        </li>
                        <li class="nav-item">
                          <a href="#" class="nav-link px-0 py-1" target="_self"
                            >Docs</a
                          >
                        </li>
                        <li class="nav-item">
                          <a href="#" class="nav-link px-0 py-1" target="_self"
                            >Privacy &amp; Terms</a
                          >
                        </li>
                      </ul>
                    </div>
                    <div class="col-4 col-md-3 col-lg-2">
                      <h5 style="font-weight: 600; font-size: 0.9375rem">
                        Community
                      </h5>
                      <ul class="nav mb-4 flex-column">
                        <li class="nav-item">
                          <a href="#" class="nav-link px-0 py-1" target="_self"
                            >Facebook</a
                          >
                        </li>
                        <li class="nav-item">
                          <a href="#" class="nav-link px-0 py-1" target="_self"
                            >Twitter</a
                          >
                        </li>
                        <li class="nav-item">
                          <a href="#" class="nav-link px-0 py-1" target="_self"
                            >Forum</a
                          >
                        </li>
                      </ul>
                    </div>
                    <div class="col-12 col-lg-6">
                      <div
                        class="
                          d-flex
                          align-items-center
                          justify-content-lg-end
                          py-4 py-lg-0
                        "
                      >
                        <span class="pr-1">&copy; 2021</span>
                        <a href="#" class="text-decoration-none" target="_self"
                          >Rob Roy Markets, Inc</a
                        >
                      </div>
                    </div>
                  </div>
                </div>
              </div>
            </div>
          </footer>
",
            "journeyFooterEnabled": true,
            "journeyHeader": "<header>
            <nav
              class="navbar shadow-lg navbar-light bg-white navbar-expand-lg"
            >
              <a href="#" target="_self" class="navbar-brand">
                <img
                  src="https://cdn.forgerock.com/platform/themes/robroy/logo-robroy-full.svg"
                  alt="Logo"
                  style="height: 28px"
                />
              </a>
              <div
                class="navbar-collapse d-none d-lg-flex"
                id="navbarSupportedContent"
              >
                <ul class="navbar-nav mr-auto">
                  <li class="nav-item">
                    <a class="nav-link" href="#">Link</a>
                  </li>
                  <li class="nav-item">
                    <a
                      class="nav-link disabled"
                      href="#"
                      tabindex="-1"
                      aria-disabled="true"
                      >Disabled</a
                    >
                  </li>
                </ul>
                <ul class="navbar-nav ml-auto">
                  <li class="nav-item">
                    <a href="#" target="_self" class="nav-link">Link</a>
                  </li>
                </ul>
              </div>
            </nav>
          </header>
",
            "journeyHeaderEnabled": true,
            "journeyJustifiedContent": "<img src="https://cdn.forgerock.com/platform/themes/robroy/illustration-robroy.svg" class="w-100">",
            "journeyJustifiedContentEnabled": true,
            "journeyLayout": "justified-right",
            "journeyTheaterMode": false,
            "linkActiveColor": "#49871E",
            "linkColor": "#5AA625",
            "linkedTrees": [],
            "logo": "",
            "logoAltText": "",
            "logoEnabled": true,
            "logoHeight": "40",
            "logoProfile": "data:image/svg+xml,%0A%3Csvg width='156' height='34' viewBox='0 0 156 34' fill='none' xmlns='http://www.w3.org/2000/svg'%3E%3Cg clip-path='url(%23clip0)'%3E%3Cpath d='M32.5539 32.5538C32.5539 32.5538 17.0796 35.6024 7.23861 25.7614C-2.60242 15.9204 0.446148 0.446137 0.446148 0.446137C0.446148 0.446137 15.9204 -2.60243 25.7614 7.23866C35.6024 17.0797 32.5539 32.5538 32.5539 32.5538Z' fill='%23C3EA21'/%3E%3Cpath d='M32.5537 32.554C32.5537 32.554 17.0795 35.6026 7.23845 25.7615C-2.60257 15.9205 0.445995 0.446289 0.445995 0.446289L32.5537 32.554Z' fill='%238ADB53'/%3E%3C/g%3E%3Cpath d='M51.053 25.38L53.186 25.11V8.964L51.161 8.586V6.939H55.076C55.418 6.939 55.796 6.93 56.21 6.912C56.624 6.894 56.939 6.876 57.155 6.858C58.091 6.786 58.865 6.75 59.477 6.75C61.331 6.75 62.816 6.939 63.932 7.317C65.048 7.695 65.858 8.271 66.362 9.045C66.866 9.819 67.118 10.836 67.118 12.096C67.118 13.338 66.785 14.49 66.119 15.552C65.453 16.614 64.49 17.343 63.23 17.739C63.95 18.045 64.589 18.603 65.147 19.413C65.705 20.223 66.299 21.276 66.929 22.572C67.379 23.454 67.721 24.093 67.955 24.489C68.207 24.867 68.45 25.083 68.684 25.137L69.575 25.407V27H64.985C64.697 27 64.391 26.712 64.067 26.136C63.761 25.542 63.356 24.615 62.852 23.355C62.258 21.879 61.745 20.727 61.313 19.899C60.881 19.071 60.422 18.558 59.936 18.36H57.155V25.11L59.639 25.38V27H51.053V25.38ZM59.639 16.713C60.665 16.713 61.466 16.344 62.042 15.606C62.618 14.868 62.906 13.761 62.906 12.285C62.906 10.971 62.618 9.999 62.042 9.369C61.484 8.739 60.512 8.424 59.126 8.424C58.622 8.424 58.19 8.451 57.83 8.505C57.488 8.541 57.263 8.559 57.155 8.559V16.659C57.371 16.695 57.893 16.713 58.721 16.713H59.639ZM70.674 19.521C70.674 17.829 71.007 16.389 71.673 15.201C72.357 14.013 73.266 13.122 74.4 12.528C75.534 11.916 76.767 11.61 78.099 11.61C80.367 11.61 82.113 12.312 83.337 13.716C84.579 15.102 85.2 16.992 85.2 19.386C85.2 21.096 84.858 22.554 84.174 23.76C83.508 24.948 82.608 25.839 81.474 26.433C80.358 27.009 79.125 27.297 77.775 27.297C75.525 27.297 73.779 26.604 72.537 25.218C71.295 23.814 70.674 21.915 70.674 19.521ZM77.991 25.542C80.025 25.542 81.042 23.58 81.042 19.656C81.042 17.604 80.799 16.047 80.313 14.985C79.827 13.905 79.035 13.365 77.937 13.365C75.849 13.365 74.805 15.327 74.805 19.251C74.805 21.303 75.057 22.869 75.561 23.949C76.083 25.011 76.893 25.542 77.991 25.542ZM86.4395 5.454L91.3805 4.86H91.4345L92.1905 5.373V13.338C92.6765 12.852 93.2705 12.447 93.9725 12.123C94.6925 11.781 95.4665 11.61 96.2945 11.61C98.0225 11.61 99.4265 12.222 100.506 13.446C101.604 14.652 102.153 16.506 102.153 19.008C102.153 20.556 101.829 21.96 101.181 23.22C100.533 24.48 99.5975 25.479 98.3735 26.217C97.1675 26.937 95.7635 27.297 94.1615 27.297C92.7395 27.297 91.5065 27.18 90.4625 26.946C89.4185 26.694 88.7525 26.469 88.4645 26.271V7.182L86.4395 6.858V5.454ZM94.8635 13.986C94.3235 13.986 93.8105 14.112 93.3245 14.364C92.8565 14.598 92.4785 14.868 92.1905 15.174V25.029C92.2985 25.227 92.5505 25.389 92.9465 25.515C93.3425 25.641 93.7925 25.704 94.2965 25.704C95.4485 25.704 96.3665 25.173 97.0505 24.111C97.7525 23.031 98.1035 21.438 98.1035 19.332C98.1035 17.514 97.8065 16.173 97.2125 15.309C96.6185 14.427 95.8355 13.986 94.8635 13.986Z' fill='black'/%3E%3Cpath d='M104.183 25.38L106.316 25.11V8.964L104.291 8.586V6.939H108.206C108.548 6.939 108.926 6.93 109.34 6.912C109.754 6.894 110.069 6.876 110.285 6.858C111.221 6.786 111.995 6.75 112.607 6.75C114.461 6.75 115.946 6.939 117.062 7.317C118.178 7.695 118.988 8.271 119.492 9.045C119.996 9.819 120.248 10.836 120.248 12.096C120.248 13.338 119.915 14.49 119.249 15.552C118.583 16.614 117.62 17.343 116.36 17.739C117.08 18.045 117.719 18.603 118.277 19.413C118.835 20.223 119.429 21.276 120.059 22.572C120.509 23.454 120.851 24.093 121.085 24.489C121.337 24.867 121.58 25.083 121.814 25.137L122.705 25.407V27H118.115C117.827 27 117.521 26.712 117.197 26.136C116.891 25.542 116.486 24.615 115.982 23.355C115.388 21.879 114.875 20.727 114.443 19.899C114.011 19.071 113.552 18.558 113.066 18.36H110.285V25.11L112.769 25.38V27H104.183V25.38ZM112.769 16.713C113.795 16.713 114.596 16.344 115.172 15.606C115.748 14.868 116.036 13.761 116.036 12.285C116.036 10.971 115.748 9.999 115.172 9.369C114.614 8.739 113.642 8.424 112.256 8.424C111.752 8.424 111.32 8.451 110.96 8.505C110.618 8.541 110.393 8.559 110.285 8.559V16.659C110.501 16.695 111.023 16.713 111.851 16.713H112.769ZM123.804 19.521C123.804 17.829 124.137 16.389 124.803 15.201C125.487 14.013 126.396 13.122 127.53 12.528C128.664 11.916 129.897 11.61 131.229 11.61C133.497 11.61 135.243 12.312 136.467 13.716C137.709 15.102 138.33 16.992 138.33 19.386C138.33 21.096 137.988 22.554 137.304 23.76C136.638 24.948 135.738 25.839 134.604 26.433C133.488 27.009 132.255 27.297 130.905 27.297C128.655 27.297 126.909 26.604 125.667 25.218C124.425 23.814 123.804 21.915 123.804 19.521ZM131.121 25.542C133.155 25.542 134.172 23.58 134.172 19.656C134.172 17.604 133.929 16.047 133.443 14.985C132.957 13.905 132.165 13.365 131.067 13.365C128.979 13.365 127.935 15.327 127.935 19.251C127.935 21.303 128.187 22.869 128.691 23.949C129.213 25.011 130.023 25.542 131.121 25.542ZM143.187 33.723C142.863 33.723 142.512 33.696 142.134 33.642C141.774 33.588 141.513 33.525 141.351 33.453V30.564C141.477 30.636 141.729 30.708 142.107 30.78C142.485 30.852 142.827 30.888 143.133 30.888C144.033 30.888 144.771 30.591 145.347 29.997C145.941 29.403 146.49 28.404 146.994 27H145.536L140.46 13.905L139.245 13.554V11.988H146.67V13.554L144.699 13.878L147.102 21.357L148.074 24.543L148.911 21.357L151.125 13.878L149.424 13.554V11.988H155.283V13.554L153.96 13.878C152.97 16.902 151.989 19.818 151.017 22.626C150.045 25.434 149.478 27.009 149.316 27.351C148.74 28.863 148.191 30.069 147.669 30.969C147.147 31.869 146.526 32.553 145.806 33.021C145.086 33.489 144.213 33.723 143.187 33.723Z' fill='%236CBE34'/%3E%3Cdefs%3E%3CclipPath id='clip0'%3E%3Crect width='33' height='33' fill='white' transform='matrix(-1 0 0 1 33 0)'/%3E%3C/clipPath%3E%3C/defs%3E%3C/svg%3E%0A",
            "logoProfileAltText": "RobRoy",
            "logoProfileCollapsed": "data:image/svg+xml,%0A%3Csvg width='33' height='33' viewBox='0 0 33 33' fill='none' xmlns='http://www.w3.org/2000/svg'%3E%3Cg clip-path='url(%23clip0)'%3E%3Cpath d='M32.5539 32.5538C32.5539 32.5538 17.0796 35.6024 7.23861 25.7614C-2.60242 15.9204 0.446148 0.446137 0.446148 0.446137C0.446148 0.446137 15.9204 -2.60243 25.7614 7.23866C35.6024 17.0797 32.5539 32.5538 32.5539 32.5538Z' fill='%23C3EA21'/%3E%3Cpath d='M32.5537 32.554C32.5537 32.554 17.0795 35.6026 7.23845 25.7615C-2.60257 15.9205 0.445996 0.446289 0.445996 0.446289L32.5537 32.554Z' fill='%238ADB53'/%3E%3C/g%3E%3Cdefs%3E%3CclipPath id='clip0'%3E%3Crect width='33' height='33' fill='white' transform='matrix(-1 0 0 1 33 0)'/%3E%3C/clipPath%3E%3C/defs%3E%3C/svg%3E%0A",
            "logoProfileCollapsedAltText": "RobRoy",
            "logoProfileCollapsedHeight": "28",
            "logoProfileHeight": "28",
            "name": "Robroy",
            "pageTitle": "#23282e",
            "primaryColor": "#5AA625",
            "primaryOffColor": "#49871E",
            "profileBackgroundColor": "#FFFFFF",
            "profileMenuHighlightColor": "#FFFFFF",
            "profileMenuHoverColor": "#FFFFFF",
            "profileMenuHoverTextColor": "#455469",
            "profileMenuTextHighlightColor": "#5AA625",
            "secondaryColor": "#69788b",
            "textColor": "#ffffff",
          },
          {
            "_id": "022ba5cf-a2e4-49a8-ae6d-2ca54abf6573",
            "accountFooter": "<div class="d-flex justify-content-center py-4 w-100"><span class="pr-1">© 2021</span>
<a href="#" target="_blank" class="text-body">My Company, Inc</a><a href="#" target="_blank" style="color: #0000ee" class="pl-3 text-body">Privacy Policy</a><a href="#" target="_blank" style="color: #0000ee" class="pl-3 text-body">Terms & Conditions</a></div>",
            "accountFooterEnabled": false,
            "accountPageSections": {
              "accountControls": {
                "enabled": false,
              },
              "accountSecurity": {
                "enabled": true,
                "subsections": {
                  "password": {
                    "enabled": true,
                  },
                  "securityQuestions": {
                    "enabled": false,
                  },
                  "twoStepVerification": {
                    "enabled": true,
                  },
                  "username": {
                    "enabled": true,
                  },
                },
              },
              "consent": {
                "enabled": false,
              },
              "oauthApplications": {
                "enabled": false,
              },
              "personalInformation": {
                "enabled": true,
              },
              "preferences": {
                "enabled": false,
              },
              "social": {
                "enabled": false,
              },
              "trustedDevices": {
                "enabled": true,
              },
            },
            "backgroundColor": "#324054",
            "backgroundImage": "",
            "bodyText": "#23282e",
            "buttonRounded": 5,
            "dangerColor": "#f7685b",
            "favicon": "",
            "isDefault": true,
            "journeyFooter": "<div class="d-flex justify-content-center py-4 w-100"><span class="pr-1">© 2021</span>
<a href="#" target="_blank" class="text-body">My Company, Inc</a><a href="#" target="_blank" style="color: #0000ee" class="pl-3 text-body">Privacy Policy</a><a href="#" target="_blank" style="color: #0000ee" class="pl-3 text-body">Terms & Conditions</a></div>",
            "journeyFooterEnabled": false,
            "journeyHeader": "<div class="d-flex justify-content-center py-4 flex-grow-1">Header Content</div>",
            "journeyHeaderEnabled": false,
            "journeyJustifiedContent": "",
            "journeyJustifiedContentEnabled": false,
            "journeyLayout": "card",
            "journeyTheaterMode": false,
            "linkActiveColor": "#0c85cf",
            "linkColor": "#109cf1",
            "linkedTrees": [],
            "logo": "",
            "logoAltText": "",
            "logoHeight": "40",
            "logoProfile": "",
            "logoProfileAltText": "",
            "logoProfileCollapsed": "",
            "logoProfileCollapsedAltText": "",
            "logoProfileCollapsedHeight": "40",
            "logoProfileHeight": "40",
            "name": "Starter Theme",
            "pageTitle": "#23282e",
            "primaryColor": "#324054",
            "primaryOffColor": "#242E3C",
            "profileBackgroundColor": "#f6f8fa",
            "profileMenuHighlightColor": "#f3f5f8",
            "profileMenuHoverColor": "#324054",
            "profileMenuHoverTextColor": "#ffffff",
            "profileMenuTextHighlightColor": "#455469",
            "secondaryColor": "#69788b",
            "textColor": "#ffffff",
          },
          {
            "_id": "4c7cb08c-7a9f-4cb6-9211-60654548cae9",
            "accountCardBackgroundColor": "#ffffff",
            "accountCardHeaderColor": "#23282e",
            "accountCardInnerBorderColor": "#e7eef4",
            "accountCardInputBackgroundColor": "#ffffff",
            "accountCardInputBorderColor": "#c0c9d5",
            "accountCardInputLabelColor": "#5e6d82",
            "accountCardInputSelectColor": "#e4f4fd",
            "accountCardInputTextColor": "#23282e",
            "accountCardOuterBorderColor": "#e7eef4",
            "accountCardShadow": 3,
            "accountCardTabActiveBorderColor": "#109cf1",
            "accountCardTabActiveColor": "#e4f4fd",
            "accountCardTextColor": "#5e6d82",
            "accountFooter": "<footer>
  <div class="container-md">
    <div class="py-3 d-flex flex-column flex-sm-row flex-md-column flex-lg-row justify-content-between align-items-center w-100">
      <div class="text-nowrap">
        <span class="pr-1">© 2022</span>
        <a href="#" target="_blank" class="notranslate text-body">Zardoz, Inc</a>
      </div>
      <ul class="nav">
        <li class="nav-item">
          <a href="#" class="nav-link">Privacy Policy</a>
        </li>
        <li class="nav-item">
          <a href="#" class="nav-link">Terms of Use</a>
        </li>
      </ul>
    </div>
  </div>
</footer>
",
            "accountFooterEnabled": true,
            "accountNavigationBackgroundColor": "#ffffff",
            "accountNavigationTextColor": "#455469",
            "accountNavigationToggleBorderColor": "#e7eef4",
            "accountPageSections": {
              "accountControls": {
                "enabled": false,
              },
              "accountSecurity": {
                "enabled": true,
                "subsections": {
                  "password": {
                    "enabled": true,
                  },
                  "securityQuestions": {
                    "enabled": false,
                  },
                  "twoStepVerification": {
                    "enabled": true,
                  },
                  "username": {
                    "enabled": true,
                  },
                },
              },
              "consent": {
                "enabled": false,
              },
              "oauthApplications": {
                "enabled": false,
              },
              "personalInformation": {
                "enabled": true,
              },
              "preferences": {
                "enabled": false,
              },
              "social": {
                "enabled": false,
              },
              "trustedDevices": {
                "enabled": true,
              },
            },
            "accountTableRowHoverColor": "#f6f8fa",
            "backgroundColor": "#FFFFFF",
            "backgroundImage": "",
            "bodyText": "#5E6D82",
            "boldLinks": false,
            "buttonRounded": "50",
            "dangerColor": "#f7685b",
            "favicon": "",
            "fontFamily": "Open Sans",
            "isDefault": false,
            "journeyCardBackgroundColor": "#ffffff",
            "journeyCardBorderRadius": 4,
            "journeyCardHeaderBackgroundColor": "#ffffff",
            "journeyCardShadow": 3,
            "journeyCardTextColor": "#5e6d82",
            "journeyCardTitleColor": "#23282e",
            "journeyFloatingLabels": true,
            "journeyFooter": "<footer>
            <div class="container-md">
            <div class="py-3 d-flex flex-column flex-sm-row flex-md-column flex-lg-row justify-content-between align-items-center w-100">
              <div class="text-nowrap">
                <span class="pr-1">© 2022</span>
                <a href="#" target="_blank" class="notranslate text-body">Zardoz, Inc</a>
              </div>
              <ul class="nav">
                <li class="nav-item">
                  <a href="#" class="nav-link">Privacy Policy</a>
                </li>
                <li class="nav-item">
                  <a href="#" class="nav-link">Terms of Use</a>
                </li>
              </ul>
            </div>
            </div>
          </footer>
",
            "journeyFooterEnabled": true,
            "journeyHeader": "<div class="d-flex justify-content-center py-4 flex-grow-1">Header Content</div>",
            "journeyHeaderEnabled": false,
            "journeyInputBackgroundColor": "#ffffff",
            "journeyInputBorderColor": "#c0c9d5",
            "journeyInputLabelColor": "#5e6d82",
            "journeyInputSelectColor": "#e4f4fd",
            "journeyInputTextColor": "#23282e",
            "journeyJustifiedContent": "<div style="display: flex; background-color: black; height: 100vh;">
    <div class="d-none d-md-flex justify-content-center align-items-center p-5" style="background-image: url(https://cdn.forgerock.com/platform/themes/zardoz/background-zardoz.png);
    background-size: cover;"><h1 class="text-center display-3" style="color: rgb(255, 255, 255);">Uptime &amp; Performance Benchmarking Made Easy</h1></div>
</div>

",
            "journeyJustifiedContentEnabled": true,
            "journeyLayout": "justified-right",
            "journeySignInButtonPosition": "flex-column",
            "journeyTheaterMode": true,
            "linkActiveColor": "#007661",
            "linkColor": "#009C80",
            "linkedTrees": [],
            "logo": "https://cdn.forgerock.com/platform/themes/zardoz/logo-zardoz.svg",
            "logoAltText": "Zardoz Logo",
            "logoEnabled": true,
            "logoHeight": "47",
            "logoProfile": "https://cdn.forgerock.com/platform/themes/zardoz/logo-zardoz.svg",
            "logoProfileAltText": "Zardaz Logo",
            "logoProfileCollapsed": "https://cdn.forgerock.com/platform/themes/zardoz/logo-zardoz.svg",
            "logoProfileCollapsedAltText": "Zardaz Logo",
            "logoProfileCollapsedHeight": "28",
            "logoProfileHeight": "40",
            "name": "Zardoz",
            "pageTitle": "#23282e",
            "primaryColor": "#009C80",
            "primaryOffColor": "#007661",
            "profileBackgroundColor": "#FFFFFF",
            "profileMenuHighlightColor": "#FFFFFF",
            "profileMenuHoverColor": "#FFFFFF",
            "profileMenuHoverTextColor": "#455469",
            "profileMenuTextHighlightColor": "#009C80",
            "secondaryColor": "#69788b",
            "switchBackgroundColor": "#c0c9d5",
            "textColor": "#ffffff",
            "topBarBackgroundColor": "#ffffff",
            "topBarBorderColor": "#e7eef4",
            "topBarHeaderColor": "#23282e",
            "topBarTextColor": "#69788b",
          },
        ],
      },
    },
  },
  "emailTemplate": {
    "FraudNotification": {
      "_id": "emailTemplate/FraudNotification",
      "defaultLocale": "en",
      "displayName": "Fraud Notification",
      "enabled": true,
      "from": "saas@forgerock.com",
      "html": {
        "en": "<div class="content"><p>Hello {{object.givenName}} {{object.sn}},</p><p>we blocked an attempt to access your Expanse account from a suspicious device!</p><p>Your Expanse Security Team.</p></div>",
      },
      "message": {
        "en": "<html><head></head><body style="background-color: #324054; color: #455469; padding: 60px; text-align: center;"><div class="content" style="background-color: red; border-radius: 4px; margin: 0 auto; padding: 48px; width: 235px;"><p>Hello {{object.givenName}} {{object.sn}},</p><p>we blocked an attempt to access your Expanse account from a suspicious device!</p><p>Your Expanse Security Team.</p></div></body></html>",
      },
      "mimeType": "text/html",
      "styles": "body {
 background-color: #324054;
 color: #455469;
 padding: 60px;
 text-align: center 
}
 a {
 text-decoration: none;
 color: #109cf1;
}
 .content {
 background-color: red;
 border-radius: 4px;
 margin: 0 auto;
 padding: 48px;
 width: 235px 
}
 ",
      "subject": {
        "en": "Fraud alert from your Expanse Account!",
      },
    },
    "MobileEmailOTP": {
      "_id": "emailTemplate/MobileEmailOTP",
      "defaultLocale": "en",
      "displayName": "Mobile Email OTP",
      "enabled": true,
      "from": "saas@forgerock.com",
      "html": {
        "en": "<div class="content"><h3 id="thisisyouronetimepassword">This is your one-time password:</h3><h4 id="objectfrunindexedinteger5">{{object.frUnindexedInteger5}}</h4></div>",
      },
      "message": {
        "en": "<html><head></head><body style="background-color: #324054; color: #455469; padding: 60px; text-align: center;"><div class="content" style="background-color: #fff; border-radius: 4px; margin: 0 auto; padding: 48px; width: 235px;"><h3 id="thisisyouronetimepassword">This is your one-time password:</h3><h4 id="objectfrunindexedinteger5">{{object.frUnindexedInteger5}}</h4></div></body></html>",
      },
      "mimeType": "text/html",
      "styles": "body {
 background-color: #324054;
 color: #455469;
 padding: 60px;
 text-align: center 
}
 a {
 text-decoration: none;
 color: #109cf1;
}
 .content {
 background-color: #fff;
 border-radius: 4px;
 margin: 0 auto;
 padding: 48px;
 width: 235px 
}
 ",
      "subject": {
        "en": "One-Time Password for Login",
      },
    },
    "UnknownDeviceNotification": {
      "_id": "emailTemplate/UnknownDeviceNotification",
      "defaultLocale": "en",
      "displayName": "Unknown Device Notification",
      "enabled": true,
      "from": "saas@forgerock.com",
      "html": {
        "en": "<div class="content"><p>Hello {{object.givenName}} {{object.sn}},</p><p>your Expanse account was accessed from an unknown device!</p><p>Your Expanse Security Team.</p></div>",
      },
      "message": {
        "en": "<html><head></head><body style="background-color: #324054; color: black; padding: 60px; text-align: center;"><div class="content" style="background-color: orange; border-radius: 4px; margin: 0 auto; padding: 48px; width: 235px;"><p>Hello {{object.givenName}} {{object.sn}},</p><p>your Expanse account was accessed from an unknown device!</p><p>Your Expanse Security Team.</p></div></body></html>",
      },
      "mimeType": "text/html",
      "styles": "body {
 background-color: #324054;
 color: black;
 padding: 60px;
 text-align: center 
}
 a {
 text-decoration: none;
 color: #109cf1;
}
 .content {
 background-color: orange;
 border-radius: 4px;
 margin: 0 auto;
 padding: 48px;
 width: 235px 
}
 ",
      "subject": {
        "en": "Your Expanse account was accessed from an unknown device!",
      },
    },
    "Welcome": {
      "_id": "emailTemplate/Welcome",
      "defaultLocale": "en",
      "displayName": "Welcome",
      "enabled": true,
      "from": "saas@forgerock.com",
      "html": {
        "en": "<div class="content"><p>Welcome to Expanse, {{object.givenName}}!</p><p><a href="https://openam-huntington-dev.forgeblocks.com/am/XUI/?realm=/alpha#/service/Login">Access your account</a> with your new username: {{object.userName}}</p><p>We are looking forward to servicing all your banking needs!</p><p>Your Expanse Team.</p></div>",
      },
      "message": {
        "en": "<html><head></head><body style="background-color: #324054; color: black; padding: 10px; text-align: left;"><div class="content" style="background-color: #ffffff; border-radius: 4px; margin: 0 auto; padding: 10px; width: 300px;"><p>Welcome to Expanse, {{object.givenName}}!</p><p><a href="https://openam-huntington-dev.forgeblocks.com/am/XUI/?realm=/alpha#/service/Login" style="text-decoration: none; color: #109cf1;">Access your account</a> with your new username: {{object.userName}}</p><p>We are looking forward to servicing all your banking needs!</p><p>Your Expanse Team.</p></div></body></html>",
      },
      "mimeType": "text/html",
      "styles": "body {
 background-color: #324054;
 color: black;
 padding: 10px;
 text-align: left 
}
 a {
 text-decoration: none;
 color: #109cf1;
}
 .content {
 background-color: #ffffff;
 border-radius: 4px;
 margin: 0 auto;
 padding: 10px;
 width: 300px 
}
 ",
      "subject": {
        "en": "Your registration with Expanse",
      },
    },
    "activation": {
      "_id": "emailTemplate/activation",
      "defaultLocale": "en",
      "displayName": "Activation",
      "enabled": true,
      "from": ""ForgeRock Identity Cloud Team" <saas@forgerock.com>",
      "html": {
        "en": "<div class="content"><p>Welcome {{object.givenName}}.</p><p>Your username is '{{object.userName}}'.</p></div>",
      },
      "message": {
        "en": "<html><head></head><body style="background-color: #324054; color: #455469; padding: 60px; text-align: center;"><div class="content" style="background-color: #fff; border-radius: 4px; margin: 0 auto; padding: 48px; width: 235px;"><p>Welcome {{object.givenName}}.</p><p>Your username is '{{object.userName}}'.</p></div></body></html>",
      },
      "mimeType": "text/html",
      "styles": "body {
	background-color: #324054;
	color: #455469;
	padding: 60px;
	text-align: center
}

a {
	text-decoration: none;
	color: #109cf1;
}

.content {
	background-color: #fff;
	border-radius: 4px;
	margin: 0 auto;
	padding: 48px;
	width: 235px
}
",
      "subject": {
        "en": "Your J.P. Morgan account has been activated",
      },
      "templateId": "activation",
    },
    "arvestUnknownDeviceNotification": {
      "_id": "emailTemplate/arvestUnknownDeviceNotification",
      "defaultLocale": "en",
      "description": "",
      "displayName": "Arvest Unknown Device Notification",
      "enabled": true,
      "from": ""Arvest IT Security " <admin@arvest-demo.com>",
      "html": {
        "en": "<div class="content"><p>Hello {{object.givenName}} {{object.sn}},</p><p>your Arvest account was accessed from an unknown device!</p><p>Your Arvest Cyber Security Team.</p></div>",
      },
      "message": {
        "en": "<html><head></head><body style="background-color: #324054; color: black; padding: 60px; text-align: center;"><div class="content" style="background-color: orange; border-radius: 4px; margin: 0 auto; padding: 48px; width: 235px;"><p>Hello {{object.givenName}} {{object.sn}},</p><p>your Arvest account was accessed from an unknown device!</p><p>Your Arvest Cyber Security Team.</p></div></body></html>",
      },
      "mimeType": "text/html",
      "styles": "body {
 background-color: #324054;
 color: black;
 padding: 60px;
 text-align: center 
}
 a {
 text-decoration: none;
 color: #109cf1;
}
 .content {
 background-color: orange;
 border-radius: 4px;
 margin: 0 auto;
 padding: 48px;
 width: 235px 
}
 ",
      "subject": {
        "en": "Your Arvest Bank account was accessed from an unknown device!",
      },
      "templateId": "arvestUnknownDeviceNotification",
    },
    "arvestWelcome": {
      "_id": "emailTemplate/arvestWelcome",
      "defaultLocale": "en",
      "description": "",
      "displayName": "ArvestWelcome",
      "enabled": true,
      "from": ""Arvest Admin" <admin@idcloud-demo.com>",
      "html": {
        "en": "<div class="content"><p>Welcome to Arvest Bank, {{object.givenName}}!</p><p><a href="https://openam-idcloud-demo.forgeblocks.com/am/XUI/?realm=/alpha#/service/IBX_Login">Access your account</a> with your new username: {{object.userName}}</p><p>We are looking forward to servicing all your banking needs!</p><p>Your Arvest Team</p></div>",
      },
      "message": {
        "en": "<html><head></head><body style="background-color: #324054; color: black; padding: 10px; text-align: left;"><div class="content" style="background-color: #ffffff; border-radius: 4px; margin: 0 auto; padding: 10px; width: 300px;"><p>Welcome to Arvest Bank, {{object.givenName}}!</p><p><a href="https://openam-idcloud-demo.forgeblocks.com/am/XUI/?realm=/alpha#/service/IBX_Login" style="text-decoration: none; color: #109cf1;">Access your account</a> with your new username: {{object.userName}}</p><p>We are looking forward to servicing all your banking needs!</p><p>Your Arvest Team</p></div></body></html>",
      },
      "mimeType": "text/html",
      "name": "Welcome",
      "styles": "body {
 background-color: #324054;
 color: black;
 padding: 10px;
 text-align: left 
}
 a {
 text-decoration: none;
 color: #109cf1;
}
 .content {
 background-color: #ffffff;
 border-radius: 4px;
 margin: 0 auto;
 padding: 10px;
 width: 300px 
}
 ",
      "subject": {
        "en": "Your registration with Arvest Bank",
      },
      "templateId": "arvestWelcome",
    },
    "ebInvitation": {
      "_id": "emailTemplate/ebInvitation",
      "advancedEditor": true,
      "defaultLocale": "en",
      "description": "",
      "displayName": "EBInvitation",
      "enabled": true,
      "from": ""J.P Morgan " <>",
      "html": {
        "en": "",
      },
      "message": {
        "en": "<html>
  <head></head>
  <body style="display: 'flex'; textAlign: 'center'; color: #455469; font-family: 'Open Sans';">
    <div class="content" style="textAlign: 'center'">
      <p> Dear {{object.givenName}}, </p>
      <h4 style="font-weight: 400; font-style: normal;">You have been invited to join
        <b>JPMC Embedded Banking</b>
      </h4>
      <table>
        <tr>
          <td style="text-decoration: none; color: white; background: #155c93; font-						style: normal; font-weight: 700; font-size: 14px; line-height: 22px; border-					radius: 3px; padding: 15px">
            <a href={{object.resumeURI}} style="text-decoration: none; color: white">ACCEPT INVITE</a>
          </td>
        </tr>
      </table>
      <h6 style="color: #999999; font-family: Inter; font-style: normal; font-weight: 400; font-size: 12px; line-height: 16px">Copyright © 2022 of J.P. Morgan Chase & Co.</h6>
    </div>
  </body>
</html>
 ",
      },
      "mimeType": "text/html",
      "name": "invitation",
      "styles": "body {
   margin: 0;
   padding: 0;
   color: #455469;
   font-family: 'Open Sans';
}
 table {
   width:100%;
   border-collapse:collapse;
   border:0;
   border-spacing:0;
   background:#ffffff;
   text-align: center;
}
 tbody {
}
 ",
      "subject": {
        "en": "You're invited to join the JPMC Embedded Banking",
      },
      "templateId": "ebInvitation",
    },
    "forgottenUsername": {
      "_id": "emailTemplate/forgottenUsername",
      "defaultLocale": "en",
      "enabled": true,
      "from": "",
      "html": {
        "en": "<html><body>{{#if object.userName}}<p>Your username is '{{object.userName}}'.</p>{{else}}If you received this email in error, please disregard.{{/if}}<p><a href="{{object.resumeURI}}">Click here to login</a></p></body></html>",
        "fr": "<html><body>{{#if object.userName}}<p>Votre nom d'utilisateur est '{{object.userName}}'.</p>{{else}}Si vous avez reçu cet e-mail par erreur, veuillez ne pas en tenir compte.{{/if}}<p><a href="{{object.resumeURI}}">Cliquez ici pour vous connecter</a></p></body></html>",
      },
      "message": {
        "en": "<html><head></head><body style="background-color: #324054; color: #455469; padding: 60px; text-align: center;"><div class="content" style="background-color: #fff; border-radius: 4px; margin: 0 auto; padding: 48px; width: 235px;"><p>{{#if object.userName}}Your username is '{{object.userName}}'.</p><p>{{else}}If you received this email in error, please disregard.{{/if}}</p><p><a href="{{object.resumeURI}}" style="text-decoration: none; color: #109cf1;">Click here to login</a></p></div></body></html>",
        "fr": "<html><head></head><body style="background-color: #324054; color: #455469; padding: 60px; text-align: center;"><div class="content" style="background-color: #fff; border-radius: 4px; margin: 0 auto; padding: 48px; width: 235px;">{{#if object.userName}}<p>Votre nom d'utilisateur est '{{object.userName}}'.</p>{{else}}Si vous avez reçu cet e-mail par erreur, veuillez ne pas en tenir compte.{{/if}}<p><a href="{{object.resumeURI}}" style="text-decoration: none; color: #109cf1;">Cliquez ici pour vous connecter</a></p></div></body></html>",
      },
      "mimeType": "text/html",
      "styles": "body{background-color:#324054;color:#5e6d82;padding:60px;text-align:center}a{text-decoration:none;color:#109cf1}.content{background-color:#fff;border-radius:4px;margin:0 auto;padding:48px;width:235px}",
      "subject": {
        "en": "Account Information - username",
        "fr": "Informations sur le compte - nom d'utilisateur",
      },
    },
    "multiFactorEmailLink": {
      "_id": "emailTemplate/multiFactorEmailLink",
      "defaultLocale": "en",
      "enabled": true,
      "from": "",
      "message": {
        "en": "<html><body><h3>You started a login or profile update that requires MFA. </h3><h4><a href="{{object.resumeURI}}">Click to Proceed</a></h4></body></html>",
      },
      "mimeType": "text/html",
      "subject": {
        "en": "Multi-Factor Email for Identity Cloud login",
      },
    },
    "oneTimePassword": {
      "_id": "emailTemplate/oneTimePassword",
      "defaultLocale": "en",
      "enabled": true,
      "from": "",
      "message": {
        "en": "<h3>This is your one-time password:</h3><h4>{{object.description}}</a></h4>",
      },
      "mimeType": "text/html",
      "subject": {
        "en": "One-Time Password for login",
      },
    },
    "profileUpdateNotification": {
      "_id": "emailTemplate/profileUpdateNotification",
      "defaultLocale": "en",
      "displayName": "Profile Update Notification",
      "enabled": true,
      "from": "saas@forgerock.com",
      "html": {
        "en": "<div class="content"><p>Hello {{object.givenName}},</p><p>your user profile has been updated. If you did not make those changes yourself or requested them, please contact us immediately.</p><p>Kindest regards.</p></div>",
      },
      "message": {
        "en": "<html><head></head><body style="background-color: #324054; color: #455469; padding: 60px; text-align: center;"><div class="content" style="background-color: #fff; border-radius: 4px; margin: 0 auto; padding: 48px; width: 235px;"><p>Hello {{object.givenName}},</p><p>your user profile has been updated. If you did not make those changes yourself or requested them, please contact us immediately.</p><p>Kindest regards.</p></div></body></html>",
      },
      "mimeType": "text/html",
      "styles": "body {
 background-color: #324054;
 color: #455469;
 padding: 60px;
 text-align: center 
}
 a {
 text-decoration: none;
 color: #109cf1;
}
 .content {
 background-color: #fff;
 border-radius: 4px;
 margin: 0 auto;
 padding: 48px;
 width: 235px 
}
 ",
      "subject": {
        "en": "Your user profile has been updated",
      },
    },
    "profileUpdateNotificationEmailChange": {
      "_id": "emailTemplate/profileUpdateNotificationEmailChange",
      "defaultLocale": "en",
      "displayName": "Email Address Change Notification",
      "enabled": true,
      "from": "saas@forgerock.com",
      "html": {
        "en": "<div class="content"><p>Hello {{object.givenName}},</p><p>your user profile has been updated and your email address has changed. This email is sent to the old address we had on file. If you did not make those changes yourself or requested them, please contact us immediately.</p><p>Old: {{object.frUnindexedString5}}<br>
New: {{object.mail}}</p><p>Kindest regards.</p></div>",
      },
      "message": {
        "en": "<html><head></head><body style="background-color: #324054; color: #455469; padding: 60px; text-align: left;"><div class="content" style="background-color: #fff; border-radius: 4px; margin: 0 auto; padding: 48px; width: 235px;"><p>Hello {{object.givenName}},</p><p>your user profile has been updated and your email address has changed. This email is sent to the old address we had on file. If you did not make those changes yourself or requested them, please contact us immediately.</p><p>Old: {{object.frUnindexedString5}}<br>
New: {{object.mail}}</p><p>Kindest regards.</p></div></body></html>",
      },
      "mimeType": "text/html",
      "styles": "body {
 background-color: #324054;
 color: #455469;
 padding: 60px;
 text-align: left 
}
 a {
 text-decoration: none;
 color: #109cf1;
}
 .content {
 background-color: #fff;
 border-radius: 4px;
 margin: 0 auto;
 padding: 48px;
 width: 235px 
}
 ",
      "subject": {
        "en": "You email address and profile has been updated",
      },
    },
    "registration": {
      "_id": "emailTemplate/registration",
      "advancedEditor": true,
      "defaultLocale": "en",
      "displayName": "registration",
      "enabled": true,
      "from": ""J.P Morgan" <sass@forgerock.com>",
      "html": {
        "en": "",
        "fr": "",
      },
      "message": {
        "en": "<html>
  <head></head>
  <body style="color: #455469; text-align: center; font-family: 'Open Sans'; width: 400px; margin: auto;">
    <div class="content" style="background-color: #fff; border-radius: 4px;">
      <h4 id="youhavebeeninvitedtojoinjpmcembeddedbanking" style="font-style: normal; font-weight: 400;">You have been invited to join 
        
        <strong>JPMC Developer Console</strong>
      </h4>
      <p>
        <a href="{{object.resumeURI}}" style="text-decoration: none; color: white; background-color: #1A7B99; padding: 10px">ACCEPT INVITE</a>
      </p>
      <h6 id="copyright2022ofjpmorganchaseco" style="color: #999999; font-family: 'Inter'; -font-style: normal; font-weight: 400; font-size: 12px; line-height: 16px;">Copyright © 2022 of J.P. Morgan Chase & Co.</h6>
    </div>
  </body>
</html>",
        "fr": "<html><head></head><body style="color: #455469; text-align: center; font-family: 'Open Sans'; width: 400px; margin: auto;"><div class="content" style="background-color: #fff; border-radius: 4px;"><h3 id="ceciestvotremaildinscription" style="text-align: left;">Ceci est votre mail d'inscription.</h3><p><a href="{{object.resumeURI}}" style="text-decoration: none; color: white;">Lien de vérification email</a></p></div></body></html>",
      },
      "mimeType": "text/html",
      "styles": "body {
   color: #455469;
   text-align: center;
   font-family: 'Open Sans';
   width: 400px;
   margin: auto;
}
 td {
   text-decoration: none;
   color: white;
   background: #155C93;
   font-style: normal;
   font-weight: 700;
   font-size: 14px;
   line-height: 22px;
   border-radius: 3px;
   padding: 15px;
}
 .content {
   background-color: #fff;
   border-radius: 4px;
}
 h2 {
   margin: 50px;
}
 h3 {
   text-align: left;
}
 h4 {
   font-style: normal;
   font-weight: 400;
}
 h5 {
   color: #666666;
   font-family: 'Inter';
   font-style: normal;
   font-weight: 400;
   font-size: 16px;
   line-height: 24px;
}
 h6 {
   color: #999999;
   font-family: 'Inter';
   -font-style: normal;
   font-weight: 400;
   font-size: 12px;
   line-height: 16px;
}
 table {
   margin: auto;
   background-color: #dedddc;
}
 tr {
   background-color: #dedddc;
}

a {
  text-decoration: none;
  color: white;
} ",
      "subject": {
        "en": "You're invited to join JPMC Embedded Banking",
        "fr": "Créer un nouveau compte",
      },
      "templateId": "registration",
    },
    "resetPassword": {
      "_id": "emailTemplate/resetPassword",
      "defaultLocale": "en",
      "enabled": true,
      "from": "",
      "message": {
        "en": "<h3>Click to reset your password</h3><h4><a href="{{object.resumeURI}}">Password reset link</a></h4>",
        "fr": "<h3>Cliquez pour réinitialiser votre mot de passe</h3><h4><a href="{{object.resumeURI}}">Mot de passe lien de réinitialisation</a></h4>",
      },
      "mimeType": "text/html",
      "subject": {
        "en": "Reset your password",
        "fr": "Réinitialisez votre mot de passe",
      },
    },
    "updatePassword": {
      "_id": "emailTemplate/updatePassword",
      "defaultLocale": "en",
      "enabled": true,
      "from": "",
      "html": {
        "en": "<h3>Verify email to update password</h3><p><a href="{{object.resumeURI}}">Update password link</a></p>",
      },
      "message": {
        "en": "<html><head></head><body style="background-color: #324054; color: #5e6d82; padding: 60px; text-align: center;"><div class="content" style="background-color: #fff; border-radius: 4px; margin: 0 auto; padding: 48px; width: 235px;"><h3 id="verifyemailtoupdatepassword">Verify email to update password</h3><p><a href="{{object.resumeURI}}" style="text-decoration: none; color: #109cf1;">Update password link</a></p></div></body></html>",
      },
      "mimeType": "text/html",
      "styles": "body{background-color:#324054;color:#5e6d82;padding:60px;text-align:center}a{text-decoration:none;color:#109cf1}.content{background-color:#fff;border-radius:4px;margin:0 auto;padding:48px;width:235px}",
      "subject": {
        "en": "Update your password",
      },
    },
    "welcome": {
      "_id": "emailTemplate/welcome",
      "defaultLocale": "en",
      "displayName": "Welcome",
      "enabled": true,
      "from": "saas@forgerock.com",
      "html": {
        "en": "<div class="content"><p>Welcome. Your username is '{{object.userName}}'.</p></div>",
      },
      "message": {
        "en": "<html><head></head><body style="background-color: #324054; color: #5e6d82; padding: 60px; text-align: center;"><div class="content" style="background-color: #fff; border-radius: 4px; margin: 0 auto; padding: 48px; width: 235px;"><p>Welcome. Your username is '{{object.userName}}'.</p></div></body></html>",
      },
      "mimeType": "text/html",
      "styles": "body{
 background-color:#324054;
 color:#5e6d82;
 padding:60px;
 text-align:center
}
a{
 text-decoration:none;
 color:#109cf1
}
.content{
 background-color:#fff;
 border-radius:4px;
 margin:0 auto;
 padding:48px;
 width:235px
}
",
      "subject": {
        "en": "Your account has been created",
      },
    },
  },
  "idp": {
    "adfs": {
      "_id": "adfs",
      "_type": {
        "_id": "oidcConfig",
        "collection": true,
        "name": "Client configuration for providers that implement the OpenID Connect specification.",
      },
      "acrValues": [],
      "authenticationIdKey": "sub",
      "authorizationEndpoint": "https://adfs.mytestrun.com/adfs/oauth2/authorize",
      "clientAuthenticationMethod": "CLIENT_SECRET_POST",
      "clientId": "aa9a179e-cdba-4db8-8477-3d1069d5ec04",
      "clientSecret": null,
      "enableNativeNonce": true,
      "enabled": true,
      "encryptJwtRequestParameter": false,
      "encryptedIdTokens": false,
      "issuer": "https://adfs.mytestrun.com/adfs",
      "issuerComparisonCheckType": "EXACT",
      "jwksUriEndpoint": "https://adfs.mytestrun.com/adfs/discovery/keys",
      "jwtEncryptionAlgorithm": "NONE",
      "jwtEncryptionMethod": "NONE",
      "jwtRequestParameterOption": "NONE",
      "jwtSigningAlgorithm": "RS256",
      "pkceMethod": "S256",
      "privateKeyJwtExpTime": 600,
      "redirectURI": "https://idc.scheuber.io/login",
      "responseMode": "DEFAULT",
      "revocationCheckOptions": [],
      "scopeDelimiter": " ",
      "scopes": [
        "openid",
        "profile",
        "email",
      ],
      "tokenEndpoint": "https://adfs.mytestrun.com/adfs/oauth2/token",
      "transform": "dbe0bf9a-72aa-49d5-8483-9db147985a47",
      "uiConfig": {
        "buttonClass": "",
        "buttonCustomStyle": "background-color: #fff; border-color: #8b8b8b; color: #8b8b8b;",
        "buttonCustomStyleHover": "background-color: #fff; border-color: #8b8b8b; color: #8b8b8b;",
        "buttonDisplayName": "Microsoft ADFS",
        "buttonImage": "/login/images/microsoft-logo.png",
        "iconBackground": "#0078d7",
        "iconClass": "fa-windows",
        "iconFontColor": "white",
      },
      "useCustomTrustStore": false,
      "userInfoResponseType": "JSON",
      "wellKnownEndpoint": "https://adfs.mytestrun.com/adfs/.well-known/openid-configuration",
    },
    "apple-stoyan": {
      "_id": "apple-stoyan",
      "_type": {
        "_id": "appleConfig",
        "collection": true,
        "name": "Client configuration for Apple.",
      },
      "acrValues": [],
      "authenticationIdKey": "sub",
      "authorizationEndpoint": "https://appleid.apple.com/auth/authorize",
      "clientAuthenticationMethod": "CLIENT_SECRET_POST",
      "clientId": "CHANGE ME",
      "clientSecret": null,
      "enableNativeNonce": true,
      "enabled": false,
      "encryptJwtRequestParameter": false,
      "encryptedIdTokens": false,
      "issuer": "https://appleid.apple.com",
      "issuerComparisonCheckType": "EXACT",
      "jwksUriEndpoint": "https://appleid.apple.com/auth/keys",
      "jwtEncryptionAlgorithm": "NONE",
      "jwtEncryptionMethod": "NONE",
      "jwtRequestParameterOption": "NONE",
      "jwtSigningAlgorithm": "NONE",
      "pkceMethod": "S256",
      "privateKeyJwtExpTime": 600,
      "redirectAfterFormPostURI": "https://openam-volker-dev.forgeblocks.com/login",
      "redirectURI": "https://openam-volker-dev.forgeblocks.com/am/oauth2/alpha/client/form_post/apple-stoyan",
      "requestNativeAppForUserInfo": false,
      "responseMode": "FORM_POST",
      "revocationCheckOptions": [],
      "scopeDelimiter": " ",
      "scopes": [
        "name",
        "email",
      ],
      "tokenEndpoint": "https://appleid.apple.com/auth/token",
      "transform": "484e6246-dbc6-4288-97e6-54e55431402e",
      "uiConfig": {
        "buttonClass": "",
        "buttonCustomStyle": "background-color: #000000; color: #ffffff; border-color: #000000;",
        "buttonCustomStyleHover": "background-color: #000000; color: #ffffff; border-color: #000000;",
        "buttonDisplayName": "Apple",
        "buttonImage": "/login/images/apple-logo.png",
        "iconBackground": "#000000",
        "iconClass": "fa-apple",
        "iconFontColor": "white",
      },
      "useCustomTrustStore": false,
      "userInfoResponseType": "JSON",
      "wellKnownEndpoint": "https://appleid.apple.com/.well-known/openid-configuration",
    },
    "apple_web": {
      "_id": "apple_web",
      "_type": {
        "_id": "appleConfig",
        "collection": true,
        "name": "Client configuration for Apple.",
      },
      "acrValues": [],
      "authenticationIdKey": "sub",
      "authorizationEndpoint": "https://appleid.apple.com/auth/authorize",
      "clientAuthenticationMethod": "CLIENT_SECRET_POST",
      "clientId": "io.scheuber.idc.signinWithApple.service",
      "clientSecret": null,
      "enableNativeNonce": true,
      "enabled": true,
      "encryptJwtRequestParameter": false,
      "encryptedIdTokens": false,
      "issuer": "https://appleid.apple.com",
      "issuerComparisonCheckType": "EXACT",
      "jwksUriEndpoint": "https://appleid.apple.com/auth/keys",
      "jwtEncryptionAlgorithm": "NONE",
      "jwtEncryptionMethod": "NONE",
      "jwtRequestParameterOption": "NONE",
      "jwtSigningAlgorithm": "NONE",
      "pkceMethod": "S256",
      "privateKeyJwtExpTime": 600,
      "redirectAfterFormPostURI": "https://idc.scheuber.io/login",
      "redirectURI": "https://idc.scheuber.io/am/oauth2/client/form_post/apple_web",
      "requestNativeAppForUserInfo": false,
      "responseMode": "FORM_POST",
      "revocationCheckOptions": [],
      "scopeDelimiter": " ",
      "scopes": [
        "name",
        "email",
      ],
      "tokenEndpoint": "https://appleid.apple.com/auth/token",
      "transform": "484e6246-dbc6-4288-97e6-54e55431402e",
      "uiConfig": {
        "buttonClass": "",
        "buttonCustomStyle": "background-color: #000000; color: #ffffff; border-color: #000000;",
        "buttonCustomStyleHover": "background-color: #000000; color: #ffffff; border-color: #000000;",
        "buttonDisplayName": "Apple",
        "buttonImage": "/login/images/apple-logo.png",
        "iconBackground": "#000000",
        "iconClass": "fa-apple",
        "iconFontColor": "white",
      },
      "useCustomTrustStore": false,
      "userInfoResponseType": "JSON",
      "wellKnownEndpoint": "https://appleid.apple.com/.well-known/openid-configuration",
    },
    "azure": {
      "_id": "azure",
      "_type": {
        "_id": "microsoftConfig",
        "collection": true,
        "name": "Client configuration for Microsoft.",
      },
      "authenticationIdKey": "id",
      "authorizationEndpoint": "https://login.microsoftonline.com/711ffa9c-5972-4713-ace3-688c9732614a/oauth2/v2.0/authorize",
      "clientAuthenticationMethod": "CLIENT_SECRET_POST",
      "clientId": "c42a3dc8-f276-496b-a722-269f131cc21c",
      "clientSecret": null,
      "enabled": true,
      "issuerComparisonCheckType": "EXACT",
      "jwtEncryptionAlgorithm": "NONE",
      "jwtEncryptionMethod": "NONE",
      "jwtSigningAlgorithm": "NONE",
      "pkceMethod": "S256",
      "privateKeyJwtExpTime": 600,
      "redirectURI": "https://idc.scheuber.io/login",
      "responseMode": "DEFAULT",
      "revocationCheckOptions": [],
      "scopeDelimiter": " ",
      "scopes": [
        "User.Read",
        "openid",
      ],
      "tokenEndpoint": "https://login.microsoftonline.com/711ffa9c-5972-4713-ace3-688c9732614a/oauth2/v2.0/token",
      "transform": "73cecbfc-dad0-4395-be6a-6858ee3a80e5",
      "uiConfig": {
        "buttonClass": "",
        "buttonCustomStyle": "background-color: #fff; border-color: #8b8b8b; color: #8b8b8b;",
        "buttonCustomStyleHover": "background-color: #fff; border-color: #8b8b8b; color: #8b8b8b;",
        "buttonDisplayName": "Microsoft Azure",
        "buttonImage": "/login/images/microsoft-logo.png",
        "iconBackground": "#0078d7",
        "iconClass": "fa-windows",
        "iconFontColor": "white",
      },
      "useCustomTrustStore": false,
      "userInfoEndpoint": "https://graph.microsoft.com/v1.0/me",
    },
    "facebook": {
      "_id": "facebook",
      "_type": {
        "_id": "oauth2Config",
        "collection": true,
        "name": "Client configuration for providers that implement the OAuth2 specification.",
      },
      "authenticationIdKey": "id",
      "authorizationEndpoint": "https://www.facebook.com/dialog/oauth",
      "clientAuthenticationMethod": "CLIENT_SECRET_POST",
      "clientId": "123741918345526",
      "clientSecret": null,
      "enabled": true,
      "issuerComparisonCheckType": "EXACT",
      "jwtEncryptionAlgorithm": "NONE",
      "jwtEncryptionMethod": "NONE",
      "jwtSigningAlgorithm": "NONE",
      "pkceMethod": "S256",
      "privateKeyJwtExpTime": 3600,
      "redirectURI": "https://idc.scheuber.io/am/XUI/?realm=%2Falpha",
      "responseMode": "DEFAULT",
      "revocationCheckOptions": [],
      "scopeDelimiter": " ",
      "scopes": [
        "email",
      ],
      "tokenEndpoint": "https://graph.facebook.com/v2.7/oauth/access_token",
      "transform": "bae1d54a-e97d-4997-aa5d-c027f21af82c",
      "uiConfig": {
        "buttonClass": "fa-facebook-official",
        "buttonCustomStyle": "background-color: #3b5998; border-color: #3b5998; color: white;",
        "buttonCustomStyleHover": "background-color: #334b7d; border-color: #334b7d; color: white;",
        "buttonDisplayName": "Facebook",
        "buttonImage": "",
        "iconBackground": "#3b5998",
        "iconClass": "fa-facebook",
        "iconFontColor": "white",
      },
      "useCustomTrustStore": false,
      "userInfoEndpoint": "https://graph.facebook.com/me?fields=id,name,picture,email,first_name,last_name,locale",
    },
    "github": {
      "_id": "github",
      "_type": {
        "_id": "oauth2Config",
        "collection": true,
        "name": "Client configuration for providers that implement the OAuth2 specification.",
      },
      "authenticationIdKey": "id",
      "authorizationEndpoint": "https://github.com/login/oauth/authorize",
      "clientAuthenticationMethod": "CLIENT_SECRET_POST",
      "clientId": "bdae6d141d4dcf95a630",
      "clientSecret": null,
      "enabled": true,
      "issuerComparisonCheckType": "EXACT",
      "jwtEncryptionAlgorithm": "NONE",
      "jwtEncryptionMethod": "NONE",
      "jwtSigningAlgorithm": "NONE",
      "pkceMethod": "S256",
      "privateKeyJwtExpTime": 600,
      "redirectURI": "https://idc.scheuber.io/login",
      "responseMode": "DEFAULT",
      "revocationCheckOptions": [],
      "scopeDelimiter": " ",
      "scopes": [
        "user",
      ],
      "tokenEndpoint": "https://ig.mytestrun.com/login/oauth/access_token",
      "transform": "23143919-6b78-40c3-b25e-beca19b229e0",
      "uiConfig": {
        "buttonCustomStyle": "background-color: #fff; color: #757575; border-color: #ddd;",
        "buttonCustomStyleHover": "color: #6d6d6d; background-color: #eee; border-color: #ccc;",
        "buttonDisplayName": "GitHub",
        "buttonImage": "https://cdn-icons-png.flaticon.com/512/25/25231.png",
        "iconBackground": "#4184f3",
        "iconFontColor": "white",
      },
      "useCustomTrustStore": false,
      "userInfoEndpoint": "https://ig.mytestrun.com/user",
    },
    "google": {
      "_id": "google",
      "_type": {
        "_id": "googleConfig",
        "collection": true,
        "name": "Client configuration for Google.",
      },
      "acrValues": [],
      "authenticationIdKey": "sub",
      "authorizationEndpoint": "https://accounts.google.com/o/oauth2/v2/auth",
      "clientAuthenticationMethod": "CLIENT_SECRET_POST",
      "clientId": "297338177925-mho17cgnm540s2gre8h27feb6sbs1msd.apps.googleusercontent.com",
      "clientSecret": null,
      "enableNativeNonce": true,
      "enabled": true,
      "encryptJwtRequestParameter": false,
      "encryptedIdTokens": false,
      "issuer": "https://accounts.google.com",
      "issuerComparisonCheckType": "EXACT",
      "jwtEncryptionAlgorithm": "NONE",
      "jwtEncryptionMethod": "NONE",
      "jwtRequestParameterOption": "NONE",
      "jwtSigningAlgorithm": "NONE",
      "pkceMethod": "S256",
      "privateKeyJwtExpTime": 600,
      "redirectURI": "https://idc.scheuber.io/login",
      "responseMode": "DEFAULT",
      "revocationCheckOptions": [],
      "scopeDelimiter": " ",
      "scopes": [
        "openid",
        "profile",
        "email",
      ],
      "tokenEndpoint": "https://www.googleapis.com/oauth2/v4/token",
      "transform": "58d29080-4563-480b-89bb-1e7719776a21",
      "uiConfig": {
        "buttonClass": "",
        "buttonCustomStyle": "background-color: #fff; color: #757575; border-color: #ddd;",
        "buttonCustomStyleHover": "color: #6d6d6d; background-color: #eee; border-color: #ccc;",
        "buttonDisplayName": "Google",
        "buttonImage": "images/g-logo.png",
        "iconBackground": "#4184f3",
        "iconClass": "fa-google",
        "iconFontColor": "white",
      },
      "useCustomTrustStore": false,
      "userInfoEndpoint": "https://www.googleapis.com/oauth2/v3/userinfo",
      "userInfoResponseType": "JSON",
      "wellKnownEndpoint": "https://accounts.google.com/.well-known/openid-configuration",
    },
    "okta-trial-5735851": {
      "_id": "okta-trial-5735851",
      "_type": {
        "_id": "oidcConfig",
        "collection": true,
        "name": "Client configuration for providers that implement the OpenID Connect specification.",
      },
      "acrValues": [],
      "authenticationIdKey": "id",
      "authorizationEndpoint": "https://trial-5735851.okta.com/oauth2/v1/authorize",
      "clientAuthenticationMethod": "CLIENT_SECRET_POST",
      "clientId": "0oa13r2cp29Rynmyw697",
      "clientSecret": null,
      "enableNativeNonce": true,
      "enabled": true,
      "encryptJwtRequestParameter": false,
      "encryptedIdTokens": false,
      "issuer": "https://trial-5735851.okta.com",
      "issuerComparisonCheckType": "EXACT",
      "jwtEncryptionAlgorithm": "NONE",
      "jwtEncryptionMethod": "NONE",
      "jwtRequestParameterOption": "NONE",
      "jwtSigningAlgorithm": "NONE",
      "pkceMethod": "S256",
      "privateKeyJwtExpTime": 600,
      "redirectURI": "https://idc.scheuber.io/login",
      "responseMode": "DEFAULT",
      "revocationCheckOptions": [],
      "scopeDelimiter": " ",
      "scopes": [
        "openid",
        "profile",
        "email",
      ],
      "tokenEndpoint": "https://trial-5735851.okta.com/oauth2/v1/token",
      "transform": "6325cf19-a49b-471e-8d26-7e4df76df0e2",
      "uiConfig": {
        "buttonDisplayName": "Okta",
      },
      "useCustomTrustStore": false,
      "userInfoEndpoint": "https://trial-5735851.okta.com/oauth2/v1/userinfo",
      "userInfoResponseType": "JSON",
      "wellKnownEndpoint": "https://trial-5735851.okta.com/.well-known/openid-configuration",
    },
  },
  "meta": Any<Object>,
  "policy": {},
  "policyset": {},
  "resourcetype": {
    "0aa5ed25-0c62-4ff5-9a42-3bda8c5cbb76": {
      "actions": {
        "action1": true,
        "action2": true,
      },
      "createdBy": "id=8d9723a9-a439-4cbf-beb4-30e52811789d,ou=user,ou=am-config",
      "creationDate": 1684544147346,
      "description": "Frodo Test Resource Type Thirteen",
      "lastModifiedBy": "id=b672336b-41ef-428d-ae4a-e0c082875377,ou=user,ou=am-config",
      "lastModifiedDate": 1691209356542,
      "name": "FrodoTestResourceType13",
      "patterns": [
        "pattern2://*:*/*?*",
        "pattern1://*:*/*",
      ],
      "uuid": "0aa5ed25-0c62-4ff5-9a42-3bda8c5cbb76",
    },
    "119b291c-40b3-4b1e-8d84-c2a561a2cb1f": {
      "actions": {
        "action1": true,
        "action2": true,
      },
      "createdBy": "id=8d9723a9-a439-4cbf-beb4-30e52811789d,ou=user,ou=am-config",
      "creationDate": 1684544147437,
      "description": "Frodo Test Resource Type Fourteen",
      "lastModifiedBy": "id=b672336b-41ef-428d-ae4a-e0c082875377,ou=user,ou=am-config",
      "lastModifiedDate": 1691209356664,
      "name": "FrodoTestResourceType14",
      "patterns": [
        "pattern2://*:*/*?*",
        "pattern1://*:*/*",
      ],
      "uuid": "119b291c-40b3-4b1e-8d84-c2a561a2cb1f",
    },
    "3c5f13af-ca17-403e-b47d-d15263cce954": {
      "actions": {
        "action1": true,
        "action2": true,
      },
      "createdBy": "id=8d9723a9-a439-4cbf-beb4-30e52811789d,ou=user,ou=am-config",
      "creationDate": 1684545571229,
      "description": "Frodo Test Resource Type Fifteen",
      "lastModifiedBy": "id=b672336b-41ef-428d-ae4a-e0c082875377,ou=user,ou=am-config",
      "lastModifiedDate": 1691209356780,
      "name": "FrodoTestResourceType15",
      "patterns": [
        "pattern2://*:*/*?*",
        "pattern1://*:*/*",
      ],
      "uuid": "3c5f13af-ca17-403e-b47d-d15263cce954",
    },
    "3fc799d7-b73f-49e0-a70b-e37990e54e56": {
      "actions": {
        "action1": true,
        "action2": true,
      },
      "createdBy": "id=8d9723a9-a439-4cbf-beb4-30e52811789d,ou=user,ou=am-config",
      "creationDate": 1684544147204,
      "description": "Frodo Test Resource Type Twelve",
      "lastModifiedBy": "id=b672336b-41ef-428d-ae4a-e0c082875377,ou=user,ou=am-config",
      "lastModifiedDate": 1691209356413,
      "name": "FrodoTestResourceType12",
      "patterns": [
        "pattern2://*:*/*?*",
        "pattern1://*:*/*",
      ],
      "uuid": "3fc799d7-b73f-49e0-a70b-e37990e54e56",
    },
    "76656a38-5f8e-401b-83aa-4ccb74ce88d2": {
      "actions": {
        "DELETE": true,
        "GET": true,
        "HEAD": true,
        "OPTIONS": true,
        "PATCH": true,
        "POST": true,
        "PUT": true,
      },
      "createdBy": "id=dsameuser,ou=user,ou=am-config",
      "creationDate": 1595479030487,
      "description": "The built-in URL Resource Type available to OpenAMPolicies.",
      "lastModifiedBy": "id=8d9723a9-a439-4cbf-beb4-30e52811789d,ou=user,ou=am-config",
      "lastModifiedDate": 1684690114955,
      "name": "URL",
      "patterns": [
        "*://*:*/*",
        "*://*:*/*?*",
      ],
      "uuid": "76656a38-5f8e-401b-83aa-4ccb74ce88d2",
    },
    "993eba78-1c3f-4f27-b205-b4b29418f831": {
      "actions": {
        "action1": true,
        "action2": true,
      },
      "createdBy": "id=8d9723a9-a439-4cbf-beb4-30e52811789d,ou=user,ou=am-config",
      "creationDate": 1684544147077,
      "description": "Frodo Test Resource Type Eleven",
      "lastModifiedBy": "id=b672336b-41ef-428d-ae4a-e0c082875377,ou=user,ou=am-config",
      "lastModifiedDate": 1691209356293,
      "name": "FrodoTestResourceType11",
      "patterns": [
        "pattern2://*:*/*?*",
        "pattern1://*:*/*",
      ],
      "uuid": "993eba78-1c3f-4f27-b205-b4b29418f831",
    },
    "d60b7a71-1dc6-44a5-8e48-e4b9d92dee8b": {
      "actions": {
        "GRANT": true,
      },
      "createdBy": "id=dsameuser,ou=user,ou=am-config",
      "creationDate": 1595479030586,
      "description": "The built-in OAuth2 Scope Resource Type for OAuth2policy-provided scope.",
      "lastModifiedBy": "id=8d9723a9-a439-4cbf-beb4-30e52811789d,ou=user,ou=am-config",
      "lastModifiedDate": 1682866321756,
      "name": "OAuth2 Scope",
      "patterns": [
        "*://*:*/*",
        "*://*:*/*?*",
        "*",
      ],
      "uuid": "d60b7a71-1dc6-44a5-8e48-e4b9d92dee8b",
    },
  },
  "saml": {
    "cot": {
      "2f04818d-561e-4f8a-82e8-af2426112138": {
        "_id": "2f04818d-561e-4f8a-82e8-af2426112138",
        "_rev": "-1164170555",
        "_type": {
          "_id": "circlesoftrust",
          "collection": true,
          "name": "Circle of Trust",
        },
        "status": "active",
        "trustedProviders": [],
      },
      "AzureCOT": {
        "_id": "AzureCOT",
        "_rev": "-954827061",
        "_type": {
          "_id": "circlesoftrust",
          "collection": true,
          "name": "Circle of Trust",
        },
        "status": "active",
        "trustedProviders": [
          "iSPAzure|saml2",
          "urn:federation:MicrosoftOnline|saml2",
          "https://sts.windows.net/711ffa9c-5972-4713-ace3-688c9732614a/|saml2",
          "SPAzure|saml2",
          "https://idc.scheuber.io/am/saml2/IDPAzure|saml2",
        ],
      },
    },
    "hosted": {
      "aVNQQXp1cmU": {
        "_id": "aVNQQXp1cmU",
        "_rev": "1379466460",
        "entityId": "iSPAzure",
        "serviceProvider": {
          "advanced": {
            "ecpConfiguration": {
              "ecpRequestIdpListFinderImpl": "com.sun.identity.saml2.plugins.ECPIDPFinder",
            },
            "idpProxy": {},
            "relayStateUrlList": {},
            "saeConfiguration": {
              "spUrl": "https://idc.scheuber.io/am/spsaehandler/metaAlias/alpha/iSPAzure",
            },
          },
          "assertionContent": {
            "assertionTimeSkew": 300,
            "authenticationContext": {
              "authContextItems": [
                {
                  "contextReference": "urn:oasis:names:tc:SAML:2.0:ac:classes:PasswordProtectedTransport",
                  "defaultItem": true,
                  "level": 0,
                },
              ],
              "authenticationComparisonType": "Exact",
              "authenticationContextMapper": "com.sun.identity.saml2.plugins.DefaultSPAuthnContextMapper",
              "includeRequestedAuthenticationContext": true,
            },
            "basicAuthentication": {},
            "nameIdFormat": {
              "nameIdFormatList": [
                "urn:oasis:names:tc:SAML:2.0:nameid-format:persistent",
                "urn:oasis:names:tc:SAML:2.0:nameid-format:transient",
                "urn:oasis:names:tc:SAML:1.1:nameid-format:emailAddress",
                "urn:oasis:names:tc:SAML:1.1:nameid-format:unspecified",
                "urn:oasis:names:tc:SAML:1.1:nameid-format:WindowsDomainQualifiedName",
                "urn:oasis:names:tc:SAML:2.0:nameid-format:kerberos",
                "urn:oasis:names:tc:SAML:1.1:nameid-format:X509SubjectName",
              ],
            },
            "signingAndEncryption": {
              "encryption": {},
              "requestResponseSigning": {},
              "secretIdAndAlgorithms": {},
            },
          },
          "assertionProcessing": {
            "accountMapping": {
              "spAccountMapper": "com.sun.identity.saml2.plugins.DefaultSPAccountMapper",
              "useNameIDAsSPUserID": true,
            },
            "adapter": {},
            "attributeMapper": {
              "attributeMap": [
                {
                  "key": "http://schemas.microsoft.com/identity/claims/displayname",
                  "value": "cn",
                },
                {
                  "key": "http://schemas.xmlsoap.org/ws/2005/05/identity/claims/givenname",
                  "value": "givenName",
                },
                {
                  "key": "http://schemas.xmlsoap.org/ws/2005/05/identity/claims/surname",
                  "value": "sn",
                },
                {
                  "key": "http://schemas.xmlsoap.org/ws/2005/05/identity/claims/emailaddress",
                  "value": "mail",
                },
                {
                  "key": "http://schemas.xmlsoap.org/ws/2005/05/identity/claims/name",
                  "value": "uid",
                },
              ],
              "attributeMapper": "com.sun.identity.saml2.plugins.DefaultSPAttributeMapper",
            },
            "autoFederation": {
              "autoFedEnabled": false,
            },
            "responseArtifactMessageEncoding": {
              "encoding": "URI",
            },
            "url": {},
          },
          "services": {
            "metaAlias": "/alpha/iSPAzure",
            "serviceAttributes": {
              "assertionConsumerService": [
                {
                  "binding": "urn:oasis:names:tc:SAML:2.0:bindings:HTTP-Artifact",
                  "index": 0,
                  "isDefault": true,
                  "location": "https://idc.scheuber.io/am/AuthConsumer/metaAlias/alpha/iSPAzure",
                },
                {
                  "binding": "urn:oasis:names:tc:SAML:2.0:bindings:HTTP-POST",
                  "index": 1,
                  "isDefault": false,
                  "location": "https://idc.scheuber.io/am/AuthConsumer/metaAlias/alpha/iSPAzure",
                },
                {
                  "binding": "urn:oasis:names:tc:SAML:2.0:bindings:PAOS",
                  "index": 2,
                  "isDefault": false,
                  "location": "https://idc.scheuber.io/am/Consumer/ECP/metaAlias/alpha/iSPAzure",
                },
              ],
              "nameIdService": [
                {
                  "binding": "urn:oasis:names:tc:SAML:2.0:bindings:HTTP-Redirect",
                  "location": "https://idc.scheuber.io/am/SPMniRedirect/metaAlias/alpha/iSPAzure",
                  "responseLocation": "https://idc.scheuber.io/am/SPMniRedirect/metaAlias/alpha/iSPAzure",
                },
                {
                  "binding": "urn:oasis:names:tc:SAML:2.0:bindings:HTTP-POST",
                  "location": "https://idc.scheuber.io/am/SPMniPOST/metaAlias/alpha/iSPAzure",
                  "responseLocation": "https://idc.scheuber.io/am/SPMniPOST/metaAlias/alpha/iSPAzure",
                },
                {
                  "binding": "urn:oasis:names:tc:SAML:2.0:bindings:SOAP",
                  "location": "https://idc.scheuber.io/am/SPMniSoap/metaAlias/alpha/iSPAzure",
                  "responseLocation": "https://idc.scheuber.io/am/SPMniSoap/metaAlias/alpha/iSPAzure",
                },
              ],
              "singleLogoutService": [
                {
                  "binding": "urn:oasis:names:tc:SAML:2.0:bindings:HTTP-Redirect",
                  "location": "https://idc.scheuber.io/am/SPSloRedirect/metaAlias/alpha/iSPAzure",
                  "responseLocation": "https://idc.scheuber.io/am/SPSloRedirect/metaAlias/alpha/iSPAzure",
                },
                {
                  "binding": "urn:oasis:names:tc:SAML:2.0:bindings:HTTP-POST",
                  "location": "https://idc.scheuber.io/am/SPSloPOST/metaAlias/alpha/iSPAzure",
                  "responseLocation": "https://idc.scheuber.io/am/SPSloPOST/metaAlias/alpha/iSPAzure",
                },
                {
                  "binding": "urn:oasis:names:tc:SAML:2.0:bindings:SOAP",
                  "location": "https://idc.scheuber.io/am/SPSloSoap/metaAlias/alpha/iSPAzure",
                },
              ],
            },
          },
        },
      },
    },
    "metadata": {
      "aHR0cHM6Ly9zdHMud2luZG93cy5uZXQvNzExZmZhOWMtNTk3Mi00NzEzLWFjZTMtNjg4Yzk3MzI2MTRhLw": [
        "<?xml version="1.0" encoding="UTF-8" standalone="yes"?>",
        "<EntityDescriptor entityID="https://sts.windows.net/711ffa9c-5972-4713-ace3-688c9732614a/" ID="_e5f839b8-1482-40ae-9261-b6eb35465a16" xmlns="urn:oasis:names:tc:SAML:2.0:metadata" xmlns:query="urn:oasis:names:tc:SAML:metadata:ext:query" xmlns:mdattr="urn:oasis:names:tc:SAML:metadata:attribute" xmlns:saml="urn:oasis:names:tc:SAML:2.0:assertion" xmlns:xenc="http://www.w3.org/2001/04/xmlenc#" xmlns:xenc11="http://www.w3.org/2009/xmlenc11#" xmlns:alg="urn:oasis:names:tc:SAML:metadata:algsupport" xmlns:x509qry="urn:oasis:names:tc:SAML:metadata:X509:query" xmlns:ds="http://www.w3.org/2000/09/xmldsig#">",
        "    <IDPSSODescriptor protocolSupportEnumeration="urn:oasis:names:tc:SAML:2.0:protocol">",
        "        <KeyDescriptor use="signing">",
        "            <ds:KeyInfo>",
        "                ",
        "                ",
        "                ",
        "                ",
        "                ",
        "                ",
        "                <ds:X509Data>",
        "                    <ds:X509Certificate>",
        "MIIC8DCCAdigAwIBAgIQZzae6CymcZhG5gxIgB7mMDANBgkqhkiG9w0BAQsFADA0MTIwMAYDVQQD",
        "EylNaWNyb3NvZnQgQXp1cmUgRmVkZXJhdGVkIFNTTyBDZXJ0aWZpY2F0ZTAeFw0yMTAzMzEyMDI0",
        "MTdaFw0yNDAzMzEyMDI0MTdaMDQxMjAwBgNVBAMTKU1pY3Jvc29mdCBBenVyZSBGZWRlcmF0ZWQg",
        "U1NPIENlcnRpZmljYXRlMIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEAv62V9U2Wi8gr",
        "arSBp7s4Bupke9vaXsNOgNZ8Vn/i0mo6Jn0E1HmJ6uIy+QeahQDtxFQyoEW1LeLGBeVwvUvOfSwf",
        "wPBEHLw9g3F84IdgfIWtezj87BHh3ezwb0r/0Eny3xHcS02wQsIFRIhn7ltCaMFrTja18gBapuRl",
        "36Ujfod7W1uL1HJTsw8auKXYEhutbeQYpdU6qcPaksJd1r16q+Jc78MHptKMWSNI1OnB9jK8hr/3",
        "aug+LSeuJScaJQZDo/qKDmoIC6KT6CgfzUy33I/gjU6RjVcwNw4XFpk5ad13HXTtfCLtPtMxGYuk",
        "cOxX3M80EJMLFr2sJO0vJbA8aQIDAQABMA0GCSqGSIb3DQEBCwUAA4IBAQB8GmsA4N5KDQ79v+/1",
        "zVFq8domQYZm8wEAIHn4+T02IluDa9Ty/EqgFzvqAZUILQneFrGCh9uIub/Z3NtkIgs2gbAduxdn",
        "hzdwhNRNivks4P0CO+9Q1iK/xOsmWo12xsyB4lyAv7HsF+COIPFGhRfzsCxVFKfU8x2r+bb8kWLM",
        "YpA2NDlz+MTXQEWhFtCLwQRjHlD6C5+yzqoAFBO7RR28mztTF0nVbKj7N+Ri5VLEKJospkwUDtIH",
        "dcp2bSVwhziAIn05yiw6AVIZnje7cN+kJdCIDgqQ+Ebb96C/Y0JmYvz6sJVP0/u5oR5PrsQqBrw4",
        "OzVWNFaXuTcN3UicN01V",
        "                    </ds:X509Certificate>",
        "                </ds:X509Data>",
        "            </ds:KeyInfo>",
        "        </KeyDescriptor>",
        "        <KeyDescriptor use="signing">",
        "            <ds:KeyInfo>",
        "                ",
        "                ",
        "                ",
        "                ",
        "                ",
        "                ",
        "                <ds:X509Data>",
        "                    <ds:X509Certificate>",
        "MIIC8DCCAdigAwIBAgIQfU4A0Hnj17dI0GSzvUwMZTANBgkqhkiG9w0BAQsFADA0MTIwMAYDVQQD",
        "EylNaWNyb3NvZnQgQXp1cmUgRmVkZXJhdGVkIFNTTyBDZXJ0aWZpY2F0ZTAeFw0yMTA2MDYwMTQy",
        "MzBaFw0yNDA2MDYwMTQyMzBaMDQxMjAwBgNVBAMTKU1pY3Jvc29mdCBBenVyZSBGZWRlcmF0ZWQg",
        "U1NPIENlcnRpZmljYXRlMIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEAm+fFmS+eVDho",
        "FhlYoY1vRkJIblLct3ZT/sT5AmIoCEGxXBeiSCwnSCveXEfrqEHmjlT5qni5spO+OmX7GrLeytHk",
        "hl3O6XiXyVBlvyTSFd/bLHR2DqdxbUxUs2E7WfwQyq9Ob9i3++4fRIPFw+JcZ99ouZasHn2BJvWh",
        "liT7yRtYhvwboc8BwWveL70ZJqsCJnlOKQVIccCdNbQe6HleePXgFB4pRge46zmqKVeEpLbBRqgj",
        "Yf7EkhBJjx0WY2zMW7DLHDCZEY6VS2Kf9gJpGntNSLe0gXydBFtaFPgyaKIVswZ5hY1oRDPHEXEJ",
        "+a5TVRGLeTlyK0v9Y+c8d3XdoQIDAQABMA0GCSqGSIb3DQEBCwUAA4IBAQBZ5lcYpe13quossxB7",
        "L2Y1E7hpy7AZgWr/OGYi/tUh1pJ4++3uZvHJLtTfXc7V+Y5EG6LRq9HZyF0hSvubhYkDXlwYbF7U",
        "/osQjTe1tffPWO3bwzcrBVz7ytvb7DyvikI3C0f3LaCgEwxwYCD33IowNQS/IJA7W/kiFb/7q/Qu",
        "7T/gDL1RjYdm9WmYW3RNn0Kh1VDBiCfY739xpCwdH11OUQfVc+9Z2KSSQY7EAlVgwpq+UiVdOqY9",
        "m4cqul7uvjiSTgG0h5RW9xi3a6Lilk1TxsQUu4tRnGsDCAFgkgLN5rNnlQULuahzruoXWqe4g6pn",
        "Ritpy6bwva8piGPKhVi/",
        "                    </ds:X509Certificate>",
        "                </ds:X509Data>",
        "            </ds:KeyInfo>",
        "        </KeyDescriptor>",
        "        <SingleLogoutService Binding="urn:oasis:names:tc:SAML:2.0:bindings:HTTP-Redirect" Location="https://login.microsoftonline.com/711ffa9c-5972-4713-ace3-688c9732614a/saml2"/>",
        "        <SingleSignOnService Binding="urn:oasis:names:tc:SAML:2.0:bindings:HTTP-Redirect" Location="https://login.microsoftonline.com/711ffa9c-5972-4713-ace3-688c9732614a/saml2"/>",
        "        <SingleSignOnService Binding="urn:oasis:names:tc:SAML:2.0:bindings:HTTP-POST" Location="https://login.microsoftonline.com/711ffa9c-5972-4713-ace3-688c9732614a/saml2"/>",
        "    </IDPSSODescriptor>",
        "</EntityDescriptor>",
        "",
        "",
      ],
      "aVNQQXp1cmU": [
        "<?xml version="1.0" encoding="UTF-8" standalone="yes"?>",
        "<EntityDescriptor entityID="iSPAzure" xmlns="urn:oasis:names:tc:SAML:2.0:metadata" xmlns:query="urn:oasis:names:tc:SAML:metadata:ext:query" xmlns:mdattr="urn:oasis:names:tc:SAML:metadata:attribute" xmlns:saml="urn:oasis:names:tc:SAML:2.0:assertion" xmlns:xenc="http://www.w3.org/2001/04/xmlenc#" xmlns:xenc11="http://www.w3.org/2009/xmlenc11#" xmlns:alg="urn:oasis:names:tc:SAML:metadata:algsupport" xmlns:x509qry="urn:oasis:names:tc:SAML:metadata:X509:query" xmlns:ds="http://www.w3.org/2000/09/xmldsig#">",
        "    <SPSSODescriptor protocolSupportEnumeration="urn:oasis:names:tc:SAML:2.0:protocol">",
        "        <KeyDescriptor use="signing">",
        "            <ds:KeyInfo>",
        "                <ds:X509Data>",
        "                    <ds:X509Certificate>",
        "MIIDXzCCAkegAwIBAgIEDvqo1zANBgkqhkiG9w0BAQsFADBgMQswCQYDVQQGEwJVSzEQMA4GA1UE",
        "CBMHQnJpc3RvbDEQMA4GA1UEBxMHQnJpc3RvbDESMBAGA1UEChMJRm9yZ2VSb2NrMRkwFwYDVQQD",
        "ExByc2Fqd3RzaWduaW5na2V5MB4XDTIyMDgxMTAxMzIyOVoXDTMyMDgwODAxMzIyOVowYDELMAkG",
        "A1UEBhMCVUsxEDAOBgNVBAgTB0JyaXN0b2wxEDAOBgNVBAcTB0JyaXN0b2wxEjAQBgNVBAoTCUZv",
        "cmdlUm9jazEZMBcGA1UEAxMQcnNhand0c2lnbmluZ2tleTCCASIwDQYJKoZIhvcNAQEBBQADggEP",
        "ADCCAQoCggEBAKz4i7AfLdKa2fOueSyaX3rviRZXzY3w8J01B6VZZk+ujatitD8h9uSE7RjK2NS6",
        "BYSf/wMsg2/Xy/vVbqEMrAl8ptdjXd9rsyL4sz33IRDgs9PqW2X2Ml5et0ASCwwQJWv8aGJJqkOG",
        "ZorLVGqCS8PvkiN8MoYXGvkMpLPeWuSBqTTC2iBubhenRqcRkvCoeZ0JbrRWfEHKoFM1gkTj/xcn",
        "L8yrXb5S3e2iAPkRw8+UPf8d4i9syS/jDyUZgrfqOsypbHh0dNMkS5dYpiqnOmJDWkjy1UDdUGmA",
        "SKglu7c6gKaPaxcqh9VNGnTerQFbpKMV34guBoyBFrVFD1Sq6eUCAwEAAaMhMB8wHQYDVR0OBBYE",
        "FCRENQBDfGf/R6qys11dPZM1+i5zMA0GCSqGSIb3DQEBCwUAA4IBAQACttnaeWl6CLVhffIlVz28",
        "CgxJbLB+pY9mL/jy7G0+5AxK7h9Njoe9ZK9k59uMcwD5BfVPl58kxFLJcnFc68R9m2Cdii1aCm/A",
        "BLlHPhpxHni5INeH9J4P7MLdVwxMa/Inp9tw3gZQ60txgG/mv535kL1mtlUSqbPDf57AtG0tNWKT",
        "2EBe/aSLndIWAhGf1qjS5Sc3uz+O5QEG7fnkLS4uOh5//coh14wfY3EAnMl/DpkgViliQOu7voX8",
        "7geBJd5jJhs6Ne2BJUp0q4iylD6WJrcfOLc3mcrgVaey5rLzVvX8vsp+p/m88KKhPzK+C8soYHz4",
        "T7PNNC7YVB2EQVSm",
        "                    </ds:X509Certificate>",
        "                </ds:X509Data>",
        "            </ds:KeyInfo>",
        "        </KeyDescriptor>",
        "        <KeyDescriptor use="encryption">",
        "            <ds:KeyInfo>",
        "                <ds:X509Data>",
        "                    <ds:X509Certificate>",
        "MIIDRzCCAi+gAwIBAgIEK9RtfDANBgkqhkiG9w0BAQsFADBUMQswCQYDVQQGEwJVSzEQMA4GA1UE",
        "CBMHQnJpc3RvbDEQMA4GA1UEBxMHQnJpc3RvbDESMBAGA1UEChMJRm9yZ2VSb2NrMQ0wCwYDVQQD",
        "EwR0ZXN0MB4XDTIyMDgxMTAxMzIzMFoXDTMyMDgwODAxMzIzMFowVDELMAkGA1UEBhMCVUsxEDAO",
        "BgNVBAgTB0JyaXN0b2wxEDAOBgNVBAcTB0JyaXN0b2wxEjAQBgNVBAoTCUZvcmdlUm9jazENMAsG",
        "A1UEAxMEdGVzdDCCASIwDQYJKoZIhvcNAQEBBQADggEPADCCAQoCggEBAIjkMGOu0kbOsvdp45J6",
        "FYW5wIn5TsKEPQUlNbYiFITg9o18Ja+6vWouK0fbIkzp8Ejj3U5OPHXqCtXCiDWiNX+bbFZoELW2",
        "KUigC26QdqbhmA/hTBheyQaUg/I4D64fqebUare9r0zxtMYE8FnR3YRgGeEG2qSlxgmIFvTMnzd4",
        "UwrUuw8C/uZTRbppDQITpkLDrOKb9608qnRvbXSR7UVP/JTm8Pq6uP2pvXz2F/QSK/wMKOnsjf+B",
        "XfnqNZ9b+PP+fJvUKIcxjFwgDkmGP+Kr9YV7aFaur5Hgh7Q+q4bSDJMbNDhk5Lqu6qr3oGulyiTX",
        "htoEkLMcbMA7JrVFCl0CAwEAAaMhMB8wHQYDVR0OBBYEFPoZt1jm2z/0gX/TnN/Sn+T31BU1MA0G",
        "CSqGSIb3DQEBCwUAA4IBAQAY2Hy1f+lKClRzJFHNVyYZ0ahRCkbGB0FppwI8ZhIt6Aj3p9LBXOdu",
        "IckDfAjg0/mckuEteA7l1LRqYcQIxpxrJU4FTxeyV1gTgudW43rw9Vd3AxdVocXqdpVxAvECtI+X",
        "/jdbkk54k0mYTCI9ruNRdof1BpOWkI9Jtdj0GRe7L9nydNb3V/kJzSVMDNsx+Vc0GnmysL7edZDo",
        "mK3zry+aIWav0yj1Pmh2lOgD6rEnOlGZDqrmIqWd0d2jp8Am4iawP0sr9e7etjK/YGCFW4byuCOx",
        "328SOTHshVUBtIGbq11vuQleknlVL7A/aYUeUIyOvdYhWD7YoVnBV+QwcrAH",
        "                    </ds:X509Certificate>",
        "                </ds:X509Data>",
        "            </ds:KeyInfo>",
        "            <EncryptionMethod Algorithm="http://www.w3.org/2001/04/xmlenc#rsa-oaep-mgf1p">",
        "                <ds:DigestMethod Algorithm="http://www.w3.org/2001/04/xmlenc#sha256"/>",
        "            </EncryptionMethod>",
        "            <EncryptionMethod Algorithm="http://www.w3.org/2001/04/xmlenc#aes128-cbc">",
        "                <xenc:KeySize>128</xenc:KeySize>",
        "            </EncryptionMethod>",
        "        </KeyDescriptor>",
        "        <SingleLogoutService Binding="urn:oasis:names:tc:SAML:2.0:bindings:HTTP-Redirect" Location="https://idc.scheuber.io/am/SPSloRedirect/metaAlias/alpha/iSPAzure" ResponseLocation="https://idc.scheuber.io/am/SPSloRedirect/metaAlias/alpha/iSPAzure"/>",
        "        <SingleLogoutService Binding="urn:oasis:names:tc:SAML:2.0:bindings:HTTP-POST" Location="https://idc.scheuber.io/am/SPSloPOST/metaAlias/alpha/iSPAzure" ResponseLocation="https://idc.scheuber.io/am/SPSloPOST/metaAlias/alpha/iSPAzure"/>",
        "        <SingleLogoutService Binding="urn:oasis:names:tc:SAML:2.0:bindings:SOAP" Location="https://idc.scheuber.io/am/SPSloSoap/metaAlias/alpha/iSPAzure"/>",
        "        <ManageNameIDService Binding="urn:oasis:names:tc:SAML:2.0:bindings:HTTP-Redirect" Location="https://idc.scheuber.io/am/SPMniRedirect/metaAlias/alpha/iSPAzure" ResponseLocation="https://idc.scheuber.io/am/SPMniRedirect/metaAlias/alpha/iSPAzure"/>",
        "        <ManageNameIDService Binding="urn:oasis:names:tc:SAML:2.0:bindings:HTTP-POST" Location="https://idc.scheuber.io/am/SPMniPOST/metaAlias/alpha/iSPAzure" ResponseLocation="https://idc.scheuber.io/am/SPMniPOST/metaAlias/alpha/iSPAzure"/>",
        "        <ManageNameIDService Binding="urn:oasis:names:tc:SAML:2.0:bindings:SOAP" Location="https://idc.scheuber.io/am/SPMniSoap/metaAlias/alpha/iSPAzure" ResponseLocation="https://idc.scheuber.io/am/SPMniSoap/metaAlias/alpha/iSPAzure"/>",
        "        <NameIDFormat>urn:oasis:names:tc:SAML:2.0:nameid-format:persistent</NameIDFormat>",
        "        <NameIDFormat>urn:oasis:names:tc:SAML:2.0:nameid-format:transient</NameIDFormat>",
        "        <NameIDFormat>urn:oasis:names:tc:SAML:1.1:nameid-format:emailAddress</NameIDFormat>",
        "        <NameIDFormat>urn:oasis:names:tc:SAML:1.1:nameid-format:unspecified</NameIDFormat>",
        "        <NameIDFormat>urn:oasis:names:tc:SAML:1.1:nameid-format:WindowsDomainQualifiedName</NameIDFormat>",
        "        <NameIDFormat>urn:oasis:names:tc:SAML:2.0:nameid-format:kerberos</NameIDFormat>",
        "        <NameIDFormat>urn:oasis:names:tc:SAML:1.1:nameid-format:X509SubjectName</NameIDFormat>",
        "        <AssertionConsumerService index="0" isDefault="true" Binding="urn:oasis:names:tc:SAML:2.0:bindings:HTTP-Artifact" Location="https://idc.scheuber.io/am/AuthConsumer/metaAlias/alpha/iSPAzure"/>",
        "        <AssertionConsumerService index="1" isDefault="false" Binding="urn:oasis:names:tc:SAML:2.0:bindings:HTTP-POST" Location="https://idc.scheuber.io/am/AuthConsumer/metaAlias/alpha/iSPAzure"/>",
        "        <AssertionConsumerService index="2" isDefault="false" Binding="urn:oasis:names:tc:SAML:2.0:bindings:PAOS" Location="https://idc.scheuber.io/am/Consumer/ECP/metaAlias/alpha/iSPAzure"/>",
        "    </SPSSODescriptor>",
        "</EntityDescriptor>",
        "",
        "",
      ],
      "dXJuOmZlZGVyYXRpb246TWljcm9zb2Z0T25saW5l": [
        "<?xml version="1.0" encoding="UTF-8" standalone="yes"?>",
        "<EntityDescriptor entityID="urn:federation:MicrosoftOnline" ID="_e46a1193-e8a7-48ed-804f-1516729ecb5f" xmlns="urn:oasis:names:tc:SAML:2.0:metadata" xmlns:query="urn:oasis:names:tc:SAML:metadata:ext:query" xmlns:mdattr="urn:oasis:names:tc:SAML:metadata:attribute" xmlns:saml="urn:oasis:names:tc:SAML:2.0:assertion" xmlns:xenc="http://www.w3.org/2001/04/xmlenc#" xmlns:xenc11="http://www.w3.org/2009/xmlenc11#" xmlns:alg="urn:oasis:names:tc:SAML:metadata:algsupport" xmlns:x509qry="urn:oasis:names:tc:SAML:metadata:X509:query" xmlns:ds="http://www.w3.org/2000/09/xmldsig#">",
        "    <Extensions>",
        "        <alg:DigestMethod Algorithm="http://www.w3.org/2000/09/xmldsig#sha1"/>",
        "        <alg:SigningMethod Algorithm="http://www.w3.org/2000/09/xmldsig#rsa-sha1"/>",
        "    </Extensions>",
        "    <SPSSODescriptor WantAssertionsSigned="true" protocolSupportEnumeration="urn:oasis:names:tc:SAML:2.0:protocol">",
        "        <KeyDescriptor use="signing">",
        "            <ds:KeyInfo>",
        "                ",
        "                ",
        "                ",
        "                ",
        "                ",
        "                ",
        "                ",
        "                ",
        "                ",
        "                ",
        "                ",
        "                ",
        "                ",
        "                ",
        "                ",
        "                ",
        "                ",
        "                ",
        "                ",
        "                ",
        "                ",
        "                ",
        "                ",
        "                ",
        "                ",
        "                ",
        "                ",
        "                ",
        "                ",
        "                ",
        "                ",
        "                <ds:X509Data>",
        "                    <ds:X509Certificate>",
        "MIIC/TCCAeWgAwIBAgIQbgDHfi3t1JNGVqwD5/7lmjANBgkqhkiG9w0BAQsFADApMScwJQYDVQQD",
        "Ex5MaXZlIElEIFNUUyBTaWduaW5nIFB1YmxpYyBLZXkwHhcNMjAxMjIxMDAwMDAwWhcNMjUxMjIx",
        "MDAwMDAwWjApMScwJQYDVQQDEx5MaXZlIElEIFNUUyBTaWduaW5nIFB1YmxpYyBLZXkwggEiMA0G",
        "CSqGSIb3DQEBAQUAA4IBDwAwggEKAoIBAQDFT0/0/2qQurnYa0LbJHF9YYozhEH6r9mCxVDBYbew",
        "SG4tGgrWpsewQ/96pcczGMQctMvU+h2eX38Hx/f9JAIDbuRQzQlsPhQS7DDZ6WlTXU+t8d/g2C7f",
        "pSoLs4KVdJih4xyjLUWj+BK/ijsRjBt4Riw9VbJH/DdWKyoSMbECEiE+s1RtLP/eYoMmNfxyQGqW",
        "irCNqVNBTlqzYQp4dgF0foYy4ktoxwmQOVoTcIMFYp1I4pFPI7CxuMLkfK0X7aTbM7YGphvMfJxJ",
        "kjrQdyI7G5d1t4DNi3zkEbBT7FGAr6qPt3Kn9ralpqJKHdpEBA9N0vNwQo5XTYIhUbPQ16IRAgMB",
        "AAGjITAfMB0GA1UdDgQWBBRs7tPmfkksSr67KtElHjYZbeaCTjANBgkqhkiG9w0BAQsFAAOCAQEA",
        "JqwMZSjQJ36x+1sty6EeLKQLQewQwPaEC47Zut+8bXed6Q8jMZ0bfa/MM7XquEcabaMZLQuKLft4",
        "4YXwXXQOfQrI2qjQr3eToJFlDT9hR0rfp9wQqttDxd6Aa6RWwDTgo5oKUQCTKLHhEy8uWzScK0eG",
        "t2d7TWTaDXjRSwNq6tM7fRhZs07tKBV3xfi9EQy/mlavAMFRBVm86NSo7AsOG1IOMq03U3ooCWAX",
        "h9PdvvHNfHhH19futAnC/HeOjwRF1Qc527aBMphYFQLdiThfmfmiE/AhQqCwZ2oE7uCJhBtR+Kb1",
        "ZGhjI35pHfsSqGiFa7Kr+5ave822PDcke89Mvg==",
        "                    </ds:X509Certificate>",
        "                </ds:X509Data>",
        "            </ds:KeyInfo>",
        "        </KeyDescriptor>",
        "        <KeyDescriptor use="signing">",
        "            <ds:KeyInfo>",
        "                ",
        "                ",
        "                ",
        "                ",
        "                ",
        "                ",
        "                ",
        "                ",
        "                ",
        "                ",
        "                ",
        "                ",
        "                ",
        "                ",
        "                ",
        "                ",
        "                ",
        "                ",
        "                ",
        "                ",
        "                ",
        "                ",
        "                ",
        "                ",
        "                ",
        "                ",
        "                ",
        "                ",
        "                ",
        "                ",
        "                ",
        "                <ds:X509Data>",
        "                    <ds:X509Certificate>",
        "MIIC/TCCAeWgAwIBAgIQN/GPegnT8blP2EcSdMMbBzANBgkqhkiG9w0BAQsFADApMScwJQYDVQQD",
        "Ex5MaXZlIElEIFNUUyBTaWduaW5nIFB1YmxpYyBLZXkwHhcNMjEwMjE4MDAwMDAwWhcNMjYwMjE4",
        "MDAwMDAwWjApMScwJQYDVQQDEx5MaXZlIElEIFNUUyBTaWduaW5nIFB1YmxpYyBLZXkwggEiMA0G",
        "CSqGSIb3DQEBAQUAA4IBDwAwggEKAoIBAQDXdLGU2Ll5RPdDUnKQ+f/HS5qiTay2cCh9U2AS6oDM",
        "6SOxVhYGtoeJ1VPebcLnpgLfhPxzrwWoVzXSEF+VRQbnYID2Jb4khjgyEeoThk3VqrThwhahpSbB",
        "g2vo06vIOp1TS2R1BiwHKTLoB1i1IJnaIFSC3BN6pY4flXWyLQt/5ABXElv2XZLqXM9Eefj6Ji40",
        "nLIsiW4dWw3BDa/ywWW0MsiW5ojGq4vovcAgENe/4NUbju70gHP/WS5D9bW5p+OIQi7/unrlWe/h",
        "3A6jtBbbRlXYXlN+Z22uTTyyCD/W8zeXaACLvHagwEMrQePDXBZqc/iX2kI+ooZr1sC/H39RAgMB",
        "AAGjITAfMB0GA1UdDgQWBBSrX2dm3LwT9jb/p+bAAdYQpE+/NjANBgkqhkiG9w0BAQsFAAOCAQEA",
        "eqJfYHnsA9qhGttXFfFpPW4DQLh5w6JCce7vGvWINr5fr1DnQdcOr+wwjQ/tqbckAL2v6z1AqjhS",
        "78kbfegnAQDwioJZ1olYYvLOxKoa6HF+b1/p0Mlub8Zukk2n1b2lKPBBOibOasSY7gQDwlIZi7tl",
        "9nMTxUfdYK+E5Axv7DVnmUCwcnnpV5/1SFdNyW2kWO4C68rrjMOvECfwrKkbfVJM8f9krEUBuoBF",
        "8dTDv7D2ZM4Q2buC70NbfaNWUX0yFvKI0IuTqk8RBfGTRQ4fZAbhMPaykEpBu6dNjTi5YOa0lNqF",
        "GS7Ax7leCh5x9lV8elcLkXs8ySo8AOQJk0hgIw==",
        "                    </ds:X509Certificate>",
        "                </ds:X509Data>",
        "            </ds:KeyInfo>",
        "        </KeyDescriptor>",
        "        <KeyDescriptor use="signing">",
        "            <ds:KeyInfo>",
        "                ",
        "                ",
        "                ",
        "                ",
        "                ",
        "                ",
        "                ",
        "                ",
        "                ",
        "                ",
        "                ",
        "                ",
        "                ",
        "                ",
        "                ",
        "                ",
        "                ",
        "                ",
        "                ",
        "                ",
        "                ",
        "                ",
        "                ",
        "                ",
        "                ",
        "                ",
        "                ",
        "                ",
        "                ",
        "                ",
        "                ",
        "                <ds:X509Data>",
        "                    <ds:X509Certificate>",
        "MIIC/TCCAeWgAwIBAgIQN/GPegnT8blP2EcSdMMbBzANBgkqhkiG9w0BAQsFADApMScwJQYDVQQD",
        "Ex5MaXZlIElEIFNUUyBTaWduaW5nIFB1YmxpYyBLZXkwHhcNMjEwMjE4MDAwMDAwWhcNMjYwMjE4",
        "MDAwMDAwWjApMScwJQYDVQQDEx5MaXZlIElEIFNUUyBTaWduaW5nIFB1YmxpYyBLZXkwggEiMA0G",
        "CSqGSIb3DQEBAQUAA4IBDwAwggEKAoIBAQDXdLGU2Ll5RPdDUnKQ+f/HS5qiTay2cCh9U2AS6oDM",
        "6SOxVhYGtoeJ1VPebcLnpgLfhPxzrwWoVzXSEF+VRQbnYID2Jb4khjgyEeoThk3VqrThwhahpSbB",
        "g2vo06vIOp1TS2R1BiwHKTLoB1i1IJnaIFSC3BN6pY4flXWyLQt/5ABXElv2XZLqXM9Eefj6Ji40",
        "nLIsiW4dWw3BDa/ywWW0MsiW5ojGq4vovcAgENe/4NUbju70gHP/WS5D9bW5p+OIQi7/unrlWe/h",
        "3A6jtBbbRlXYXlN+Z22uTTyyCD/W8zeXaACLvHagwEMrQePDXBZqc/iX2kI+ooZr1sC/H39RAgMB",
        "AAGjITAfMB0GA1UdDgQWBBSrX2dm3LwT9jb/p+bAAdYQpE+/NjANBgkqhkiG9w0BAQsFAAOCAQEA",
        "eqJfYHnsA9qhGttXFfFpPW4DQLh5w6JCce7vGvWINr5fr1DnQdcOr+wwjQ/tqbckAL2v6z1AqjhS",
        "78kbfegnAQDwioJZ1olYYvLOxKoa6HF+b1/p0Mlub8Zukk2n1b2lKPBBOibOasSY7gQDwlIZi7tl",
        "9nMTxUfdYK+E5Axv7DVnmUCwcnnpV5/1SFdNyW2kWO4C68rrjMOvECfwrKkbfVJM8f9krEUBuoBF",
        "8dTDv7D2ZM4Q2buC70NbfaNWUX0yFvKI0IuTqk8RBfGTRQ4fZAbhMPaykEpBu6dNjTi5YOa0lNqF",
        "GS7Ax7leCh5x9lV8elcLkXs8ySo8AOQJk0hgIw==",
        "                    </ds:X509Certificate>",
        "                </ds:X509Data>",
        "            </ds:KeyInfo>",
        "        </KeyDescriptor>",
        "        <SingleLogoutService Binding="urn:oasis:names:tc:SAML:2.0:bindings:HTTP-POST" Location="https://login.microsoftonline.com/login.srf"/>",
        "        <NameIDFormat>urn:oasis:names:tc:SAML:1.1:nameid-format:emailAddress</NameIDFormat>",
        "        <NameIDFormat>urn:mace:shibboleth:1.0:nameIdentifier</NameIDFormat>",
        "        <NameIDFormat>urn:oasis:names:tc:SAML:1.1:nameid-format:unspecified</NameIDFormat>",
        "        <NameIDFormat>urn:oasis:names:tc:SAML:2.0:nameid-format:transient</NameIDFormat>",
        "        <NameIDFormat>urn:oasis:names:tc:SAML:2.0:nameid-format:persistent</NameIDFormat>",
        "        <AssertionConsumerService index="0" isDefault="true" Binding="urn:oasis:names:tc:SAML:2.0:bindings:HTTP-POST" Location="https://login.microsoftonline.com/login.srf"/>",
        "        <AssertionConsumerService index="1" isDefault="false" Binding="urn:oasis:names:tc:SAML:2.0:bindings:HTTP-POST-SimpleSign" Location="https://login.microsoftonline.com/login.srf"/>",
        "        <AssertionConsumerService index="2" isDefault="false" Binding="urn:oasis:names:tc:SAML:2.0:bindings:PAOS" Location="https://login.microsoftonline.com/login.srf"/>",
        "    </SPSSODescriptor>",
        "</EntityDescriptor>",
        "",
        "",
      ],
    },
    "remote": {
      "aHR0cHM6Ly9zdHMud2luZG93cy5uZXQvNzExZmZhOWMtNTk3Mi00NzEzLWFjZTMtNjg4Yzk3MzI2MTRhLw": {
        "_id": "aHR0cHM6Ly9zdHMud2luZG93cy5uZXQvNzExZmZhOWMtNTk3Mi00NzEzLWFjZTMtNjg4Yzk3MzI2MTRhLw",
        "_rev": "-859975283",
        "entityId": "https://sts.windows.net/711ffa9c-5972-4713-ace3-688c9732614a/",
        "identityProvider": {
          "assertionContent": {
            "basicAuthentication": {},
            "nameIdFormat": {},
            "signingAndEncryption": {
              "encryption": {},
              "requestResponseSigning": {},
              "secretIdAndAlgorithms": {},
            },
          },
          "services": {
            "serviceAttributes": {
              "singleLogoutService": [
                {
                  "binding": "urn:oasis:names:tc:SAML:2.0:bindings:HTTP-Redirect",
                  "location": "https://login.microsoftonline.com/711ffa9c-5972-4713-ace3-688c9732614a/saml2",
                },
              ],
              "singleSignOnService": [
                {
                  "binding": "urn:oasis:names:tc:SAML:2.0:bindings:HTTP-Redirect",
                  "location": "https://login.microsoftonline.com/711ffa9c-5972-4713-ace3-688c9732614a/saml2",
                },
                {
                  "binding": "urn:oasis:names:tc:SAML:2.0:bindings:HTTP-POST",
                  "location": "https://login.microsoftonline.com/711ffa9c-5972-4713-ace3-688c9732614a/saml2",
                },
              ],
            },
          },
        },
      },
      "dXJuOmZlZGVyYXRpb246TWljcm9zb2Z0T25saW5l": {
        "_id": "dXJuOmZlZGVyYXRpb246TWljcm9zb2Z0T25saW5l",
        "_rev": "317057337",
        "entityId": "urn:federation:MicrosoftOnline",
        "serviceProvider": {
          "advanced": {
            "idpProxy": {},
            "saeConfiguration": {},
          },
          "assertionContent": {
            "basicAuthentication": {},
            "nameIdFormat": {
              "nameIdFormatList": [
                "urn:oasis:names:tc:SAML:1.1:nameid-format:emailAddress",
                "urn:mace:shibboleth:1.0:nameIdentifier",
                "urn:oasis:names:tc:SAML:1.1:nameid-format:unspecified",
                "urn:oasis:names:tc:SAML:2.0:nameid-format:transient",
                "urn:oasis:names:tc:SAML:2.0:nameid-format:persistent",
              ],
            },
            "signingAndEncryption": {
              "encryption": {},
              "requestResponseSigning": {
                "assertion": true,
              },
              "secretIdAndAlgorithms": {},
            },
          },
          "assertionProcessing": {
            "attributeMapper": {
              "attributeMap": [
                {
                  "binary": false,
                  "localAttribute": "mail",
                  "samlAttribute": "IDPEmail",
                },
                {
                  "binary": false,
                  "localAttribute": "UOPClassID",
                  "samlAttribute": "UOPClassID",
                },
              ],
            },
            "responseArtifactMessageEncoding": {
              "encoding": "URI",
            },
          },
          "services": {
            "serviceAttributes": {
              "assertionConsumerService": [
                {
                  "binding": "urn:oasis:names:tc:SAML:2.0:bindings:HTTP-POST",
                  "index": 0,
                  "isDefault": true,
                  "location": "https://login.microsoftonline.com/login.srf",
                },
                {
                  "binding": "urn:oasis:names:tc:SAML:2.0:bindings:HTTP-POST-SimpleSign",
                  "index": 1,
                  "isDefault": false,
                  "location": "https://login.microsoftonline.com/login.srf",
                },
                {
                  "binding": "urn:oasis:names:tc:SAML:2.0:bindings:PAOS",
                  "index": 2,
                  "isDefault": false,
                  "location": "https://login.microsoftonline.com/login.srf",
                },
              ],
              "singleLogoutService": [
                {
                  "binding": "urn:oasis:names:tc:SAML:2.0:bindings:HTTP-POST",
                  "location": "https://login.microsoftonline.com/login.srf",
                },
              ],
            },
          },
        },
      },
    },
  },
  "script": {
    "01e1a3c0-038b-4c16-956a-6c9d89328cff": {
      "_id": "01e1a3c0-038b-4c16-956a-6c9d89328cff",
      "context": "AUTHENTICATION_TREE_DECISION_NODE",
      "createdBy": "null",
      "creationDate": 0,
      "default": true,
      "description": "Default global script for a scripted decision node",
      "language": "JAVASCRIPT",
      "lastModifiedBy": "null",
      "lastModifiedDate": 0,
      "name": "Authentication Tree Decision Node Script",
      "script": [
        "/*",
        "  - Data made available by nodes that have already executed are available in the sharedState variable.",
        "  - The script should set outcome to either "true" or "false".",
        " */",
        "",
        "outcome = "true";",
      ],
    },
    "021e434f-89b6-45fb-9d67-5147bc1650c3": {
      "_id": "021e434f-89b6-45fb-9d67-5147bc1650c3",
      "context": "AUTHENTICATION_TREE_DECISION_NODE",
      "createdBy": "null",
      "creationDate": 0,
      "default": false,
      "description": "null",
      "language": "JAVASCRIPT",
      "lastModifiedBy": "null",
      "lastModifiedDate": 0,
      "name": "Show Password Policy",
      "script": [
        "var output = true;",
        "var anchor = "anchor-".concat(generateNumericToken('xxx'));",
        "var halign = "left";",
        "var message = "<ul><li>Must be at least 8 characters long</li>".concat(",
        "    "<li>Must be less than 64 characters long</li>").concat(",
        "    "<li>Must not share characters with email, username, first name, last name</li>").concat(",
        "    "<li>Must have at least 1 lowercase letter(s)</li>").concat(",
        "    "<li>Must have at least 1 capital letter(s)</li>").concat(",
        "    "<li>Must have at least 1 number(s)</li>").concat(",
        "    "<li>Must have at least 1 symbol(s)</li></ul>")",
        "var script = "Array.prototype.slice.call(\\n".concat(",
        "  "document.getElementsByClassName('callback-component')).forEach(\\n").concat(",
        "  "function (e) {\\n").concat(",
        "  "  var message = e.firstElementChild;\\n").concat(",
        "  "  if (message.firstChild && message.firstChild.nodeName == '#text' && message.firstChild.nodeValue.trim() == '").concat(anchor).concat("') {\\n").concat(",
        "  "    message.className = \\"text-left\\";\\n").concat(",
        "  "    message.align = \\"").concat(halign).concat("\\";\\n").concat(",
        "  "    message.innerHTML = '").concat(message).concat("';\\n").concat(",
        "  "  }\\n").concat(",
        "  "})")",
        "var fr = JavaImporter(",
        "    org.forgerock.openam.auth.node.api.Action,",
        "    javax.security.auth.callback.TextOutputCallback,",
        "    com.sun.identity.authentication.callbacks.ScriptTextOutputCallback",
        ")",
        "if (message.length && callbacks.isEmpty()) {",
        "    action = fr.Action.send(",
        "        new fr.TextOutputCallback(",
        "            fr.TextOutputCallback.INFORMATION,",
        "            anchor",
        "        ),",
        "        new fr.ScriptTextOutputCallback(script)",
        "    ).build()",
        "}",
        "else {",
        "  action = fr.Action.goTo("true").build();",
        "}",
        "",
        " /*",
        "  * Generate a token in the desired format. All 'x' characters will be replaced with a random number 0-9.",
        "  * ",
        "  * Example:",
        "  * 'xxxxx' produces '28535'",
        "  * 'xxx-xxx' produces '432-521'",
        "  */",
        "function generateNumericToken(format) {",
        "    return format.replace(/[x]/g, function(c) {",
        "        var r = Math.random()*10|0;",
        "        var v = r;",
        "        return v.toString(10);",
        "    });",
        "}",
      ],
    },
    "030af5e5-ac77-4176-bafe-f4558f94818e": {
      "_id": "030af5e5-ac77-4176-bafe-f4558f94818e",
      "context": "AUTHENTICATION_TREE_DECISION_NODE",
      "createdBy": "null",
      "creationDate": 0,
      "default": false,
      "description": "Choose a 4-digit security PIN",
      "language": "JAVASCRIPT",
      "lastModifiedBy": "null",
      "lastModifiedDate": 0,
      "name": "Twilio IVR: Choose Security PIN",
      "script": [
        "/* Twilio IVR: Choose Security PIN",
        " * ",
        " * The Scripted Decision Node needs the following outcomes defined:",
        " * - true",
        " * - false",
        " * ",
        " * Depending on the amount of data collected through callbacks and how many of the callParams",
        " * you activate below, you will need to change your authentication session from JWT to CTS or",
        " * Memory.",
        " */",
        "logger.warning("Twilio IVR: Choose Security PIN: start");",
        "outcome = "false";",
        "",
        "/* Begin Configuration",
        " */",
        "",
        "// Build out the verification prompt",
        "var prompt = "Please choose your 4-digit security PIN.";",
        "",
        "/* End Configuration",
        " */",
        "",
        "var fr = JavaImporter(",
        "      org.forgerock.openam.auth.node.api,",
        "      javax.security.auth.callback.TextInputCallback",
        ");",
        "  ",
        "with (fr) {",
        "      if (callbacks.isEmpty()) {",
        "        var input = new TextInputCallback(prompt);",
        "        action = Action.send(input).build();",
        "      } ",
        "      else {",
        "          var answer = new String(callbacks.get(0).getText()).replace(/[^0-9]/g, "");",
        "        logger.warning("Twilio IVR: Choose Security PIN: callbacks received");",
        "        if (answer.length == 4) {",
        "              setSharedObjectAttribute("frUnindexedInteger5", answer);",
        "              logger.warning("Twilio IVR: Choose Security PIN: sharedState: ".concat(sharedState));",
        "              outcome = "true";",
        "        }",
        "        logger.warning("Twilio IVR: Choose Security PIN: finish [outcome=".concat(outcome).concat("]"));",
        "        action = Action.goTo(outcome).build();",
        "      }",
        "}",
        "",
        "/*",
        " * Store attributes in shared state for use with the Create/Patch Object nodes.",
        " */",
        "function setSharedObjectAttribute(name, value) {",
        "      var storage = sharedState.get("objectAttributes");",
        "    if (storage && value) {",
        "          if (storage.put) {",
        "              storage.put(name, new java.lang.Integer(value));",
        "        }",
        "          else {",
        "              storage[name] = new java.lang.Integer(value);",
        "        }",
        "    }",
        "    else if (value) {",
        "        sharedState.put("objectAttributes", JSON.parse("{\\""+name+"\\":"+value+"}"));",
        "    }",
        "}",
      ],
    },
    "073a64d4-37c9-486d-8c59-6583494644b9": {
      "_id": "073a64d4-37c9-486d-8c59-6583494644b9",
      "context": "AUTHENTICATION_TREE_DECISION_NODE",
      "createdBy": "null",
      "creationDate": 0,
      "default": false,
      "description": "FRAAS-7955 Transient State Only",
      "language": "JAVASCRIPT",
      "lastModifiedBy": "null",
      "lastModifiedDate": 0,
      "name": "FRAAS-7955 Transient State Only",
      "script": [
        "outcome = "true";",
        "",
        "setTransientObjectAttribute("userName", "FRAAS-7955");",
        "setTransientObjectAttribute("givenName", "First-transient");",
        "setTransientObjectAttribute("sn", "Last-transient");",
        "setTransientObjectAttribute("mail", "first.last-transient@company.com");",
        "",
        "/*",
        " * Store attributes in transient state for use with the Create/Patch Object nodes.",
        " */",
        "function setTransientObjectAttribute(name, value) {",
        "    var transientStorage = transientState.get("objectAttributes");",
        "    if (transientStorage && value) {",
        "          if (transientStorage.put) {",
        "            transientStorage.put(name, value);",
        "        }",
        "          else {",
        "            transientStorage[name] = value;",
        "        }",
        "    }",
        "    else if (value) {",
        "    transientState.put("objectAttributes", JSON.parse("{\\""+name+"\\":\\""+value+"\\"}"));",
        "    }",
        "}",
      ],
    },
    "0ab1dd57-eafd-4063-8e60-65bfac8108b7": {
      "_id": "0ab1dd57-eafd-4063-8e60-65bfac8108b7",
      "context": "AUTHENTICATION_TREE_DECISION_NODE",
      "createdBy": "null",
      "creationDate": 0,
      "default": false,
      "description": "Check existing session and set username",
      "language": "JAVASCRIPT",
      "lastModifiedBy": "null",
      "lastModifiedDate": 0,
      "name": "Check Existing Session",
      "script": [
        "if (typeof existingSession !== 'undefined')",
        "{",
        "  outcome = "hasSession";",
        "  sharedState.put("username", existingSession.get("UserId"));",
        "  sharedState.put("_id", existingSession.get("UserId"));",
        "  if (sharedState.get("objectAttributes")) {",
        "    sharedState.get("objectAttributes").put("userName", existingSession.get("UserId"));",
        "  }",
        "  else {",
        "    sharedState.put("objectAttributes", {userName: existingSession.get("UserId")});",
        "  }",
        "}",
        "else",
        "{",
        "  outcome = "noSession";",
        "}",
      ],
    },
    "0c189425-e5ea-4062-ae2e-53ea14320bf4": {
      "_id": "0c189425-e5ea-4062-ae2e-53ea14320bf4",
      "context": "AUTHENTICATION_TREE_DECISION_NODE",
      "createdBy": "null",
      "creationDate": 0,
      "default": false,
      "description": "Check Status",
      "language": "JAVASCRIPT",
      "lastModifiedBy": "null",
      "lastModifiedDate": 0,
      "name": "Onfido-CheckStatus",
      "script": [
        "logger.error("Onfido-CheckStatus: Start");",
        "",
        "/*",
        " * !!! Extend your authentication session time so your identity proofing flows don't time out !!!",
        " *",
        " * Authentication > Settings > Trees > Max Duration (Minutes)",
        " *",
        " * Set to 15 minutes.",
        " *",
        " */",
        "",
        "/*",
        " * BEGIN SCRIPT CONFIGURATION",
        " *",
        " * REPLACE WITH YOUR OWN ONFIDO API TOKEN",
        " */",
        "//var ONFIDO_API_TOKEN = "api_live.StUdfxdiCFb.YrzbadxB_R2-qG5lFUc3lWg6JAc3Cnq-"",
        "var ONFIDO_API_TOKEN = "api_live.H5ysRusAomY.nbbkimoWc91cDZAWJZkJt0Tkqdjm1Rjr";",
        "/*",
        " * BEGIN SCRIPT CONFIGURATION",
        " */",
        "",
        "var fr = JavaImporter(",
        "    org.forgerock.http.protocol.Request",
        ")",
        "",
        "var request = new fr.Request()",
        "request.setUri("https://api.onfido.com/v3/checks?applicant_id=" + String(sharedState.get("onfidoApplicantID")));",
        "request.setMethod("GET")",
        "request.getHeaders().add("Authorization", "Token token=" + ONFIDO_API_TOKEN)",
        "var response = httpClient.send(request).get()",
        "logger.error("Onfido-CheckStatus: status check response: ".concat(response.getEntity().getString()));",
        "",
        "outcome = "pending";",
        "",
        "if (response.getStatus().getCode() === 200) {",
        "    var json = JSON.parse(response.getEntity().getString());",
        "    if (json.checks.length > 0) {",
        "        if (json.checks[0].status == "complete") {",
        "            outcome = json.checks[0].result;",
        "",
        "            for (i = 0; i < json.checks[0].report_ids.length; i++) {",
        "",
        "                var request = new fr.Request()",
        "                request.setUri("https://api.onfido.com/v3/reports/" + String(json.checks[0].report_ids[i]));",
        "                request.setMethod("GET")",
        "                request.getHeaders().add("Authorization", "Token token=" + ONFIDO_API_TOKEN)",
        "                response = httpClient.send(request).get()",
        "                logger.error("Onfido-CheckStatus: get report response: ".concat(response.getEntity().getString()));",
        "",
        "                var report = JSON.parse(response.getEntity().getString());",
        "                if (report.name == "document") {",
        "                    if (report.properties.hasOwnProperty("first_name")) setSharedObjectAttribute("givenName", titleCase(report.properties.first_name));",
        "                    if (report.properties.hasOwnProperty("last_name")) setSharedObjectAttribute("sn", titleCase(report.properties.last_name));",
        "                    if (report.properties.hasOwnProperty("date_of_birth")) setSharedObjectAttribute("frIndexedString2", titleCase(report.properties.date_of_birth));",
        "                    if (report.properties.barcode[0].hasOwnProperty("address_line_1")) setSharedObjectAttribute("postalAddress", titleCase(report.properties.barcode[0].address_line_1));",
        "                    if (report.properties.barcode[0].hasOwnProperty("address_line_3")) setSharedObjectAttribute("city", titleCase(report.properties.barcode[0].address_line_3));",
        "                    if (report.properties.barcode[0].hasOwnProperty("address_line_5")) setSharedObjectAttribute("stateProvince", report.properties.barcode[0].address_line_5);",
        "                    if (report.properties.barcode[0].hasOwnProperty("address_line_4")) setSharedObjectAttribute("postalCode", formatOnfidoZipCode(report.properties.barcode[0].address_line_4));",
        "                    if (report.properties.hasOwnProperty("issuing_country")) setSharedObjectAttribute("country", report.properties.issuing_country);",
        "                }",
        "            }",
        "        }",
        "    }",
        "} else outcome = "error";",
        "",
        "sharedState.put("onFidoOutcome", outcome);",
        "logger.error("Onfido-CheckStatus: End (outcome=".concat(outcome).concat(")"));",
        "",
        "/*",
        " * Output str in title case",
        " * ",
        " * e.g.: 'ALL UPPERCASE AND all lowercase' = 'All Uppercase And All Lowercase'",
        " */",
        "function titleCase(input) {",
        "    var str = input.toString();",
        "    var splitStr = str.toLowerCase().split(' ');",
        "    for (var i = 0; i < splitStr.length; i++) {",
        "        splitStr[i] = splitStr[i].charAt(0).toUpperCase() + splitStr[i].slice(1)",
        "    }",
        "    return splitStr.join(' '); ",
        "}",
        "",
        "/*",
        " * Format ZIP code from Onfido identity proofing output",
        " * ",
        " * e.g.: 786260000 = 78626",
        " *       786261234 = 78626-1234",
        " */",
        "function formatOnfidoZipCode(str) {",
        "  if (str.substring(5) == "0000") {",
        "    return str.substring(0,5)",
        "  }",
        "  else {",
        "    return str.substring(0,5) + "-" + str.substring(5);",
        "  }",
        "}",
        "",
        "/*",
        " * Store attributes in shared state for use with the Create/Patch Object nodes.",
        " */",
        "function setSharedObjectAttribute(name, value) {",
        "       var storage = sharedState.get("objectAttributes");",
        "    if (storage && value) {",
        "          if (storage.put) {",
        "              storage.put(name, value);",
        "        }",
        "          else {",
        "              storage[name] = value;",
        "        }",
        "    }",
        "    else if (value) {",
        "        sharedState.put("objectAttributes", JSON.parse("{\\""+name+"\\":\\""+value+"\\"}"));",
        "    }",
        "}",
      ],
    },
    "0d471aff-81f3-41ce-8bf9-35c27cdc0a26": {
      "_id": "0d471aff-81f3-41ce-8bf9-35c27cdc0a26",
      "context": "AUTHENTICATION_TREE_DECISION_NODE",
      "createdBy": "null",
      "creationDate": 0,
      "default": false,
      "description": "null",
      "language": "JAVASCRIPT",
      "lastModifiedBy": "null",
      "lastModifiedDate": 0,
      "name": "Admin_CanBeInvited",
      "script": [
        "/*",
        " * Copyright 2023 ForgeRock AS. All Rights Reserved",
        " *",
        " * Use of this code requires a commercial software license with ForgeRock AS.",
        " * or with one of its affiliates. All use shall be exclusively subject",
        " * to such license between the licensee and ForgeRock AS.",
        " */",
        "",
        "(function() {",
        "  var fr = new JavaImporter(",
        "    org.forgerock.openam.auth.nodes,",
        "    org.forgerock.guice.core",
        "  );",
        "",
        "  with (fr) {",
        "    try {",
        "",
        "      outcome = 'False';",
        "",
        "      var realm = sharedState.get('realm');",
        "      var uuid = sharedState.get('username');",
        "      var identityProvider = InjectorHolder.getInstance(IdentityProvider);",
        "      var identity = identityProvider.getIdentity(uuid, realm);",
        "      var attrs = identity.getAttributes();",
        "",
        "      if (!attrs.containsKey('fr-idm-inviteDate')) {",
        "        logger.message('Admin cannot be invited: no invite date');",
        "        return;",
        "      }",
        "",
        "      if (attrs.containsKey('fr-idm-onboardDate')) {",
        "        logger.message('Admin cannot be invited: already onboarded');",
        "        return;",
        "      }",
        "",
        "      var email = attrs.get('mail').iterator().next();",
        "      var objAttrs = {",
        "        mail: email,",
        "        userName: email,",
        "      };",
        "      sharedState.put('objectAttributes', objAttrs);",
        "",
        "      logger.message('Admin can be invited');",
        "      outcome = 'True';",
        "",
        "    } catch (e) {",
        "",
        "      logger.error('Failed to determine if admin can be invited: {}', e);",
        "",
        "    }",
        "  }",
        "}());",
      ],
    },
    "123725a9-2119-4efd-a6b0-456f3ccd34b7": {
      "_id": "123725a9-2119-4efd-a6b0-456f3ccd34b7",
      "context": "AUTHENTICATION_TREE_DECISION_NODE",
      "createdBy": "null",
      "creationDate": 0,
      "default": false,
      "description": "null",
      "language": "JAVASCRIPT",
      "lastModifiedBy": "null",
      "lastModifiedDate": 0,
      "name": "deviceprofile_to_attribute",
      "script": [
        "var objectAttributes = sharedState.get("objectAttributes");",
        "var deviceHash = sharedState.get("deviceHash");",
        "",
        "sharedState.put("frIndexedString1" , deviceHash );",
        "",
        "",
        "",
        "if(objectAttributes === null || objectAttributes === undefined)",
        "{",
        "",
        "",
        " objectAttributes = {",
        "                        "userName" : "anon-".concat(deviceHash),",
        "                     "givenName" : " ",",
        "                     "sn" : " ",",
        "                     "mail" : "anon-".concat(deviceHash).concat("@mytestrun.com"),",
        "                     "frIndexedString1" : deviceHash",
        "                    }",
        "}",
        "else",
        "{",
        "",
        "    objectAttributes.put("userName",  "anon-".concat(deviceHash));",
        "    objectAttributes.put("givenName", " ");",
        "    objectAttributes.put("sn", " ");",
        "    objectAttributes.put("mail", "anon-".concat(deviceHash).concat("@mytestrun.com"));",
        "    objectAttributes.put("frIndexedString1", deviceHash);",
        "   ",
        "}",
        "",
        "",
        "sharedState.put("objectAttributes",objectAttributes);",
        "    ",
        "outcome = "true";",
      ],
    },
    "1244e639-4a31-401d-ab61-d75133d8dc9e": {
      "_id": "1244e639-4a31-401d-ab61-d75133d8dc9e",
      "context": "SOCIAL_IDP_PROFILE_TRANSFORMATION",
      "createdBy": "null",
      "creationDate": 0,
      "default": true,
      "description": "Normalizes raw profile data from Instagram",
      "language": "GROOVY",
      "lastModifiedBy": "null",
      "lastModifiedDate": 0,
      "name": "Instagram Profile Normalization",
      "script": [
        "/*",
        " * Copyright 2020 ForgeRock AS. All Rights Reserved",
        " *",
        " * Use of this code requires a commercial software license with ForgeRock AS.",
        " * or with one of its affiliates. All use shall be exclusively subject",
        " * to such license between the licensee and ForgeRock AS.",
        " */",
        "",
        "import static org.forgerock.json.JsonValue.field",
        "import static org.forgerock.json.JsonValue.json",
        "import static org.forgerock.json.JsonValue.object",
        "",
        "return json(object(",
        "        field("id", rawProfile.id),",
        "        field("username", rawProfile.username)))",
      ],
    },
    "12bdbce4-268b-4b95-bfdf-640de9bddead": {
      "_id": "12bdbce4-268b-4b95-bfdf-640de9bddead",
      "context": "AUTHENTICATION_TREE_DECISION_NODE",
      "createdBy": "null",
      "creationDate": 0,
      "default": false,
      "description": "null",
      "language": "JAVASCRIPT",
      "lastModifiedBy": "null",
      "lastModifiedDate": 0,
      "name": "Record Changes And Preserve Old Email",
      "script": [
        "logger.error("Record Changes And Preserve Old Email: start");",
        "outcome = "true";",
        "if (getProfileAttribute("givenName") != getObjectAttribute("givenName")) {",
        "  setSharedObjectAttribute("old_givenName", getProfileAttribute("givenName"));",
        "}",
        "if (getProfileAttribute("sn") != getObjectAttribute("sn")) {",
        "  setSharedObjectAttribute("old_sn", getProfileAttribute("sn"));",
        "}",
        "if (getProfileAttribute("mail") != getObjectAttribute("mail")) {",
        "  setSharedObjectAttribute("frUnindexedString5", getProfileAttribute("mail"));",
        "}",
        "if (getProfileAttribute("telephoneNumber") != getObjectAttribute("telephoneNumber")) {",
        "  setSharedObjectAttribute("old_telephoneNumber", getProfileAttribute("telephoneNumber"));",
        "}",
        "logger.error("Record Changes And Preserve Old Email: end");",
        "",
        "/*",
        " * Get profile attribute",
        " */",
        "function getProfileAttribute(name) {",
        "    return idRepository.getAttribute(sharedState.get("_id"), name).iterator().next().toString();",
        "}",
        "",
        "/*",
        " * Get objectAttribute value",
        " */",
        "function getObjectAttribute(name) {",
        "    if (sharedState.get("objectAttributes") && sharedState.get("objectAttributes").get(name)) {",
        "        return sharedState.get("objectAttributes").get(name).toString();",
        "    }",
        "    else {",
        "        return null;",
        "    }",
        "}",
        "",
        "/*",
        " * Properly set attributes in shared state for use with the Create/Patch Object nodes.",
        " */",
        "function setSharedObjectAttribute(name, value) {",
        "    if (sharedState.get("objectAttributes")) {",
        "        sharedState.get("objectAttributes").put(name, value);",
        "    }",
        "    else {",
        "        sharedState.put("objectAttributes", JSON.parse("{\\""+name+"\\":"+value+"}"));",
        "    }",
        "}",
      ],
    },
    "13b6a418-4ccc-41b6-86ce-0a13f352da22": {
      "_id": "13b6a418-4ccc-41b6-86ce-0a13f352da22",
      "context": "AUTHENTICATION_TREE_DECISION_NODE",
      "createdBy": "null",
      "creationDate": 0,
      "default": false,
      "description": "null",
      "language": "JAVASCRIPT",
      "lastModifiedBy": "null",
      "lastModifiedDate": 0,
      "name": "Admin_HasOnboarded",
      "script": [
        "/*",
        " * Copyright 2023 ForgeRock AS. All Rights Reserved",
        " *",
        " * Use of this code requires a commercial software license with ForgeRock AS.",
        " * or with one of its affiliates. All use shall be exclusively subject",
        " * to such license between the licensee and ForgeRock AS.",
        " */",
        "",
        "(function() {",
        "  var fr = new JavaImporter(",
        "    org.forgerock.openam.auth.nodes,",
        "    org.forgerock.guice.core",
        "  );",
        "",
        "  with (fr) {",
        "    try {",
        "",
        "      outcome = 'False';",
        "",
        "      var realm = sharedState.get('realm');",
        "      var uuid = sharedState.get('_id');",
        "      var identityProvider = InjectorHolder.getInstance(IdentityProvider);",
        "      var identity = identityProvider.getIdentity(uuid, realm);",
        "      var attrs = identity.getAttributes();",
        "",
        "      if (attrs.containsKey('fr-idm-onboardDate')) {",
        "        logger.message('Admin has onboard date');",
        "        outcome = 'True';",
        "      }",
        "",
        "    } catch (e) {",
        "",
        "      logger.error('Failed to determine if admin has onboarded: {}', e);",
        "      outcome = 'Error';",
        "",
        "    }",
        "  }",
        "}());",
      ],
    },
    "13cd3c60-a04b-4455-b028-fbfd01ed88b1": {
      "_id": "13cd3c60-a04b-4455-b028-fbfd01ed88b1",
      "context": "AUTHENTICATION_TREE_DECISION_NODE",
      "createdBy": "null",
      "creationDate": 0,
      "default": false,
      "description": "Azure AD pass through authentication using Resource Owner Password Credential flow",
      "language": "JAVASCRIPT",
      "lastModifiedBy": "null",
      "lastModifiedDate": 0,
      "name": "AAD Passthru ROPC",
      "script": [
        "/* AAD Passthru ROPC",
        " *",
        " * Author: volker.scheuber@forgerock.com",
        " * ",
        " * Azure AD pass through authentication using Resource Owner Password Credential flow",
        " * ",
        " * This script needs to be parametrized. It will not work properly as is. ",
        " * It requires the Platform Username and Platform Password collector nodes",
        " * before it can operate.",
        " * ",
        " * The Scripted Decision Node needs the following outcomes defined:",
        " * - Valid",
        " * - Invalid",
        " * - Expired",
        " * - Disabled",
        " * - Error",
        " */",
        "logger.message("AAD Passthru ROPC: start");",
        "",
        "if (sharedState.get("username") && transientState.get("password")) {",
        "      /*",
        "     * BEGIN SCRIPT CONFIGURATION",
        "     *",
        "     * REPLACE WITH YOUR OWN AZURE AD SETTINGS",
        "     *",
        "     * AAD_TENANT_ID is your tenant ID: https://docs.microsoft.com/en-us/azure/active-directory/fundamentals/active-directory-how-to-find-tenant",
        "     * AAD_CLIENT_ID is your registered app ID: https://docs.microsoft.com/en-us/azure/active-directory/develop/quickstart-register-app",
        "     */",
        "    var AAD_TENANT_ID = "711ffa9c-5972-4713-ace3-688c9732614a";",
        "    var AAD_CLIENT_ID = "51f130ec-d29d-4419-a492-0011d09c1a16";",
        "    /*",
        "     * END SCRIPT CONFIGURATION",
        "     */",
        "      ",
        "    // Azure AD ROPC Configuration",
        "    var AAD_SCOPE = "profile";",
        "      var AAD_RESOURCE = "https://graph.microsoft.com/"",
        "    var AAD_OAUTH2_TOKEN_URI = "https://login.windows.net/".concat(AAD_TENANT_ID).concat("/oauth2/token");",
        "",
        "    var request = new org.forgerock.http.protocol.Request();",
        "    request.setMethod('POST');",
        "    request.setUri(AAD_OAUTH2_TOKEN_URI);",
        "    request.getHeaders().add("Content-Type", "application/x-www-form-urlencoded");",
        "    var params = request.getForm();",
        "    params.add("resource", AAD_RESOURCE);",
        "    params.add("client_id", AAD_CLIENT_ID);",
        "    params.add("grant_type", "password");",
        "    params.add("scope", AAD_SCOPE);",
        "    params.add("username", sharedState.get("username"));",
        "    params.add("password", transientState.get("password"));",
        "    request.getEntity().setString(params.toString());",
        "",
        "    var response = httpClient.send(request).get();",
        "    var result = JSON.parse(response.getEntity().getString());",
        "    //logger.message("AAD Passthru ROPC: JSON result: " + JSON.stringify(result));",
        "",
        "      if (response.getStatus().getCode() === 200) {",
        "          outcome = "Valid"",
        "        transientState.put("aadAccessToken", result.access_token);",
        "    } else {",
        "        /* Outcomes:",
        "         * - Valid",
        "         * - Invalid",
        "         * - Expired",
        "         * - Disabled",
        "         * - Error",
        "         *",
        "         * Expected Error Codes:",
        "         * 50126 - Error validating credentials due to invalid username or password.",
        "         * 50055 - The password is expired.",
        "         * 50057 - The user account is disabled.",
        "         * 50196 - The server terminated an operation because it encountered a client request loop. Please contact your app vendor.",
        "         */",
        "        if (result.error_codes.includes(50126)) {",
        "            outcome = "Invalid";",
        "        } else if (result.error_codes.includes(50055)) {",
        "            outcome = "Expired";",
        "        } else if (result.error_codes.includes(50057)) {",
        "            outcome = "Disabled";",
        "        } else {",
        "            outcome = "Error";",
        "        }",
        "        logger.message("AAD Passthru ROPC: error = ".concat(result.error));",
        "        logger.message("AAD Passthru ROPC: error_description = ".concat(result.error_description));",
        "        logger.message("AAD Passthru ROPC: error_codes = ".concat(result.error_codes));",
        "    }",
        "} else {",
        "      outcome = "Error";",
        "      logger.message("AAD Passthru ROPC: No user or password found in shared state! Use username and password collector nodes before this script to populate shared and transient states!'");",
        "}",
        "logger.message("AAD Passthru ROPC: End (outcome=".concat(outcome).concat(")"));",
      ],
    },
    "14f14ad3-f35f-455b-a7ba-d7cd939c6921": {
      "_id": "14f14ad3-f35f-455b-a7ba-d7cd939c6921",
      "context": "AUTHENTICATION_TREE_DECISION_NODE",
      "createdBy": "null",
      "creationDate": 0,
      "default": false,
      "description": "Dropdown selector",
      "language": "JAVASCRIPT",
      "lastModifiedBy": "null",
      "lastModifiedDate": 0,
      "name": "Choice inner1, inner2",
      "script": [
        "/* Choice inner1, inner2",
        " *",
        " * Author: volker.scheuber@forgerock.com",
        " * ",
        " * Render a dropdown selector",
        " * ",
        " * This script must be parametrized. It will not work properly as is.",
        " * ",
        " * The Scripted Decision Node needs the following outcomes defined:",
        " * - true",
        " */",
        "(function () {",
        "  outcome = "true";",
        "  var choices = ["inner1", "inner2"];",
        "  ",
        "  var fr = JavaImporter(",
        "    org.forgerock.openam.auth.node.api.Action,",
        "    javax.security.auth.callback.ChoiceCallback",
        "  )",
        "",
        "  if (callbacks.isEmpty()) {",
        "    action = fr.Action.send([",
        "      new fr.ChoiceCallback("Select a journey", choices, 0, false)",
        "    ]).build();",
        "  } else {",
        "    var choice = parseInt(callbacks.get(0).getSelectedIndexes()[0]);",
        "    nodeState.putShared("nodeConfig", {tree: choices[choice]});",
        "    action = fr.Action.goTo(outcome).build();",
        "  }",
        "}());",
      ],
    },
    "1550ad56-df9f-4dad-9803-6c3a2545d8f4": {
      "_id": "1550ad56-df9f-4dad-9803-6c3a2545d8f4",
      "context": "AUTHENTICATION_TREE_DECISION_NODE",
      "createdBy": "null",
      "creationDate": 0,
      "default": false,
      "description": "Detect and preserve currently active theme before setting new theme from query param in the request URL.",
      "language": "JAVASCRIPT",
      "lastModifiedBy": "null",
      "lastModifiedDate": 0,
      "name": "Set Theme from URL",
      "script": [
        "/* Set Theme from URL",
        " * ",
        " * Detect and preserve currently active theme before setting new theme from query param in the request URL.",
        " * ",
        " * This script does not need to be parametrized. It will work properly as is.",
        " * ",
        " * The Scripted Decision Node needs the following outcomes defined:",
        " * - true",
        " *",
        " * Author: volker.scheuber@forgerock.com",
        " */",
        "(function () {",
        "      outcome = "true";",
        "      ",
        "      var theme = "";",
        "      if (requestParameters.get("themeId")) {",
        "          theme = requestParameters.get("themeId").get(0);",
        "    }",
        "",
        "    // do not change, must be a random identifier",
        "    var anchor = generateNumericToken('xxx');",
        "  ",
        "      var script = "";",
        "    script += "document.getElementById(\\"theme-id-"+anchor+"\\").value = localStorage.getItem('theme-id');";",
        "    script += "console.log('theme-id='+document.getElementById(\\"theme-id-"+anchor+"\\").value);";",
        "      script += "document.getElementById(\\"loginButton_0\\").click();";",
        "",
        "    var fr = JavaImporter(",
        "        org.forgerock.openam.auth.node.api.Action,",
        "          org.forgerock.openam.authentication.callbacks.PollingWaitCallback,",
        "        com.sun.identity.authentication.callbacks.HiddenValueCallback,",
        "        com.sun.identity.authentication.callbacks.ScriptTextOutputCallback",
        "    )",
        "    // no theme set, discover active theme from UI",
        "    if (!theme && callbacks.isEmpty()) {",
        "        action = fr.Action.send(",
        "            new fr.HiddenValueCallback("theme-id-"+anchor, "false"),",
        "            new fr.ScriptTextOutputCallback(script)",
        "        ).build();",
        "    }",
        "      // get active theme from callback",
        "      else if (!theme && callbacks.size() === 2) {",
        "        // did we get the id of the currently active theme?",
        "        if (callbacks.get(0).getValue() !== "theme-id-"+anchor) {",
        "              sharedState.put("themeId", callbacks.get(0).getValue());",
        "        }",
        "    }",
        "      // theme requested in URL, set it and preserve it",
        "      else if (theme && callbacks.isEmpty()) {",
        "          // preserve theme in shared state",
        "          sharedState.put("themeId", theme);",
        "        // set new theme",
        "        var stage = "themeId="+theme;",
        "        action = fr.Action.send(",
        "              new fr.PollingWaitCallback("100", "Please wait ...")",
        "        ).withStage(stage).build();",
        "    }",
        "      else {",
        "        // continue",
        "        action = fr.Action.goTo(outcome).build();",
        "    }",
        "",
        "     /*",
        "      * Generate a token in the desired format. All 'x' characters will be replaced with a random number 0-9.",
        "      * ",
        "      * Example:",
        "      * 'xxxxx' produces '28535'",
        "      * 'xxx-xxx' produces '432-521'",
        "      */",
        "    function generateNumericToken(format) {",
        "        return format.replace(/[x]/g, function(c) {",
        "            var r = Math.random()*10|0;",
        "            var v = r;",
        "            return v.toString(10);",
        "        });",
        "    }",
        "}());",
      ],
    },
    "157298c0-7d31-4059-a95b-eeb08473b7e5": {
      "_id": "157298c0-7d31-4059-a95b-eeb08473b7e5",
      "context": "AUTHENTICATION_CLIENT_SIDE",
      "createdBy": "null",
      "creationDate": 0,
      "default": true,
      "description": "Default global script for client side Device Id (Match) Authentication Module",
      "language": "JAVASCRIPT",
      "lastModifiedBy": "null",
      "lastModifiedDate": 0,
      "name": "Device Id (Match) - Client Side",
      "script": [
        "var fontDetector = (function () {",
        "    /**",
        "     * JavaScript code to detect available availability of a",
        "     * particular font in a browser using JavaScript and CSS.",
        "     *",
        "     * Author : Lalit Patel",
        "     * Website: http://www.lalit.org/lab/javascript-css-font-detect/",
        "     * License: Apache Software License 2.0",
        "     *          http://www.apache.org/licenses/LICENSE-2.0",
        "     * Version: 0.15 (21 Sep 2009)",
        "     *          Changed comparision font to default from sans-default-default,",
        "     *          as in FF3.0 font of child element didn't fallback",
        "     *          to parent element if the font is missing.",
        "     * Version: 0.2 (04 Mar 2012)",
        "     *          Comparing font against all the 3 generic font families ie,",
        "     *          'monospace', 'sans-serif' and 'sans'. If it doesn't match all 3",
        "     *          then that font is 100% not available in the system",
        "     * Version: 0.3 (24 Mar 2012)",
        "     *          Replaced sans with serif in the list of baseFonts",
        "     */",
        "    /*",
        "     * Portions Copyrighted 2013 ForgeRock AS.",
        "     */",
        "    var detector = {}, baseFonts, testString, testSize, h, s, defaultWidth = {}, defaultHeight = {}, index;",
        "",
        "    // a font will be compared against all the three default fonts.",
        "    // and if it doesn't match all 3 then that font is not available.",
        "    baseFonts = ['monospace', 'sans-serif', 'serif'];",
        "",
        "    //we use m or w because these two characters take up the maximum width.",
        "    // And we use a LLi so that the same matching fonts can get separated",
        "    testString = "mmmmmmmmmmlli";",
        "",
        "    //we test using 72px font size, we may use any size. I guess larger the better.",
        "    testSize = '72px';",
        "",
        "    h = document.getElementsByTagName("body")[0];",
        "",
        "    // create a SPAN in the document to get the width of the text we use to test",
        "    s = document.createElement("span");",
        "    s.style.fontSize = testSize;",
        "    s.innerHTML = testString;",
        "    for (index in baseFonts) {",
        "        //get the default width for the three base fonts",
        "        s.style.fontFamily = baseFonts[index];",
        "        h.appendChild(s);",
        "        defaultWidth[baseFonts[index]] = s.offsetWidth; //width for the default font",
        "        defaultHeight[baseFonts[index]] = s.offsetHeight; //height for the defualt font",
        "        h.removeChild(s);",
        "    }",
        "",
        "    detector.detect = function(font) {",
        "        var detected = false, index, matched;",
        "        for (index in baseFonts) {",
        "            s.style.fontFamily = font + ',' + baseFonts[index]; // name of the font along with the base font for fallback.",
        "            h.appendChild(s);",
        "            matched = (s.offsetWidth !== defaultWidth[baseFonts[index]] || s.offsetHeight !== defaultHeight[baseFonts[index]]);",
        "            h.removeChild(s);",
        "            detected = detected || matched;",
        "        }",
        "        return detected;",
        "    };",
        "",
        "    return detector;",
        "}());",
        "/*",
        " * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS HEADER.",
        " *",
        " * Copyright (c) 2009 Sun Microsystems Inc. All Rights Reserved",
        " *",
        " * The contents of this file are subject to the terms",
        " * of the Common Development and Distribution License",
        " * (the License). You may not use this file except in",
        " * compliance with the License.",
        " *",
        " * You can obtain a copy of the License at",
        " * https://opensso.dev.java.net/public/CDDLv1.0.html or",
        " * opensso/legal/CDDLv1.0.txt",
        " * See the License for the specific language governing",
        " * permission and limitations under the License.",
        " *",
        " * When distributing Covered Code, include this CDDL",
        " * Header Notice in each file and include the License file",
        " * at opensso/legal/CDDLv1.0.txt.",
        " * If applicable, add the following below the CDDL Header,",
        " * with the fields enclosed by brackets [] replaced by",
        " * your own identifying information:",
        " * "Portions Copyrighted [year] [name of copyright owner]"",
        " *",
        " */",
        "/*",
        " * Portions Copyrighted 2013 Syntegrity.",
        " * Portions Copyrighted 2013-2014 ForgeRock AS.",
        " */",
        "",
        "var collectScreenInfo = function () {",
        "        var screenInfo = {};",
        "        if (screen) {",
        "            if (screen.width) {",
        "                screenInfo.screenWidth = screen.width;",
        "            }",
        "",
        "            if (screen.height) {",
        "                screenInfo.screenHeight = screen.height;",
        "            }",
        "",
        "            if (screen.pixelDepth) {",
        "                screenInfo.screenColourDepth = screen.pixelDepth;",
        "            }",
        "        } else {",
        "            console.warn("Cannot collect screen information. screen is not defined.");",
        "        }",
        "        return screenInfo;",
        "    },",
        "    collectTimezoneInfo = function () {",
        "        var timezoneInfo =  {}, offset = new Date().getTimezoneOffset();",
        "",
        "        if (offset) {",
        "            timezoneInfo.timezone = offset;",
        "        } else {",
        "            console.warn("Cannot collect timezone information. timezone is not defined.");",
        "        }",
        "",
        "        return timezoneInfo;",
        "    },",
        "    collectBrowserPluginsInfo = function () {",
        "",
        "        if (navigator && navigator.plugins) {",
        "            var pluginsInfo = {}, i, plugins = navigator.plugins;",
        "            pluginsInfo.installedPlugins = "";",
        "",
        "            for (i = 0; i < plugins.length; i++) {",
        "                pluginsInfo.installedPlugins = pluginsInfo.installedPlugins + plugins[i].filename + ";";",
        "            }",
        "",
        "            return pluginsInfo;",
        "        } else {",
        "            console.warn("Cannot collect browser plugin information. navigator.plugins is not defined.");",
        "            return {};",
        "        }",
        "",
        "    },",
        "// Getting geolocation takes some time and is done asynchronously, hence need a callback which is called once geolocation is retrieved.",
        "    collectGeolocationInfo = function (callback) {",
        "        var geolocationInfo = {},",
        "            successCallback = function(position) {",
        "                geolocationInfo.longitude = position.coords.longitude;",
        "                geolocationInfo.latitude = position.coords.latitude;",
        "                callback(geolocationInfo);",
        "            }, errorCallback = function(error) {",
        "                console.warn("Cannot collect geolocation information. " + error.code + ": " + error.message);",
        "                callback(geolocationInfo);",
        "            };",
        "        if (navigator && navigator.geolocation) {",
        "            // NB: If user chooses 'Not now' on Firefox neither callback gets called",
        "            //     https://bugzilla.mozilla.org/show_bug.cgi?id=675533",
        "            navigator.geolocation.getCurrentPosition(successCallback, errorCallback);",
        "        } else {",
        "            console.warn("Cannot collect geolocation information. navigator.geolocation is not defined.");",
        "            callback(geolocationInfo);",
        "        }",
        "    },",
        "    collectBrowserFontsInfo = function () {",
        "        var fontsInfo = {}, i, fontsList = ["cursive","monospace","serif","sans-serif","fantasy","default","Arial","Arial Black",",
        "            "Arial Narrow","Arial Rounded MT Bold","Bookman Old Style","Bradley Hand ITC","Century","Century Gothic",",
        "            "Comic Sans MS","Courier","Courier New","Georgia","Gentium","Impact","King","Lucida Console","Lalit",",
        "            "Modena","Monotype Corsiva","Papyrus","Tahoma","TeX","Times","Times New Roman","Trebuchet MS","Verdana",",
        "            "Verona"];",
        "        fontsInfo.installedFonts = "";",
        "",
        "        for (i = 0; i < fontsList.length; i++) {",
        "            if (fontDetector.detect(fontsList[i])) {",
        "                fontsInfo.installedFonts = fontsInfo.installedFonts + fontsList[i] + ";";",
        "            }",
        "        }",
        "        return fontsInfo;",
        "    },",
        "    devicePrint = {};",
        "",
        "devicePrint.screen = collectScreenInfo();",
        "devicePrint.timezone = collectTimezoneInfo();",
        "devicePrint.plugins = collectBrowserPluginsInfo();",
        "devicePrint.fonts = collectBrowserFontsInfo();",
        "",
        "if (navigator.userAgent) {",
        "    devicePrint.userAgent = navigator.userAgent;",
        "}",
        "if (navigator.appName) {",
        "    devicePrint.appName = navigator.appName;",
        "}",
        "if (navigator.appCodeName) {",
        "    devicePrint.appCodeName = navigator.appCodeName;",
        "}",
        "if (navigator.appVersion) {",
        "    devicePrint.appVersion = navigator.appVersion;",
        "}",
        "if (navigator.appMinorVersion) {",
        "    devicePrint.appMinorVersion = navigator.appMinorVersion;",
        "}",
        "if (navigator.buildID) {",
        "    devicePrint.buildID = navigator.buildID;",
        "}",
        "if (navigator.platform) {",
        "    devicePrint.platform = navigator.platform;",
        "}",
        "if (navigator.cpuClass) {",
        "    devicePrint.cpuClass = navigator.cpuClass;",
        "}",
        "if (navigator.oscpu) {",
        "    devicePrint.oscpu = navigator.oscpu;",
        "}",
        "if (navigator.product) {",
        "    devicePrint.product = navigator.product;",
        "}",
        "if (navigator.productSub) {",
        "    devicePrint.productSub = navigator.productSub;",
        "}",
        "if (navigator.vendor) {",
        "    devicePrint.vendor = navigator.vendor;",
        "}",
        "if (navigator.vendorSub) {",
        "    devicePrint.vendorSub = navigator.vendorSub;",
        "}",
        "if (navigator.language) {",
        "    devicePrint.language = navigator.language;",
        "}",
        "if (navigator.userLanguage) {",
        "    devicePrint.userLanguage = navigator.userLanguage;",
        "}",
        "if (navigator.browserLanguage) {",
        "    devicePrint.browserLanguage = navigator.browserLanguage;",
        "}",
        "if (navigator.systemLanguage) {",
        "    devicePrint.systemLanguage = navigator.systemLanguage;",
        "}",
        "",
        "// Attempt to collect geo-location information and return this with the data collected so far.",
        "// Otherwise, if geo-location fails or takes longer than 30 seconds, auto-submit the data collected so far.",
        "autoSubmitDelay = 30000;",
        "output.value = JSON.stringify(devicePrint);",
        "collectGeolocationInfo(function(geolocationInfo) {",
        "    devicePrint.geolocation = geolocationInfo;",
        "    output.value = JSON.stringify(devicePrint);",
        "    submit();",
        "});",
      ],
    },
    "158e500b-8180-4641-ad48-23577fe9d976": {
      "_id": "158e500b-8180-4641-ad48-23577fe9d976",
      "context": "AUTHENTICATION_TREE_DECISION_NODE",
      "createdBy": "null",
      "creationDate": 0,
      "default": false,
      "description": "null",
      "language": "JAVASCRIPT",
      "lastModifiedBy": "null",
      "lastModifiedDate": 0,
      "name": "Admin_MfaOptIn",
      "script": [
        "/*",
        "This creates the following callbacks:",
        "- TextOutputCallback: Display the step title and description",
        "- ConfirmationCallback: Display a list of buttons for choices",
        "- HiddenValueCallback: Captures the "skip" option, if selected",
        "- ScriptTextOutputCallback: Creates a "Skip for now" link button and positions it below the buttons ",
        "*/",
        "",
        "var token = generateNumericToken('xxx');",
        "var loadingMessage = 'Loading...';",
        "var linkButton = "<button id='skip-link-".concat(token).concat("' class='btn btn-block btn-link' type=submit>Skip for now</button>");",
        "var message = "<h2 class=h2>Set up 2-step verification</h2><div style='margin-bottom:1em'>Protect your account by adding a second step after entering your password to verify it's you signing in.</div>";",
        "var choices = ['Set up'];",
        "var defaultChoice = 0;",
        "var skipValue = 'Skip';",
        "",
        "// This will run recursively in the browser until references can be obtained to key DOM elements, at which point.",
        "// it will customize the DOM.  This is to avoid race conditions with the UI rendering callbacks.",
        "var setupPageScript =",
        "  'var setupPage = function() {'.concat(",
        "  '  var skipInputElem = document.getElementById("skip-input-').concat(token).concat('");').concat(",
        "  '  var messageElem;').concat(",
        "  '  document.getElementsByClassName("callback-component").forEach(').concat(",
        "  '    function (e) {').concat(",
        "  '      var m = e.firstElementChild;').concat(",
        "  '      if (m.firstChild && m.firstChild.nodeName == "#text" && m.firstChild.nodeValue.trim() == "').concat(loadingMessage).concat('") {').concat(",
        "  '        messageElem = m;').concat(",
        "  '      }').concat(",
        "  '    }').concat(",
        "  '  );').concat(",
        "  '  if (!skipInputElem || !messageElem) {').concat(",
        "  '    return setTimeout(setupPage, 50);').concat(",
        "  '  }').concat(",
        "  '  var skipContainer = document.createElement("div");').concat(",
        "  '  skipContainer.style = "width:100%";').concat(",
        "  '  skipContainer.innerHTML = "').concat(linkButton).concat('";').concat(",
        "  '  skipInputElem.parentNode.append(skipContainer);').concat(",
        "  '  messageElem.align = "center";').concat(",
        "  '  messageElem.innerHTML = "').concat(message).concat('";').concat(",
        "  '  var bindSkipLink = function() {').concat(",
        "  '    document.getElementById("skip-link-').concat(token).concat('").onclick = function() {').concat(",
        "  '      skipInputElem.value = "').concat(skipValue).concat('";').concat(",
        "  '      document.getElementById("loginButton_0").click();').concat(",
        "  '      return false;').concat(",
        "  '    };').concat(",
        "  '  };').concat(",
        "  '  setTimeout(bindSkipLink, 100);').concat(",
        "  '};').concat(",
        "  'setupPage();');",
        "",
        "var fr = JavaImporter(",
        "  org.forgerock.openam.auth.node.api.Action,",
        "  javax.security.auth.callback.ConfirmationCallback,",
        "  javax.security.auth.callback.TextOutputCallback,",
        "  com.sun.identity.authentication.callbacks.HiddenValueCallback,",
        "  com.sun.identity.authentication.callbacks.ScriptTextOutputCallback",
        ")",
        "",
        "with (fr) {",
        "  if (callbacks.isEmpty()) {",
        "    action = Action.send(",
        "      new TextOutputCallback(",
        "          TextOutputCallback.INFORMATION,",
        "          loadingMessage",
        "      ),",
        "      new ConfirmationCallback(",
        "          ConfirmationCallback.INFORMATION,",
        "          choices,",
        "          defaultChoice",
        "      ),",
        "      new HiddenValueCallback('skip-input-'.concat(token), 'false'),",
        "      new ScriptTextOutputCallback(setupPageScript)",
        "    ).build()",
        "  } else {",
        "    if (callbacks.get(2).getValue() == skipValue) {",
        "      action = Action.goTo(skipValue).build();",
        "    } else {",
        "      action = Action.goTo(choices[callbacks.get(1).getSelectedIndex()]).build();",
        "    }",
        "  }",
        "}",
        "",
        " /*",
        "  * Generate a token in the desired format. All 'x' characters will be replaced with a random number 0-9.",
        "  * ",
        "  * Example:",
        "  * 'xxxxx' produces '28535'",
        "  * 'xxx-xxx' produces '432-521'",
        "  */",
        "function generateNumericToken(format) {",
        "  return format.replace(/[x]/g, function(c) {",
        "    var r = Math.random()*10|0;",
        "    var v = r;",
        "    return v.toString(10);",
        "  });",
        "}",
      ],
    },
    "164fe425-01e7-4b0b-9f60-fb41f6bf362b": {
      "_id": "164fe425-01e7-4b0b-9f60-fb41f6bf362b",
      "context": "AUTHENTICATION_TREE_DECISION_NODE",
      "createdBy": "null",
      "creationDate": 0,
      "default": false,
      "description": "FRAAS-7955 Display sharedState and transientState.",
      "language": "JAVASCRIPT",
      "lastModifiedBy": "null",
      "lastModifiedDate": 0,
      "name": "FRAAS-7955 Display States",
      "script": [
        "/* debug",
        " *",
        " * Author: volker.scheuber@forgerock.com",
        " * ",
        " * Display sharedState and transientState.",
        " * ",
        " * This script does not need to be parametrized. It will work properly as is.",
        " * ",
        " * The Scripted Decision Node needs the following outcomes defined:",
        " * - true",
        " */",
        "var output = true;",
        "",
        "var anchor = "anchor-".concat(generateNumericToken('xxx'));",
        "var halign = "left";",
        "var message = "<h4>Current State Values</h4>".concat(",
        "    "<p><b>Shared State</b>:<br/>").concat(",
        "      sharedState.toString()).concat("</p>").concat(",
        "    "<p><b>Transient State</b>:<br/>").concat(",
        "      transientState.toString()).concat("</p>")",
        "var script = "Array.prototype.slice.call(\\n".concat(",
        "  "document.getElementsByClassName('callback-component')).forEach(\\n").concat(",
        "  "function (e) {\\n").concat(",
        "  "  var message = e.firstElementChild;\\n").concat(",
        "  "  if (message.firstChild && message.firstChild.nodeName == '#text' && message.firstChild.nodeValue.trim() == '").concat(anchor).concat("') {\\n").concat(",
        "  "    message.className = \\"\\";\\n").concat(",
        "  "    message.style = \\"text-align: left; inline-size: 430px; overflow-wrap: break-word;\\";\\n").concat(",
        "  "    message.align = \\"").concat(halign).concat("\\";\\n").concat(",
        "  "    message.innerHTML = '").concat(message).concat("';\\n").concat(",
        "  "  }\\n").concat(",
        "  "})")",
        "var fr = JavaImporter(",
        "    org.forgerock.openam.auth.node.api.Action,",
        "    javax.security.auth.callback.TextOutputCallback,",
        "    com.sun.identity.authentication.callbacks.ScriptTextOutputCallback",
        ")",
        "if (message.length && callbacks.isEmpty()) {",
        "    action = fr.Action.send(",
        "        new fr.TextOutputCallback(",
        "            fr.TextOutputCallback.INFORMATION,",
        "            anchor",
        "        ),",
        "        new fr.ScriptTextOutputCallback(script)",
        "    ).build()",
        "}",
        "else {",
        "  action = fr.Action.goTo("true").build();",
        "}",
        "",
        " /*",
        "  * Generate a token in the desired format. All 'x' characters will be replaced with a random number 0-9.",
        "  * ",
        "  * Example:",
        "  * 'xxxxx' produces '28535'",
        "  * 'xxx-xxx' produces '432-521'",
        "  */",
        "function generateNumericToken(format) {",
        "    return format.replace(/[x]/g, function(c) {",
        "        var r = Math.random()*10|0;",
        "        var v = r;",
        "        return v.toString(10);",
        "    });",
        "}",
      ],
    },
    "169150da-0bd1-4866-8095-eae0bbc269e4": {
      "_id": "169150da-0bd1-4866-8095-eae0bbc269e4",
      "context": "AUTHENTICATION_TREE_DECISION_NODE",
      "createdBy": "null",
      "creationDate": 0,
      "default": false,
      "description": "Collect all the configuration items required for the Message Node to function properly.",
      "language": "JAVASCRIPT",
      "lastModifiedBy": "null",
      "lastModifiedDate": 0,
      "name": "Collect Message Node Config",
      "script": [
        "/* Collect Message Node Config",
        " * ",
        " * Collect all the configuration items required for the Message Node to function properly.",
        " * ",
        " * This script does not need to be parametrized. It will work properly as is.",
        " * ",
        " * The Scripted Decision Node needs the following outcomes defined:",
        " * - true",
        " *",
        " * Author: volker.scheuber@forgerock.com",
        " */",
        "(function () {",
        "    outcome = "true";",
        "      var config = {",
        "        "message": {"en": "I believe I can fly!"},",
        "        "messageYes": {"en": "Glorious!"},",
        "        "messageNo": {"en": "Inconceivable!"}",
        "    };",
        "      var script = "";",
        "    script += "Array.prototype.slice.call(";",
        "    script += "    document.getElementsByTagName('input')";",
        "    script += ").forEach(";",
        "    script += "    function (input,i) {";",
        "    script += "        console.log('input '+i);"",
        "    script += "        var config = JSON.parse('"+JSON.stringify(config)+"');";",
        "    script += "        var keys = Object.keys(config);";",
        "    script += "        if (input.type === 'text') {";",
        "    script += "            input.setAttribute('value', config[keys[i]].en);";",
        "    script += "            input.dispatchEvent(new KeyboardEvent( 'input' , {'key':'Enter'} ));";",
        "    script += "        }";",
        "    script += "    }";",
        "    script += ");";",
        "    var fr = JavaImporter(",
        "        org.forgerock.openam.auth.node.api.Action,",
        "          javax.security.auth.callback.NameCallback,",
        "        com.sun.identity.authentication.callbacks.ScriptTextOutputCallback",
        "    )",
        "    if (callbacks.isEmpty()) {",
        "        action = fr.Action.send(",
        "            new fr.NameCallback("message", config.message.en),",
        "            new fr.NameCallback("messageYes", config.messageYes.en),",
        "            new fr.NameCallback("messageNo", config.messageNo.en),",
        "              new fr.ScriptTextOutputCallback(script)",
        "        ).build();",
        "    }",
        "    else {",
        "          config[callbacks.get(0).getPrompt()].en = callbacks.get(0).getName();",
        "          config[callbacks.get(1).getPrompt()].en = callbacks.get(1).getName();",
        "          config[callbacks.get(2).getPrompt()].en = callbacks.get(2).getName();",
        "          nodeState.putShared("nodeConfig", config);",
        "        action = fr.Action.goTo(outcome).build();",
        "    }",
        "}());",
      ],
    },
    "181817ea-b8dc-4b3b-a366-99239f6f274d": {
      "_id": "181817ea-b8dc-4b3b-a366-99239f6f274d",
      "context": "AUTHENTICATION_TREE_DECISION_NODE",
      "createdBy": "null",
      "creationDate": 0,
      "default": false,
      "description": "Connect caller to a real person.",
      "language": "JAVASCRIPT",
      "lastModifiedBy": "null",
      "lastModifiedDate": 0,
      "name": "Twilio IVR: Connect Caller",
      "script": [
        "/* Twilio IVR: Connect Caller",
        " * ",
        " * The Scripted Decision Node needs the following outcomes defined:",
        " * - true",
        " * ",
        " * Depending on the amount of data collected through callbacks and how many of the callParams",
        " * you activate below, you will need to change your authentication session from JWT to CTS or",
        " * Memory.",
        " */",
        "logger.warning("Twilio IVR: Connect Caller: start");",
        "outcome = "true";",
        "",
        "/* Begin Configuration",
        " */",
        "",
        "// Message",
        "var message = "I'm connecting you to a real person now.";",
        "",
        "// TwiML to send back to Twilio",
        "var twiml = ["<Dial action=\\"", "https://ig.mytestrun.com/ivr/idc", "\\">+18014735451</Dial>"].join("");",
        "",
        "/* End Configuration",
        " */",
        "",
        "var fr = JavaImporter(",
        "      org.forgerock.openam.auth.node.api,",
        "      javax.security.auth.callback.TextOutputCallback,",
        "      com.sun.identity.authentication.callbacks.ScriptTextOutputCallback",
        ");",
        "  ",
        "with (fr) {",
        "      if (callbacks.isEmpty()) {",
        "        var output = new TextOutputCallback(TextOutputCallback.INFORMATION, message);",
        "        var script = new ScriptTextOutputCallback(twiml);",
        "        action = Action.send(output, script).build();",
        "      } ",
        "      else {",
        "        logger.warning("Twilio IVR: Connect Caller: finish [outcome=".concat(outcome).concat("]"));",
        "        action = Action.goTo(outcome).build();",
        "      }",
        "}",
      ],
    },
    "199405e4-050e-4f2a-87d1-d9125f74a8df": {
      "_id": "199405e4-050e-4f2a-87d1-d9125f74a8df",
      "context": "AUTHENTICATION_TREE_DECISION_NODE",
      "createdBy": "null",
      "creationDate": 0,
      "default": false,
      "description": "Reset theme to what's preserved in shared state variable "theme-id" or to default theme.",
      "language": "JAVASCRIPT",
      "lastModifiedBy": "null",
      "lastModifiedDate": 0,
      "name": "Reset Theme",
      "script": [
        "/* Reset Theme",
        " * ",
        " * Reset theme to what's preserved in shared state variable "themeId" or to default theme.",
        " * ",
        " * This script needs to be parametrized!",
        " * ",
        " * The Scripted Decision Node needs the following outcomes defined:",
        " * - true",
        " *",
        " * Author: volker.scheuber@forgerock.com",
        " */",
        "(function () {",
        "      /* Begin Script Configuration */",
        "      var defaultTheme = "Expanse";",
        "      /* End Script Configuration */",
        "      ",
        "      outcome = "true";",
        "      ",
        "      var theme = defaultTheme;",
        "      if (sharedState.get("themeId") && ""+sharedState.get("themeId") !== "") {",
        "          theme = sharedState.get("themeId");",
        "    }",
        "",
        "    var fr = JavaImporter(",
        "        org.forgerock.openam.auth.node.api.Action,",
        "        org.forgerock.openam.authentication.callbacks.PollingWaitCallback",
        "    )",
        "    if (callbacks.isEmpty()) {",
        "        var stage = "themeId="+theme;",
        "        action = fr.Action.send(",
        "              new fr.PollingWaitCallback("100", "Please wait ...")",
        "        ).withStage(stage).build();",
        "    } else {",
        "          action = fr.Action.goTo(outcome).build();",
        "    }",
        "}());",
      ],
    },
    "1acc5535-13e2-4ed8-83e1-f4fefd86d243": {
      "_id": "1acc5535-13e2-4ed8-83e1-f4fefd86d243",
      "context": "AUTHENTICATION_TREE_DECISION_NODE",
      "createdBy": "null",
      "creationDate": 0,
      "default": false,
      "description": "Readiness probe response",
      "language": "JAVASCRIPT",
      "lastModifiedBy": "null",
      "lastModifiedDate": 0,
      "name": "Ready Response",
      "script": [
        "/* Ready Response",
        " *",
        " * Author: volker.scheuber@forgerock.com",
        " * ",
        " * Return READY in a TextOutputCallback indicating that the journey layer is operational.",
        " * ",
        " * This script does not need to be parametrized. It will work properly as is.",
        " * ",
        " * The Scripted Decision Node needs the following outcomes defined:",
        " * - true",
        " */",
        "outcome = "true";",
        "var fr = JavaImporter(",
        "    org.forgerock.openam.auth.node.api.Action,",
        "    javax.security.auth.callback.TextOutputCallback",
        ")",
        "if (callbacks.isEmpty()) {",
        "    action = fr.Action.send(",
        "        new fr.TextOutputCallback(",
        "            fr.TextOutputCallback.INFORMATION,",
        "            "READY"",
        "        )",
        "    ).build()",
        "}",
        "else {",
        "  action = fr.Action.goTo(outcome).build();",
        "}",
      ],
    },
    "1c0c73e8-2be1-41ce-b042-3c39694346b5": {
      "_id": "1c0c73e8-2be1-41ce-b042-3c39694346b5",
      "context": "AUTHENTICATION_TREE_DECISION_NODE",
      "createdBy": "null",
      "creationDate": 0,
      "default": false,
      "description": "Verify unknown caller by account number",
      "language": "JAVASCRIPT",
      "lastModifiedBy": "null",
      "lastModifiedDate": 0,
      "name": "Twilio IVR: Verify Unknown Caller",
      "script": [
        "/* Twilio IVR: Verify Unknown Caller",
        " * ",
        " * The Scripted Decision Node needs the following outcomes defined:",
        " * - true",
        " * ",
        " * Depending on the amount of data collected through callbacks and how many of the callParams",
        " * you activate below, you will need to change your authentication session from JWT to CTS or",
        " * Memory.",
        " */",
        "logger.warning("Twilio IVR: Verify Unknown Caller: start");",
        "outcome = "true";",
        "",
        "/* Begin Configuration",
        " */",
        "",
        "// Build out the verification prompt",
        "var prompt = "To lookup your account, please enter or say your account number.";",
        "",
        "/* End Configuration",
        " */",
        "",
        "var fr = JavaImporter(",
        "      org.forgerock.openam.auth.node.api,",
        "      javax.security.auth.callback.TextInputCallback",
        ");",
        "  ",
        "with (fr) {",
        "      if (callbacks.isEmpty()) {",
        "        var input = new TextInputCallback(prompt);",
        "        action = Action.send(input).build();",
        "      } ",
        "      else {",
        "          var answer = new String(callbacks.get(0).getText()).replace(/[^0-9]/g, "");",
        "        logger.warning("Twilio IVR: Verify Unknown Caller: callbacks received: answer=".concat(answer));",
        "          setSharedObjectAttribute("frIndexedInteger5", answer);",
        "        logger.warning("Twilio IVR: Verify Unknown Caller: finish [outcome=".concat(outcome).concat("]"));",
        "        action = Action.goTo(outcome).build();",
        "      }",
        "}",
        "",
        "/*",
        " * Store attributes in shared state for use with the Create/Patch Object nodes.",
        " */",
        "function setSharedObjectAttribute(name, value) {",
        "       var storage = sharedState.get("objectAttributes");",
        "    if (storage && value) {",
        "          if (storage.put) {",
        "              storage.put(name, value);",
        "        }",
        "          else {",
        "              storage[name] = value;",
        "        }",
        "    }",
        "    else if (value) {",
        "        sharedState.put("objectAttributes", JSON.parse("{\\""+name+"\\":\\""+value+"\\"}"));",
        "    }",
        "}",
      ],
    },
    "1d475815-72cb-42eb-aafd-4026989d28a7": {
      "_id": "1d475815-72cb-42eb-aafd-4026989d28a7",
      "context": "SOCIAL_IDP_PROFILE_TRANSFORMATION",
      "createdBy": "null",
      "creationDate": 0,
      "default": true,
      "description": "Default global script for Social Identity Provider Profile Transformation",
      "language": "GROOVY",
      "lastModifiedBy": "null",
      "lastModifiedDate": 0,
      "name": "Social Identity Provider Profile Transformation Script",
      "script": [
        "/*",
        " * Copyright 2020 ForgeRock AS. All Rights Reserved",
        " *",
        " * Use of this code requires a commercial software license with ForgeRock AS.",
        " * or with one of its affiliates. All use shall be exclusively subject",
        " * to such license between the licensee and ForgeRock AS.",
        " */",
        "",
        "/* Default Social Identity Provider Profile Transformation script to use as a template for new scripts */",
      ],
    },
    "1e8175a2-6114-415f-9b72-9fe15bdf3661": {
      "_id": "1e8175a2-6114-415f-9b72-9fe15bdf3661",
      "context": "AUTHENTICATION_TREE_DECISION_NODE",
      "createdBy": "null",
      "creationDate": 0,
      "default": false,
      "description": "null",
      "language": "JAVASCRIPT",
      "lastModifiedBy": "null",
      "lastModifiedDate": 0,
      "name": "Admin_IsFederationEnforcedForUser",
      "script": [
        "/*",
        " * Copyright 2023 ForgeRock AS. All Rights Reserved",
        " *",
        " * Use of this code requires a commercial software license with ForgeRock AS.",
        " * or with one of its affiliates. All use shall be exclusively subject",
        " * to such license between the licensee and ForgeRock AS.",
        " */",
        "",
        "var fr = new JavaImporter(",
        "  org.forgerock.openam.auth.nodes,",
        "  org.forgerock.guice.core",
        ");",
        "",
        "with (fr) {",
        "  var enforcement = 'none';",
        "",
        "  function isSuperAdmin() {",
        "    var uuid = sharedState.get('_id');",
        "    var realm = sharedState.get('realm');",
        "    var identityProvider = InjectorHolder.getInstance(IdentityProvider);",
        "    var identity = identityProvider.getIdentity(uuid, realm);",
        "    var groups = identity.getAttribute('fr-attr-group').toArray();",
        "    for (var i = 0; i < groups.length; i++) {",
        "      if (groups[i] == 'super-admins') {",
        "        return true;",
        "      }",
        "    }",
        "    return false;",
        "  }",
        "",
        "  try {",
        "    switch (enforcement) {",
        "      case 'none':",
        "        outcome = 'False';",
        "        break;",
        "      case 'all':",
        "        outcome = 'True';",
        "        break;",
        "      default:",
        "        outcome = isSuperAdmin() ? 'False' : 'True';",
        "        break;",
        "    }",
        "  } catch (e) {",
        "    logger.error('Failed to determine if federation is enforced for user: {}', e);",
        "    outcome = 'Error';",
        "  }",
        "}",
      ],
    },
    "1f389a3d-21cf-417c-a6d3-42ea620071f0": {
      "_id": "1f389a3d-21cf-417c-a6d3-42ea620071f0",
      "context": "OIDC_CLAIMS",
      "createdBy": "null",
      "creationDate": 0,
      "default": true,
      "description": "Internal OIDC Claims script",
      "language": "JAVASCRIPT",
      "lastModifiedBy": "null",
      "lastModifiedDate": 0,
      "name": "ForgeRock Internal: OIDC Claims Script",
      "script": [
        "/*",
        " * Copyright 2014-2023 ForgeRock AS. All Rights Reserved",
        " *",
        " * Use of this code requires a commercial software license with ForgeRock AS",
        " * or with one of its affiliates. All use shall be exclusively subject",
        " * to such license between the licensee and ForgeRock AS.",
        " */",
        "",
        "/*",
        " * This script computes claim values returned in ID tokens and/or at the UserInfo Endpoint.",
        " * The claim values are computed for:",
        " * the claims derived from the requested scopes,",
        " * the claims provided by the authorization server,",
        " * and the claims requested by the client via the claims parameter.",
        " *",
        " * In the CONFIGURATION AND CUSTOMIZATION section, you can",
        " * define the scope-to-claims mapping, and",
        " * assign to each claim a resolver function that will compute the claim value.",
        " *",
        " * Defined variables (class references are provided below):",
        " * scopes - Set<String> (6).",
        " *          Always present, the requested scopes.",
        " * claims - Map<String, Object> (5).",
        " *          Always present, default server provided claims.",
        " * claimObjects - List<Claim> (7, 2).",
        " *                Always present, the default server provided claims.",
        " * requestedClaims - Map<String, Set<String>> (5).",
        " *                   Always present, not empty if the request contains the claims parameter and the server has enabled",
        " *                   claims_parameter_supported. A map of the requested claims to possible values, otherwise empty;",
        " *                   requested claims with no requested values will have a key but no value in the map. A key with",
        " *                   a single value in its Set (6) indicates that this is the only value that should be returned.",
        " * requestedTypedClaims - List<Claim> (7, 2).",
        " *                        Always present, the requested claims.",
        " *                        Requested claims with no requested values will have a claim with no values.",
        " *                        A claim with a single value indicates this is the only value that should be returned.",
        " * claimsLocales - List<String> (7).",
        " *                 The values from the 'claims_locales' parameter.",
        " *                 See https://openid.net/specs/openid-connect-core-1_0.html#ClaimsLanguagesAndScripts for the OIDC specification details.",
        " * requestProperties - Unmodifiable Map (5).",
        " *                     Always present, contains a map of request properties:",
        " *                     requestUri - The request URI.",
        " *                     realm - The realm that the request relates to.",
        " *                     requestParams - A map of the request params and/or posted data.",
        " *                                     Each value is a list of one or more properties.",
        " *                                     Please note that these should be handled in accordance with OWASP best practices:",
        " *                                     https://owasp.org/www-community/vulnerabilities/Unsafe_use_of_Reflection.",
        " * clientProperties - Unmodifiable Map (5).",
        " *                    Present if the client specified in the request was identified, contains a map of client properties:",
        " *                    clientId - The client's URI for the request locale.",
        " *                    allowedGrantTypes - List of the allowed grant types (org.forgerock.oauth2.core.GrantType) for the client.",
        " *                    allowedResponseTypes - List of the allowed response types for the client.",
        " *                    allowedScopes - List of the allowed scopes for the client.",
        " *                    customProperties - A map of the custom properties of the client.",
        " *                                       Lists or maps will be included as sub-maps; for example:",
        " *                                       customMap[Key1]=Value1 will be returned as customMap -> Key1 -> Value1.",
        " *                                       To add custom properties to a client, update the Custom Properties field",
        " *                                       in AM Console > Realm Name > Applications > OAuth 2.0 > Clients > Client ID > Advanced.",
        " * identity - AMIdentity (3).",
        " *            Always present, the identity of the resource owner.",
        " * session - SSOToken (4).",
        " *           Present if the request contains the session cookie, the user's session object.",
        " * scriptName - String (primitive).",
        " *              Always present, the display name of the script.",
        " * logger - Always present, the "OAuth2Provider" debug logger instance:",
        " *          https://backstage.forgerock.com/docs/am/7/scripting-guide/scripting-api-global-logger.html#scripting-api-global-logger.",
        " *          Corresponding files will be prefixed with: scripts.OIDC_CLAIMS.",
        " * httpClient - HTTP Client (8).",
        " *              Always present, the HTTP Client instance:",
        " *              https://backstage.forgerock.com/docs/am/7/scripting-guide/scripting-api-global-http-client.html#scripting-api-global-http-client.",
        " *              In order to use the client, you may need to add",
        " *              org.forgerock.http.Client,",
        " *              org.forgerock.http.protocol.*,",
        " *              and org.forgerock.util.promise.PromiseImpl",
        " *              to the allowed Java classes in the scripting engine configuration, as described in:",
        " *              https://backstage.forgerock.com/docs/am/7/scripting-guide/script-engine-security.html",
        " *",
        " * Return - a new UserInfoClaims(Map<String, Object> values, Map<String, List<String>> compositeScopes) (1) object.",
        " *          The result of the last statement in the script is returned to the server.",
        " *          Currently, the Immediately Invoked Function Expression (also known as Self-Executing Anonymous Function)",
        " *          is the last (and only) statement in this script, and its return value will become the script result.",
        " *          Do not use "return variable" statement outside of a function definition.",
        " *          See RESULTS section for additional details.",
        " *",
        " * Class reference:",
        " * (1) UserInfoClaims - https://backstage.forgerock.com/docs/am/7/apidocs/org/forgerock/oauth2/core/UserInfoClaims.html.",
        " * (2) Claim - https://backstage.forgerock.com/docs/am/7/apidocs/org/forgerock/openidconnect/Claim.html).",
        " *         An instance of org.forgerock.openidconnect.Claim has methods to access",
        " *         the claim name, requested values, locale, and whether the claim is essential.",
        " * (3) AMIdentity - https://backstage.forgerock.com/docs/am/7/apidocs/com/sun/identity/idm/AMIdentity.html.",
        " * (4) SSOToken - https://backstage.forgerock.com/docs/am/7/apidocs/com/iplanet/sso/SSOToken.html.",
        " * (5) Map - https://docs.oracle.com/en/java/javase/11/docs/api/java.base/java/util/HashMap.html,",
        " *           or https://docs.oracle.com/en/java/javase/11/docs/api/java.base/java/util/LinkedHashMap.html.",
        " * (6) Set - https://docs.oracle.com/en/java/javase/11/docs/api/java.base/java/util/HashSet.html.",
        " * (7) List - https://docs.oracle.com/en/java/javase/11/docs/api/java.base/java/util/ArrayList.html.",
        " * (8) Client - https://backstage.forgerock.com/docs/am/7/apidocs/org/forgerock/http/Client.html.",
        "*/",
        "",
        "(function () {",
        "    // SETUP",
        "",
        "    /**",
        "     * Claim processing utilities.",
        "     * An object that contains reusable functions for processing claims.",
        "     * @see CLAIM PROCESSING UTILITIES section for details.",
        "     */",
        "    var utils = getUtils();",
        "",
        "    // CONFIGURATION AND CUSTOMIZATION",
        "",
        "    /**",
        "     * OAuth 2.0 scope values (scopes) can be used by the Client to request OIDC claims.",
        "     *",
        "     * Call this configuration method, and pass in as the first argument",
        "     * an object that maps a scope value to an array of claim names",
        "     * to specify which claims need to be processed and returned for the requested scopes.",
        "     * @see {@link https://openid.net/specs/openid-connect-core-1_0.html#ScopeClaims}",
        "     * for the scope values that could be used to request claims as defined in the OIDC specification.",
        "     *",
        "     * Below, find a default configuration that is expected to work in the current environment.",
        "     *",
        "     * CUSTOMIZATION",
        "     * You can choose the claim names returned for a scope.",
        "     */",
        "    utils.setScopeClaimsMap({",
        "        profile: [",
        "            'name',",
        "            'family_name',",
        "            'given_name',",
        "            'zoneinfo',",
        "            'locale'",
        "        ],",
        "        email: ['email'],",
        "        address: ['address'],",
        "        phone: ['phone_number']",
        "    });",
        "",
        "    /**",
        "     * In this script, each claim",
        "     * derived from the requested scopes,",
        "     * provided by the authorization server, and",
        "     * requested by the client via the claims parameter",
        "     * will be processed by a function associated with the claim name.",
        "     *",
        "     * Call this configuration method, and pass in as the first argument",
        "     * an object that maps a claim name to a resolver function,",
        "     * which will be automatically executed for each claim processed by the script.",
        "     *",
        "     * The claim resolver function will receive the requested claim information",
        "     * in an instance of org.forgerock.openidconnect.Claim as the first argument.",
        "     * @see {@link https://backstage.forgerock.com/docs/am/7/apidocs/org/forgerock/openidconnect/Claim.html}",
        "     * for details on the Claim class.",
        "     *",
        "     * If the claim resolver function returns a value,",
        "     * other than undefined or null,",
        "     * the claim will be included in the script's results.",
        "     *",
        "     * The Claim instance provides methods to check",
        "     * what the name of the claim is,",
        "     * which values the claim request contains,",
        "     * whether the claim is essential, and",
        "     * which locale the claim is associated with.",
        "     * The resolver function can consider this information when computing and returning the claim value.",
        "     *",
        "     * Below, find a default configuration that is expected to work in the current environment.",
        "     * A reusable function, utils.getUserProfileClaimResolver(String attribute-name),",
        "     * is called to return a claim resolver function based on a user profile attribute.",
        "     * @see CLAIM RESOLVERS section for the implementation details and examples.",
        "     * For the address claim, an example of a claim resolver that uses another claim resolver is provided.",
        "     *",
        "     * CUSTOMIZATION",
        "     * You can reuse the predefined utils methods with your custom arguments.",
        "     * You can also specify a custom resolver function for a claim name,",
        "     * that will compute and return the claim value—as shown in the commented out example below.",
        "     */",
        "    utils.setClaimResolvers({",
        "        /*",
        "        // An example of a simple claim resolver function that is defined for a claim",
        "        // directly in the configuration object:",
        "        custom-claim-name: function (requestedClaim) {",
        "            // In this case, initially, the claim value comes straight from a user profile attribute value:",
        "            var claimValue = identity.getAttribute('custom-attribute-name').toArray()[0]",
        "",
        "            // Optionally, provide additional logic for processing (filtering, formatting, etc.) the claim value.",
        "            // You can use:",
        "            // requestedClaim.getName()",
        "            // requestedClaim.getValues()",
        "            // requestedClaim.getLocale()",
        "            // requestedClaim.isEssential()",
        "",
        "            return claimValue",
        "        },",
        "        */",
        "        /**",
        "         * The use of utils.getUserProfileClaimResolver shows how",
        "         * an argument passed to a function that returns a claim resolver",
        "         * becomes available to the resolver function (via its lexical context).",
        "         */",
        "        name: utils.getUserProfileClaimResolver('cn'),",
        "        family_name: utils.getUserProfileClaimResolver('sn'),",
        "        given_name: utils.getUserProfileClaimResolver('givenname'),",
        "        zoneinfo: utils.getUserProfileClaimResolver('preferredtimezone'),",
        "        locale: utils.getUserProfileClaimResolver('preferredlocale'),",
        "        email: utils.getUserProfileClaimResolver('mail'),",
        "        address: utils.getAddressClaimResolver(",
        "            /**",
        "             * The passed in user profile claim resolver function",
        "             * can be used by the address claim resolver function",
        "             * to obtain the claim value to be formatted as per the OIDC specification:",
        "             * @see https://openid.net/specs/openid-connect-core-1_0.html#AddressClaim.",
        "             */",
        "            utils.getUserProfileClaimResolver('postaladdress')",
        "        ),",
        "        phone_number: utils.getUserProfileClaimResolver('telephonenumber')",
        "    });",
        "",
        "    // CLAIM PROCESSING UTILITIES",
        "",
        "    /**",
        "     * @returns {object} An object that contains reusable claim processing utilities.",
        "     * @see PUBLIC METHODS section and the return statement for the list of exported functions.",
        "     */",
        "    function getUtils () {",
        "        // IMPORT JAVA",
        "",
        "        /**",
        "         * Provides Java scripting functionality.",
        "         * @see {@link https://developer.mozilla.org/en-US/docs/Mozilla/Projects/Rhino/Scripting_Java#javaimporter_constructor}.",
        "         */",
        "        var frJava = JavaImporter(",
        "            org.forgerock.oauth2.core.exceptions.InvalidRequestException,",
        "            org.forgerock.oauth2.core.UserInfoClaims,",
        "            org.forgerock.openidconnect.Claim,",
        "",
        "            java.util.LinkedHashMap,",
        "            java.util.ArrayList",
        "        );",
        "",
        "        // SET UP CONFIGURATION",
        "",
        "        /**",
        "         * Placeholder for a configuration option that contains",
        "         * an object that maps the supported scope values (scopes)",
        "         * and the corresponding claim names for each scope value.",
        "         */",
        "        var scopeClaimsMap;",
        "",
        "        /**",
        "         * Placeholder for a configuration option that contains",
        "         * an object that maps the supported claim names",
        "         * and the resolver functions returning the claim value.",
        "         */",
        "        var claimResolvers;",
        "",
        "        /**",
        "         * A (public) method that accepts an object that maps the supported scopes and the corresponding claim names,",
        "         * and assigns it to a (private) variable that serves as a configuration option.",
        "         * @param {object} params - An object that maps each supported scope value to an array of claim names,",
        "         * in order to specify which claims need to be processed for the requested scopes.",
        "         * @see {@link https://openid.net/specs/openid-connect-core-1_0.html#ScopeClaims} for details.",
        "         * @param {string[]} [params.profile] - An array of claim names to be returned if the profile scope is requested.",
        "         * @param {string[]} [params.email] - An array of claim names to be returned if the email scope is requested.",
        "         * @param {string[]} [params.address] - An array of claim names to be returned if the address scope is requested.",
        "         * @param {string[]} [params.phone] - An array of claim names to be returned if the phone scope is requested.",
        "         * @returns {undefined}",
        "         */",
        "        function setScopeClaimsMap(params) {",
        "            scopeClaimsMap = params;",
        "        }",
        "",
        "        /**",
        "         * A (public) method that accepts an object that maps the supported claim names",
        "         * and the resolver functions returning the claim value,",
        "         * and assigns it to a (private) variable that serves as a configuration option.",
        "         * @param {object} params - An object that maps",
        "         * each supported claim name to a function that computes and returns the claim value.",
        "         */",
        "        function setClaimResolvers(params) {",
        "            claimResolvers = params;",
        "        }",
        "",
        "        // CLAIM RESOLVERS",
        "",
        "        /**",
        "         * Claim resolvers are functions that return a claim value.",
        "         * @param {*}",
        "         * @returns {*}",
        "         */",
        "",
        "        /**",
        "         * Defines a claim resolver based on a user profile attribute.",
        "         * @param {string} attributeName - Name of the user profile attribute.",
        "         * @returns {function} A function that will determine the claim value",
        "         * based on the user profile attribute and the (requested) claim properties.",
        "         */",
        "        function getUserProfileClaimResolver (attributeName) {",
        "            /**",
        "             * Resolves a claim with a user profile attribute value.",
        "             * Returns undefined if the identity attribute is not populated,",
        "             * OR if the claim has requested values that do not contain the identity attribute value.",
        "             * ATTENTION: the aforementioned comparison is case-sensitive.",
        "             * @param {org.forgerock.openidconnect.Claim} claim",
        "             * An object that provides methods to obtain information/requirements associated with a claim.",
        "             * @see {@link https://backstage.forgerock.com/docs/am/7/apidocs/org/forgerock/openidconnect/Claim.html} for details.",
        "             * @returns {string|HashSet|undefined}",
        "             */",
        "            function resolveClaim(claim) {",
        "                var userProfileValue;",
        "",
        "                if (identity) {",
        "                    userProfileValue = getClaimValueFromSet(claim, identity.getAttribute(attributeName));",
        "",
        "                    if (userProfileValue && !userProfileValue.isEmpty()) {",
        "                        if (!claim.getValues() || claim.getValues().isEmpty() || claim.getValues().contains(userProfileValue)) {",
        "                            return userProfileValue;",
        "                        }",
        "                    }",
        "                }",
        "            }",
        "",
        "            return resolveClaim;",
        "        }",
        "",
        "        /**",
        "         * Returns an address claim resolver based on a claim value obtained with another claim resolver.",
        "         * @param {function} resolveClaim - A function that returns a claim value.",
        "         * @returns {function} A function that will accept a claim as an argument,",
        "         * run the claim resolver function for the claim and obtain the claim value,",
        "         * and apply additional formatting to the value before returning it.",
        "         */",
        "        function getAddressClaimResolver (resolveClaim) {",
        "            /**",
        "             * Creates an address claim object from a value returned by a claim resolver,",
        "             * and returns the address claim object as the claim value.",
        "             * @see {@link https://openid.net/specs/openid-connect-core-1_0.html#AddressClaim}.",
        "             * The claim value is obtained with a claim resolving function available from the closure.",
        "             * @param {org.forgerock.openidconnect.Claim} claim",
        "             * An object that provides methods to obtain information/requirements associated with a claim.",
        "             * @see {@link https://backstage.forgerock.com/docs/am/7/apidocs/org/forgerock/openidconnect/Claim.html} for details.",
        "             * @returns {java.util.LinkedHashMap|undefined} The address claim object created from a claim value.",
        "             */",
        "            function resolveAddressClaim(claim) {",
        "                var claimValue = resolveClaim(claim);",
        "                var addressObject;",
        "",
        "                if (isClaimValueValid(claimValue)) {",
        "                    addressObject = new frJava.LinkedHashMap();",
        "",
        "                    addressObject.put('formatted', claimValue);",
        "",
        "                    return addressObject;",
        "                }",
        "            }",
        "",
        "            return resolveAddressClaim;",
        "        }",
        "",
        "        /**",
        "         * Returns an essential claim resolver based on a claim value obtained with another claim resolver.",
        "         * @param {function} resolveClaim - A function that returns a claim value.",
        "         * @returns {function} A function that will accept a claim as an argument,",
        "         * run the claim resolver function for the claim and obtain the claim value,",
        "         * and apply additional logic for essential claims.",
        "         */",
        "        function getEssentialClaimResolver (resolveClaim) {",
        "            /**",
        "             * Returns a claim value or throws an error.",
        "             * The claim value is obtained with a claim resolving function available from the closure.",
        "             * Throws an exception if the claim is essential and no value is returned for the claim.",
        "             *",
        "             * Use of this resolver is optional.",
        "             * @see {@link https://openid.net/specs/openid-connect-core-1_0.html#IndividualClaimsRequests} stating:",
        "             * "Note that even if the Claims are not available because the End-User did not authorize their release or they are not present,",
        "             * the Authorization Server MUST NOT generate an error when Claims are not returned, whether they are Essential or Voluntary,",
        "             * unless otherwise specified in the description of the specific claim."",
        "             *",
        "             * @param {org.forgerock.openidconnect.Claim} claim",
        "             * An object that provides methods to obtain information/requirements associated with a claim.",
        "             * @see {@link https://backstage.forgerock.com/docs/am/7/apidocs/org/forgerock/openidconnect/Claim.html} for details.",
        "             * @returns {*}",
        "             * @throws {org.forgerock.oauth2.core.exceptions.InvalidRequestException}",
        "             */",
        "            function resolveEssentialClaim(claim) {",
        "                var claimValue = resolveClaim(claim);",
        "",
        "                if (claim.isEssential() && !isClaimValueValid(claimValue)) {",
        "                    throw new frJava.InvalidRequestException('Could not provide value for essential claim: ' + claim.getName());",
        "                }",
        "",
        "                return claimValue;",
        "            }",
        "",
        "            return resolveEssentialClaim;",
        "        }",
        "",
        "        /**",
        "         * Provides default resolution for a claim.",
        "         * Use it if a claim-specific resolver is not defined in the configuration.",
        "         * @param {org.forgerock.openidconnect.Claim} claim",
        "         * An object that provides methods to obtain information/requirements associated with a claim.",
        "         * @see {@link https://backstage.forgerock.com/docs/am/7/apidocs/org/forgerock/openidconnect/Claim.html} for details.",
        "         * @returns {*} A single value associated with this claim.",
        "         */",
        "        function resolveAnyClaim (claim) {",
        "            if (claim.getValues().size() === 1) {",
        "                return claim.getValues().toArray()[0];",
        "            }",
        "        }",
        "",
        "        // UTILITIES",
        "",
        "        /**",
        "         * Returns claim value from a set.",
        "         * If the set contains a single value, returns the value.",
        "         * If the set contains multiple values, returns the set.",
        "         * Otherwise, returns undefined.",
        "         *",
        "         * @param {org.forgerock.openidconnect.Claim} claim",
        "         * An object that provides methods to obtain information/requirements associated with a claim.",
        "         * @see {@link https://backstage.forgerock.com/docs/am/7/apidocs/org/forgerock/openidconnect/Claim.html} for details.",
        "         * @param {java.util.HashSet} set The set—for example, a user profile attribute value.",
        "         * @returns {string|java.util.HashSet|undefined}",
        "         */",
        "        function getClaimValueFromSet (claim, set) {",
        "            if (set && set.size()) {",
        "                if (set.size() === 1) {",
        "                    return set.toArray()[0];",
        "                } else {",
        "                    return set;",
        "                }",
        "            } else if (logger.warningEnabled()) {",
        "                logger.warning('OIDC Claims script. Got an empty set for claim: ' + claim.getName());",
        "            }",
        "        }",
        "",
        "        function isClaimValueValid (claimValue) {",
        "            if (typeof claimValue === 'undefined' || claimValue === null) {",
        "                return false;",
        "            }",
        "",
        "            return true;",
        "        }",
        "",
        "        // CLAIM PROCESSING",
        "",
        "        /**",
        "         * Constructs and returns an object populated with the computed claim values",
        "         * and the requested scopes mapped to the claim names.",
        "         * @returns {org.forgerock.oauth2.core.UserInfoClaims} The object to be returned to the authorization server.",
        "         * @see {@link https://backstage.forgerock.com/docs/am/7/apidocs/org/forgerock/oauth2/core/UserInfoClaims.html}.",
        "         * @see RESULTS section for the use of this function.",
        "         */",
        "        function getUserInfoClaims () {",
        "            return new frJava.UserInfoClaims(getComputedClaims(), getCompositeScopes());",
        "        }",
        "",
        "        /**",
        "         * Creates a map of (requested) claim names populated with the computed claim values.",
        "         * @returns {java.util.LinkedHashMap}",
        "         * A map of the requested claim names and the corresponding claim values.",
        "         */",
        "        function getComputedClaims () {",
        "            /**",
        "             * Creates a complete list of claim objects from:",
        "             * the claims derived from the scopes,",
        "             * the claims provided by the authorization server,",
        "             * and the claims requested by the client.",
        "             * @returns {java.util.ArrayList}",
        "             * Returns a complete list of org.forgerock.openidconnect.Claim objects available to the script.",
        "             * @see {@link https://backstage.forgerock.com/docs/am/7/apidocs/org/forgerock/openidconnect/Claim.html} for the claim object details.",
        "             */",
        "            function getClaims() {",
        "                /**",
        "                 * Returns a list of claim objects for the requested scopes.",
        "                 * Uses the scopeClaimsMap configuration option to derive the claim names;",
        "                 * no other properties of a claim derived from a scope are populated.",
        "                 * @returns {java.util.ArrayList}",
        "                 * A list of org.forgerock.openidconnect.Claim objects derived from the requested scopes.",
        "                 * @see {@link https://backstage.forgerock.com/docs/am/7/apidocs/org/forgerock/openidconnect/Claim.html} for the claim object details.",
        "                 */",
        "                function convertScopeToClaims() {",
        "                    var claims = new frJava.ArrayList();",
        "",
        "                    scopes.toArray().forEach(function (scope) {",
        "                        if (String(scope) !== 'openid' && scopeClaimsMap[scope]) {",
        "                            scopeClaimsMap[scope].forEach(function (claimName) {",
        "                                claims.add(new frJava.Claim(claimName));",
        "                            });",
        "                        }",
        "                    });",
        "",
        "                    return claims;",
        "                }",
        "",
        "                var claims = new frJava.ArrayList();",
        "",
        "                claims.addAll(convertScopeToClaims());",
        "                claims.addAll(claimObjects);",
        "                claims.addAll(requestedTypedClaims);",
        "",
        "                return claims;",
        "            }",
        "",
        "            /**",
        "             * Computes and returns a claim value.",
        "             * To obtain the claim value, uses the resolver function specified for the claim in the claimResolvers configuration object.",
        "             * @see claimResolvers",
        "             * If no resolver function is found, uses the default claim resolver function.",
        "             *",
        "             * @param {org.forgerock.openidconnect.Claim} claim",
        "             * An object that provides methods to obtain information/requirements associated with a claim.",
        "             * @see {@link https://backstage.forgerock.com/docs/am/7/apidocs/org/forgerock/openidconnect/Claim.html} for details.",
        "             * @returns {*} Claim value.",
        "             * @throws {org.forgerock.oauth2.core.exceptions.InvalidRequestException}",
        "             * Rethrows this exception if a claim resolver throws it.",
        "             * You can throw org.forgerock.oauth2.core.exceptions.InvalidRequestException from your custom claim resolver",
        "             * if you want to terminate the claim processing.",
        "             */",
        "            function computeClaim(claim) {",
        "                var resolveClaim;",
        "                var message;",
        "",
        "                try {",
        "                    resolveClaim = claimResolvers[claim.getName()] || resolveAnyClaim;",
        "",
        "                    return resolveClaim(claim);",
        "                } catch (e) {",
        "                    message = 'OIDC Claims script exception. Unable to resolve OIDC Claim. ' + e;",
        "",
        "                    if (String(e).indexOf('org.forgerock.oauth2.core.exceptions.InvalidRequestException') !== -1) {",
        "                        throw e;",
        "                    }",
        "",
        "                    if (logger.warningEnabled()) {",
        "                        logger.warning(message);",
        "                    }",
        "                }",
        "            }",
        "",
        "            var computedClaims = new frJava.LinkedHashMap();",
        "",
        "            getClaims().toArray().forEach(function (claim) {",
        "                var claimValue = computeClaim(claim);",
        "",
        "                if (isClaimValueValid(claimValue)) {",
        "                    computedClaims.put(claim.getName(), claimValue);",
        "                } else {",
        "                    /**",
        "                     * If a claim has been processed, but appears in the list again,",
        "                     * and its value cannot be computed under the new conditions,",
        "                     * the claim is removed from the final result.",
        "                     *",
        "                     * For example, a claim could be mapped to a scope and found in the user profile,",
        "                     * but also requested by the client with required values that don't match the computed one.",
        "                     * @see {link https://openid.net/specs/openid-connect-core-1_0.html#IndividualClaimsRequests}.",
        "                     * for the relevant OIDC specification details.",
        "                     */",
        "                    computedClaims.remove(claim.getName());",
        "                }",
        "            });",
        "",
        "            return computedClaims;",
        "        }",
        "",
        "        /**",
        "         * Creates a map of requested scopes and the corresponding claim names.",
        "         * @returns {java.util.LinkedHashMap}",
        "         */",
        "        function getCompositeScopes () {",
        "            var compositeScopes = new frJava.LinkedHashMap();",
        "",
        "            scopes.toArray().forEach(function (scope) {",
        "                var scopeClaims = new frJava.ArrayList();",
        "",
        "                if (scopeClaimsMap[scope]) {",
        "                    scopeClaimsMap[scope].forEach(function (claimName) {",
        "                        scopeClaims.add(claimName);",
        "                    });",
        "                }",
        "",
        "                if (scopeClaims.size()) {",
        "                    compositeScopes.put(scope, scopeClaims);",
        "                }",
        "            });",
        "",
        "            return compositeScopes;",
        "        }",
        "",
        "        // PUBLIC METHODS",
        "",
        "        return {",
        "            setScopeClaimsMap: setScopeClaimsMap,",
        "            setClaimResolvers: setClaimResolvers,",
        "            getUserProfileClaimResolver: getUserProfileClaimResolver,",
        "            getAddressClaimResolver: getAddressClaimResolver,",
        "            getEssentialClaimResolver: getEssentialClaimResolver,",
        "            getUserInfoClaims: getUserInfoClaims",
        "        };",
        "    }",
        "",
        "    // RESULTS",
        "",
        "    /**",
        "     * This script returns an instance of the org.forgerock.oauth2.core.UserInfoClaims class",
        "     * populated with the computed claim values and",
        "     * the requested scopes mapped to the claim names.",
        "     * @see {@link https://backstage.forgerock.com/docs/am/7/apidocs/org/forgerock/oauth2/core/UserInfoClaims.html}.",
        "     *",
        "     * Assigning it to a variable gives you an opportunity",
        "     * to log the content of the returned value during development.",
        "     */",
        "    var userInfoClaims = utils.getUserInfoClaims();",
        "",
        "    /*",
        "    logger.error(scriptName + ' results:')",
        "    logger.error('Values: ' + userInfoClaims.getValues())",
        "    logger.error('Scopes: ' + userInfoClaims.getCompositeScopes())",
        "    */",
        "",
        "    return userInfoClaims;",
        "}());",
        "",
      ],
    },
    "22ab12ac-d1d9-414b-ab51-cfae30de8c0a": {
      "_id": "22ab12ac-d1d9-414b-ab51-cfae30de8c0a",
      "context": "AUTHENTICATION_TREE_DECISION_NODE",
      "createdBy": "null",
      "creationDate": 0,
      "default": false,
      "description": "Create a configuration object for the Email Template Node.",
      "language": "JAVASCRIPT",
      "lastModifiedBy": "null",
      "lastModifiedDate": 0,
      "name": "Configure Email Template Node",
      "script": [
        "/* Configure Email Template Node",
        " * ",
        " * Create a configuration object for the Email Template Node.",
        " * ",
        " * This script does not need to be parametrized. It will work properly as is.",
        " * ",
        " * The Scripted Decision Node needs the following outcomes defined:",
        " * - true",
        " * - error",
        " *",
        " * Author: volker.scheuber@forgerock.com",
        " */",
        "(function () {",
        "  try {",
        "  outcome = 'true';",
        "  var config = {",
        "    emailAttribute: 'mail',",
        "    emailTemplateName: 'welcome',",
        "    identityAttribute: 'userName'",
        "  };",
        "  nodeState.putShared('nodeConfig', config);",
        "  } catch (error) {",
        "      outcome = 'error';",
        "    nodeState.putShared('error', error.message);",
        "  }",
        "}());",
      ],
    },
    "23143919-6b78-40c3-b25e-beca19b229e0": {
      "_id": "23143919-6b78-40c3-b25e-beca19b229e0",
      "context": "SOCIAL_IDP_PROFILE_TRANSFORMATION",
      "createdBy": "null",
      "creationDate": 0,
      "default": false,
      "description": "Normalizes raw profile data from GitHub",
      "language": "GROOVY",
      "lastModifiedBy": "null",
      "lastModifiedDate": 0,
      "name": "GitHub Profile Normalization (VS)",
      "script": [
        "/*",
        " * Copyright 2020 ForgeRock AS. All Rights Reserved",
        " *",
        " * Use of this code requires a commercial software license with ForgeRock AS.",
        " * or with one of its affiliates. All use shall be exclusively subject",
        " * to such license between the licensee and ForgeRock AS.",
        " */",
        "",
        "import static org.forgerock.json.JsonValue.field",
        "import static org.forgerock.json.JsonValue.json",
        "import static org.forgerock.json.JsonValue.object",
        "",
        "logger.warning("GitHub rawProfile: "+rawProfile)",
        "",
        "return json(object(",
        "        field("id", rawProfile.id),",
        "        field("displayName", rawProfile.name),",
        "        field("givenName", rawProfile.first_name),",
        "        field("familyName", rawProfile.last_name),",
        "        field("photoUrl", rawProfile.picture.data.url),",
        "        field("email", rawProfile.email),",
        "        field("username", rawProfile.email)))",
      ],
    },
    "23e88721-ea4a-4da2-bfba-33d82fd0317d": {
      "_id": "23e88721-ea4a-4da2-bfba-33d82fd0317d",
      "context": "AUTHENTICATION_TREE_DECISION_NODE",
      "createdBy": "null",
      "creationDate": 0,
      "default": false,
      "description": "Reads the shared state "_id" attribute. Fetches the userName (uid0 object from the users. Saves the userName to shared state. (in both userName and username). Then returns outcome if the username starts with "anon-" outcome = anonymous. Otherwise outcome = known.",
      "language": "JAVASCRIPT",
      "lastModifiedBy": "null",
      "lastModifiedDate": 0,
      "name": "Inspect Username",
      "script": [
        "/*",
        "  - Data made available by nodes that have already executed are available in the sharedState variable.",
        "  - The script should set outcome to either "true" or "false".",
        " */",
        "",
        "",
        "var the_id =  sharedState.get("_id");",
        "",
        "var userName = singleValue(idRepository.getAttribute(the_id, "uid"));",
        "",
        "",
        "",
        "sharedState.put("username", userName);",
        "sharedState.put("userName", userName);",
        "",
        "",
        "//userName.lastIndexOf("anon-",0) checks if username starts with anon-.  ",
        "//Having issues specifically with "startsWith" function",
        "if(userName.lastIndexOf("anon-",0)===0)",
        "   {",
        "     outcome = "anonymous";",
        "     sharedState.put("userType", "anonymous");",
        "   }",
        "else",
        "   {",
        "   outcome = "known";",
        "     sharedState.put("userType", "known");",
        "   }",
        "",
        "",
        "",
        "function singleValue(x)",
        "{",
        "    if(x.size()>0)",
        "    {",
        "        return x.iterator().next();",
        "    }",
        "    ",
        "  return "";",
        "  ",
        "}",
      ],
    },
    "25d8a628-3556-4219-aaf5-2384e2e5f19a": {
      "_id": "25d8a628-3556-4219-aaf5-2384e2e5f19a",
      "context": "AUTHENTICATION_TREE_DECISION_NODE",
      "createdBy": "null",
      "creationDate": 0,
      "default": false,
      "description": "Create Applicant",
      "language": "JAVASCRIPT",
      "lastModifiedBy": "null",
      "lastModifiedDate": 0,
      "name": "Onfido-CreateApplicant",
      "script": [
        "logger.error("Onfido-CreateApplicant: Start");",
        "",
        "/*",
        " * !!! Extend your authentication session time so your identity proofing flows don't time out !!!",
        " *",
        " * Authentication > Settings > Trees > Max Duration (Minutes)",
        " *",
        " * Set to 15 minutes.",
        " *",
        " */",
        "",
        "/*",
        " * BEGIN SCRIPT CONFIGURATION",
        " *",
        " * REPLACE WITH YOUR OWN ONFIDO API TOKEN",
        " */",
        "var ONFIDO_API_TOKEN = "api_live.StUdfxdiCFb.YrzbadxB_R2-qG5lFUc3lWg6JAc3Cnq-";",
        "/*",
        " * END SCRIPT CONFIGURATION",
        " */",
        "",
        "// Requires Identify Existing User auth node to retrieve real user ID from IDM",
        "var username = sharedState.get("_id");",
        "",
        "// Retrieve user profile attributes for comparison with document verification",
        "// var requestBodyJson = {",
        "//     "first_name": String(idRepository.getAttribute(username, "givenName").iterator().next().toString()),",
        "//     "last_name": String(idRepository.getAttribute(username, "sn").iterator().next().toString()),",
        "//     "dob": String(idRepository.getAttribute(username, "fr-attr-istr1").iterator().next().toString())",
        "// }",
        "var requestBodyJson = {",
        "    "first_name": String(idRepository.getAttribute(username, "givenName").iterator().next().toString()),",
        "    "last_name": String(idRepository.getAttribute(username, "sn").iterator().next().toString())",
        "}",
        "",
        "var failure = true",
        "",
        "var fr = JavaImporter(",
        "    org.forgerock.http.protocol.Request",
        ")",
        "",
        "var request = new fr.Request();",
        "request.setUri("https://api.onfido.com/v3/applicants/");",
        "request.setMethod("POST");",
        "request.getHeaders().add("Content-Type", "application/json; charset=UTF-8");",
        "request.getHeaders().add("Authorization", "Token token=" + ONFIDO_API_TOKEN);",
        "request.getEntity().setString(JSON.stringify(requestBodyJson));",
        "",
        "var response = httpClient.send(request).get();",
        "logger.error("Onfido-CreateApplicant: Create applicant ID response: ".concat(response.getEntity().getString()));",
        "",
        "if (response.getStatus().getCode() === 201) {",
        "    var applicantID = JSON.parse(response.getEntity().getString()).id;",
        "    failure = !applicantID;",
        "    if (!failure) sharedState.put("onfidoApplicantID", applicantID);",
        "}",
        "else {",
        "    failure = true;",
        "}",
        "",
        "// Get Onfido client JWT token required by client SDK",
        "if (!failure) {",
        "    // get the referer",
        "    var referer = parseUrl(requestHeaders.get("referer").get(0));",
        "    var requestBodyJson = {",
        "        "applicant_id": String(sharedState.get("onfidoApplicantID")),",
        "        "referrer": referer.origin.concat("/")",
        "    }",
        "",
        "    failure = true;",
        "",
        "    request = new fr.Request();",
        "    request.setUri("https://api.onfido.com/v3/sdk_token");",
        "    request.setMethod("POST");",
        "    request.getHeaders().add("Content-Type", "application/json; charset=UTF-8");",
        "    request.getHeaders().add("Authorization", "Token token=" + ONFIDO_API_TOKEN);",
        "    request.getEntity().setString(JSON.stringify(requestBodyJson));",
        "",
        "    response = httpClient.send(request).get();",
        "    logger.error("Onfido-CreateApplicant: Get sdk token response: ".concat(response.getEntity().getString()));",
        "",
        "    if (response.getStatus().getCode() === 200) {",
        "        var token = JSON.parse(response.getEntity().getString()).token",
        "        failure = !token;",
        "        if (!failure) sharedState.put("onfidoAuthToken", token);",
        "    }",
        "    else {",
        "        failure = true;",
        "    }",
        "}",
        "",
        "outcome = failure ? "false" : "true";",
        "logger.error("Onfido-CreateApplicant: End (outcome=".concat(outcome).concat(")"));",
        "",
        "/*",
        " * Parse a URL into its components and make them easily accessible by name",
        " * ",
        " * e.g.: https://openam-volker-dev.forgeblocks.com/am/XUI/?realm=/bravo&authIndexType=service&authIndexValue=InitiateOwnerClaim#/",
        " * {",
        " *     hash: '#/',",
        " *     host: 'openam-volker-dev.forgeblocks.com',",
        " *     hostname: 'openam-volker-dev.forgeblocks.com',",
        " *     href: 'https://openam-volker-dev.forgeblocks.com/am/XUI/?realm=/bravo&authIndexType=service&authIndexValue=InitiateOwnerClaim#/',",
        " *     origin: 'https://openam-volker-dev.forgeblocks.com',",
        " *     pathname: '/am/XUI/',",
        " *     port: '',",
        " *     protocol: 'https',",
        " *     search: '?realm=/bravo&authIndexType=service&authIndexValue=InitiateOwnerClaim',",
        " *     username: '',",
        " *     password: '',",
        " *     searchParam: {",
        " *         realm: '/bravo',",
        " *         authIndexType: 'service',",
        " *         authIndexValue: 'InitiateOwnerClaim'",
        " *     }",
        " * }",
        " */",
        "function parseUrl(href) {",
        "    var m = href.match(/^(([^:\\/?#]+):?(?:\\/\\/((?:([^\\/?#:]*):([^\\/?#:]*)@)?([^\\/?#:]*)(?::([^\\/?#:]*))?)))?([^?#]*)(\\?[^#]*)?(#.*)?$/),",
        "    r = {",
        "        hash: m[10] || "",                      // #/",
        "        host: m[3] || "",                       // openam-volker-dev.forgeblocks.com",
        "        hostname: m[6] || "",                   // openam-volker-dev.forgeblocks.com",
        "        href: m[0] || "",                       // https://openam-volker-dev.forgeblocks.com/am/XUI/?realm=/bravo&authIndexType=service&authIndexValue=InitiateOwnerClaim#/",
        "        origin: m[1] || "",                     // https://openam-volker-dev.forgeblocks.com",
        "        pathname: m[8] || (m[1] ? "/" : ""),    // /am/XUI/",
        "        port: m[7] || "",                       // ",
        "        protocol: m[2] || "",                   // https",
        "        search: m[9] || "",                     // ?realm=/bravo&authIndexType=service&authIndexValue=InitiateOwnerClaim",
        "        username: m[4] || "",                   // ",
        "        password: m[5] || "",                   // ",
        "        searchParam: {}                         // { realm: '/bravo',",
        "                                                //   authIndexType: 'service',",
        "                                                //   authIndexValue: 'InitiateOwnerClaim' }",
        "    };",
        "    if (r.protocol.length == 2) {",
        "        r.protocol = "file:///" + r.protocol.toUpperCase();",
        "        r.origin = r.protocol + "//" + r.host;",
        "    }",
        "    if (r.search.length > 2) {",
        "        var query = (r.search.indexOf('?') === 0) ? r.search.substr(1) : r.search;",
        "        var vars = query.split('&');",
        "        for (var i = 0; i < vars.length; i++) {",
        "        var pair = vars[i].split('=');",
        "        r.searchParam[decodeURIComponent(pair[0])] = decodeURIComponent(pair[1]);",
        "        }",
        "    }",
        "    r.href = r.origin + r.pathname + r.search + r.hash;",
        "    return r;",
        "};",
      ],
    },
    "27f1b5a3-9446-4e5c-b965-f195a99fa666": {
      "_id": "27f1b5a3-9446-4e5c-b965-f195a99fa666",
      "context": "AUTHENTICATION_TREE_DECISION_NODE",
      "createdBy": "null",
      "creationDate": 0,
      "default": false,
      "description": "null",
      "language": "JAVASCRIPT",
      "lastModifiedBy": "null",
      "lastModifiedDate": 0,
      "name": "Admin_PasswordFixEnd",
      "script": [
        "/*",
        " * Copyright 2023 ForgeRock AS. All Rights Reserved",
        " *",
        " * Use of this code requires a commercial software license with ForgeRock AS.",
        " * or with one of its affiliates. All use shall be exclusively subject",
        " * to such license between the licensee and ForgeRock AS.",
        " */",
        "",
        "/*",
        "This restores sharedState.objectAttributes temporarily overwritten to fix an issue with password policy.",
        "*/",
        "",
        "//var password = '';",
        "//var objAttrs = sharedState.get('objectAttributes');",
        "//if (objAttrs && objAttrs.containsKey('password')) {",
        "//  password = objAttrs.get('password');",
        "//}",
        "",
        "// Restore original object attributes",
        "var origObjAttrs = sharedState.get('originalObjectAttributes');",
        "if (origObjAttrs) {",
        "//  if (password) {",
        "//    origObjAttrs.put('password', password);",
        "//  }",
        "  sharedState.put('objectAttributes', origObjAttrs);",
        "}",
        "",
        "outcome = 'True';",
        "",
      ],
    },
    "2997bd4d-14be-4dc6-8701-27f08d10b8b7": {
      "_id": "2997bd4d-14be-4dc6-8701-27f08d10b8b7",
      "context": "SOCIAL_IDP_PROFILE_TRANSFORMATION",
      "createdBy": "null",
      "creationDate": 0,
      "default": false,
      "description": "Profile Normalization Script for idddataweb",
      "language": "GROOVY",
      "lastModifiedBy": "null",
      "lastModifiedDate": 0,
      "name": "iddataweb Profile Normalization",
      "script": [
        "/*/*",
        " * Copyright 2022 ForgeRock AS. All Rights Reserved",
        " *",
        " * Use of this code requires a commercial software license with ForgeRock AS.",
        " * or with one of its affiliates. All use shall be exclusively subject",
        " * to such license between the licensee and ForgeRock AS. Not for Production use. ",
        " * Modified by Stephen Payne",
        " */",
        "/* Social Identity Provider Profile Transformation script for ID DataWeb */",
        "import static org.forgerock.json.JsonValue.field",
        "import static org.forgerock.json.JsonValue.json",
        "import static org.forgerock.json.JsonValue.object",
        "",
        "logger.error("iddataweb_Social Identity Provider Profile Transformation script: Start");",
        "userName = sharedState.get("objectAttributes").get("mail");",
        "logger.error("iddataweb_Social Identity Provider Profile Transformation script: userName" + userName );",
        "username = userName;",
        "sharedState.put("userName", userName);",
        "",
        "return json(object(",
        "        field("id", rawProfile.sub),",
        "        field("displayName", rawProfile.acquiredAttributes_AcquiredFullName_fname.asString() + " " + rawProfile.acquiredAttributes_AcquiredFullName_lname.asString().toLowerCase().capitalize() ),",
        "        field("givenName", rawProfile.acquiredAttributes_AcquiredFullName_fname.asString().toLowerCase().capitalize() ),",
        "        field("familyName", rawProfile.acquiredAttributes_AcquiredFullName_lname.asString().toLowerCase().capitalize() ),",
        "        field("postalAddress", rawProfile.acquiredAttributes_AcquiredAddress_address),",
        "        field("addressLocality", rawProfile.acquiredAttributes_AcquiredAddress_locality),",
        "        field("addressRegion", rawProfile.acquiredAttributes_AcquiredAddress_administrative_area_level_1),",
        "        field("postalCode", rawProfile.acquiredAttributes_AcquiredAddress_postal_code),",
        "        field("country", rawProfile.acquiredAttributes_AcquiredAddress_country),",
        "        field("driversLicense", rawProfile.acquiredAttributes_AcquiredDriversLicenseNumber_acquiredDriversLicenseNumber),",
        "        field("driversLicenseIssuer", rawProfile.acquiredAttributes_DriversLicenseIssuerCode_DriversLicenseIssuerCode),",
        "          field("DOB", rawProfile.acquiredAttributes_AcquiredDOB_month.asString() + "/" + rawProfile.acquiredAttributes_AcquiredDOB_day.asString() + "/" + rawProfile.acquiredAttributes_AcquiredDOB_year.asString() ),",
        "",
        "        field("IDWScore", rawProfile.acquiredAttributes_IDWScore),",
        "        field("policyDecision", rawProfile.policyDecision_conclusion),",
        "        field("phone", rawProfile.userAttributes_InternationalTelephone_dialCode.asString() + rawProfile.userAttributes_InternationalTelephone_telephone.asString()),",
        "        field("username", userName )",
        "       //field("username", rawProfile.acquiredAttributes_AcquiredFullName_fname.asString() + "." + rawProfile.acquiredAttributes_AcquiredFullName_lname.asString() )",
        "",
        "   )",
        ")",
        "",
      ],
    },
    "2a076e9e-75a9-46b5-b971-10ffafbdf652": {
      "_id": "2a076e9e-75a9-46b5-b971-10ffafbdf652",
      "context": "AUTHENTICATION_TREE_DECISION_NODE",
      "createdBy": "null",
      "creationDate": 0,
      "default": false,
      "description": "Return true if a goto param has been specified, false otherwise.",
      "language": "JAVASCRIPT",
      "lastModifiedBy": "null",
      "lastModifiedDate": 0,
      "name": "Goto Specified Decision",
      "script": [
        "/* Goto Specified Decision",
        " * ",
        " * Return true if a goto param has been specified, false otherwise.",
        " * ",
        " * This script does not require configuration. It will work properly as is.",
        " * ",
        " * The Scripted Decision Node needs the following outcomes defined:",
        " * - true",
        " * - false",
        " *",
        " * Author: volker.scheuber@forgerock.com",
        " */",
        "(function () {",
        "    logger.message("Goto Specified Decision: start");",
        "      outcome = "false";",
        "      var referer = parseUrl(requestHeaders.get("referer").get(0));",
        "      if (referer.searchParam.goto) {",
        "          outcome = "true";",
        "    }",
        "    logger.message("Goto Specified Decision: end [outcome={}]", outcome);",
        "",
        "    /*",
        "     * Parse a URL into its components and make them easily accessible by name",
        "     *",
        "     * Use in a Scripte Decision Node Script as follows:",
        "     * var referer = parseUrl(requestHeaders.get("referer").get(0));",
        "     * var origin = referer.origin;",
        "     * ",
        "     * e.g.: https://openam-volker-dev.forgeblocks.com/am/XUI/?realm=/bravo&authIndexType=service&authIndexValue=InitiateOwnerClaim#/",
        "     * {",
        "     *     hash: '#/',",
        "     *     host: 'openam-volker-dev.forgeblocks.com',",
        "     *     hostname: 'openam-volker-dev.forgeblocks.com',",
        "     *     href: 'https://openam-volker-dev.forgeblocks.com/am/XUI/?realm=/bravo&authIndexType=service&authIndexValue=InitiateOwnerClaim#/',",
        "     *     origin: 'https://openam-volker-dev.forgeblocks.com',",
        "     *     pathname: '/am/XUI/',",
        "     *     port: '',",
        "     *     protocol: 'https',",
        "     *     search: '?realm=/bravo&authIndexType=service&authIndexValue=InitiateOwnerClaim',",
        "     *     username: '',",
        "     *     password: '',",
        "     *     searchParam: {",
        "     *         realm: '/bravo',",
        "     *         authIndexType: 'service',",
        "     *         authIndexValue: 'InitiateOwnerClaim'",
        "     *     }",
        "     * }",
        "     */",
        "    function parseUrl(href) {",
        "        var m = href.match(/^(([^:\\/?#]+):?(?:\\/\\/((?:([^\\/?#:]*):([^\\/?#:]*)@)?([^\\/?#:]*)(?::([^\\/?#:]*))?)))?([^?#]*)(\\?[^#]*)?(#.*)?$/),",
        "        r = {",
        "            hash: m[10] || "",                      // #/",
        "            host: m[3] || "",                       // openam-volker-dev.forgeblocks.com",
        "            hostname: m[6] || "",                   // openam-volker-dev.forgeblocks.com",
        "            href: m[0] || "",                       // https://openam-volker-dev.forgeblocks.com/am/XUI/?realm=/bravo&authIndexType=service&authIndexValue=InitiateOwnerClaim#/",
        "            origin: m[1] || "",                     // https://openam-volker-dev.forgeblocks.com",
        "            pathname: m[8] || (m[1] ? "/" : ""),    // /am/XUI/",
        "            port: m[7] || "",                       // ",
        "            protocol: m[2] || "",                   // https",
        "            search: m[9] || "",                     // ?realm=/bravo&authIndexType=service&authIndexValue=InitiateOwnerClaim",
        "            username: m[4] || "",                   // ",
        "            password: m[5] || "",                   // ",
        "            searchParam: {}                         // { realm: '/bravo',",
        "                                                    //   authIndexType: 'service',",
        "                                                    //   authIndexValue: 'InitiateOwnerClaim' }",
        "        };",
        "        if (r.protocol.length == 2) {",
        "            r.protocol = "file:///" + r.protocol.toUpperCase();",
        "            r.origin = r.protocol + "//" + r.host;",
        "        }",
        "        if (r.search.length > 2) {",
        "            var query = (r.search.indexOf('?') === 0) ? r.search.substr(1) : r.search;",
        "            var vars = query.split('&');",
        "            for (var i = 0; i < vars.length; i++) {",
        "            var pair = vars[i].split('=');",
        "            r.searchParam[decodeURIComponent(pair[0])] = decodeURIComponent(pair[1]);",
        "            }",
        "        }",
        "        r.href = r.origin + r.pathname + r.search + r.hash;",
        "        return r;",
        "    };",
        "}());",
      ],
    },
    "2aab9d46-9363-4061-9f63-eb824e33c505": {
      "_id": "2aab9d46-9363-4061-9f63-eb824e33c505",
      "context": "AUTHENTICATION_TREE_DECISION_NODE",
      "createdBy": "null",
      "creationDate": 0,
      "default": false,
      "description": "Logout.",
      "language": "JAVASCRIPT",
      "lastModifiedBy": "null",
      "lastModifiedDate": 0,
      "name": "Logout",
      "script": [
        "/* Logout",
        " * ",
        " * Logout.",
        " * ",
        " * This script requires parametrization. Make sure you carefully review the configuration parameters.",
        " * ",
        " * The Scripted Decision Node needs the following outcomes defined:",
        " * - true",
        " *",
        " * Author: volker.scheuber@forgerock.com",
        " */",
        "(function () {",
        "    logger.message("Logout: start");",
        "      outcome = "true";",
        "      var referer = parseUrl(requestHeaders.get("referer").get(0));",
        "",
        "      /* Begin Configuration */",
        "  ",
        "      var AM_REALM = "alpha";",
        "    ",
        "    // AM API Configuration",
        "    var AM_API_URI = referer.origin + "/am/json/" + AM_REALM + "/sessions/?_action=logout";",
        "",
        "      /* End Configuration */",
        "",
        "    var request = new org.forgerock.http.protocol.Request();",
        "    request.setMethod('POST');",
        "    request.setUri(AM_API_URI);",
        "    request.getHeaders().add("Content-Type", "application/json; charset=UTF-8");",
        "    request.getHeaders().add("Cookie", requestHeaders.get("cookie").get(0));",
        "    request.getHeaders().add("Accept-API-Version", "resource=3.1");",
        "",
        "    var response = httpClient.send(request).get();",
        "    var result = JSON.parse(response.getEntity().getString());",
        "    logger.message("Logout: JSON result: " + JSON.stringify(result));",
        "  ",
        "    var fr = JavaImporter(",
        "        org.forgerock.openam.auth.node.api.Action,",
        "        com.sun.identity.authentication.spi.RedirectCallback,",
        "        org.forgerock.openam.authentication.callbacks.PollingWaitCallback",
        "    )",
        "    // redirect to this journey again",
        "    if (callbacks.isEmpty()) {",
        "        action = fr.Action.send(",
        "            new fr.RedirectCallback(",
        "                referer.href,",
        "                null,",
        "                "GET"",
        "            )",
        "        ).build();",
        "    }",
        "    else {",
        "        logger.message("Logout: end [outcome={}]", outcome);",
        "    }",
        "",
        "    /*",
        "     * Parse a URL into its components and make them easily accessible by name",
        "     *",
        "     * Use in a Scripte Decision Node Script as follows:",
        "     * var referer = parseUrl(requestHeaders.get("referer").get(0));",
        "     * var origin = referer.origin;",
        "     * ",
        "     * e.g.: https://openam-volker-dev.forgeblocks.com/am/XUI/?realm=/bravo&authIndexType=service&authIndexValue=InitiateOwnerClaim#/",
        "     * {",
        "     *     hash: '#/',",
        "     *     host: 'openam-volker-dev.forgeblocks.com',",
        "     *     hostname: 'openam-volker-dev.forgeblocks.com',",
        "     *     href: 'https://openam-volker-dev.forgeblocks.com/am/XUI/?realm=/bravo&authIndexType=service&authIndexValue=InitiateOwnerClaim#/',",
        "     *     origin: 'https://openam-volker-dev.forgeblocks.com',",
        "     *     pathname: '/am/XUI/',",
        "     *     port: '',",
        "     *     protocol: 'https',",
        "     *     search: '?realm=/bravo&authIndexType=service&authIndexValue=InitiateOwnerClaim',",
        "     *     username: '',",
        "     *     password: '',",
        "     *     searchParam: {",
        "     *         realm: '/bravo',",
        "     *         authIndexType: 'service',",
        "     *         authIndexValue: 'InitiateOwnerClaim'",
        "     *     }",
        "     * }",
        "     */",
        "    function parseUrl(href) {",
        "        var m = href.match(/^(([^:\\/?#]+):?(?:\\/\\/((?:([^\\/?#:]*):([^\\/?#:]*)@)?([^\\/?#:]*)(?::([^\\/?#:]*))?)))?([^?#]*)(\\?[^#]*)?(#.*)?$/),",
        "        r = {",
        "            hash: m[10] || "",                      // #/",
        "            host: m[3] || "",                       // openam-volker-dev.forgeblocks.com",
        "            hostname: m[6] || "",                   // openam-volker-dev.forgeblocks.com",
        "            href: m[0] || "",                       // https://openam-volker-dev.forgeblocks.com/am/XUI/?realm=/bravo&authIndexType=service&authIndexValue=InitiateOwnerClaim#/",
        "            origin: m[1] || "",                     // https://openam-volker-dev.forgeblocks.com",
        "            pathname: m[8] || (m[1] ? "/" : ""),    // /am/XUI/",
        "            port: m[7] || "",                       // ",
        "            protocol: m[2] || "",                   // https",
        "            search: m[9] || "",                     // ?realm=/bravo&authIndexType=service&authIndexValue=InitiateOwnerClaim",
        "            username: m[4] || "",                   // ",
        "            password: m[5] || "",                   // ",
        "            searchParam: {}                         // { realm: '/bravo',",
        "                                                    //   authIndexType: 'service',",
        "                                                    //   authIndexValue: 'InitiateOwnerClaim' }",
        "        };",
        "        if (r.protocol.length == 2) {",
        "            r.protocol = "file:///" + r.protocol.toUpperCase();",
        "            r.origin = r.protocol + "//" + r.host;",
        "        }",
        "        if (r.search.length > 2) {",
        "            var query = (r.search.indexOf('?') === 0) ? r.search.substr(1) : r.search;",
        "            var vars = query.split('&');",
        "            for (var i = 0; i < vars.length; i++) {",
        "            var pair = vars[i].split('=');",
        "            r.searchParam[decodeURIComponent(pair[0])] = decodeURIComponent(pair[1]);",
        "            }",
        "        }",
        "        r.href = r.origin + r.pathname + r.search + r.hash;",
        "        return r;",
        "    };",
        "}());",
      ],
    },
    "2ada53cd-5d37-4592-9c7f-5711271229c2": {
      "_id": "2ada53cd-5d37-4592-9c7f-5711271229c2",
      "context": "AUTHENTICATION_TREE_DECISION_NODE",
      "createdBy": "null",
      "creationDate": 0,
      "default": false,
      "description": "null",
      "language": "JAVASCRIPT",
      "lastModifiedBy": "null",
      "lastModifiedDate": 0,
      "name": "Has Profile Changed",
      "script": [
        "logger.error("Has Profile Changed: start");",
        "outcome = "unchanged";",
        "if (getObjectAttribute("old_givenName") ||",
        "    getObjectAttribute("old_sn") ||",
        "    getObjectAttribute("frUnindexedString5") ||",
        "    getObjectAttribute("old_telephoneNumber")) {",
        "  outcome = "changed";",
        "}",
        "logger.error("Has Profile Changed: end [outcome=".concat(outcome).concat("]"));",
        "",
        "/*",
        " * Get objectAttribute value",
        " */",
        "function getObjectAttribute(name) {",
        "    if (sharedState.get("objectAttributes") && sharedState.get("objectAttributes").get(name)) {",
        "        return sharedState.get("objectAttributes").get(name).toString();",
        "    }",
        "    else {",
        "        return null;",
        "    }",
        "}",
      ],
    },
    "2eb48a0c-24e0-4dac-acaf-02085c142ec5": {
      "_id": "2eb48a0c-24e0-4dac-acaf-02085c142ec5",
      "context": "AUTHENTICATION_TREE_DECISION_NODE",
      "createdBy": "null",
      "creationDate": 0,
      "default": false,
      "description": "Integration to Okta Authentication API okta_url/api/v1/authn",
      "language": "JAVASCRIPT",
      "lastModifiedBy": "null",
      "lastModifiedDate": 0,
      "name": "Okta API AuthN",
      "script": [
        "/* Okta Passthru Authentication",
        " *",
        " * Authors: chico.demettroff@forgerock.com, volker.scheuber@forgerock.com",
        " * ",
        " * Okta pass through authentication using Okta Authentication API.",
        " * ",
        " * This script needs to be parametrized. It will not work properly as is. ",
        " * It requires the Platform Username and Platform Password collector nodes",
        " * before it can operate.",
        " * ",
        " * The Scripted Decision Node needs the following outcomes defined:",
        " * - Success",
        " * - Failure",
        " * - Timeout",
        " * - Error",
        " */",
        "logger.message("Okta Passthru Authentication: start");",
        "",
        "if (sharedState.get("username") && transientState.get("password")) {",
        "      /*",
        "     * BEGIN SCRIPT CONFIGURATION",
        "     *",
        "     * REPLACE WITH YOUR OWN OKTA TENANT SETTINGS",
        "     *",
        "     */",
        "    var OKTA_API_URI = "https://dev-18030933.okta.com/api/v1/authn/";",
        "    /*",
        "     * END SCRIPT CONFIGURATION",
        "     */",
        "",
        "    var request = new org.forgerock.http.protocol.Request();",
        "    request.setMethod('POST');",
        "    request.setUri(OKTA_API_URI);",
        "    request.getHeaders().add("Content-Type", "application/json");",
        "      //var body =     "{\\"username\\":".concat(sharedState.get("username")).concat(",\\"password\\":").concat(transientState.get("password")).concat(",\\"options\\":{\\"multiOptionalFactorEnroll\\":true,\\"warnBeforePasswordExpired\\":true}}");",
        "    var body = {",
        "        "username": sharedState.get("username"),",
        "        "password": transientState.get("password"),",
        "        "options": {",
        "            "multiOptionalFactorEnroll": true,",
        "            "warnBeforePasswordExpired": true",
        "        }",
        "    }",
        "      request.getEntity().setJson(body);",
        "",
        "    var response = httpClient.send(request).get();",
        "    var result = JSON.parse(response.getEntity().getString());",
        "    logger.message("Okta Passthru Authentication: JSON result: " + JSON.stringify(result));",
        "",
        "      if (response.getStatus().getCode() === 200 && result.status === "SUCCESS") {",
        "          outcome = "Success"",
        "        transientState.put("oktaProfile", result._embedded.user.profile);",
        "    } else {",
        "        /* Outcomes:",
        "         * - Success",
        "         * - Failure",
        "         * - Timeout",
        "         * - Error",
        "         *",
        "         * Expected/known Error Codes:",
        "         * E0000004 - Authentication failed.",
        "         * E0000003 - The request body was not well-formed",
        "         */",
        "      ",
        "    /*",
        "{",
        "    "expiresAt": "2021-10-14T22:15:04.000Z",",
        "    "status": "SUCCESS",",
        "    "sessionToken": "20111FNVseT3WyCzBHFBi3dYtx980FHen46QKlWXRNTe1kRef3GQu1W",",
        "    "_embedded": {",
        "        "user": {",
        "            "id": "00u1xqw851dEqM1Y15d7",",
        "            "passwordChanged": "2021-09-21T18:26:25.000Z",",
        "            "profile": {",
        "                "login": "chico@crossfithighvoltage.com",",
        "                "firstName": "chico",",
        "                "lastName": "deme",",
        "                "locale": "en",",
        "                "timeZone": "America/Los_Angeles"",
        "            }",
        "        }",
        "    },",
        "    "_links": {",
        "        "cancel": {",
        "            "href": "https://dev-18030933.okta.com/api/v1/authn/cancel",",
        "            "hints": {",
        "                "allow": [",
        "                    "POST"",
        "                ]",
        "            }",
        "        }",
        "    }",
        "}",
        "*/",
        "",
        "  /*",
        "  FAILED",
        "  {",
        "    "errorCode": "E0000004",",
        "    "errorSummary": "Authentication failed",",
        "    "errorLink": "E0000004",",
        "    "errorId": "oae1Y3Kk_WvRAOBSDeG9qeyHQ",",
        "    "errorCauses": []",
        "}",
        "*/",
        "        transientState.put("oktaResult", result);",
        "        if (result.timed_out) {",
        "            outcome = "Timeout";",
        "        } else if (result.errorCode === "E0000004") {",
        "            outcome = "Failure";",
        "        } else {",
        "            outcome = "Error";",
        "        }",
        "        logger.message("Okta Passthru Authentication: errorCode = ".concat(result.errorCode));",
        "        logger.message("Okta Passthru Authentication: errorSummary = ".concat(result.errorSummary));",
        "        logger.message("Okta Passthru Authentication: errorId = ".concat(result.errorId));",
        "    }",
        "} else {",
        "      outcome = "Error";",
        "      logger.message("Okta Passthru Authentication: No user or password found in shared state! Use username and password collector nodes before this script to populate shared and transient states!'");",
        "}",
        "logger.message("Okta Passthru Authentication: End (outcome=".concat(outcome).concat(")"));",
      ],
    },
    "3126e6a4-e288-4ed5-8a0b-7d849f38567b": {
      "_id": "3126e6a4-e288-4ed5-8a0b-7d849f38567b",
      "context": "AUTHENTICATION_TREE_DECISION_NODE",
      "createdBy": "null",
      "creationDate": 0,
      "default": false,
      "description": "null",
      "language": "JAVASCRIPT",
      "lastModifiedBy": "null",
      "lastModifiedDate": 0,
      "name": "Admin_SetInvitedTrue",
      "script": [
        "/*",
        " * Copyright 2023 ForgeRock AS. All Rights Reserved",
        " *",
        " * Use of this code requires a commercial software license with ForgeRock AS.",
        " * or with one of its affiliates. All use shall be exclusively subject",
        " * to such license between the licensee and ForgeRock AS.",
        " */",
        "",
        "nodeState.putShared('invited', true);",
        "",
        "outcome = 'True';",
      ],
    },
    "312e951f-70c5-49d2-a9ae-93aef909d5df": {
      "_id": "312e951f-70c5-49d2-a9ae-93aef909d5df",
      "context": "SOCIAL_IDP_PROFILE_TRANSFORMATION",
      "createdBy": "null",
      "creationDate": 0,
      "default": true,
      "description": "Normalizes raw profile data from Salesforce",
      "language": "GROOVY",
      "lastModifiedBy": "null",
      "lastModifiedDate": 0,
      "name": "Salesforce Profile Normalization",
      "script": [
        "/*",
        " * Copyright 2020 ForgeRock AS. All Rights Reserved",
        " *",
        " * Use of this code requires a commercial software license with ForgeRock AS.",
        " * or with one of its affiliates. All use shall be exclusively subject",
        " * to such license between the licensee and ForgeRock AS.",
        " */",
        "",
        "import static org.forgerock.json.JsonValue.field",
        "import static org.forgerock.json.JsonValue.json",
        "import static org.forgerock.json.JsonValue.object",
        "",
        "return json(object(",
        "        field("id", rawProfile.user_id),",
        "        field("displayName", rawProfile.name),",
        "        field("givenName", rawProfile.given_name),",
        "        field("familyName", rawProfile.family_name),",
        "        field("photoUrl", rawProfile.picture),",
        "        field("email", rawProfile.email),",
        "        field("username", rawProfile.email),",
        "        field("locale", rawProfile.zoneInfo)))",
      ],
    },
    "3156d7e9-1589-4ffb-a659-37a1647ee03d": {
      "_id": "3156d7e9-1589-4ffb-a659-37a1647ee03d",
      "context": "SOCIAL_IDP_PROFILE_TRANSFORMATION",
      "createdBy": "null",
      "creationDate": 0,
      "default": false,
      "description": "Converts a normalized social profile coming from ADFS into a managed user",
      "language": "GROOVY",
      "lastModifiedBy": "null",
      "lastModifiedDate": 0,
      "name": "Normalized ADFS Profile to Managed User",
      "script": [
        "/*",
        " * Copyright 2022 ForgeRock AS. All Rights Reserved",
        " *",
        " * Use of this code requires a commercial software license with ForgeRock AS.",
        " * or with one of its affiliates. All use shall be exclusively subject",
        " * to such license between the licensee and ForgeRock AS.",
        " */",
        "",
        "import static org.forgerock.json.JsonValue.field",
        "import static org.forgerock.json.JsonValue.json",
        "import static org.forgerock.json.JsonValue.object",
        "",
        "import org.forgerock.json.JsonValue",
        "",
        "JsonValue managedUser = json(object(",
        "        field("givenName", normalizedProfile.givenName),",
        "        field("sn", normalizedProfile.familyName),",
        "        field("mail", normalizedProfile.email),",
        "        field("userName", normalizedProfile.username)))",
        "",
        "if (normalizedProfile.postalAddress.isNotNull()) managedUser.put("postalAddress", normalizedProfile.postalAddress)",
        "if (normalizedProfile.addressLocality.isNotNull()) managedUser.put("city", normalizedProfile.addressLocality)",
        "if (normalizedProfile.addressRegion.isNotNull()) managedUser.put("stateProvince", normalizedProfile.addressRegion)",
        "if (normalizedProfile.postalCode.isNotNull()) managedUser.put("postalCode", normalizedProfile.postalCode)",
        "if (normalizedProfile.country.isNotNull()) managedUser.put("country", normalizedProfile.country)",
        "if (normalizedProfile.phone.isNotNull()) managedUser.put("telephoneNumber", normalizedProfile.phone)",
        "managedUser.put("accountStatus", (normalizedProfile.roles.asString() == "fidc-volker-dev-admins") ? 'Active' : 'Inactive')",
        "",
        "// if the givenName and familyName is null or empty",
        "// then add a boolean flag to the shared state to indicate names are not present",
        "// this could be used elsewhere",
        "// for eg. this could be used in a scripted decision node to by-pass patching",
        "// the user object with blank values when givenName  and familyName is not present",
        "boolean noGivenName = normalizedProfile.givenName.isNull() || (!normalizedProfile.givenName.asString()?.trim())",
        "boolean noFamilyName = normalizedProfile.familyName.isNull() || (!normalizedProfile.familyName.asString()?.trim())",
        "sharedState.put("nameEmptyOrNull", noGivenName && noFamilyName)",
        "",
        "return managedUser",
        "",
      ],
    },
    "3369037a-7a49-4aed-a1dc-7aab7608812b": {
      "_id": "3369037a-7a49-4aed-a1dc-7aab7608812b",
      "context": "OAUTH2_ACCESS_TOKEN_MODIFICATION",
      "createdBy": "null",
      "creationDate": 0,
      "default": false,
      "description": "null",
      "language": "JAVASCRIPT",
      "lastModifiedBy": "null",
      "lastModifiedDate": 0,
      "name": "Service Account - Token Modification",
      "script": [
        "(function () {",
        "  var fr = JavaImporter(",
        "    java.lang.String,",
        "    java.security.MessageDigest,",
        "    java.util.Arrays,",
        "    javax.crypto.Cipher,",
        "    javax.crypto.spec.SecretKeySpec,",
        "    org.forgerock.http.protocol.Request,",
        "    org.forgerock.http.protocol.Response,",
        "    org.forgerock.util.encode.Base64",
        "  );",
        "  ",
        "  var secret = 'FuwwVKpPER9tPSMYUiIkY7IaPzv85aGU';",
        "  ",
        "  function encrypt(str) {",
        "    try {",
        "      var key = new fr.String(secret).getBytes('UTF-8');",
        "      var sha = fr.MessageDigest.getInstance('SHA-256');",
        "      key = sha.digest(key);",
        "      key = fr.Arrays.copyOf(key, 32);",
        "      var secretKey = new fr.SecretKeySpec(key, 'AES');",
        "      var cipher = fr.Cipher.getInstance('AES/ECB/PKCS5Padding');",
        "      cipher.init(fr.Cipher.ENCRYPT_MODE, secretKey);",
        "      var finalBytes = cipher.doFinal(new fr.String(str).getBytes('UTF-8'));",
        "      return fr.Base64.encode(finalBytes);",
        "    } catch (e) {",
        "      logger.error('{}: failed to encrypt: {}', scriptName, e);",
        "      throw e;",
        "    }",
        "  }",
        "",
        "  function hasAmScope(scope) {",
        "    if (!scope) return false;",
        "    for (var i = 0; i < scope.length; i++) {",
        "      if (scope[i].indexOf('fr:am:') > -1) return true;",
        "    }",
        "    return false;",
        "  }",
        "",
        "  try {",
        "    var uri = 'http://am.fr-platform:80/am/json/authenticate?authIndexType=service&authIndexValue=FRServiceAccountInternal';",
        "    var requestParams = requestProperties.get('requestParams');",
        "",
        "    var scope = requestParams.get('scope');",
        "    if (!hasAmScope(scope)) {",
        "      logger.message('AM scope not requested');",
        "      return null;",
        "    }",
        "",
        "    var jwts = requestParams.get('assertion');",
        "    if (!jwts || jwts.isEmpty()) {",
        "      logger.message('No jwt assertion');",
        "      return null;",
        "    }",
        "",
        "    var jwt = jwts[0];",
        "    var uuid = identity.getAttribute('_id').iterator().next();",
        "",
        "    var request = new fr.Request();",
        "    request.getHeaders().add('authorization', 'svcacct ' + uuid + ' ' + jwt);",
        "    request.getHeaders().add('content-type', 'application/json');",
        "    request",
        "      .setUri(uri)",
        "      .setMethod('POST')",
        "      .setEntity('{}');",
        "",
        "    var response = httpClient.send(request).getOrThrow();",
        "    if (response.getStatus() === org.forgerock.http.protocol.Status.OK) {",
        "      var result = JSON.parse(response.getEntity().getString());",
        "      var encryptedTokenId = encrypt(result.tokenId);",
        "      accessToken.setField('sessionToken', encryptedTokenId);",
        "    } else {",
        "      logger.message('Failed to get session from service account tree (status: ' + response.getStatus() + ')');",
        "    }",
        "  } catch (e) {",
        "    throw ('Failed to modify service account token: ' + e);",
        "  }",
        "}());",
        "",
      ],
    },
    "355a8b7c-9e3c-40c1-a873-68127e483adf": {
      "_id": "355a8b7c-9e3c-40c1-a873-68127e483adf",
      "context": "AUTHENTICATION_TREE_DECISION_NODE",
      "createdBy": "null",
      "creationDate": 0,
      "default": false,
      "description": "Extract Username from request.",
      "language": "JAVASCRIPT",
      "lastModifiedBy": "null",
      "lastModifiedDate": 0,
      "name": "KerberosLogin: Extract Username",
      "script": [
        "/* KerberosLogin: Extract Username",
        " * ",
        " * The Scripted Decision Node needs the following outcomes defined:",
        " * - true",
        " * - false",
        " */",
        "",
        "logger.warning("KerberosLogin: Extract Username: start");",
        "outcome = "false";",
        "",
        "/*",
        " * BEGIN SCRIPT CONFIGURATION",
        " */",
        "var USERNAME_HEADER_NAME = "X-OpenAM-Username";",
        "/*",
        " * END SCRIPT CONFIGURATION",
        " */",
        "",
        "var username = getHeader(USERNAME_HEADER_NAME);",
        "if (username) {",
        "    ",
        "      outcome = "true";",
        "    sharedState.put("username", username);",
        "    setSharedObjectAttribute("userName", username);",
        "}",
        "",
        "logger.warning("KerberosLogin: Extract Username: finish [outcome=".concat(outcome).concat("]"));",
        "",
        "/*",
        " * Returns the value of the requested header",
        " */",
        "function getHeader(headerName) {",
        "      if (requestHeaders.get(headerName) && requestHeaders.get(headerName).get(0)) {",
        "        return requestHeaders.get(headerName).get(0).toString();",
        "    }",
        "      return null;",
        "}",
        "",
        "/*",
        " * Store attributes in shared state for use with the Create/Patch Object nodes.",
        " */",
        "function setSharedObjectAttribute(name, value) {",
        "       var storage = sharedState.get("objectAttributes");",
        "    if (storage && value) {",
        "          if (storage.put) {",
        "              storage.put(name, value);",
        "        }",
        "          else {",
        "              storage[name] = value;",
        "        }",
        "    }",
        "    else if (value) {",
        "        sharedState.put("objectAttributes", JSON.parse("{\\""+name+"\\":\\""+value+"\\"}"));",
        "    }",
        "}",
      ],
    },
    "35f56a51-cb99-410d-a7d2-7dc0bb9e4cb7": {
      "_id": "35f56a51-cb99-410d-a7d2-7dc0bb9e4cb7",
      "context": "AUTHENTICATION_TREE_DECISION_NODE",
      "createdBy": "null",
      "creationDate": 0,
      "default": false,
      "description": "Use this script to switch to the preferred language after a node that redirects the browser (SAML2 node, Social IDP Handler node, etc.) or even to switch language mid-journey.",
      "language": "JAVASCRIPT",
      "lastModifiedBy": "null",
      "lastModifiedDate": 0,
      "name": "Post Redirect Language Selector",
      "script": [
        "(function () {",
        "  var fr = JavaImporter(",
        "    org.forgerock.openam.auth.node.api.Action, ",
        "    com.sun.identity.authentication.spi.RedirectCallback",
        "  );",
        "",
        "  if (callbacks.isEmpty()) { ",
        "    var params = requestParameters.toString();",
        "    params = params.replace(/\\[/g, "").replace(/\\]/g, "").replace(/\\{/g, "").replace(/}/g, "").replace(/ /g, "").replace(/,/g, "&");",
        "    params = "?" + params;",
        "    var redirect = new fr.RedirectCallback(params + "&locale=" + "fr", null, "GET");",
        "    redirect.setTrackingCookie(true);",
        "",
        "    action = fr.Action.send(",
        "      redirect",
        "    ).build();",
        "  } ",
        "  else {",
        "    action = fr.Action.goTo("true").build();        ",
        "  }",
        "}());",
      ],
    },
    "36185679-b74f-479c-b1aa-6f6e852cca11": {
      "_id": "36185679-b74f-479c-b1aa-6f6e852cca11",
      "context": "AUTHENTICATION_TREE_DECISION_NODE",
      "createdBy": "null",
      "creationDate": 0,
      "default": false,
      "description": "Suspend authentication",
      "language": "JAVASCRIPT",
      "lastModifiedBy": "null",
      "lastModifiedDate": 0,
      "name": "Suspend Authentication",
      "script": [
        "/* Suspend Authentication",
        " * ",
        " * Suspend Authentication.",
        " * ",
        " * This script does not need to be parametrized. It will work properly as is.",
        " * ",
        " * The Scripted Decision Node needs the following outcomes defined:",
        " * - true",
        " *",
        " * Author: volker.scheuber@forgerock.com",
        " */",
        "(function () {",
        "    outcome = "true";",
        "",
        "    var anchor = "anchor-".concat(generateNumericToken('xxx'));",
        "    var halign = "left";",
        "    var message = "<h4>Current State Values</h4>".concat(",
        "        "<p><b>Shared State</b>:<br/>").concat(",
        "        sharedState.toString()).concat("</p>").concat(",
        "        "<p><b>Transient State</b>:<br/>").concat(",
        "        transientState.toString()).concat("</p>").concat(",
        "        "<p><b>Request Headers</b>:<br/>").concat(",
        "        requestHeaders.toString()).concat("</p>")",
        "    var script = "Array.prototype.slice.call(\\n".concat(",
        "      "document.getElementsByClassName('callback-component')).forEach(\\n").concat(",
        "      "function (e) {\\n").concat(",
        "      "  var message = e.firstElementChild;\\n").concat(",
        "      "  if (message.firstChild && message.firstChild.nodeName == '#text' && message.firstChild.nodeValue.trim() == '").concat(anchor).concat("') {\\n").concat(",
        "      "    message.className = \\"\\";\\n").concat(",
        "      "    message.style = \\"text-align: left; inline-size: 430px; overflow-wrap: break-word;\\";\\n").concat(",
        "      "    message.align = \\"").concat(halign).concat("\\";\\n").concat(",
        "      "    message.innerHTML = '").concat(message).concat("';\\n").concat(",
        "      "  }\\n").concat(",
        "      "})")",
        "    var fr = JavaImporter(",
        "        org.forgerock.openam.auth.node.api.Action,",
        "        javax.security.auth.callback.TextOutputCallback,",
        "        com.sun.identity.authentication.callbacks.ScriptTextOutputCallback",
        "    )",
        "    if (message.length && callbacks.isEmpty()) {",
        "        action = fr.Action.send(",
        "            new fr.TextOutputCallback(",
        "                fr.TextOutputCallback.INFORMATION,",
        "                anchor",
        "            ),",
        "            new fr.ScriptTextOutputCallback(script)",
        "        ).build()",
        "    }",
        "    else {",
        "      action = fr.Action.goTo(outcome).build();",
        "    }",
        "",
        "     /*",
        "      * Generate a token in the desired format. All 'x' characters will be replaced with a random number 0-9.",
        "      * ",
        "      * Example:",
        "      * 'xxxxx' produces '28535'",
        "      * 'xxx-xxx' produces '432-521'",
        "      */",
        "    function generateNumericToken(format) {",
        "        return format.replace(/[x]/g, function(c) {",
        "            var r = Math.random()*10|0;",
        "            var v = r;",
        "            return v.toString(10);",
        "        });",
        "    }",
        "}());",
      ],
    },
    "36863ffb-40ec-48b9-94b1-9a99f71cc3b5": {
      "_id": "36863ffb-40ec-48b9-94b1-9a99f71cc3b5",
      "context": "OIDC_CLAIMS",
      "createdBy": "null",
      "creationDate": 0,
      "default": true,
      "description": "Default global script for OIDC claims",
      "language": "JAVASCRIPT",
      "lastModifiedBy": "null",
      "lastModifiedDate": 0,
      "name": "OIDC Claims Script",
      "script": [
        "/*",
        " * Copyright 2014-2021 ForgeRock AS. All Rights Reserved",
        " *",
        " * Use of this code requires a commercial software license with ForgeRock AS",
        " * or with one of its affiliates. All use shall be exclusively subject",
        " * to such license between the licensee and ForgeRock AS.",
        " */",
        "",
        "/*",
        " * This script computes claim values returned in ID tokens and/or at the UserInfo Endpoint.",
        " * The claim values are computed for:",
        " * the claims derived from the requested scopes,",
        " * the claims provided by the authorization server,",
        " * and the claims requested by the client via the claims parameter.",
        " *",
        " * In the CONFIGURATION AND CUSTOMIZATION section, you can",
        " * define the scope-to-claims mapping, and",
        " * assign to each claim a resolver function that will compute the claim value.",
        " *",
        " * Defined variables (class references are provided below):",
        " * scopes - Set<String> (6).",
        " *          Always present, the requested scopes.",
        " * claims - Map<String, Object> (5).",
        " *          Always present, default server provided claims.",
        " * claimObjects - List<Claim> (7, 2).",
        " *                Always present, the default server provided claims.",
        " * requestedClaims - Map<String, Set<String>> (5).",
        " *                   Always present, not empty if the request contains the claims parameter and the server has enabled",
        " *                   claims_parameter_supported. A map of the requested claims to possible values, otherwise empty;",
        " *                   requested claims with no requested values will have a key but no value in the map. A key with",
        " *                   a single value in its Set (6) indicates that this is the only value that should be returned.",
        " * requestedTypedClaims - List<Claim> (7, 2).",
        " *                        Always present, the requested claims.",
        " *                        Requested claims with no requested values will have a claim with no values.",
        " *                        A claim with a single value indicates this is the only value that should be returned.",
        " * claimsLocales - List<String> (7).",
        " *                 The values from the 'claims_locales' parameter.",
        " *                 See https://openid.net/specs/openid-connect-core-1_0.html#ClaimsLanguagesAndScripts for the OIDC specification details.",
        " * requestProperties - Unmodifiable Map (5).",
        " *                     Always present, contains a map of request properties:",
        " *                     requestUri - The request URI.",
        " *                     realm - The realm that the request relates to.",
        " *                     requestParams - A map of the request params and/or posted data.",
        " *                                     Each value is a list of one or more properties.",
        " *                                     Please note that these should be handled in accordance with OWASP best practices:",
        " *                                     https://owasp.org/www-community/vulnerabilities/Unsafe_use_of_Reflection.",
        " * clientProperties - Unmodifiable Map (5).",
        " *                    Present if the client specified in the request was identified, contains a map of client properties:",
        " *                    clientId - The client's URI for the request locale.",
        " *                    allowedGrantTypes - List of the allowed grant types (org.forgerock.oauth2.core.GrantType) for the client.",
        " *                    allowedResponseTypes - List of the allowed response types for the client.",
        " *                    allowedScopes - List of the allowed scopes for the client.",
        " *                    customProperties - A map of the custom properties of the client.",
        " *                                       Lists or maps will be included as sub-maps; for example:",
        " *                                       customMap[Key1]=Value1 will be returned as customMap -> Key1 -> Value1.",
        " *                                       To add custom properties to a client, update the Custom Properties field",
        " *                                       in AM Console > Realm Name > Applications > OAuth 2.0 > Clients > Client ID > Advanced.",
        " * identity - AMIdentity (3).",
        " *            Always present, the identity of the resource owner.",
        " * session - SSOToken (4).",
        " *           Present if the request contains the session cookie, the user's session object.",
        " * scriptName - String (primitive).",
        " *              Always present, the display name of the script.",
        " * logger - Always present, the "OAuth2Provider" debug logger instance:",
        " *          https://backstage.forgerock.com/docs/am/7/scripting-guide/scripting-api-global-logger.html#scripting-api-global-logger.",
        " *          Corresponding files will be prefixed with: scripts.OIDC_CLAIMS.",
        " * httpClient - HTTP Client (8).",
        " *              Always present, the HTTP Client instance:",
        " *              https://backstage.forgerock.com/docs/am/7/scripting-guide/scripting-api-global-http-client.html#scripting-api-global-http-client.",
        " *              In order to use the client, you may need to add",
        " *              org.forgerock.http.Client,",
        " *              org.forgerock.http.protocol.*,",
        " *              and org.forgerock.util.promise.PromiseImpl",
        " *              to the allowed Java classes in the scripting engine configuration, as described in:",
        " *              https://backstage.forgerock.com/docs/am/7/scripting-guide/script-engine-security.html",
        " *",
        " * Return - a new UserInfoClaims(Map<String, Object> values, Map<String, List<String>> compositeScopes) (1) object.",
        " *          The result of the last statement in the script is returned to the server.",
        " *          Currently, the Immediately Invoked Function Expression (also known as Self-Executing Anonymous Function)",
        " *          is the last (and only) statement in this script, and its return value will become the script result.",
        " *          Do not use "return variable" statement outside of a function definition.",
        " *          See RESULTS section for additional details.",
        " *",
        " * Class reference:",
        " * (1) UserInfoClaims - https://backstage.forgerock.com/docs/am/7/apidocs/org/forgerock/oauth2/core/UserInfoClaims.html.",
        " * (2) Claim - https://backstage.forgerock.com/docs/am/7/apidocs/org/forgerock/openidconnect/Claim.html).",
        " *         An instance of org.forgerock.openidconnect.Claim has methods to access",
        " *         the claim name, requested values, locale, and whether the claim is essential.",
        " * (3) AMIdentity - https://backstage.forgerock.com/docs/am/7/apidocs/com/sun/identity/idm/AMIdentity.html.",
        " * (4) SSOToken - https://backstage.forgerock.com/docs/am/7/apidocs/com/iplanet/sso/SSOToken.html.",
        " * (5) Map - https://docs.oracle.com/en/java/javase/11/docs/api/java.base/java/util/HashMap.html,",
        " *           or https://docs.oracle.com/en/java/javase/11/docs/api/java.base/java/util/LinkedHashMap.html.",
        " * (6) Set - https://docs.oracle.com/en/java/javase/11/docs/api/java.base/java/util/HashSet.html.",
        " * (7) List - https://docs.oracle.com/en/java/javase/11/docs/api/java.base/java/util/ArrayList.html.",
        " * (8) Client - https://backstage.forgerock.com/docs/am/7/apidocs/org/forgerock/http/Client.html.",
        "*/",
        "",
        "(function () {",
        "    // SETUP",
        "",
        "    /**",
        "     * Claim processing utilities.",
        "     * An object that contains reusable functions for processing claims.",
        "     * @see CLAIM PROCESSING UTILITIES section for details.",
        "     */",
        "    var utils = getUtils();",
        "",
        "    // CONFIGURATION AND CUSTOMIZATION",
        "",
        "    /**",
        "     * OAuth 2.0 scope values (scopes) can be used by the Client to request OIDC claims.",
        "     *",
        "     * Call this configuration method, and pass in as the first argument",
        "     * an object that maps a scope value to an array of claim names",
        "     * to specify which claims need to be processed and returned for the requested scopes.",
        "     * @see {@link https://openid.net/specs/openid-connect-core-1_0.html#ScopeClaims}",
        "     * for the scope values that could be used to request claims as defined in the OIDC specification.",
        "     *",
        "     * Below, find a default configuration that is expected to work in the current environment.",
        "     *",
        "     * CUSTOMIZATION",
        "     * You can choose the claim names returned for a scope.",
        "     */",
        "    utils.setScopeClaimsMap({",
        "        profile: [",
        "            'name',",
        "            'family_name',",
        "            'given_name',",
        "            'zoneinfo',",
        "            'locale'",
        "        ],",
        "        email: ['email'],",
        "        address: ['address'],",
        "        phone: ['phone_number']",
        "    });",
        "",
        "    /**",
        "     * In this script, each claim",
        "     * derived from the requested scopes,",
        "     * provided by the authorization server, and",
        "     * requested by the client via the claims parameter",
        "     * will be processed by a function associated with the claim name.",
        "     *",
        "     * Call this configuration method, and pass in as the first argument",
        "     * an object that maps a claim name to a resolver function,",
        "     * which will be automatically executed for each claim processed by the script.",
        "     *",
        "     * The claim resolver function will receive the requested claim information",
        "     * in an instance of org.forgerock.openidconnect.Claim as the first argument.",
        "     * @see {@link https://backstage.forgerock.com/docs/am/7/apidocs/org/forgerock/openidconnect/Claim.html}",
        "     * for details on the Claim class.",
        "     *",
        "     * If the claim resolver function returns a value,",
        "     * other than undefined or null,",
        "     * the claim will be included in the script's results.",
        "     *",
        "     * The Claim instance provides methods to check",
        "     * what the name of the claim is,",
        "     * which values the claim request contains,",
        "     * whether the claim is essential, and",
        "     * which locale the claim is associated with.",
        "     * The resolver function can consider this information when computing and returning the claim value.",
        "     *",
        "     * Below, find a default configuration that is expected to work in the current environment.",
        "     * A reusable function, utils.getUserProfileClaimResolver(String attribute-name),",
        "     * is called to return a claim resolver function based on a user profile attribute.",
        "     * @see CLAIM RESOLVERS section for the implementation details and examples.",
        "     * For the address claim, an example of a claim resolver that uses another claim resolver is provided.",
        "     *",
        "     * CUSTOMIZATION",
        "     * You can reuse the predefined utils methods with your custom arguments.",
        "     * You can also specify a custom resolver function for a claim name,",
        "     * that will compute and return the claim value—as shown in the commented out example below.",
        "     */",
        "    utils.setClaimResolvers({",
        "        /*",
        "        // An example of a simple claim resolver function that is defined for a claim",
        "        // directly in the configuration object:",
        "        custom-claim-name: function (requestedClaim) {",
        "            // In this case, initially, the claim value comes straight from a user profile attribute value:",
        "            var claimValue = identity.getAttribute('custom-attribute-name').toArray()[0]",
        "",
        "            // Optionally, provide additional logic for processing (filtering, formatting, etc.) the claim value.",
        "            // You can use:",
        "            // requestedClaim.getName()",
        "            // requestedClaim.getValues()",
        "            // requestedClaim.getLocale()",
        "            // requestedClaim.isEssential()",
        "",
        "            return claimValue",
        "        },",
        "        */",
        "        /**",
        "         * The use of utils.getUserProfileClaimResolver shows how",
        "         * an argument passed to a function that returns a claim resolver",
        "         * becomes available to the resolver function (via its lexical context).",
        "         */",
        "        name: utils.getUserProfileClaimResolver('cn'),",
        "        family_name: utils.getUserProfileClaimResolver('sn'),",
        "        given_name: utils.getUserProfileClaimResolver('givenname'),",
        "        zoneinfo: utils.getUserProfileClaimResolver('preferredtimezone'),",
        "        locale: utils.getUserProfileClaimResolver('preferredlocale'),",
        "        email: utils.getUserProfileClaimResolver('mail'),",
        "        address: utils.getAddressClaimResolver(",
        "            /**",
        "             * The passed in user profile claim resolver function",
        "             * can be used by the address claim resolver function",
        "             * to obtain the claim value to be formatted as per the OIDC specification:",
        "             * @see https://openid.net/specs/openid-connect-core-1_0.html#AddressClaim.",
        "             */",
        "            utils.getUserProfileClaimResolver('postaladdress')",
        "        ),",
        "        phone_number: utils.getUserProfileClaimResolver('telephonenumber')",
        "    });",
        "",
        "    // CLAIM PROCESSING UTILITIES",
        "",
        "    /**",
        "     * @returns {object} An object that contains reusable claim processing utilities.",
        "     * @see PUBLIC METHODS section and the return statement for the list of exported functions.",
        "     */",
        "    function getUtils () {",
        "        // IMPORT JAVA",
        "",
        "        /**",
        "         * Provides Java scripting functionality.",
        "         * @see {@link https://developer.mozilla.org/en-US/docs/Mozilla/Projects/Rhino/Scripting_Java#javaimporter_constructor}.",
        "         */",
        "        var frJava = JavaImporter(",
        "            org.forgerock.oauth2.core.exceptions.InvalidRequestException,",
        "            org.forgerock.oauth2.core.UserInfoClaims,",
        "            org.forgerock.openidconnect.Claim,",
        "",
        "            java.util.LinkedHashMap,",
        "            java.util.ArrayList",
        "        );",
        "",
        "        // SET UP CONFIGURATION",
        "",
        "        /**",
        "         * Placeholder for a configuration option that contains",
        "         * an object that maps the supported scope values (scopes)",
        "         * and the corresponding claim names for each scope value.",
        "         */",
        "        var scopeClaimsMap;",
        "",
        "        /**",
        "         * Placeholder for a configuration option that contains",
        "         * an object that maps the supported claim names",
        "         * and the resolver functions returning the claim value.",
        "         */",
        "        var claimResolvers;",
        "",
        "        /**",
        "         * A (public) method that accepts an object that maps the supported scopes and the corresponding claim names,",
        "         * and assigns it to a (private) variable that serves as a configuration option.",
        "         * @param {object} params - An object that maps each supported scope value to an array of claim names,",
        "         * in order to specify which claims need to be processed for the requested scopes.",
        "         * @see {@link https://openid.net/specs/openid-connect-core-1_0.html#ScopeClaims} for details.",
        "         * @param {string[]} [params.profile] - An array of claim names to be returned if the profile scope is requested.",
        "         * @param {string[]} [params.email] - An array of claim names to be returned if the email scope is requested.",
        "         * @param {string[]} [params.address] - An array of claim names to be returned if the address scope is requested.",
        "         * @param {string[]} [params.phone] - An array of claim names to be returned if the phone scope is requested.",
        "         * @returns {undefined}",
        "         */",
        "        function setScopeClaimsMap(params) {",
        "            scopeClaimsMap = params;",
        "        }",
        "",
        "        /**",
        "         * A (public) method that accepts an object that maps the supported claim names",
        "         * and the resolver functions returning the claim value,",
        "         * and assigns it to a (private) variable that serves as a configuration option.",
        "         * @param {object} params - An object that maps",
        "         * each supported claim name to a function that computes and returns the claim value.",
        "         */",
        "        function setClaimResolvers(params) {",
        "            claimResolvers = params;",
        "        }",
        "",
        "        // CLAIM RESOLVERS",
        "",
        "        /**",
        "         * Claim resolvers are functions that return a claim value.",
        "         * @param {*}",
        "         * @returns {*}",
        "         */",
        "",
        "        /**",
        "         * Defines a claim resolver based on a user profile attribute.",
        "         * @param {string} attributeName - Name of the user profile attribute.",
        "         * @returns {function} A function that will determine the claim value",
        "         * based on the user profile attribute and the (requested) claim properties.",
        "         */",
        "        function getUserProfileClaimResolver (attributeName) {",
        "            /**",
        "             * Resolves a claim with a user profile attribute value.",
        "             * Returns undefined if the identity attribute is not populated,",
        "             * OR if the claim has requested values that do not contain the identity attribute value.",
        "             * ATTENTION: the aforementioned comparison is case-sensitive.",
        "             * @param {org.forgerock.openidconnect.Claim} claim",
        "             * An object that provides methods to obtain information/requirements associated with a claim.",
        "             * @see {@link https://backstage.forgerock.com/docs/am/7/apidocs/org/forgerock/openidconnect/Claim.html} for details.",
        "             * @returns {string|HashSet|undefined}",
        "             */",
        "            function resolveClaim(claim) {",
        "                var userProfileValue;",
        "",
        "                if (identity) {",
        "                    userProfileValue = getClaimValueFromSet(claim, identity.getAttribute(attributeName));",
        "",
        "                    if (userProfileValue && !userProfileValue.isEmpty()) {",
        "                        if (!claim.getValues() || claim.getValues().isEmpty() || claim.getValues().contains(userProfileValue)) {",
        "                            return userProfileValue;",
        "                        }",
        "                    }",
        "                }",
        "            }",
        "",
        "            return resolveClaim;",
        "        }",
        "",
        "        /**",
        "         * Returns an address claim resolver based on a claim value obtained with another claim resolver.",
        "         * @param {function} resolveClaim - A function that returns a claim value.",
        "         * @returns {function} A function that will accept a claim as an argument,",
        "         * run the claim resolver function for the claim and obtain the claim value,",
        "         * and apply additional formatting to the value before returning it.",
        "         */",
        "        function getAddressClaimResolver (resolveClaim) {",
        "            /**",
        "             * Creates an address claim object from a value returned by a claim resolver,",
        "             * and returns the address claim object as the claim value.",
        "             * @see {@link https://openid.net/specs/openid-connect-core-1_0.html#AddressClaim}.",
        "             * The claim value is obtained with a claim resolving function available from the closure.",
        "             * @param {org.forgerock.openidconnect.Claim} claim",
        "             * An object that provides methods to obtain information/requirements associated with a claim.",
        "             * @see {@link https://backstage.forgerock.com/docs/am/7/apidocs/org/forgerock/openidconnect/Claim.html} for details.",
        "             * @returns {java.util.LinkedHashMap|undefined} The address claim object created from a claim value.",
        "             */",
        "            function resolveAddressClaim(claim) {",
        "                var claimValue = resolveClaim(claim);",
        "                var addressObject;",
        "",
        "                if (isClaimValueValid(claimValue)) {",
        "                    addressObject = new frJava.LinkedHashMap();",
        "",
        "                    addressObject.put('formatted', claimValue);",
        "",
        "                    return addressObject;",
        "                }",
        "            }",
        "",
        "            return resolveAddressClaim;",
        "        }",
        "",
        "        /**",
        "         * Returns an essential claim resolver based on a claim value obtained with another claim resolver.",
        "         * @param {function} resolveClaim - A function that returns a claim value.",
        "         * @returns {function} A function that will accept a claim as an argument,",
        "         * run the claim resolver function for the claim and obtain the claim value,",
        "         * and apply additional logic for essential claims.",
        "         */",
        "        function getEssentialClaimResolver (resolveClaim) {",
        "            /**",
        "             * Returns a claim value or throws an error.",
        "             * The claim value is obtained with a claim resolving function available from the closure.",
        "             * Throws an exception if the claim is essential and no value is returned for the claim.",
        "             *",
        "             * Use of this resolver is optional.",
        "             * @see {@link https://openid.net/specs/openid-connect-core-1_0.html#IndividualClaimsRequests} stating:",
        "             * "Note that even if the Claims are not available because the End-User did not authorize their release or they are not present,",
        "             * the Authorization Server MUST NOT generate an error when Claims are not returned, whether they are Essential or Voluntary,",
        "             * unless otherwise specified in the description of the specific claim."",
        "             *",
        "             * @param {org.forgerock.openidconnect.Claim} claim",
        "             * An object that provides methods to obtain information/requirements associated with a claim.",
        "             * @see {@link https://backstage.forgerock.com/docs/am/7/apidocs/org/forgerock/openidconnect/Claim.html} for details.",
        "             * @returns {*}",
        "             * @throws {org.forgerock.oauth2.core.exceptions.InvalidRequestException}",
        "             */",
        "            function resolveEssentialClaim(claim) {",
        "                var claimValue = resolveClaim(claim);",
        "",
        "                if (claim.isEssential() && !isClaimValueValid(claimValue)) {",
        "                    throw new frJava.InvalidRequestException('Could not provide value for essential claim: ' + claim.getName());",
        "                }",
        "",
        "                return claimValue;",
        "            }",
        "",
        "            return resolveEssentialClaim;",
        "        }",
        "",
        "        /**",
        "         * Provides default resolution for a claim.",
        "         * Use it if a claim-specific resolver is not defined in the configuration.",
        "         * @param {org.forgerock.openidconnect.Claim} claim",
        "         * An object that provides methods to obtain information/requirements associated with a claim.",
        "         * @see {@link https://backstage.forgerock.com/docs/am/7/apidocs/org/forgerock/openidconnect/Claim.html} for details.",
        "         * @returns {*} A single value associated with this claim.",
        "         */",
        "        function resolveAnyClaim (claim) {",
        "            if (claim.getValues().size() === 1) {",
        "                return claim.getValues().toArray()[0];",
        "            }",
        "        }",
        "",
        "        // UTILITIES",
        "",
        "        /**",
        "         * Returns claim value from a set.",
        "         * If the set contains a single value, returns the value.",
        "         * If the set contains multiple values, returns the set.",
        "         * Otherwise, returns undefined.",
        "         *",
        "         * @param {org.forgerock.openidconnect.Claim} claim",
        "         * An object that provides methods to obtain information/requirements associated with a claim.",
        "         * @see {@link https://backstage.forgerock.com/docs/am/7/apidocs/org/forgerock/openidconnect/Claim.html} for details.",
        "         * @param {java.util.HashSet} set The set—for example, a user profile attribute value.",
        "         * @returns {string|java.util.HashSet|undefined}",
        "         */",
        "        function getClaimValueFromSet (claim, set) {",
        "            if (set && set.size()) {",
        "                if (set.size() === 1) {",
        "                    return set.toArray()[0];",
        "                } else {",
        "                    return set;",
        "                }",
        "            } else if (logger.warningEnabled()) {",
        "                logger.warning('OIDC Claims script. Got an empty set for claim: ' + claim.getName());",
        "            }",
        "        }",
        "",
        "        function isClaimValueValid (claimValue) {",
        "            if (typeof claimValue === 'undefined' || claimValue === null) {",
        "                return false;",
        "            }",
        "",
        "            return true;",
        "        }",
        "",
        "        // CLAIM PROCESSING",
        "",
        "        /**",
        "         * Constructs and returns an object populated with the computed claim values",
        "         * and the requested scopes mapped to the claim names.",
        "         * @returns {org.forgerock.oauth2.core.UserInfoClaims} The object to be returned to the authorization server.",
        "         * @see {@link https://backstage.forgerock.com/docs/am/7/apidocs/org/forgerock/oauth2/core/UserInfoClaims.html}.",
        "         * @see RESULTS section for the use of this function.",
        "         */",
        "        function getUserInfoClaims () {",
        "            return new frJava.UserInfoClaims(getComputedClaims(), getCompositeScopes());",
        "        }",
        "",
        "        /**",
        "         * Creates a map of (requested) claim names populated with the computed claim values.",
        "         * @returns {java.util.LinkedHashMap}",
        "         * A map of the requested claim names and the corresponding claim values.",
        "         */",
        "        function getComputedClaims () {",
        "            /**",
        "             * Creates a complete list of claim objects from:",
        "             * the claims derived from the scopes,",
        "             * the claims provided by the authorization server,",
        "             * and the claims requested by the client.",
        "             * @returns {java.util.ArrayList}",
        "             * Returns a complete list of org.forgerock.openidconnect.Claim objects available to the script.",
        "             * @see {@link https://backstage.forgerock.com/docs/am/7/apidocs/org/forgerock/openidconnect/Claim.html} for the claim object details.",
        "             */",
        "            function getClaims() {",
        "                /**",
        "                 * Returns a list of claim objects for the requested scopes.",
        "                 * Uses the scopeClaimsMap configuration option to derive the claim names;",
        "                 * no other properties of a claim derived from a scope are populated.",
        "                 * @returns {java.util.ArrayList}",
        "                 * A list of org.forgerock.openidconnect.Claim objects derived from the requested scopes.",
        "                 * @see {@link https://backstage.forgerock.com/docs/am/7/apidocs/org/forgerock/openidconnect/Claim.html} for the claim object details.",
        "                 */",
        "                function convertScopeToClaims() {",
        "                    var claims = new frJava.ArrayList();",
        "",
        "                    scopes.toArray().forEach(function (scope) {",
        "                        if (String(scope) !== 'openid' && scopeClaimsMap[scope]) {",
        "                            scopeClaimsMap[scope].forEach(function (claimName) {",
        "                                claims.add(new frJava.Claim(claimName));",
        "                            });",
        "                        }",
        "                    });",
        "",
        "                    return claims;",
        "                }",
        "",
        "                var claims = new frJava.ArrayList();",
        "",
        "                claims.addAll(convertScopeToClaims());",
        "                claims.addAll(claimObjects);",
        "                claims.addAll(requestedTypedClaims);",
        "",
        "                return claims;",
        "            }",
        "",
        "            /**",
        "             * Computes and returns a claim value.",
        "             * To obtain the claim value, uses the resolver function specified for the claim in the claimResolvers configuration object.",
        "             * @see claimResolvers",
        "             * If no resolver function is found, uses the default claim resolver function.",
        "             *",
        "             * @param {org.forgerock.openidconnect.Claim} claim",
        "             * An object that provides methods to obtain information/requirements associated with a claim.",
        "             * @see {@link https://backstage.forgerock.com/docs/am/7/apidocs/org/forgerock/openidconnect/Claim.html} for details.",
        "             * @returns {*} Claim value.",
        "             * @throws {org.forgerock.oauth2.core.exceptions.InvalidRequestException}",
        "             * Rethrows this exception if a claim resolver throws it.",
        "             * You can throw org.forgerock.oauth2.core.exceptions.InvalidRequestException from your custom claim resolver",
        "             * if you want to terminate the claim processing.",
        "             */",
        "            function computeClaim(claim) {",
        "                var resolveClaim;",
        "                var message;",
        "",
        "                try {",
        "                    resolveClaim = claimResolvers[claim.getName()] || resolveAnyClaim;",
        "",
        "                    return resolveClaim(claim);",
        "                } catch (e) {",
        "                    message = 'OIDC Claims script exception. Unable to resolve OIDC Claim. ' + e;",
        "",
        "                    if (String(e).indexOf('org.forgerock.oauth2.core.exceptions.InvalidRequestException') !== -1) {",
        "                        throw e;",
        "                    }",
        "",
        "                    if (logger.warningEnabled()) {",
        "                        logger.warning(message);",
        "                    }",
        "                }",
        "            }",
        "",
        "            var computedClaims = new frJava.LinkedHashMap();",
        "",
        "            getClaims().toArray().forEach(function (claim) {",
        "                var claimValue = computeClaim(claim);",
        "",
        "                if (isClaimValueValid(claimValue)) {",
        "                    computedClaims.put(claim.getName(), claimValue);",
        "                } else {",
        "                    /**",
        "                     * If a claim has been processed, but appears in the list again,",
        "                     * and its value cannot be computed under the new conditions,",
        "                     * the claim is removed from the final result.",
        "                     *",
        "                     * For example, a claim could be mapped to a scope and found in the user profile,",
        "                     * but also requested by the client with required values that don't match the computed one.",
        "                     * @see {link https://openid.net/specs/openid-connect-core-1_0.html#IndividualClaimsRequests}.",
        "                     * for the relevant OIDC specification details.",
        "                     */",
        "                    computedClaims.remove(claim.getName());",
        "                }",
        "            });",
        "",
        "            return computedClaims;",
        "        }",
        "",
        "        /**",
        "         * Creates a map of requested scopes and the corresponding claim names.",
        "         * @returns {java.util.LinkedHashMap}",
        "         */",
        "        function getCompositeScopes () {",
        "            var compositeScopes = new frJava.LinkedHashMap();",
        "",
        "            scopes.toArray().forEach(function (scope) {",
        "                var scopeClaims = new frJava.ArrayList();",
        "",
        "                if (scopeClaimsMap[scope]) {",
        "                    scopeClaimsMap[scope].forEach(function (claimName) {",
        "                        scopeClaims.add(claimName);",
        "                    });",
        "                }",
        "",
        "                if (scopeClaims.size()) {",
        "                    compositeScopes.put(scope, scopeClaims);",
        "                }",
        "            });",
        "",
        "            return compositeScopes;",
        "        }",
        "",
        "        // PUBLIC METHODS",
        "",
        "        return {",
        "            setScopeClaimsMap: setScopeClaimsMap,",
        "            setClaimResolvers: setClaimResolvers,",
        "            getUserProfileClaimResolver: getUserProfileClaimResolver,",
        "            getAddressClaimResolver: getAddressClaimResolver,",
        "            getEssentialClaimResolver: getEssentialClaimResolver,",
        "            getUserInfoClaims: getUserInfoClaims",
        "        };",
        "    }",
        "",
        "    // RESULTS",
        "",
        "    /**",
        "     * This script returns an instance of the org.forgerock.oauth2.core.UserInfoClaims class",
        "     * populated with the computed claim values and",
        "     * the requested scopes mapped to the claim names.",
        "     * @see {@link https://backstage.forgerock.com/docs/am/7/apidocs/org/forgerock/oauth2/core/UserInfoClaims.html}.",
        "     *",
        "     * Assigning it to a variable gives you an opportunity",
        "     * to log the content of the returned value during development.",
        "     */",
        "    var userInfoClaims = utils.getUserInfoClaims();",
        "",
        "    /*",
        "    logger.error(scriptName + ' results:')",
        "    logger.error('Values: ' + userInfoClaims.getValues())",
        "    logger.error('Scopes: ' + userInfoClaims.getCompositeScopes())",
        "    */",
        "",
        "    return userInfoClaims;",
        "}());",
        "",
      ],
    },
    "37bf200a-158f-4a45-8ee5-81516e4593f8": {
      "_id": "37bf200a-158f-4a45-8ee5-81516e4593f8",
      "context": "AUTHENTICATION_TREE_DECISION_NODE",
      "createdBy": "null",
      "creationDate": 0,
      "default": false,
      "description": "Display session info.",
      "language": "JAVASCRIPT",
      "lastModifiedBy": "null",
      "lastModifiedDate": 0,
      "name": "Display Session Info",
      "script": [
        "/* Display Session Info",
        " * ",
        " * Display Session Info.",
        " * ",
        " * This script does not need to be parametrized. It will work properly as is.",
        " * ",
        " * The Scripted Decision Node needs the following outcomes defined:",
        " * - true",
        " *",
        " * Author: volker.scheuber@forgerock.com",
        " */",
        "(function () {",
        "    outcome = "true";",
        "",
        "    var anchor = "anchor-".concat(generateNumericToken('xxx'));",
        "    var halign = "left";",
        "",
        "    var choices = [];",
        "      var defaultChoice = 0;",
        "  ",
        "      var include = ["org","idp","saas","profileType","givenName","sn","mail","roles","userName","UserId","Locale","authInstant","AuthLevel","Host","Service"];",
        "    var message = "";",
        "    if (typeof existingSession !== "undefined") {",
        "          message = "<h4>Session Info</h4><p style=\\"font-family:courier;\\">";",
        "          include.forEach(function (key) {",
        "              message += "<b>" + key + "</b>: " + existingSession.get(key) + "<br/>";",
        "        });",
        "         message += "</p><p style=\\"font-size:70%;font-family:courier;\\">"",
        "          var entries = existingSession.keySet().toArray();",
        "        entries.forEach(function (key) {",
        "              if (include.indexOf(""+key)===-1) {",
        "                message += "<b>" + key + "</b>: " + existingSession.get(key) + "<br/>";",
        "            }",
        "        });",
        "         message += "</p>"",
        "          choices.push("Goto SAML App");",
        "          choices.push("Goto OIDC App");",
        "          if (""+existingSession.get("profileType") === "persistent") {",
        "              choices.push("Goto Profile Page");",
        "        }",
        "          choices.push("Logout");",
        "    } else {",
        "          message = "<h4>No Session!</h4><p>"",
        "          choices.push("Login");",
        "    }",
        "    var script = "Array.prototype.slice.call(\\n".concat(",
        "      "document.getElementsByClassName('callback-component')).forEach(\\n").concat(",
        "      "function (e) {\\n").concat(",
        "      "  var message = e.firstElementChild;\\n").concat(",
        "      "  if (message.firstChild && message.firstChild.nodeName == '#text' && message.firstChild.nodeValue.trim() == '").concat(anchor).concat("') {\\n").concat(",
        "      "    message.className = \\"\\";\\n").concat(",
        "      "    message.style = \\"text-align: left; inline-size: 430px; overflow-wrap: break-word;\\";\\n").concat(",
        "      "    message.align = \\"").concat(halign).concat("\\";\\n").concat(",
        "      "    message.innerHTML = '").concat(message).concat("';\\n").concat(",
        "      "  }\\n").concat(",
        "      "})")",
        "  ",
        "    var fr = JavaImporter(",
        "        org.forgerock.openam.auth.node.api.Action,",
        "        javax.security.auth.callback.TextOutputCallback,",
        "        com.sun.identity.authentication.callbacks.ScriptTextOutputCallback,",
        "        javax.security.auth.callback.ConfirmationCallback",
        "    )",
        "    if (callbacks.isEmpty()) {",
        "        action = fr.Action.send(",
        "            new fr.TextOutputCallback(",
        "                fr.TextOutputCallback.INFORMATION,",
        "                anchor",
        "            ),",
        "            new fr.ScriptTextOutputCallback(script),",
        "            new fr.ConfirmationCallback(",
        "                fr.ConfirmationCallback.INFORMATION,",
        "                choices,",
        "                defaultChoice",
        "            )",
        "        ).build()",
        "    }",
        "    else {",
        "      outcome = choices[callbacks.get(2).getSelectedIndex()];",
        "      action = fr.Action.goTo(outcome).build();",
        "    }",
        "",
        "     /*",
        "      * Generate a token in the desired format. All 'x' characters will be replaced with a random number 0-9.",
        "      * ",
        "      * Example:",
        "      * 'xxxxx' produces '28535'",
        "      * 'xxx-xxx' produces '432-521'",
        "      */",
        "    function generateNumericToken(format) {",
        "        return format.replace(/[x]/g, function(c) {",
        "            var r = Math.random()*10|0;",
        "            var v = r;",
        "            return v.toString(10);",
        "        });",
        "    }",
        "}());",
        "",
        "/*",
        "Locale: en_US",
        "authInstant: 2021-09-25T17:28:38Z",
        "Organization: o=alpha,ou=services,ou=am-config",
        "mail: volker@scheuber.name",
        "Principals: volker@scheuber.name",
        "UserProfile: Ignore",
        "CharSet: UTF-8",
        "FullLoginURL: /am/UI/Login?code=4%2F0AX4XfWjiEfbrfIstsFUKoaibPCQmTbuPonLfuhpYhjfj-N5QEe9u2P5Os9wNadGaPsQVBA&scope=email+profile+https%3A%2F%2Fwww.googleapis.com%2Fauth%2Fuserinfo.email+https%3A%2F%2Fwww.googleapis.com%2Fauth%2Fuserinfo.profile+openid&realm=%2Falpha&state=fykprtfmeclrgwszmomvqxnlirrehcs&hd=scheuber.name&prompt=none&authuser=2",
        "clientType: genericHTML",
        "goto: /am/XUI/?realm=/alpha&authIndexType=service&authIndexValue=SessionInfo&ForceAuth=true#/",
        "AMCtxId: d3188938-d07e-4134-95db-f1cc97fc6c40-503275",
        "loginURL: /am/UI/Login",
        "sn: Scheuber",
        "amlbcookie: 01",
        "HostName: 99.72.28.182",
        "UserToken: volker@scheuber.name",
        "givenName: Volker",
        "successURL: /am/XUI/?realm=/alpha&authIndexType=service&authIndexValue=SessionInfo&ForceAuth=true#/",
        "Service: Router",
        "Host: 99.72.28.182",
        "AuthLevel: 0",
        "idp: google",
        "UserId: volker@scheuber.name",
        "sun.am.UniversalIdentifier: id=volker@scheuber.name,ou=user,o=alpha,ou=services,ou=am-config",
        "OidcSid: ACuTQIObj0tajPYhLOjMlWc2urM",
        "Principal: id=volker@scheuber.name,ou=user,o=alpha,ou=services,ou=am-config",
        " */",
      ],
    },
    "3814d347-a2f2-4be9-a810-ab41a1e374bd": {
      "_id": "3814d347-a2f2-4be9-a810-ab41a1e374bd",
      "context": "AUTHENTICATION_TREE_DECISION_NODE",
      "createdBy": "null",
      "creationDate": 0,
      "default": false,
      "description": "Hide buttons on the journey page.",
      "language": "JAVASCRIPT",
      "lastModifiedBy": "null",
      "lastModifiedDate": 0,
      "name": "Remove Button - imported (1)",
      "script": [
        "/* Remove Button",
        " *",
        " * Author: volker.scheuber@forgerock.com",
        " * ",
        " * Hide buttons on the journey page.",
        " * ",
        " * This script does not need to be parametrized. It will work properly as is.",
        " * ",
        " * The Scripted Decision Node needs the following outcomes defined:",
        " * - true",
        " */",
        "(function () {",
        "    var script = "Array.prototype.slice.call(document.getElementsByTagName('button')).forEach(function (e) {e.style.display = 'none'})"",
        "    var fr = JavaImporter(",
        "        org.forgerock.openam.auth.node.api.Action,",
        "        javax.security.auth.callback.TextOutputCallback,",
        "        com.sun.identity.authentication.callbacks.ScriptTextOutputCallback",
        "    )",
        "    var message = " "",
        "    if (callbacks.isEmpty()) {",
        "        action = fr.Action.send(",
        "            new fr.TextOutputCallback(",
        "                fr.TextOutputCallback.INFORMATION,",
        "                message",
        "            ),",
        "            new fr.ScriptTextOutputCallback(script)",
        "        ).build()",
        "    }",
        "}());",
      ],
    },
    "38f698de-fe11-43d2-8480-44e1312d121d": {
      "_id": "38f698de-fe11-43d2-8480-44e1312d121d",
      "context": "AUTHENTICATION_TREE_DECISION_NODE",
      "createdBy": "null",
      "creationDate": 0,
      "default": false,
      "description": "FRAAS-7955 Both States",
      "language": "JAVASCRIPT",
      "lastModifiedBy": "null",
      "lastModifiedDate": 0,
      "name": "FRAAS-7955 Both States",
      "script": [
        "outcome = "true";",
        "",
        "setSharedObjectAttribute("userName", "FRAAS-7955");",
        "setSharedObjectAttribute("givenName", "First-shared");",
        "setSharedObjectAttribute("sn", "Last-shared");",
        "setSharedObjectAttribute("mail", "first.last-shared@company.com");",
        "",
        "setTransientObjectAttribute("userName", "FRAAS-7955");",
        "setTransientObjectAttribute("givenName", "First-transient");",
        "setTransientObjectAttribute("sn", "Last-transient");",
        "setTransientObjectAttribute("mail", "first.last-transient@company.com");",
        "",
        "/*",
        " * Store attributes in shared state for use with the Create/Patch Object nodes.",
        " */",
        "function setSharedObjectAttribute(name, value) {",
        "       var storage = sharedState.get("objectAttributes");",
        "    if (storage && value) {",
        "          if (storage.put) {",
        "              storage.put(name, value);",
        "        }",
        "          else {",
        "              storage[name] = value;",
        "        }",
        "    }",
        "    else if (value) {",
        "        sharedState.put("objectAttributes", JSON.parse("{\\""+name+"\\":\\""+value+"\\"}"));",
        "    }",
        "}",
        "",
        "/*",
        " * Store attributes in transient state for use with the Create/Patch Object nodes.",
        " */",
        "function setTransientObjectAttribute(name, value) {",
        "    var transientStorage = transientState.get("objectAttributes");",
        "    if (transientStorage && value) {",
        "          if (transientStorage.put) {",
        "            transientStorage.put(name, value);",
        "        }",
        "          else {",
        "            transientStorage[name] = value;",
        "        }",
        "    }",
        "    else if (value) {",
        "    transientState.put("objectAttributes", JSON.parse("{\\""+name+"\\":\\""+value+"\\"}"));",
        "    }",
        "}",
      ],
    },
    "3981c0d3-0e3a-4c1d-be6b-5442e8acd3a1": {
      "_id": "3981c0d3-0e3a-4c1d-be6b-5442e8acd3a1",
      "context": "AUTHENTICATION_TREE_DECISION_NODE",
      "createdBy": "null",
      "creationDate": 0,
      "default": false,
      "description": "Store the profile information in objectAttributes in session properties.",
      "language": "JAVASCRIPT",
      "lastModifiedBy": "null",
      "lastModifiedDate": 0,
      "name": "Store Profile In Session",
      "script": [
        "/* Store Profile In Session",
        " * ",
        " * Store the profile information in objectAttributes in session properties.",
        " * ",
        " * This script does not need to be parametrized. It will work properly as is.",
        " * ",
        " * The Scripted Decision Node needs the following outcomes defined:",
        " * - true",
        " *",
        " * Author: jake.feasel@forgerock.com, volker.scheuber@forgerock.com",
        " */",
        "(function () {",
        "      logger.message("Store Profile In Session: start");",
        "      outcome = "true";",
        "    var goTo = org.forgerock.openam.auth.node.api.Action.goTo;",
        "    myGoto = goTo(outcome);",
        "      ",
        "      var routedIDP = sharedState.get("routedIDPs").get(0);",
        "      if (routedIDP.get("_id")) {",
        "        myGoto.putSessionProperty("org", routedIDP.get("name"));",
        "        myGoto.putSessionProperty("idp", routedIDP.get("idpName"));",
        "          myGoto.putSessionProperty("saas", "true");",
        "    }",
        "      else {",
        "          myGoto.putSessionProperty("idp", "local");",
        "          myGoto.putSessionProperty("saas", "false");",
        "    }",
        "      myGoto.putSessionProperty("userName", sharedState.get("username"));",
        "  ",
        "      var profileAttrs = ["givenName","sn","mail"];",
        "      ",
        "      var userid = sharedState.get("_id")",
        "      if (userid) {",
        "          myGoto.putSessionProperty("profileType", "persistent");",
        "          profileAttrs.forEach(function (key) {",
        "            myGoto.putSessionProperty(key, idRepository.getAttribute(userid, key).iterator().next());",
        "        });",
        "    }",
        "    else {",
        "          myGoto.putSessionProperty("profileType", "transient");",
        "    }",
        "",
        "      var include = ["givenName","sn","mail","roles"];",
        "  ",
        "    var attrs = sharedState.get("objectAttributes");",
        "      var entries = null;",
        "      if (attrs) {",
        "          entries = attrs.entrySet().toArray();",
        "        entries.forEach(function (entry) {",
        "              if (include.indexOf(""+entry.getKey()) > -1) {",
        "                myGoto.putSessionProperty(entry.getKey(), entry.getValue());",
        "            }",
        "        });",
        "    }",
        "",
        "    attrs = transientState.get("objectAttributes");",
        "      if (attrs) {",
        "          entries = attrs.entrySet().toArray();",
        "        entries.forEach(function (entry) {",
        "              if (include.indexOf(""+entry.getKey()) > -1) {",
        "                myGoto.putSessionProperty(entry.getKey(), entry.getValue());",
        "            }",
        "        });",
        "    }",
        "",
        "      logger.message("Store Profile In Session: done [outcome={}]", outcome);",
        "    action = myGoto.build();",
        "}());",
      ],
    },
    "39c08084-1238-43e8-857f-2e11005eac49": {
      "_id": "39c08084-1238-43e8-857f-2e11005eac49",
      "context": "OAUTH2_ACCESS_TOKEN_MODIFICATION",
      "createdBy": "null",
      "creationDate": 0,
      "default": false,
      "description": "Default alpha realm script for OAuth2 Access Token Modification",
      "language": "JAVASCRIPT",
      "lastModifiedBy": "null",
      "lastModifiedDate": 0,
      "name": "Alpha OAuth2 Access Token Modification Script",
      "script": [
        "/*",
        " * Copyright 2019-2021 ForgeRock AS. All Rights Reserved.",
        " *",
        " * Use of this code requires a commercial software license with ForgeRock AS",
        " * or with one of its affiliates. All use shall be exclusively subject",
        " * to such license between the licensee and ForgeRock AS.",
        " */",
        "",
        "/*",
        " * This script lets you modify information associated with an OAuth2 access token",
        " * with methods provided by the AccessToken (1) interface.",
        " * The changes made to OAuth2 access tokens will directly impact the size of the CTS tokens,",
        " * and, similarly, the size of the JWTs if client-based OAuth2 tokens are utilized.",
        " * When adding/updating fields make sure that the token size remains within client/user-agent limits.",
        " *",
        " * Defined variables:",
        " * accessToken - AccessToken (1).",
        " *               The access token to be updated.",
        " *               Mutable object, all changes to the access token will be reflected.",
        " * scopes - Set<String> (6).",
        " *          Always present, the requested scopes.",
        " * requestProperties - Unmodifiable Map (5).",
        " *                     Always present, contains a map of request properties:",
        " *                     requestUri - The request URI.",
        " *                     realm - The realm that the request relates to.",
        " *                     requestParams - A map of the request params and/or posted data.",
        " *                                     Each value is a list of one or more properties.",
        " *                                     Please note that these should be handled in accordance with OWASP best practices:",
        " *                                     https://owasp.org/www-community/vulnerabilities/Unsafe_use_of_Reflection.",
        " * clientProperties - Unmodifiable Map (5).",
        " *                    Present if the client specified in the request was identified, contains a map of client properties:",
        " *                    clientId - The client's URI for the request locale.",
        " *                    allowedGrantTypes - List of the allowed grant types (org.forgerock.oauth2.core.GrantType) for the client.",
        " *                    allowedResponseTypes - List of the allowed response types for the client.",
        " *                    allowedScopes - List of the allowed scopes for the client.",
        " *                    customProperties - A map of the custom properties of the client.",
        " *                                       Lists or maps will be included as sub-maps; for example:",
        " *                                       customMap[Key1]=Value1 will be returned as customMap -> Key1 -> Value1.",
        " *                                       To add custom properties to a client, update the Custom Properties field",
        " *                                       in AM Console > Realm Name > Applications > OAuth 2.0 > Clients > Client ID > Advanced.",
        " * identity - AMIdentity (3).",
        " *            Always present, the identity of the resource owner.",
        " * session - SSOToken (4).",
        " *           Present if the request contains the session cookie, the user's session object.",
        " * scriptName - String (primitive).",
        " *              Always present, the display name of the script.",
        " * logger - Always present, the "OAuth2Provider" debug logger instance:",
        " *          https://backstage.forgerock.com/docs/am/7/scripting-guide/scripting-api-global-logger.html#scripting-api-global-logger.",
        " *          Corresponding log files will be prefixed with: scripts.OAUTH2_ACCESS_TOKEN_MODIFICATION.",
        " * httpClient - HTTP Client (8).",
        " *              Always present, the HTTP Client instance:",
        " *              https://backstage.forgerock.com/docs/am/7/scripting-guide/scripting-api-global-http-client.html#scripting-api-global-http-client.",
        " *",
        " * Return - no value is expected, changes shall be made to the accessToken parameter directly.",
        " *",
        " * Class reference:",
        " * (1) AccessToken - https://backstage.forgerock.com/docs/am/7/apidocs/org/forgerock/oauth2/core/AccessToken.html.",
        " * (3) AMIdentity - https://backstage.forgerock.com/docs/am/7/apidocs/com/sun/identity/idm/AMIdentity.html.",
        " * (4) SSOToken - https://backstage.forgerock.com/docs/am/7/apidocs/com/iplanet/sso/SSOToken.html.",
        " * (5) Map - https://docs.oracle.com/en/java/javase/11/docs/api/java.base/java/util/HashMap.html,",
        " *           or https://docs.oracle.com/en/java/javase/11/docs/api/java.base/java/util/LinkedHashMap.html.",
        " * (6) Set - https://docs.oracle.com/en/java/javase/11/docs/api/java.base/java/util/HashSet.html.",
        " * (8) Client - https://backstage.forgerock.com/docs/am/7/apidocs/org/forgerock/http/Client.html.",
        " */",
        "",
        "/* EXAMPLE",
        "(function () {",
        "    var frJava = JavaImporter(",
        "        org.forgerock.http.protocol.Request,",
        "        org.forgerock.http.protocol.Response",
        "    );",
        "",
        "    // Always includes this field in the token.",
        "    accessToken.setField('key1', 'value1');",
        "",
        "    // Receives and adds to the access token additional values by performing a REST call to an external service.",
        "    // WARNING: Below, you will find a reference to a third-party site, which is provided only as an example.",
        "    var uri = 'https://jsonplaceholder.typicode.com/posts';",
        "",
        "    try {",
        "        var request = new frJava.Request();",
        "",
        "        // You can chain methods that return the request object.",
        "        request.setUri(uri)",
        "            .setMethod('POST')",
        "            .setEntity(JSON.stringify({",
        "                updatedFields: {",
        "                    key2: 'value2',",
        "                    key3: 'value3'",
        "                }",
        "            }));",
        "",
        "        // You can call a method when chaining is not possible.",
        "        request.getHeaders().add('Content-Type', 'application/json; charset=UTF-8');",
        "",
        "        // Sends the request and receives the response.",
        "        var response = httpClient.send(request).getOrThrow();",
        "",
        "        // Checks if the response status is as expected.",
        "        if (response.getStatus() === org.forgerock.http.protocol.Status.CREATED) {",
        "            var result = JSON.parse(response.getEntity().getString());",
        "",
        "            // Set multiple token fields at once.",
        "            accessToken.setFields(result.updatedFields);",
        "        } else {",
        "            logger.error('Unable to obtain access token modifications. Status: ' + response.getStatus() + '. Content: ' + response.getEntity().getString());",
        "        }",
        "    } catch (e) {",
        "        logger.error('The request processing was interrupted. ' + e);",
        "",
        "        // The access token request fails with the HTTP 500 error in this case.",
        "        throw ('Unable to obtain response from: ' + uri);",
        "    }",
        "",
        "    // Adds new fields containing identity attribute values to the access token.",
        "    accessToken.setField('mail', identity.getAttribute('mail'));",
        "    accessToken.setField('phone', identity.getAttribute('telephoneNumber').toArray()[0]);",
        "",
        "    // Adds new fields containing the session property values.",
        "    // NOTE: session may not be available for non-interactive authorization grants.",
        "    if (session) {",
        "        try {",
        "            accessToken.setField('ipAddress', session.getProperty('Host'));",
        "        } catch (e) {",
        "            logger.error('Unable to retrieve session property value. ' + e);",
        "        }",
        "    }",
        "",
        "    // Removes a native field from the token entry, that was set by AM.",
        "    // WARNING: removing native fields from the token may result in loss of functionality.",
        "    // accessToken.removeTokenName()",
        "",
        "    // No return value is expected. Let it be undefined.",
        "}());",
        "*/",
      ],
    },
    "3b81d8e6-55f3-4937-bbbb-d62233cc6a0f": {
      "_id": "3b81d8e6-55f3-4937-bbbb-d62233cc6a0f",
      "context": "AUTHENTICATION_TREE_DECISION_NODE",
      "createdBy": "null",
      "creationDate": 0,
      "default": false,
      "description": "Display launch panel with journeys.",
      "language": "JAVASCRIPT",
      "lastModifiedBy": "null",
      "lastModifiedDate": 0,
      "name": "Launcher",
      "script": [
        "/* Display States",
        " * ",
        " * Display sharedState and transientState.",
        " * ",
        " * This script does not need to be parametrized. It will work properly as is.",
        " * ",
        " * The Scripted Decision Node needs the following outcomes defined:",
        " * - true",
        " *",
        " * Author: volker.scheuber@forgerock.com",
        " */",
        "(function () {",
        "    outcome = "true";",
        "",
        "    var anchor = "anchor-".concat(generateNumericToken('xxx'));",
        "    var halign = "left";",
        "    var message = "<p>Authentication/Registration/MFA</p> \\",
        "                   <ul style=\\"text-align:left;\\"> \\",
        "                     <li><a href=\\"#/service/Router\\">IDP Discovery</a></li> \\",
        "                     <li><a href=\\"#/service/AA-Registration\\">Registration</a> (<a href=\\"#/service/Registration\\">classic</a>)</li> \\",
        "                     <li><a href=\\"#/service/AA-Login\\">Authentication</a> (<a href=\\"#/service/Login\\">classic</a>, <a href=\\"#/service/Passthru\\">pass-through</a>)</li> \\",
        "                     <li><a href=\\"#/service/PasswordBreachDetection\\">Password Breach Detection</a></li> \\",
        "                     <li><a href=\\"#/service/WebAuthN\\">Fido</a> (<a href=\\"#/service/WebAuthNRegistration\\">Registration</a>)</li> \\",
        "                     <li><a href=\\"#/service/Push\\">Push</a></li> \\",
        "                     <li><a href=\\"#/service/ResetPassword\\">Forgot Password</a></li> \\",
        "                     <li><a href=\\"#/service/ForgottenUsername\\">Forgot Username</a></li> \\",
        "                     <li><a href=\\"https://idc.scheuber.io/login?authIndexType=service&authIndexValue=Azure\\">Azure (SP-init)</a></li> \\",
        "                     <li><a href=\\"https://idc.scheuber.io/login?authIndexType=service&authIndexValue=ADFSOIDC\\">ADFS (OIDC)</a></li> \\",
        "                   </ul> \\",
        "                   <p>Applications</p> \\",
        "                   <ul style=\\"text-align:left;\\"> \\",
        "                     <li><a href=\\"https://ig.mytestrun.com/ig/studio/\\">Identity Gateway Developer Studio</a></li> \\",
        "                     <li><a href=\\"https://ig.mytestrun.com/grafana\\">Grafana</a> (<a href=\\"https://ig.mytestrun.com/prometheus\\">Prometheus</a>)</li> \\",
        "                     <li><a href=\\"https://ig.mytestrun.com/expanse\\">The Expanse Fan Page</a></li> \\",
        "                     <li>Identity Gateway \\",
        "                        <ul> \\",
        "                          <li>Sample App <a href=\\"https://ig.mytestrun.com/ig-sample-app/login\\">Replay</a> (<a href=\\"https://idc.scheuber.io/login?authIndexType=service&authIndexValue=ResetReplayCredentials&ForceAuth=true\\">reset</a>)|<a href=\\"https://ig.mytestrun.com/ig-manual-app/login\\">Manual</a> (<a href=\\"https://ig.mytestrun.com/ig-manual-app/logout\\">logout</a>)<br>Credentials: <code>demo</code>/<code>Ch4ng31t</code></li> \\",
        "                          <li>AuthZ: <a href=\\"https://ig.mytestrun.com/forgerock/app1/\\">app1</a> (pub)|<a href=\\"https://ig.mytestrun.com/forgerock/app2/\\">app2</a> (sso)|<a href=\\"https://ig.mytestrun.com/forgerock/app3/\\">app3</a> (sso)|<a href=\\"https://ig.mytestrun.com/forgerock/pay/\\">pay</a> (tx)<br>Policy Set: <code>apps</code></li> \\",
        "                        </ul> \\",
        "                       </li> \\",
        "                     <li>Web Agent \\",
        "                        <ul> \\",
        "                          <li>AuthZ: <a href=\\"https://apps.mytestrun.com/app1/\\">app1</a> (pub)|<a href=\\"https://apps.mytestrun.com/app2/\\">app2</a> (sso)|<a href=\\"https://apps.mytestrun.com/app3/\\">app3</a> (sso)|<a href=\\"https://apps.mytestrun.com/pay/\\">pay</a> (tx)<br>Policy Set: <code>apps</code></li> \\",
        "                        </ul> \\",
        "                       </li> \\",
        "                   </ul> \\",
        "                   <p>Dynamic Branding (Themes)</p> \\",
        "                   <ul style=\\"text-align:left;\\"> \\",
        "                     <li><a href=\\"#/service/ThemeByLanguage\\">Change theme based on users language</a> (<a href=\\"#/service/ThemeByLanguageMulti\\">multi</a>)</li> \\",
        "                     <li><a href=\\"#/service/ThemeByProfileData\\">Change theme to expose a new feature (early adopters)</a></li> \\",
        "                     <li><a href=\\"#/service/Router\\">Change brand based on users membership of an organization</a></li> \\",
        "                     <li><a href=\\"#/service/ThemeByPreference\\">Change Look and feel based on user accessibility properties</a></li> \\",
        "                     <li><a href=\\"#/service/ThemedMFALogin\\">Change look and feel based step up Authentication</a></li> \\",
        "                   </ul> \\",
        "                   <p>Select Theme</p> \\",
        "                   <ul style=\\"text-align:left;\\"> \\",
        "                     <li><a href=\\"?themeId=Expanse#/service/Launcher\\">Expanse</a></li> \\",
        "                     <li><a href=\\"?realm=/alpha&themeId=FORG#/service/Launcher\\">FORG</a></li> \\",
        "                     <li><a href=\\"?realm=/alpha&themeId=Highlander#/service/Launcher\\">Highlander</a></li> \\",
        "                     <li><a href=\\"?realm=/alpha&themeId=Robroy#/service/Launcher\\">Robroy</a></li> \\",
        "                     <li><a href=\\"?realm=/alpha&themeId=Zardoz#/service/Launcher\\">Zardoz</a></li> \\",
        "                     <li><a href=\\"?realm=/alpha&themeId=woolmark#/service/Launcher\\">woolmark</a></li> \\",
        "                     <li>Other: <a href=\\"?realm=/alpha&themeId=AS#/service/Launcher\\">AS</a>, <a href=\\"?realm=/alpha&themeId=FX#/service/Launcher\\">FX</a></li> \\",
        "                   </ul>";",
        "    var script = "Array.prototype.slice.call(\\n".concat(",
        "      "document.getElementsByClassName('callback-component')).forEach(\\n").concat(",
        "      "function (e) {\\n").concat(",
        "      "  var message = e.firstElementChild;\\n").concat(",
        "      "  if (message.firstChild && message.firstChild.nodeName == '#text' && message.firstChild.nodeValue.trim() == '").concat(anchor).concat("') {\\n").concat(",
        "      "    message.className = \\"\\";\\n").concat(",
        "      "    message.style = \\"text-align: left; inline-size: 430px; overflow-wrap: break-word;\\";\\n").concat(",
        "      "    message.align = \\"").concat(halign).concat("\\";\\n").concat(",
        "      "    message.innerHTML = '").concat(message).concat("';\\n").concat(",
        "      "  }\\n").concat(",
        "      "})")",
        "    var fr = JavaImporter(",
        "        org.forgerock.openam.auth.node.api.Action,",
        "        javax.security.auth.callback.TextOutputCallback,",
        "        com.sun.identity.authentication.callbacks.ScriptTextOutputCallback",
        "    )",
        "    if (message.length && callbacks.isEmpty()) {",
        "        action = fr.Action.send(",
        "            new fr.TextOutputCallback(",
        "                fr.TextOutputCallback.INFORMATION,",
        "                anchor",
        "            ),",
        "            new fr.ScriptTextOutputCallback(script)",
        "        ).build()",
        "    }",
        "    else {",
        "      action = fr.Action.goTo(outcome).build();",
        "    }",
        "",
        "     /*",
        "      * Generate a token in the desired format. All 'x' characters will be replaced with a random number 0-9.",
        "      * ",
        "      * Example:",
        "      * 'xxxxx' produces '28535'",
        "      * 'xxx-xxx' produces '432-521'",
        "      */",
        "    function generateNumericToken(format) {",
        "        return format.replace(/[x]/g, function(c) {",
        "            var r = Math.random()*10|0;",
        "            var v = r;",
        "            return v.toString(10);",
        "        });",
        "    }",
        "}());",
      ],
    },
    "3cb43516-ae69-433a-8787-501d45db14e9": {
      "_id": "3cb43516-ae69-433a-8787-501d45db14e9",
      "context": "AUTHENTICATION_TREE_DECISION_NODE",
      "createdBy": "null",
      "creationDate": 0,
      "default": false,
      "description": "Display sharedState, transientState, and headers.",
      "language": "JAVASCRIPT",
      "lastModifiedBy": "null",
      "lastModifiedDate": 0,
      "name": "debug",
      "script": [
        "/* debug",
        " *",
        " * Author: volker.scheuber@forgerock.com",
        " * ",
        " * Display sharedState, transientState, and headers.",
        " * ",
        " * This script does not need to be parametrized. It will work properly as is.",
        " * ",
        " * The Scripted Decision Node needs the following outcomes defined:",
        " * - true",
        " */",
        "var anchor = "anchor-".concat(generateNumericToken('xxx'));",
        "var halign = "left";",
        "var message = "<p><b>Shared State</b>:<br/>".concat(",
        "      sharedState.toString()).concat("</p>").concat(",
        "    "<p><b>Transient State</b>:<br/>").concat(",
        "      transientState.toString()).concat("</p>").concat(",
        "    "<p><b>Request Headers</b>:<br/>").concat(",
        "      requestHeaders.toString()).concat("</p>")",
        "var script = "Array.prototype.slice.call(\\n".concat(",
        "  "document.getElementsByClassName('callback-component')).forEach(\\n").concat(",
        "  "function (e) {\\n").concat(",
        "  "  var message = e.firstElementChild;\\n").concat(",
        "  "  if (message.firstChild && message.firstChild.nodeName == '#text' && message.firstChild.nodeValue.trim() == '").concat(anchor).concat("') {\\n").concat(",
        "  "    message.className = \\"text-left\\";\\n").concat(",
        "  "    message.align = \\"").concat(halign).concat("\\";\\n").concat(",
        "  "    message.innerHTML = '").concat(message).concat("';\\n").concat(",
        "  "  }\\n").concat(",
        "  "})")",
        "var fr = JavaImporter(",
        "    org.forgerock.openam.auth.node.api.Action,",
        "    javax.security.auth.callback.TextOutputCallback,",
        "    com.sun.identity.authentication.callbacks.ScriptTextOutputCallback",
        ")",
        "if (message.length && callbacks.isEmpty()) {",
        "    action = fr.Action.send(",
        "        new fr.TextOutputCallback(",
        "            fr.TextOutputCallback.INFORMATION,",
        "            anchor",
        "        ),",
        "        new fr.ScriptTextOutputCallback(script)",
        "    ).build()",
        "}",
        "else {",
        "  action = fr.Action.goTo("true").build();",
        "}",
        "",
        " /*",
        "  * Generate a token in the desired format. All 'x' characters will be replaced with a random number 0-9.",
        "  * ",
        "  * Example:",
        "  * 'xxxxx' produces '28535'",
        "  * 'xxx-xxx' produces '432-521'",
        "  */",
        "function generateNumericToken(format) {",
        "    return format.replace(/[x]/g, function(c) {",
        "        var r = Math.random()*10|0;",
        "        var v = r;",
        "        return v.toString(10);",
        "    });",
        "}",
      ],
    },
    "3d97c436-42c0-4dd0-a571-ea6f34f752b3": {
      "_id": "3d97c436-42c0-4dd0-a571-ea6f34f752b3",
      "context": "SOCIAL_IDP_PROFILE_TRANSFORMATION",
      "createdBy": "null",
      "creationDate": 0,
      "default": true,
      "description": "Normalizes raw profile data from Itsme",
      "language": "GROOVY",
      "lastModifiedBy": "null",
      "lastModifiedDate": 0,
      "name": "Itsme Profile Normalization",
      "script": [
        "/*",
        " * Copyright 2020-2021 ForgeRock AS. All Rights Reserved",
        " *",
        " * Use of this code requires a commercial software license with ForgeRock AS.",
        " * or with one of its affiliates. All use shall be exclusively subject",
        " * to such license between the licensee and ForgeRock AS.",
        " */",
        "",
        "import static org.forgerock.json.JsonValue.field",
        "import static org.forgerock.json.JsonValue.json",
        "import static org.forgerock.json.JsonValue.object",
        "",
        "import org.forgerock.json.JsonValue",
        "",
        "JsonValue managedUser = json(object(",
        "        field("id", rawProfile.sub),",
        "        field("displayName", rawProfile.name),",
        "        field("givenName", rawProfile.given_name),",
        "        field("familyName", rawProfile.family_name),",
        "        field("username", rawProfile.email),",
        "        field("email", rawProfile.email)))",
        "return managedUser",
      ],
    },
    "3fff65f0-b3fe-40c5-8e82-b6d2e39a14e5": {
      "_id": "3fff65f0-b3fe-40c5-8e82-b6d2e39a14e5",
      "context": "AUTHENTICATION_TREE_DECISION_NODE",
      "createdBy": "null",
      "creationDate": 0,
      "default": false,
      "description": "Send registration information via SMS",
      "language": "JAVASCRIPT",
      "lastModifiedBy": "null",
      "lastModifiedDate": 0,
      "name": "Twilio IVR: Send Registration Information Via SMS",
      "script": [
        "logger.warning("Twilio IVR: Send Registration Information Via SMS: start");",
        "",
        "if (getSharedObjectAttribute("telephoneNumber")) {",
        "    var Base64={_keyStr:"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=",encode:function(input){var output="";var chr1,chr2,chr3,enc1,enc2,enc3,enc4;var i=0;input=Base64._utf8_encode(input);while(i<input.length){chr1=input.charCodeAt(i++);chr2=input.charCodeAt(i++);chr3=input.charCodeAt(i++);enc1=chr1>>2;enc2=(chr1&3)<<4|chr2>>4;enc3=(chr2&15)<<2|chr3>>6;enc4=chr3&63;if(isNaN(chr2)){enc3=enc4=64}else if(isNaN(chr3)){enc4=64}output=output+this._keyStr.charAt(enc1)+this._keyStr.charAt(enc2)+this._keyStr.charAt(enc3)+this._keyStr.charAt(enc4)}return output},decode:function(input){var output="";var chr1,chr2,chr3;var enc1,enc2,enc3,enc4;var i=0;input=input.replace(/[^A-Za-z0-9\\+\\/\\=]/g,"");while(i<input.length){enc1=this._keyStr.indexOf(input.charAt(i++));enc2=this._keyStr.indexOf(input.charAt(i++));enc3=this._keyStr.indexOf(input.charAt(i++));enc4=this._keyStr.indexOf(input.charAt(i++));chr1=enc1<<2|enc2>>4;chr2=(enc2&15)<<4|enc3>>2;chr3=(enc3&3)<<6|enc4;output=output+String.fromCharCode(chr1);if(enc3!=64){output=output+String.fromCharCode(chr2)}if(enc4!=64){output=output+String.fromCharCode(chr3)}}output=Base64._utf8_decode(output);return output},_utf8_encode:function(string){string=string.replace(/\\r\\n/g,"\\n");var utftext="";for(var n=0;n<string.length;n++){var c=string.charCodeAt(n);if(c<128){utftext+=String.fromCharCode(c)}else if(c>127&&c<2048){utftext+=String.fromCharCode(c>>6|192);utftext+=String.fromCharCode(c&63|128)}else{utftext+=String.fromCharCode(c>>12|224);utftext+=String.fromCharCode(c>>6&63|128);utftext+=String.fromCharCode(c&63|128)}}return utftext},_utf8_decode:function(utftext){var string="";var i=0;var c=c1=c2=0;while(i<utftext.length){c=utftext.charCodeAt(i);if(c<128){string+=String.fromCharCode(c);i++}else if(c>191&&c<224){c2=utftext.charCodeAt(i+1);string+=String.fromCharCode((c&31)<<6|c2&63);i+=2}else{c2=utftext.charCodeAt(i+1);c3=utftext.charCodeAt(i+2);string+=String.fromCharCode((c&15)<<12|(c2&63)<<6|c3&63);i+=3}}return string}};",
        "",
        "    // Twilio SMS Message API Configuration",
        "    var TWILIO_API_SID = "AC549f74e515f73110973db431fc1b1474";",
        "    var TWILIO_API_TOKEN = "9388ff07f25ddd730c32707c3d79f942";",
        "    var TWILIO_API_FROM = "+19163183438";",
        "  ",
        "    var TWILIO_API_URI = "https://api.twilio.com/2010-04-01/Accounts/".concat(TWILIO_API_SID).concat("/Messages.json");    ",
        "    var TWILIO_API_TO = getSharedObjectAttribute("telephoneNumber");",
        "    var TWILIO_API_BODY = "Register your account with ForgeRock Identity Cloud: ".concat("https://idc.scheuber.io/login/?realm=/alpha#/service/Registration");",
        "    //logger.warning("Twilio IVR: Send Registration Information Via SMS: To: ".concat(TWILIO_API_TO));",
        "    //logger.warning("Twilio IVR: Send Registration Information Via SMS: Message: ".concat(TWILIO_API_BODY));",
        "",
        "    var AUTHZ = "Basic ".concat(Base64.encode(TWILIO_API_SID.concat(':').concat(TWILIO_API_TOKEN)));",
        "    //logger.warning("Twilio IVR: Send Registration Information Via SMS: AUTHZ - ".concat(AUTHZ));",
        "",
        "    var request = new org.forgerock.http.protocol.Request();",
        "    request.setMethod('POST');",
        "    request.setUri(TWILIO_API_URI);",
        "    request.getHeaders().add("Content-Type", "application/x-www-form-urlencoded");",
        "    request.getHeaders().add("Authorization", AUTHZ);",
        "    var params = request.getForm();",
        "    params.add("From", TWILIO_API_FROM);",
        "    params.add("Body", TWILIO_API_BODY);",
        "    params.add("To", TWILIO_API_TO);",
        "    request.getEntity().setString(params.toString());",
        "",
        "    var response = httpClient.send(request).get();",
        "    var result = JSON.parse(response.getEntity().getString());",
        "    //logger.warning("Twilio SMS OTP Sender: JSON result: " + JSON.stringify(result));",
        "",
        "    if (result["error_code"]) {",
        "        outcome = "failed";",
        "        logger.error("Twilio IVR: Send Registration Information Via SMS: error_code = ".concat(result["error_code"]));",
        "        logger.error("Twilio IVR: Send Registration Information Via SMS: error_message = ".concat(result["error_message"]));",
        "        logger.error("Twilio IVR: Send Registration Information Via SMS: outcome = failed");",
        "    } else if (result["code"]) {",
        "        outcome = "failed";",
        "        logger.error("Twilio IVR: Send Registration Information Via SMS: code = ".concat(result["code"]));",
        "        logger.error("Twilio IVR: Send Registration Information Via SMS: message = ".concat(result["message"]));",
        "    } else {",
        "        outcome = "sent";",
        "        logger.warning("Twilio IVR: Send Registration Information Via SMS: outcome = sent");",
        "    }",
        "} else {",
        "      outcome = "failed";",
        "      logger.error("Twilio IVR: Send Registration Information Via SMS: No phone number found in sharedState.objectAttributes.telephoneNumber!'");",
        "      logger.error("Twilio IVR: Send Registration Information Via SMS: outcome = failed");",
        "}",
        "",
        "/*",
        " * Read attributes in shared state for use with the Create/Patch Object nodes.",
        " */",
        "function getSharedObjectAttribute(name) {",
        "    var storage = sharedState.get("objectAttributes");",
        "    if (storage) {",
        "          if (storage.get) {",
        "            return sharedState.get("objectAttributes").get(name);",
        "        }",
        "          else {",
        "            return storage.name;",
        "        }",
        "    }",
        "    return null;",
        "}",
      ],
    },
    "403cf226-6051-4368-8b72-9ba14f9a5140": {
      "_id": "403cf226-6051-4368-8b72-9ba14f9a5140",
      "context": "SOCIAL_IDP_PROFILE_TRANSFORMATION",
      "createdBy": "null",
      "creationDate": 0,
      "default": true,
      "description": "Normalizes raw profile data from VKontakte",
      "language": "GROOVY",
      "lastModifiedBy": "null",
      "lastModifiedDate": 0,
      "name": "VKontakte Profile Normalization",
      "script": [
        "/*",
        " * Copyright 2020 ForgeRock AS. All Rights Reserved",
        " *",
        " * Use of this code requires a commercial software license with ForgeRock AS.",
        " * or with one of its affiliates. All use shall be exclusively subject",
        " * to such license between the licensee and ForgeRock AS.",
        " */",
        "",
        "import static org.forgerock.json.JsonValue.field",
        "import static org.forgerock.json.JsonValue.json",
        "import static org.forgerock.json.JsonValue.object",
        "",
        "return json(object(",
        "        field("id", rawProfile.id),",
        "        field("displayName", rawProfile.first_name),",
        "        field("givenName", rawProfile.first_name),",
        "        field("familyName", rawProfile.last_name),",
        "        field("photoUrl", rawProfile.photo_50),",
        "        field("email", rawProfile.email),",
        "        field("username", rawProfile.email)))",
      ],
    },
    "424da748-82cc-4b54-be6f-82bd64d82a74": {
      "_id": "424da748-82cc-4b54-be6f-82bd64d82a74",
      "context": "SOCIAL_IDP_PROFILE_TRANSFORMATION",
      "createdBy": "null",
      "creationDate": 0,
      "default": true,
      "description": "Normalizes raw profile data from Yahoo",
      "language": "GROOVY",
      "lastModifiedBy": "null",
      "lastModifiedDate": 0,
      "name": "Yahoo Profile Normalization",
      "script": [
        "/*",
        " * Copyright 2020 ForgeRock AS. All Rights Reserved",
        " *",
        " * Use of this code requires a commercial software license with ForgeRock AS.",
        " * or with one of its affiliates. All use shall be exclusively subject",
        " * to such license between the licensee and ForgeRock AS.",
        " */",
        "",
        "import static org.forgerock.json.JsonValue.field",
        "import static org.forgerock.json.JsonValue.json",
        "import static org.forgerock.json.JsonValue.object",
        "",
        "return json(object(",
        "        field("id", rawProfile.sub),",
        "        field("displayName", rawProfile.name),",
        "        field("givenName", rawProfile.given_name),",
        "        field("familyName", rawProfile.family_name),",
        "        field("photoUrl", rawProfile.picture),",
        "        field("email", rawProfile.email),",
        "        field("username", rawProfile.email),",
        "        field("locale", rawProfile.locale)))",
      ],
    },
    "452d73ee-c6f3-4f4e-9dae-e75bb3886cbd": {
      "_id": "452d73ee-c6f3-4f4e-9dae-e75bb3886cbd",
      "context": "AUTHENTICATION_TREE_DECISION_NODE",
      "createdBy": "null",
      "creationDate": 0,
      "default": false,
      "description": "Copy sharedState to transientState",
      "language": "JAVASCRIPT",
      "lastModifiedBy": "null",
      "lastModifiedDate": 0,
      "name": "Copy to transientState",
      "script": [
        "outcome = "true";",
        "if (sharedState.get("objectAttributes")) {",
        "    transientState.put("objectAttributes", sharedState.get("objectAttributes"))",
        "}",
        "if (sharedState.get("username")) {",
        "    transientState.put("username", sharedState.get("username"))",
        "}",
        "if (sharedState.get("_id")) {",
        "    transientState.put("_id", sharedState.get("_id"))",
        "}",
      ],
    },
    "472534ec-a25f-468d-a606-3fb1935190df": {
      "_id": "472534ec-a25f-468d-a606-3fb1935190df",
      "context": "SOCIAL_IDP_PROFILE_TRANSFORMATION",
      "createdBy": "null",
      "creationDate": 0,
      "default": true,
      "description": "Normalizes raw profile data from WeChat",
      "language": "GROOVY",
      "lastModifiedBy": "null",
      "lastModifiedDate": 0,
      "name": "WeChat Profile Normalization",
      "script": [
        "/*",
        " * Copyright 2020 ForgeRock AS. All Rights Reserved",
        " *",
        " * Use of this code requires a commercial software license with ForgeRock AS.",
        " * or with one of its affiliates. All use shall be exclusively subject",
        " * to such license between the licensee and ForgeRock AS.",
        " */",
        "",
        "import static org.forgerock.json.JsonValue.field",
        "import static org.forgerock.json.JsonValue.json",
        "import static org.forgerock.json.JsonValue.object",
        "",
        "return json(object(",
        "        field("id", rawProfile.openid),",
        "        field("displayName", rawProfile.nickname),",
        "        field("photoUrl", rawProfile.headimgurl),",
        "        field("username", rawProfile.nickname)))",
      ],
    },
    "484e6246-dbc6-4288-97e6-54e55431402e": {
      "_id": "484e6246-dbc6-4288-97e6-54e55431402e",
      "context": "SOCIAL_IDP_PROFILE_TRANSFORMATION",
      "createdBy": "null",
      "creationDate": 0,
      "default": true,
      "description": "Normalizes raw profile data from Apple",
      "language": "GROOVY",
      "lastModifiedBy": "null",
      "lastModifiedDate": 0,
      "name": "Apple Profile Normalization",
      "script": [
        "/*",
        " * Copyright 2021-2022 ForgeRock AS. All Rights Reserved",
        " *",
        " * Use of this code requires a commercial software license with ForgeRock AS.",
        " * or with one of its affiliates. All use shall be exclusively subject",
        " * to such license between the licensee and ForgeRock AS.",
        " *",
        " * In some common default configurations, the following keys are required to be not empty:",
        " * username, givenName, familyName, email.",
        " *",
        " * From RFC4517: A value of the Directory String syntax is a string of one or more",
        " * arbitrary characters from the Universal Character Set (UCS).",
        " * A zero-length character string is not permitted.",
        " */",
        "",
        "import static org.forgerock.json.JsonValue.field",
        "import static org.forgerock.json.JsonValue.json",
        "import static org.forgerock.json.JsonValue.object",
        "",
        "String email = "change@me.com"",
        "String subjectId = rawProfile.sub",
        "String firstName = " "",
        "String lastName = " "",
        "String username = subjectId",
        "String name",
        "",
        "if (rawProfile.isDefined("email") && rawProfile.email.isNotNull()){ // User can elect to not share their email",
        "    email = rawProfile.email.asString()",
        "    username = email",
        "}",
        "if (rawProfile.isDefined("name") && rawProfile.name.isNotNull()) {",
        "    if (rawProfile.name.isDefined("firstName") && rawProfile.name.firstName.isNotNull()) {",
        "        firstName = rawProfile.name.firstName.asString()",
        "    }",
        "    if (rawProfile.name.isDefined("lastName") && rawProfile.name.lastName.isNotNull()) {",
        "        lastName = rawProfile.name.lastName.asString()",
        "    }",
        "}",
        "",
        "name = (firstName?.trim() ? firstName : "") + (lastName?.trim() ? ((firstName?.trim() ? " " : "") + lastName) : "")",
        "name =  (!name?.trim()) ? " " : name",
        "",
        "return json(object(",
        "        field("id", subjectId),",
        "        field("displayName", name),",
        "        field("email", email),",
        "        field("givenName", firstName),",
        "        field("familyName", lastName),",
        "        field("username", username)))",
      ],
    },
    "4855aac0-1efd-49c0-a153-3b9aadc911a6": {
      "_id": "4855aac0-1efd-49c0-a153-3b9aadc911a6",
      "context": "AUTHENTICATION_TREE_DECISION_NODE",
      "createdBy": "null",
      "creationDate": 0,
      "default": false,
      "description": "Populate Username From Email",
      "language": "JAVASCRIPT",
      "lastModifiedBy": "null",
      "lastModifiedDate": 0,
      "name": "Populate Username From Email",
      "script": [
        "outcome = "true";",
        "",
        "sharedState.put("username", getSharedObjectAttribute("mail"))",
        "setSharedObjectAttribute("userName", getSharedObjectAttribute("mail"))",
        "",
        "/*",
        " * Store attributes in shared state for use with the Create/Patch Object nodes.",
        " */",
        "function setSharedObjectAttribute(name, value) {",
        "       var storage = sharedState.get("objectAttributes");",
        "    if (storage && value) {",
        "          if (storage.put) {",
        "              storage.put(name, value);",
        "        }",
        "          else {",
        "              storage[name] = value;",
        "        }",
        "    }",
        "    else if (value) {",
        "        sharedState.put("objectAttributes", JSON.parse("{\\""+name+"\\":\\""+value+"\\"}"));",
        "    }",
        "}",
        "",
        "/*",
        " * Read attributes in shared state for use with the Create/Patch Object nodes.",
        " */",
        "function getSharedObjectAttribute(name) {",
        "    var storage = sharedState.get("objectAttributes");",
        "    if (storage) {",
        "          if (storage.get) {",
        "            return sharedState.get("objectAttributes").get(name);",
        "        }",
        "          else {",
        "              return storage.name;",
        "        }",
        "    }",
        "    return null;",
        "}",
      ],
    },
    "48f17202-039f-4d40-b7fc-4ce380f1b929": {
      "_id": "48f17202-039f-4d40-b7fc-4ce380f1b929",
      "context": "AUTHENTICATION_TREE_DECISION_NODE",
      "createdBy": "null",
      "creationDate": 0,
      "default": false,
      "description": "Collect all the configuration items required for the SAML2 Node to function properly.",
      "language": "JAVASCRIPT",
      "lastModifiedBy": "null",
      "lastModifiedDate": 0,
      "name": "Collect SAML2 Node Config",
      "script": [
        "/* Collect SAML2 Node Config",
        " * ",
        " * Collect all the configuration items required for the SAML2 Node to function properly.",
        " * ",
        " * This script does not need to be parametrized. It will work properly as is.",
        " * ",
        " * The Scripted Decision Node needs the following outcomes defined:",
        " * - true",
        " *",
        " * Author: volker.scheuber@forgerock.com",
        " */",
        "(function () {",
        "    outcome = "true";",
        "      var config = {",
        "        "metaAlias": "/iSPAzure",",
        "        "allowCreate": false,",
        "        "sloEnabled": false,",
        "        "authnContextClassRef": [],",
        "        "authnContextDeclRef": [],",
        "        "authComparison": "EXACT",",
        "        "nameIdFormat": "urn:oasis:names:tc:SAML:1.1:nameid-format:unspecified",",
        "        "requestBinding": "HTTP_REDIRECT",",
        "        "binding": "HTTP_POST",",
        "        "forceAuthn": false,",
        "        "idpEntityId": "https://sts.windows.net/711ffa9c-5972-4713-ace3-688c9732614a/",",
        "        "isPassive": false,",
        "        "sloRelayState": """,
        "    };",
        "      var script = "";",
        "    script += "Array.prototype.slice.call(";",
        "    script += "    document.getElementsByTagName('input')";",
        "    script += ").forEach(";",
        "    script += "    function (input,i) {";",
        "    script += "        console.log('input '+i);"",
        "    script += "        var config = JSON.parse('"+JSON.stringify(config)+"');";",
        "    script += "        var keys = Object.keys(config);";",
        "    script += "        if (input.type === 'text') {";",
        "    script += "            input.setAttribute('value', config[keys[i]]);";",
        "    script += "            input.dispatchEvent(new KeyboardEvent( 'input' , {'key':'Enter'} ));";",
        "    script += "        }";",
        "    script += "    }";",
        "    script += ");";",
        "    var fr = JavaImporter(",
        "        org.forgerock.openam.auth.node.api.Action,",
        "          javax.security.auth.callback.NameCallback,",
        "        com.sun.identity.authentication.callbacks.ScriptTextOutputCallback",
        "    )",
        "    if (callbacks.isEmpty()) {",
        "        action = fr.Action.send(",
        "            new fr.NameCallback("metaAlias"),",
        "            new fr.NameCallback("allowCreate"),",
        "            new fr.NameCallback("sloEnabled"),",
        "            new fr.NameCallback("authnContextClassRef"),",
        "            new fr.NameCallback("authnContextDeclRef"),",
        "            new fr.NameCallback("authComparison"),",
        "            new fr.NameCallback("nameIdFormat"),",
        "            new fr.NameCallback("requestBinding"),",
        "            new fr.NameCallback("binding"),",
        "            new fr.NameCallback("forceAuthn"),",
        "            new fr.NameCallback("idpEntityId"),",
        "            new fr.NameCallback("isPassive"),",
        "            new fr.NameCallback("sloRelayState"),",
        "              new fr.ScriptTextOutputCallback(script)",
        "        ).build();",
        "    }",
        "    else {",
        "          config[callbacks.get(0).getPrompt()] = callbacks.get(0).getName();",
        "          config[callbacks.get(1).getPrompt()] = (callbacks.get(1).getName() === 'true');",
        "          config[callbacks.get(2).getPrompt()] = (callbacks.get(2).getName() === 'true');",
        "          config[callbacks.get(3).getPrompt()] = [callbacks.get(3).getName()];",
        "          config[callbacks.get(4).getPrompt()] = [callbacks.get(4).getName()];",
        "          config[callbacks.get(5).getPrompt()] = callbacks.get(5).getName();",
        "          config[callbacks.get(6).getPrompt()] = callbacks.get(6).getName();",
        "          config[callbacks.get(7).getPrompt()] = callbacks.get(7).getName();",
        "          config[callbacks.get(8).getPrompt()] = callbacks.get(8).getName();",
        "          config[callbacks.get(9).getPrompt()] = (callbacks.get(9).getName() === 'true');",
        "          config[callbacks.get(10).getPrompt()] = callbacks.get(10).getName();",
        "          config[callbacks.get(11).getPrompt()] = (callbacks.get(11).getName() === 'true');",
        "          config[callbacks.get(12).getPrompt()] = callbacks.get(12).getName();",
        "          nodeState.putShared("nodeConfig", config);",
        "        action = fr.Action.goTo(outcome).build();",
        "    }",
        "}());",
      ],
    },
    "4a9aefc4-be0e-4625-95c3-ee8f354bce35": {
      "_id": "4a9aefc4-be0e-4625-95c3-ee8f354bce35",
      "context": "AUTHENTICATION_TREE_DECISION_NODE",
      "createdBy": "null",
      "creationDate": 0,
      "default": false,
      "description": "null",
      "language": "JAVASCRIPT",
      "lastModifiedBy": "null",
      "lastModifiedDate": 0,
      "name": "Admin_ClearCurrentYear",
      "script": [
        "if (sharedState.containsKey('objectAttributes')) {",
        "  sharedState.get('objectAttributes').remove('currentYear');",
        "}",
        "",
        "outcome = 'True';",
        "",
      ],
    },
    "4accb4d0-56ec-4a28-a769-5275dbac3147": {
      "_id": "4accb4d0-56ec-4a28-a769-5275dbac3147",
      "context": "AUTHENTICATION_TREE_DECISION_NODE",
      "createdBy": "null",
      "creationDate": 0,
      "default": false,
      "description": "null",
      "language": "JAVASCRIPT",
      "lastModifiedBy": "null",
      "lastModifiedDate": 0,
      "name": "Admin_PasswordFixStart",
      "script": [
        "/*",
        " * Copyright 2023 ForgeRock AS. All Rights Reserved",
        " *",
        " * Use of this code requires a commercial software license with ForgeRock AS.",
        " * or with one of its affiliates. All use shall be exclusively subject",
        " * to such license between the licensee and ForgeRock AS.",
        " */",
        "",
        "/*",
        "This is a workaround that fixes an issue with password policy.",
        "",
        "The Platform Password node attempts to validate a password by calling IDM's validateProperty action, and it uses",
        "sharedState.objectAttributes as the \`object\` property of that request payload.  If the request is missing required properties",
        "or contains properties not in the object's schema, DS will error and IDM will swallow that error, returning an empty ",
        "list of failed policies instead.",
        "",
        "This workaround provides fake values for required properties. It also ensures first/last name is in objectAttributes so the",
        ""can't contain" policy can be evaluated. This workaround is cleaned up by Admin_PasswordFixEnd.js.",
        "*/",
        "",
        "// Capture existing object attributes so we can restore them later",
        "if (sharedState.containsKey('objectAttributes')) {",
        "  sharedState.put('originalObjectAttributes', sharedState.get('objectAttributes'));",
        "}",
        "",
        "// Define the object to use for policy evaluation",
        "var policyObject = {",
        "  givenName: '',",
        "  sn: '',",
        "  groups: ['fake'],",
        "  inviteDate: 'fake'",
        "};",
        "",
        "// If we've loaded the admin object, add first/last name to support",
        "// evaluation of the full policy",
        "if (sharedState.containsKey('adminObject')) {",
        "  var adminObject = sharedState.get('adminObject');",
        "  policyObject.givenName = adminObject.get('givenName');",
        "  policyObject.sn = adminObject.get('sn');",
        "}",
        "",
        "// Replace objectAttributes with our policy object",
        "sharedState.put('objectAttributes', policyObject);",
        "",
        "outcome = 'True';",
        "",
      ],
    },
    "4c7bb7bb-c5d6-47ac-92dc-256fb8121fa9": {
      "_id": "4c7bb7bb-c5d6-47ac-92dc-256fb8121fa9",
      "context": "AUTHENTICATION_TREE_DECISION_NODE",
      "createdBy": "null",
      "creationDate": 0,
      "default": false,
      "description": "null",
      "language": "JAVASCRIPT",
      "lastModifiedBy": "null",
      "lastModifiedDate": 0,
      "name": "Admin_MfaRequiredCheck",
      "script": [
        "if ("false" == "true") {",
        "  outcome = "Required";",
        "} else {",
        "  outcome = "Optional";",
        "}",
      ],
    },
    "4ee5b182-1b09-45cc-97a9-0e609f0a2915": {
      "_id": "4ee5b182-1b09-45cc-97a9-0e609f0a2915",
      "context": "AUTHENTICATION_TREE_DECISION_NODE",
      "createdBy": "null",
      "creationDate": 0,
      "default": false,
      "description": "Resend OTP Option",
      "language": "JAVASCRIPT",
      "lastModifiedBy": "null",
      "lastModifiedDate": 0,
      "name": "Resend OTP Option",
      "script": [
        "/* CResend OTP Option",
        " *",
        " * Author: jon.knight@forgerock.com, volker.scheuber@forgerock.com",
        " * ",
        " * Collect OTP and validate the collected OTP. Also offer a resend option.",
        " * Return "true" if collected OTP is valid, "false" if collected OTP is invalid, ",
        " * and resend if the user selected the resend button.",
        " * ",
        " * This script does not need to be parametrized. It will work properly as is.",
        " * ",
        " * The Scripted Decision Node needs the following outcomes defined:",
        " * - true",
        " * - false",
        " * - resend",
        " */",
        "(function () {",
        "  // how long until the "resend" button becomes enabled.",
        "  DELAY=20;",
        "  ",
        "  // how long (in seconds) should the OTP be accepted as valid",
        "  OTP_TTL = 30;",
        "",
        "  var fr = JavaImporter(",
        "      org.forgerock.openam.auth.node.api.Action,",
        "      javax.security.auth.callback.NameCallback,",
        "      com.sun.identity.authentication.callbacks.ScriptTextOutputCallback",
        "  )",
        "",
        "  function createScript() {",
        "      return String(" \\n\\",
        "          var COUNT = " + DELAY + "; \\n\\",
        "          function go(obs) { \\n\\",
        "              const p = document.querySelectorAll('input[data-vv-as=\\"One Time Passcode\\"]')[0]; \\n\\",
        "              if (p) { \\n\\",
        "                  var b = document.createElement('button'); \\n\\",
        "                  b.id = 'resendButton'; \\n\\",
        "                  b.classList.add(\\"btn\\", \\"mt-3\\", \\"btn-secondary\\", \\"btn-sm\\"); \\n\\",
        "                  b.onclick = function() { p.value='___RESEND___'; p.dispatchEvent(new Event('input')); }; \\n\\",
        "                  b.innerHTML = 'Resend Code ... ' + COUNT + 's'; \\n\\",
        "                  b.disabled = true; \\n\\",
        "                  p.parentNode.insertBefore(b, p.nextSibling); \\n\\",
        "                  var t = setInterval(function() { \\n\\",
        "                      if (COUNT == 1) { \\n\\",
        "                          clearInterval(t); \\n\\",
        "                          b.disabled = false; \\n\\",
        "                          b.innerHTML = 'Resend Code'; \\n\\",
        "                      } else { \\n\\",
        "                          COUNT--; \\n\\",
        "                          b.innerHTML = 'Resend Code ... ' + COUNT + 's'; \\n\\",
        "                      } \\n\\",
        "                  }, 1000 ); \\n\\",
        "                  if (obs) obs.disconnect(); \\n\\",
        "                  return; \\n\\",
        "              } \\n\\",
        "          } \\n\\",
        "          if (document.querySelectorAll('input[data-vv-as=\\"One Time Passcode\\"]')[0]) go(); \\n\\",
        "          else { \\n\\",
        "              const observer = new MutationObserver((mutations, obs) => { go(obs); }); \\n\\",
        "              observer.observe(document, { childList: true, subtree: true }); \\n\\",
        "          } \\n\\",
        "      ");",
        "  }",
        "",
        "  if (callbacks.isEmpty()) {",
        "      action = fr.Action.send(",
        "          new fr.ScriptTextOutputCallback(createScript()),",
        "          new fr.NameCallback("One Time Passcode")",
        "      ).build()",
        "  } else {",
        "      var otpTimestamp = Math.floor(new java.util.Date().getTime() / 1000);",
        "      var otp = callbacks.get(1).getName();",
        "      if (otp === "___RESEND___") {",
        "          action = fr.Action.goTo("resend").build();",
        "      } else {",
        "          var sentOtp = sharedState.get("oneTimePassword");",
        "          var sentOtpTimestamp = sharedState.get("oneTimePasswordTimestamp");",
        "          if (sentOtp == otp && otpTimestamp - OTP_TTL >= sentOtpTimestamp) {",
        "              action = fr.Action.goTo("true").build();",
        "            }",
        "          else {",
        "            action = fr.Action.goTo("false").build();",
        "          }",
        "      }",
        "  }",
        "}());",
      ],
    },
    "4f1273be-9c52-4879-bbe9-9a47068aeed9": {
      "_id": "4f1273be-9c52-4879-bbe9-9a47068aeed9",
      "context": "AUTHENTICATION_TREE_DECISION_NODE",
      "createdBy": "null",
      "creationDate": 0,
      "default": false,
      "description": "Unverified caller message",
      "language": "JAVASCRIPT",
      "lastModifiedBy": "null",
      "lastModifiedDate": 0,
      "name": "Twilio IVR: Unverified Caller Message",
      "script": [
        "/* Twilio IVR: Unverified Caller Message",
        " * ",
        " * The Scripted Decision Node needs the following outcomes defined:",
        " * - true",
        " * ",
        " * Depending on the amount of data collected through callbacks and how many of the callParams",
        " * you activate below, you will need to change your authentication session from JWT to CTS or",
        " * Memory.",
        " */",
        "outcome = "true";",
        "",
        "/* Begin Configuration",
        " */",
        "",
        "// Build out the full message",
        "var message = "That doesn't match our records. Let us try this another way.";",
        "",
        "/* End Configuration",
        " */",
        "",
        "var fr = JavaImporter(",
        "      org.forgerock.openam.auth.node.api,",
        "      javax.security.auth.callback.TextOutputCallback",
        ");",
        "  ",
        "with (fr) {",
        "      if (callbacks.isEmpty()) {",
        "        var output = new TextOutputCallback(TextOutputCallback.INFORMATION, message);",
        "        action = Action.send(output).build();",
        "      } ",
        "      else {",
        "        action = Action.goTo(outcome).build();",
        "      }",
        "}",
      ],
    },
    "50cde102-d4b6-44c4-9ba7-8564af05ae08": {
      "_id": "50cde102-d4b6-44c4-9ba7-8564af05ae08",
      "context": "AUTHENTICATION_TREE_DECISION_NODE",
      "createdBy": "null",
      "creationDate": 0,
      "default": false,
      "description": "Select and apply theme from query param in the request URL.",
      "language": "JAVASCRIPT",
      "lastModifiedBy": "null",
      "lastModifiedDate": 0,
      "name": "Select Theme from URL",
      "script": [
        "/* Select Theme from URL",
        " * ",
        " * Select and apply theme from query param in the request URL.",
        " * ",
        " * This script does not need to be parametrized. It will work properly as is.",
        " * ",
        " * The Scripted Decision Node needs the following outcomes defined:",
        " * - true",
        " *",
        " * Author: volker.scheuber@forgerock.com",
        " */",
        "(function () {",
        "      outcome = "true";",
        "      var theme = "";",
        "      if (requestParameters.get("themeId")) {",
        "          theme = requestParameters.get("themeId").get(0);",
        "    }",
        "",
        "    var fr = JavaImporter(",
        "        org.forgerock.openam.auth.node.api.Action,",
        "        org.forgerock.openam.authentication.callbacks.PollingWaitCallback",
        "    )",
        "    if (theme && callbacks.isEmpty()) {",
        "        var stage = "themeId="+theme;",
        "        action = fr.Action.send(",
        "              new fr.PollingWaitCallback("100", "Please wait ...")",
        "        ).withStage(stage).build();",
        "    } else {",
        "          action = fr.Action.goTo(outcome).build();",
        "    }",
        "}());",
      ],
    },
    "53c50dbd-5331-4739-bea1-4c5e9bf553f2": {
      "_id": "53c50dbd-5331-4739-bea1-4c5e9bf553f2",
      "context": "AUTHENTICATION_TREE_DECISION_NODE",
      "createdBy": "null",
      "creationDate": 0,
      "default": false,
      "description": "Welcome message",
      "language": "JAVASCRIPT",
      "lastModifiedBy": "null",
      "lastModifiedDate": 0,
      "name": "Twilio IVR: Welcome Message",
      "script": [
        "/* Twilio IVR: Welcome Message",
        " * ",
        " * The Scripted Decision Node needs the following outcomes defined:",
        " * - true",
        " * ",
        " * Depending on the amount of data collected through callbacks and how many of the callParams",
        " * you activate below, you will need to change your authentication session from JWT to CTS or",
        " * Memory.",
        " */",
        "logger.warning("Twilio IVR: Welcome Message: start");",
        "outcome = "true";",
        "",
        "/* Begin Configuration",
        " */",
        "",
        "// Build out the full message",
        "var message = "Thank you for calling ForgeRock Identity Cloud!";",
        "",
        "/* End Configuration",
        " */",
        "",
        "var fr = JavaImporter(",
        "      org.forgerock.openam.auth.node.api,",
        "      javax.security.auth.callback.TextOutputCallback",
        ");",
        "  ",
        "with (fr) {",
        "      if (callbacks.isEmpty()) {",
        "        var output = new TextOutputCallback(TextOutputCallback.INFORMATION, message);",
        "        action = Action.send(output).build();",
        "      } ",
        "      else {",
        "        logger.warning("Twilio IVR: Welcome Message: finish [outcome=".concat(outcome).concat("]"));",
        "        action = Action.goTo(outcome).build();",
        "      }",
        "}",
      ],
    },
    "552a0f94-d177-45a9-b7bf-1502e312c299": {
      "_id": "552a0f94-d177-45a9-b7bf-1502e312c299",
      "context": "AUTHENTICATION_TREE_DECISION_NODE",
      "createdBy": "null",
      "creationDate": 0,
      "default": false,
      "description": "null",
      "language": "JAVASCRIPT",
      "lastModifiedBy": "null",
      "lastModifiedDate": 0,
      "name": "Admin_ClearFirstLastNames",
      "script": [
        "/*",
        " * Copyright 2023 ForgeRock AS. All Rights Reserved",
        " *",
        " * Use of this code requires a commercial software license with ForgeRock AS.",
        " * or with one of its affiliates. All use shall be exclusively subject",
        " * to such license between the licensee and ForgeRock AS.",
        " */",
        "",
        "/*",
        "When an admin managed object is created at the time of invitation, the email address",
        "is used to populate the required first/last names.  This script clears those attributes",
        "(if set to the email address) so the UI doesn't display the email address in the first/last",
        "name input fields.",
        "*/",
        "",
        "if (sharedState.containsKey('objectAttributes')) {",
        "  var objAttrs = sharedState.get('objectAttributes');",
        "  var mail = objAttrs.get('mail');",
        "  var attrs = ['givenName', 'sn'];",
        "  for (var i = 0; i < attrs.length; i++) {",
        "    if (mail == objAttrs.get(attrs[i])) {",
        "      objAttrs.put(attrs[i], '');",
        "    }",
        "  }  ",
        "  sharedState.put('objectAttributes', objAttrs);  ",
        "}",
        "",
        "outcome = 'True';",
        "",
      ],
    },
    "5561a45f-bf00-4ec5-bab4-f069bac9a38b": {
      "_id": "5561a45f-bf00-4ec5-bab4-f069bac9a38b",
      "context": "AUTHENTICATION_TREE_DECISION_NODE",
      "createdBy": "null",
      "creationDate": 0,
      "default": false,
      "description": "Copy an OTP generated by the "HOTP Generator" node to the IDM profile shared state so it can be patched to the user profile.",
      "language": "JAVASCRIPT",
      "lastModifiedBy": "null",
      "lastModifiedDate": 0,
      "name": "CopyOTPToObjectAttributes",
      "script": [
        "/* CopyOTPToObjectAttributes",
        " *",
        " * Author: volker.scheuber@forgerock.com",
        " * ",
        " * Copy an OTP generated by the "HOTP Generator" node to the IDM profile ",
        " * shared state so it can be patched to the user profile.",
        " * ",
        " * This script does not need to be parametrized. It will work properly as is.",
        " * ",
        " * The Scripted Decision Node needs the following outcomes defined:",
        " * - true",
        " */",
        "if (sharedState.get("objectAttributes")) {",
        "    sharedState.get("objectAttributes").put("description", sharedState.get("oneTimePassword"))",
        "}",
        "else {",
        "    sharedState.put("objectAttributes", {description: sharedState.get("oneTimePassword")});",
        "}",
        "outcome = "true";",
      ],
    },
    "57807349-630f-496a-bccb-ea1011b8e945": {
      "_id": "57807349-630f-496a-bccb-ea1011b8e945",
      "context": "AUTHENTICATION_TREE_DECISION_NODE",
      "createdBy": "null",
      "creationDate": 0,
      "default": false,
      "description": "Extract username, password, and OTP from request headers and put them in shared state for validation.",
      "language": "JAVASCRIPT",
      "lastModifiedBy": "null",
      "lastModifiedDate": 0,
      "name": "MobileOTP: Extract Username, Password, OTP",
      "script": [
        "logger.warning("MobileOTP: Extract Username, Password, OTP: start");",
        "",
        "/*",
        " * BEGIN SCRIPT CONFIGURATION",
        " */",
        "var USERNAME_HEADER_NAME = "X-OpenAM-Username";",
        "var PASSWORD_HEADER_NAME = "X-OpenAM-Password";",
        "var OTP_HEADER_NAME = "X-OpenAM-MobileOTP";",
        "/*",
        " * END SCRIPT CONFIGURATION",
        " */",
        "",
        "outcome = "false";",
        "",
        "var username = getHeader(USERNAME_HEADER_NAME) || null;",
        "var password = getHeader(PASSWORD_HEADER_NAME) || null;",
        "var mobileOTP = getHeader(OTP_HEADER_NAME) || null;",
        "",
        "if (username && password && mobileOTP) {",
        "      sharedState.put("username", username);",
        "      transientState.put("password", password);",
        "      transientState.put("mobileOTP", mobileOTP);",
        "    outcome = "true";",
        "}",
        "",
        "logger.warning("MobileOTP: Extract Username, Password, OTP: finish [outcome=".concat(outcome).concat("]"));",
        "",
        "/*",
        " * Returns the value of the requested header",
        " */",
        "function getHeader(headerName) {",
        "      if (requestHeaders.get(headerName) && requestHeaders.get(headerName).get(0)) {",
        "        return requestHeaders.get(headerName).get(0).toString();",
        "    }",
        "      return null;",
        "}",
      ],
    },
    "58258c2d-46f3-4811-85c4-ea1476dd9cf4": {
      "_id": "58258c2d-46f3-4811-85c4-ea1476dd9cf4",
      "context": "AUTHENTICATION_TREE_DECISION_NODE",
      "createdBy": "null",
      "creationDate": 0,
      "default": false,
      "description": "null",
      "language": "JAVASCRIPT",
      "lastModifiedBy": "null",
      "lastModifiedDate": 0,
      "name": "Service Account - Cluster Internal Requests Only",
      "script": [
        "",
        "try {",
        "  var clientIpAddresses = requestHeaders.get(new java.lang.String('x-forwarded-for'));",
        "  if (!clientIpAddresses) {",
        "    logger.message('No forwarded header; internal cluster request');",
        "    outcome = 'True'",
        "  } else {",
        "    logger.message('Forwarded header {}', clientIpAddresses);",
        "    outcome = 'False';",
        "  }",
        "} catch (e) {",
        "  logger.error('Service Account - Cluster Internal Requests Only - failed deducing header');",
        "  logger.error(e);",
        "  outcome = 'Error';",
        "}",
      ],
    },
    "58c824ae-84ed-4724-82cd-db128fc3f6c": {
      "_id": "58c824ae-84ed-4724-82cd-db128fc3f6c",
      "context": "SOCIAL_IDP_PROFILE_TRANSFORMATION",
      "createdBy": "null",
      "creationDate": 0,
      "default": true,
      "description": "Converts a normalized social profile into a managed user",
      "language": "GROOVY",
      "lastModifiedBy": "null",
      "lastModifiedDate": 0,
      "name": "Normalized Profile to Managed User",
      "script": [
        "/*",
        " * Copyright 2020 ForgeRock AS. All Rights Reserved",
        " *",
        " * Use of this code requires a commercial software license with ForgeRock AS.",
        " * or with one of its affiliates. All use shall be exclusively subject",
        " * to such license between the licensee and ForgeRock AS.",
        " */",
        "",
        "import static org.forgerock.json.JsonValue.field",
        "import static org.forgerock.json.JsonValue.json",
        "import static org.forgerock.json.JsonValue.object",
        "",
        "import org.forgerock.json.JsonValue",
        "",
        "JsonValue managedUser = json(object(",
        "        field("givenName", normalizedProfile.givenName),",
        "        field("sn", normalizedProfile.familyName),",
        "        field("mail", normalizedProfile.email),",
        "        field("userName", normalizedProfile.username)))",
        "",
        "if (normalizedProfile.postalAddress.isNotNull()) managedUser.put("postalAddress", normalizedProfile.postalAddress)",
        "if (normalizedProfile.addressLocality.isNotNull()) managedUser.put("city", normalizedProfile.addressLocality)",
        "if (normalizedProfile.addressRegion.isNotNull()) managedUser.put("stateProvince", normalizedProfile.addressRegion)",
        "if (normalizedProfile.postalCode.isNotNull()) managedUser.put("postalCode", normalizedProfile.postalCode)",
        "if (normalizedProfile.country.isNotNull()) managedUser.put("country", normalizedProfile.country)",
        "if (normalizedProfile.phone.isNotNull()) managedUser.put("telephoneNumber", normalizedProfile.phone)",
        "",
        "// if the givenName and familyName is null or empty",
        "// then add a boolean flag to the shared state to indicate names are not present",
        "// this could be used elsewhere",
        "// for eg. this could be used in a scripted decision node to by-pass patching",
        "// the user object with blank values when givenName  and familyName is not present",
        "boolean noGivenName = normalizedProfile.givenName.isNull() || (!normalizedProfile.givenName.asString()?.trim())",
        "boolean noFamilyName = normalizedProfile.familyName.isNull() || (!normalizedProfile.familyName.asString()?.trim())",
        "sharedState.put("nameEmptyOrNull", noGivenName && noFamilyName)",
        "",
        "return managedUser",
        "",
      ],
    },
    "58d29080-4563-480b-89bb-1e7719776a21": {
      "_id": "58d29080-4563-480b-89bb-1e7719776a21",
      "context": "SOCIAL_IDP_PROFILE_TRANSFORMATION",
      "createdBy": "null",
      "creationDate": 0,
      "default": true,
      "description": "Normalizes raw profile data from Google",
      "language": "GROOVY",
      "lastModifiedBy": "null",
      "lastModifiedDate": 0,
      "name": "Google Profile Normalization",
      "script": [
        "/*",
        " * Copyright 2020 ForgeRock AS. All Rights Reserved",
        " *",
        " * Use of this code requires a commercial software license with ForgeRock AS.",
        " * or with one of its affiliates. All use shall be exclusively subject",
        " * to such license between the licensee and ForgeRock AS.",
        " */",
        "",
        "import static org.forgerock.json.JsonValue.field",
        "import static org.forgerock.json.JsonValue.json",
        "import static org.forgerock.json.JsonValue.object",
        "",
        "return json(object(",
        "        field("id", rawProfile.sub),",
        "        field("displayName", rawProfile.name),",
        "        field("givenName", rawProfile.given_name),",
        "        field("familyName", rawProfile.family_name),",
        "        field("photoUrl", rawProfile.picture),",
        "        field("email", rawProfile.email),",
        "        field("username", rawProfile.email),",
        "        field("locale", rawProfile.locale)))",
      ],
    },
    "5b29c5b7-b161-4a42-a41f-d6c85316b951": {
      "_id": "5b29c5b7-b161-4a42-a41f-d6c85316b951",
      "context": "SAML2_IDP_ADAPTER",
      "createdBy": "null",
      "creationDate": 0,
      "default": false,
      "description": "null",
      "language": "JAVASCRIPT",
      "lastModifiedBy": "null",
      "lastModifiedDate": 0,
      "name": "Saml2 IDP Adapter Script",
      "script": [
        "/*",
        " * Copyright 2021 ForgeRock AS. All Rights Reserved",
        " * Use of this code requires a commercial software license with ForgeRock AS.",
        " * or with one of its affiliates. All use shall be exclusively subject",
        " * to such license between the licensee and ForgeRock AS.",
        " */",
        "",
        "/*",
        " * The script has these top level functions that could be executed during a SAML2 flow.",
        " *      - preSingleSignOn",
        " *      - preAuthentication",
        " *      - preSendResponse",
        " *      - preSignResponse",
        " *      - preSendFailureResponse",
        " *",
        " * Please see the javadoc for the interface definition and more information about these methods.",
        " * https://backstage.forgerock.com/docs/am/7.2/apidocs/com/sun/identity/saml2/plugins/SAML2IdentityProviderAdapter.html",
        " * Note that the initialize method is not supported in the scripts.",
        " *",
        " * Defined variables. Check the documentation on the respective functions for the variables available to it.",
        " *",
        " * hostedEntityId - String",
        " *     Entity ID for the hosted IDP",
        " * realm - String",
        " *     Realm of the hosted IDP",
        " * idpAdapterScriptHelper - IdpAdapterScriptHelper (1)",
        " *     An instance of IdpAdapterScriptHelper containing helper methods. See Javadoc for more details.",
        " * request - HttpServletRequest (2)",
        " *     Servlet request object",
        " * response - HttpServletResponse (3)",
        " *     Servlet response object",
        " * authnRequest - AuthnRequest (4)",
        " *     The original authentication request sent from SP",
        " * reqId - String",
        " *     The id to use for continuation of processing if the adapter redirects",
        " * res - Response (5)",
        " *     The SAML Response",
        " * session - SSOToken (6)",
        " *     The single sign-on session. The reference type of this is Object and would need to be casted to SSOToken.",
        " * relayState - String",
        " *     The relayState that will be used in the redirect",
        " * faultCode - String",
        " *     the fault code that will be returned in the SAML response",
        " * faultDetail - String",
        " *     the fault detail that will be returned in the SAML response",
        " * logger - Logger instance",
        " *     https://backstage.forgerock.com/docs/am/7/scripting-guide/scripting-api-global-logger.html#scripting-api-global-logger.",
        " *     Corresponding log files will be prefixed with: scripts.<script name>",
        " *",
        " * Throws SAML2Exception (7):",
        " *     for any exceptions occurring in the adapter. The federation process will continue",
        " *",
        " * Class reference:",
        " * (1) idpAdapterScriptHelper - https://backstage.forgerock.com/docs/am/7.2/apidocs/com/sun/identity/saml2/plugins/scripted/IdpAdapterScriptHelper.html.",
        " * (2) HttpServletRequest - https://tomcat.apache.org/tomcat-7.0-doc/servletapi/javax/servlet/http/HttpServletRequest.html.",
        " * (3) HttpServletResponse - https://tomcat.apache.org/tomcat-7.0-doc/servletapi/javax/servlet/http/HttpServletResponse.html.",
        " * (4) AuthnRequest - https://backstage.forgerock.com/docs/am/7.2/apidocs/com/sun/identity/saml2/protocol/AuthnRequest.html.",
        " * (5) Response - https://backstage.forgerock.com/docs/am/7.2/apidocs/com/sun/identity/saml2/protocol/Response.html.",
        " * (6) SSOToken - https://backstage.forgerock.com/docs/am/7.2/apidocs/com/iplanet/sso/SSOToken.html.",
        " * (7) SAML2Exception - https://backstage.forgerock.com/docs/am/7.2/apidocs/com/sun/identity/saml2/common/SAML2Exception.html.",
        " */",
        "",
        "/*",
        " * Template/default script for SAML2 IDP Adapter scripted plugin.",
        " */",
        "",
        "/*",
        " * Available variables for preSingleSignOn:",
        " *     hostedEntityId",
        " *     realm",
        " *     idpAdapterScriptHelper",
        " *     request",
        " *     authnRequest",
        " *     response",
        " *     reqId",
        " *     logger",
        " *",
        " * Return - true if browser redirection is happening after processing, false otherwise. Default to false.",
        " */",
        "function preSingleSignOn () {",
        "    return false;",
        "}",
        "",
        "/*",
        " * Available variables for preAuthentication:",
        " *     hostedEntityId",
        " *     realm",
        " *     idpAdapterScriptHelper",
        " *     request",
        " *     authnRequest",
        " *     response",
        " *     reqId",
        " *     session",
        " *     relayState",
        " *     logger",
        " *",
        " * Return - true if browser redirection is happening after processing, false otherwise. Default to false.",
        " */",
        "function preAuthentication () {",
        "    return false;",
        "}",
        "",
        "/*",
        " * Available variables for preSendResponse:",
        " *     hostedEntityId",
        " *     realm",
        " *     idpAdapterScriptHelper",
        " *     request",
        " *     authnRequest",
        " *     response",
        " *     reqId",
        " *     session",
        " *     relayState",
        " *     logger",
        " *",
        " * Return - true if browser redirection happened after processing, false otherwise. Default to false.",
        " */",
        "function preSendResponse () {",
        "    return false;",
        "}",
        "",
        "/*",
        " * Available variables for preSignResponse:",
        " *     hostedEntityId",
        " *     realm",
        " *     idpAdapterScriptHelper",
        " *     request",
        " *     authnRequest",
        " *     session",
        " *     relayState",
        " *     res",
        " *     logger",
        " */",
        "function preSignResponse () {",
        "}",
        "",
        "/*",
        " * Available variables for preSendFailureResponse:",
        " *     hostedEntityId",
        " *     realm",
        " *     idpAdapterScriptHelper",
        " *     request",
        " *     response",
        " *     faultCode",
        " *     faultDetail",
        " *     logger",
        " */",
        "function preSendFailureResponse () {",
        "}",
      ],
    },
    "5b3b2c47-0248-46f4-8a1c-8a495d249037": {
      "_id": "5b3b2c47-0248-46f4-8a1c-8a495d249037",
      "context": "AUTHENTICATION_TREE_DECISION_NODE",
      "createdBy": "null",
      "creationDate": 0,
      "default": false,
      "description": "null",
      "language": "JAVASCRIPT",
      "lastModifiedBy": "null",
      "lastModifiedDate": 0,
      "name": "Save/restore perpetrator",
      "script": [
        "outcome = "true";",
        "if (sharedState.get("perpetrator"))",
        "{",
        "  sharedState.put("username", sharedState.get("perpetrator"));",
        "//  if (sharedState.get("objectAttributes")) {",
        "//    sharedState.remove("objectAttributes");",
        "//  }",
        "  sharedState.put("objectAttributes", {});",
        "}",
        "else",
        "{",
        "  sharedState.put("perpetrator", sharedState.get("username"));",
        "  if (sharedState.get("objectAttributes") && ",
        "      sharedState.get("objectAttributes").get("userName")) {",
        "    sharedState.get("objectAttributes").remove("userName");",
        "  }",
        "}",
      ],
    },
    "5b553f58-16bd-42b7-a782-4a981a66dbd4": {
      "_id": "5b553f58-16bd-42b7-a782-4a981a66dbd4",
      "context": "AUTHENTICATION_TREE_DECISION_NODE",
      "createdBy": "null",
      "creationDate": 0,
      "default": false,
      "description": "Branch based on the IDP setting.",
      "language": "JAVASCRIPT",
      "lastModifiedBy": "null",
      "lastModifiedDate": 0,
      "name": "Routed IDP Persist Decision",
      "script": [
        "/* Routed IDP Persist Decision",
        " * ",
        " * Branch based on the IDP setting.",
        " * ",
        " * This script does not need to be parametrized. It will work properly as is.",
        " * ",
        " * The Scripted Decision Node needs the following outcomes defined:",
        " * - true",
        " * - false",
        " *",
        " * Author: volker.scheuber@forgerock.com",
        " */",
        "(function () {",
        "      logger.message("Routed IDP Persist Decision: Start");",
        "      outcome = "false";",
        "      var routedIDP = sharedState.get("routedIDPs").get(0);",
        "      if (routedIDP) {",
        "        outcome = "".concat(routedIDP.get("idpPersist"));",
        "    }",
        "      logger.message("Routed IDP Persist Decision: Done [outcome={}]", outcome);",
        "}());",
      ],
    },
    "5dbd53c6-67ff-4a43-84c3-90c5cf5da35a": {
      "_id": "5dbd53c6-67ff-4a43-84c3-90c5cf5da35a",
      "context": "AUTHENTICATION_TREE_DECISION_NODE",
      "createdBy": "null",
      "creationDate": 0,
      "default": false,
      "description": "Return TextOutputCallback indicating the provided OTP was valid.",
      "language": "JAVASCRIPT",
      "lastModifiedBy": "null",
      "lastModifiedDate": 0,
      "name": "OTP Valid",
      "script": [
        "/* OTP Valid",
        " *",
        " * Author: volker.scheuber@forgerock.com",
        " * ",
        " * Return TextOutputCallback indicating the provided OTP was valid.",
        " * ",
        " * This script does not need to be parametrized. It will work properly as is.",
        " * ",
        " * The Scripted Decision Node needs the following outcomes defined:",
        " * - true",
        " */",
        "outcome = "true";",
        "var fr = JavaImporter(",
        "    org.forgerock.openam.auth.node.api.Action,",
        "    javax.security.auth.callback.TextOutputCallback",
        ")",
        "if (callbacks.isEmpty()) {",
        "    action = fr.Action.send(",
        "        new fr.TextOutputCallback(",
        "            fr.TextOutputCallback.INFORMATION,",
        "            "VALID"",
        "        )",
        "    ).build()",
        "}",
        "else {",
        "  action = fr.Action.goTo(outcome).build();",
        "}",
      ],
    },
    "5dcb1238-4684-47b7-8679-087b576d4fe8": {
      "_id": "5dcb1238-4684-47b7-8679-087b576d4fe8",
      "context": "AUTHENTICATION_TREE_DECISION_NODE",
      "createdBy": "null",
      "creationDate": 0,
      "default": false,
      "description": "null",
      "language": "JAVASCRIPT",
      "lastModifiedBy": "null",
      "lastModifiedDate": 0,
      "name": "Admin_LocalRegistrationCleanup",
      "script": [
        "/*",
        " * Copyright 2023 ForgeRock AS. All Rights Reserved",
        " *",
        " * Use of this code requires a commercial software license with ForgeRock AS.",
        " * or with one of its affiliates. All use shall be exclusively subject",
        " * to such license between the licensee and ForgeRock AS.",
        " */",
        "",
        "/*",
        "This removes the fake values added to ensure password policy validation works",
        "correctly. These attributes are excluded when patching the object, but it's good",
        "hygiene to clean them up here.",
        "*/",
        "",
        "var objAttrs = sharedState.get('objectAttributes') || new java.util.HashMap();",
        "objAttrs.remove('groups');",
        "objAttrs.remove('inviteDate');",
        "sharedState.put('objectAttributes', objAttrs);",
        "",
        "outcome = 'True';",
        "",
      ],
    },
    "5e68fee3-047d-4fff-8e99-89fb5908f068": {
      "_id": "5e68fee3-047d-4fff-8e99-89fb5908f068",
      "context": "AUTHENTICATION_TREE_DECISION_NODE",
      "createdBy": "null",
      "creationDate": 0,
      "default": false,
      "description": "null",
      "language": "JAVASCRIPT",
      "lastModifiedBy": "null",
      "lastModifiedDate": 0,
      "name": "Admin_ForgotUsernameMailCheck",
      "script": [
        "var fr = new JavaImporter(",
        "  org.forgerock.openam.auth.nodes,",
        "  org.forgerock.guice.core,",
        "  java.util.HashMap",
        ");",
        "",
        "// This confirms the Identify Existing User node was able to find the",
        "// admin, otherwise we remove the mail attribute so no email can be sent",
        "with (fr) {",
        "  try {",
        "",
        "    var objAttrs = sharedState.get('objectAttributes') || new HashMap();",
        "    var username = objAttrs.get('userName');",
        "    outcome = username ? 'Valid' : 'Invalid';",
        "    if (username) {",
        "      outcome = 'Valid';",
        "    } else {",
        "      objAttrs.remove('mail');",
        "      sharedState.put('objectAttributes', objAttrs);",
        "      outcome = 'Invalid';",
        "    }",
        "",
        "    logger.message('Admin_ForgotUsernameMailCheck: ' + outcome);",
        "",
        "  } catch (e) {",
        "",
        "    logger.error('Admin_ForgotUsernameMailCheck: Failed to determine mail validity');",
        "    logger.error(e);",
        "    outcome = 'Error';",
        "",
        "  }",
        "}",
      ],
    },
    "5e854779-6ec1-4c39-aeba-0477e0986646": {
      "_id": "5e854779-6ec1-4c39-aeba-0477e0986646",
      "context": "CONFIG_PROVIDER_NODE",
      "createdBy": "null",
      "creationDate": 0,
      "default": false,
      "description": "Default global script for Config Provider",
      "language": "JAVASCRIPT",
      "lastModifiedBy": "null",
      "lastModifiedDate": 0,
      "name": "Config Provider",
      "script": [
        "/*",
        " * Copyright 2021 ForgeRock AS. All Rights Reserved",
        " * Use of this code requires a commercial software license with ForgeRock AS.",
        " * or with one of its affiliates. All use shall be exclusively subject",
        " * to such license between the licensee and ForgeRock AS.",
        " */",
        "",
        "/**",
        " * The following script is a simplified template for understanding how to build",
        " * up a config Map object with custom values. The Config Provider Node will then",
        " * provide this config Map to the desired node type. It is important that the Map",
        " * you build here is named 'config'.",
        " *",
        " * Defined variables:",
        " *",
        " * nodeState - Node State (1)",
        " *           Always present, this represents the current values stored in the node state.",
        " *",
        " * idRepository - Profile Data (2)",
        " *           Always present, a repository to retrieve user information.",
        " *",
        " * secrets - Credentials and Secrets (3)",
        " *           Always present, an interface to access the Secrets API from a scripting context.",
        " *",
        " * requestHeaders (4) - Map (5)",
        " *           Always present, an object that provides methods for accessing headers in the login request.",
        " *",
        " * logger - Debug Logging (6)",
        " *          Always present, the debug logger instance.",
        " *",
        " * httpClient - HTTP Client (7)",
        " *          Always present, the HTTP client that can be used to make external HTTP requests.",
        " *",
        " * realm - String (primitive).",
        " *          Always present, the name of the realm the user is authenticating to.",
        " *",
        " * existingSession - Map<String, String> (5)",
        " *          Present if the request contains the session cookie, the user's session object. The returned map from",
        " *          SSOToken.getProperties() (8)",
        " *",
        " * requestParameters - Map (5)",
        " *          Always present, the object that contains the authentication request parameters.",
        " *",
        " *",
        " * Outputs:",
        " *",
        " * config - Map (5)",
        " *           Define and fill a Map object named 'config' with custom values, this will define the configuration for the",
        " *           associated node selected in the ConfigProviderNode.",
        " *",
        " * Reference:",
        " * (1) Node State - https://backstage.forgerock.com/docs/idcloud-am/latest/authentication-guide/scripting-api-node.html#scripting-api-node-nodeState",
        " * (2) Profile Data - https://backstage.forgerock.com/docs/am/7.1/authentication-guide/scripting-api-node.html#scripting-api-node-id-repo",
        " * (3) Credentials and Secrets - https://backstage.forgerock.com/docs/am/7.1/authentication-guide/scripting-api-node.html#scripting-api-authn-secrets",
        " * (4) Request Headers - https://backstage.forgerock.com/docs/am/7/authentication-guide/scripting-api-node.html#scripting-api-node-requestHeaders.",
        " * (5) Map - https://docs.oracle.com/en/java/javase/11/docs/api/java.base/java/util/Map.html",
        " * (6) Debug Logging - https://backstage.forgerock.com/docs/am/7/scripting-guide/scripting-api-global-logger.html#scripting-api-global-logger.",
        " * (7) HTTP Client - https://backstage.forgerock.com/docs/am/7/apidocs/org/forgerock/http/Client.html.",
        " * (8) SSOToken - https://backstage.forgerock.com/docs/am/7/apidocs/com/iplanet/sso/SSOToken.html.",
        " */",
        "",
        "config = nodeState.get('nodeConfig').asMap();",
      ],
    },
    "616d3541-14d6-4a54-94dd-46a146ef2423": {
      "_id": "616d3541-14d6-4a54-94dd-46a146ef2423",
      "context": "AUTHENTICATION_TREE_DECISION_NODE",
      "createdBy": "null",
      "creationDate": 0,
      "default": false,
      "description": "Check For Existing Session",
      "language": "JAVASCRIPT",
      "lastModifiedBy": "null",
      "lastModifiedDate": 0,
      "name": "Check For Existing Session",
      "script": [
        "if (typeof existingSession !== 'undefined')",
        "{",
        "  outcome = "true";",
        "}",
        "else",
        "{",
        "  outcome = "false";",
        "}",
      ],
    },
    "6325cf19-a49b-471e-8d26-7e4df76df0e2": {
      "_id": "6325cf19-a49b-471e-8d26-7e4df76df0e2",
      "context": "SOCIAL_IDP_PROFILE_TRANSFORMATION",
      "createdBy": "null",
      "creationDate": 0,
      "default": false,
      "description": "Normalizes raw profile data from GitHub",
      "language": "GROOVY",
      "lastModifiedBy": "null",
      "lastModifiedDate": 0,
      "name": "Okta Profile Normalization",
      "script": [
        "/*",
        " * Copyright 2022 ForgeRock AS. All Rights Reserved",
        " *",
        " * Use of this code requires a commercial software license with ForgeRock AS.",
        " * or with one of its affiliates. All use shall be exclusively subject",
        " * to such license between the licensee and ForgeRock AS.",
        " */",
        "",
        "import static org.forgerock.json.JsonValue.field",
        "import static org.forgerock.json.JsonValue.json",
        "import static org.forgerock.json.JsonValue.object",
        "",
        "logger.warning("Okta rawProfile: "+rawProfile)",
        "",
        "return json(object(",
        "        field("id", rawProfile.id),",
        "        field("displayName", rawProfile.name),",
        "        field("givenName", rawProfile.first_name),",
        "        field("familyName", rawProfile.last_name),",
        "        field("photoUrl", rawProfile.picture.data.url),",
        "        field("email", rawProfile.email),",
        "        field("username", rawProfile.preferred_username)))",
      ],
    },
    "638c865e-d393-4503-a517-535b9c74e010": {
      "_id": "638c865e-d393-4503-a517-535b9c74e010",
      "context": "CONFIG_PROVIDER_NODE",
      "createdBy": "null",
      "creationDate": 0,
      "default": false,
      "description": "CP-InnerTreeEvaluator-static-inner1",
      "language": "JAVASCRIPT",
      "lastModifiedBy": "null",
      "lastModifiedDate": 0,
      "name": "CP-ITE-static-inner1",
      "script": [
        "/*",
        " * Copyright 2021 ForgeRock AS. All Rights Reserved",
        " * Use of this code requires a commercial software license with ForgeRock AS.",
        " * or with one of its affiliates. All use shall be exclusively subject",
        " * to such license between the licensee and ForgeRock AS.",
        " */",
        "",
        "/**",
        " * The following script is a simplified template for understanding how to build",
        " * up a config Map object with custom values. The Config Provider Node will then",
        " * provide this config Map to the desired node type. It is important that the Map",
        " * you build here is named 'config'.",
        " *",
        " * Defined variables:",
        " *",
        " * nodeState - Node State (1)",
        " *           Always present, this represents the current values stored in the node state.",
        " *",
        " * idRepository - Profile Data (2)",
        " *           Always present, a repository to retrieve user information.",
        " *",
        " * secrets - Credentials and Secrets (3)",
        " *           Always present, an interface to access the Secrets API from a scripting context.",
        " *",
        " * requestHeaders (4) - Map (5)",
        " *           Always present, an object that provides methods for accessing headers in the login request.",
        " *",
        " * logger - Debug Logging (6)",
        " *          Always present, the debug logger instance.",
        " *",
        " * httpClient - HTTP Client (7)",
        " *          Always present, the HTTP client that can be used to make external HTTP requests.",
        " *",
        " * realm - String (primitive).",
        " *          Always present, the name of the realm the user is authenticating to.",
        " *",
        " * existingSession - Map<String, String> (5)",
        " *          Present if the request contains the session cookie, the user's session object. The returned map from",
        " *          SSOToken.getProperties() (8)",
        " *",
        " * requestParameters - Map (5)",
        " *          Always present, the object that contains the authentication request parameters.",
        " *",
        " *",
        " * Outputs:",
        " *",
        " * config - Map (5)",
        " *           Define and fill a Map object named 'config' with custom values, this will define the configuration for the",
        " *           associated node selected in the ConfigProviderNode.",
        " *",
        " * Reference:",
        " * (1) Node State - https://backstage.forgerock.com/docs/idcloud-am/latest/authentication-guide/scripting-api-node.html#scripting-api-node-nodeState",
        " * (2) Profile Data - https://backstage.forgerock.com/docs/am/7.1/authentication-guide/scripting-api-node.html#scripting-api-node-id-repo",
        " * (3) Credentials and Secrets - https://backstage.forgerock.com/docs/am/7.1/authentication-guide/scripting-api-node.html#scripting-api-authn-secrets",
        " * (4) Request Headers - https://backstage.forgerock.com/docs/am/7/authentication-guide/scripting-api-node.html#scripting-api-node-requestHeaders.",
        " * (5) Map - https://docs.oracle.com/en/java/javase/11/docs/api/java.base/java/util/Map.html",
        " * (6) Debug Logging - https://backstage.forgerock.com/docs/am/7/scripting-guide/scripting-api-global-logger.html#scripting-api-global-logger.",
        " * (7) HTTP Client - https://backstage.forgerock.com/docs/am/7/apidocs/org/forgerock/http/Client.html.",
        " * (8) SSOToken - https://backstage.forgerock.com/docs/am/7/apidocs/com/iplanet/sso/SSOToken.html.",
        " */",
        "",
        "config = {",
        "  tree: 'inner1'",
        "};",
      ],
    },
    "653b70b0-a23d-403a-933b-911371cf84c0": {
      "_id": "653b70b0-a23d-403a-933b-911371cf84c0",
      "context": "AUTHENTICATION_TREE_DECISION_NODE",
      "createdBy": "null",
      "creationDate": 0,
      "default": false,
      "description": "Returns privacy policy collection",
      "language": "JAVASCRIPT",
      "lastModifiedBy": "null",
      "lastModifiedDate": 0,
      "name": "Admin_PrivacyPolicy",
      "script": [
        "var jurisdictions = [",
        "  {",
        "    name: 'Australia',",
        "    url: 'https://backstage.forgerock.com/knowledge/identity-cloud/article/a92472578'",
        "  },",
        "  {",
        "    name: 'Brazil',",
        "    url: 'https://www.forgerock.com/privacy-policy'",
        "  },",
        "  {",
        "    name: 'California',",
        "    url: 'https://backstage.forgerock.com/knowledge/identity-cloud/article/a67552843'",
        "  },",
        "  {",
        "    name: 'Canada',",
        "    url: 'https://backstage.forgerock.com/knowledge/identity-cloud/article/a92472578'",
        "  },",
        "  {",
        "    name: 'European Union',",
        "    url: 'https://backstage.forgerock.com/knowledge/identity-cloud/article/a28580828'",
        "  },",
        "  {",
        "    name: 'Hong Kong',",
        "    url: 'https://www.forgerock.com/resources/view/109827462/overview/identity-cloud-privacy.pdf'",
        "  },",
        "  {",
        "    name: 'Indonesia',",
        "    url: 'https://www.forgerock.com/resources/view/109827462/overview/identity-cloud-privacy.pdf'",
        "  },",
        "  {",
        "    name: 'New Zealand',",
        "    url: 'https://backstage.forgerock.com/knowledge/identity-cloud/article/a92472578'",
        "  },",
        "  {",
        "    name: 'Singapore',",
        "    url: 'https://backstage.forgerock.com/knowledge/identity-cloud/article/a92472578'",
        "  },",
        "  {",
        "    name: 'United Kingdom',",
        "    url: 'https://backstage.forgerock.com/knowledge/identity-cloud/article/a28580828'",
        "  },",
        "  {",
        "    name: 'United States',",
        "    url: 'https://www.forgerock.com/privacy-policy'",
        "  },",
        "  {",
        "    name: 'Rest of the World',",
        "    url: 'https://www.forgerock.com/privacy-policy'",
        "  }",
        "];",
        "",
        "var token = generateNumericToken('xxx');",
        "var inputId = 'jurisdiction-input-'.concat(token);",
        "var selectId = 'jurisdiction-select-'.concat(token);",
        "",
        "// Build the header and instructions",
        "var message = "<h2 class='h2'>Accept Privacy Policy</h2><div style='margin-bottom:1em'>Select your region of residence to review the applicable privacy policy.</div>";",
        "",
        "// Build the jurisdiction dropdown",
        "var dropdown = "<select id='".concat(selectId).concat("' class='custom-select' onchange='document._onJurisdictionChange()'><option value=''>Region of residence</option>");",
        "for (var i = 0; i < jurisdictions.length; i++) {",
        "  var j = jurisdictions[i];",
        "  dropdown = dropdown.concat("<option value='").concat(j.name).concat("' data-url='").concat(j.url).concat("'>").concat(j.name).concat("</option>");",
        "}",
        "dropdown = dropdown.concat("</select>");",
        "",
        "// Build the confirmation checkbox with policy link",
        "var confirm = "<div id='confirm-wrapper' class='custom-control custom-checkbox' style='padding:1rem;visibility:hidden'>".concat(",
        "  "<input id='confirm-check' type='checkbox' class='custom-control-input' onchange='document._setNextButton()'>").concat(",
        "  "<label class='custom-control-label' for='confirm-check'>").concat(",
        "  "I agree to ForgeRock's <a id='policy-link' target=_blank href='" + jurisdictions[0].url + "'>Privacy Policy</a>").concat(",
        "  "</label>").concat(",
        ""</div>");",
        "",
        "var html = message + dropdown + confirm;",
        "",
        "var script =",
        "  'document._onJurisdictionChange = function() {'.concat(",
        "  '  var jurisdiction = getJurisdiction();').concat(",
        "  '  console.log(jurisdiction);').concat(",
        "  '  if (jurisdiction) {').concat(",
        "  '    setPolicyLink(jurisdiction.url);').concat(",
        "  '    setJurisdiction(jurisdiction.name);').concat(",
        "  '    setConfirmVisibility(true);').concat(",
        "  '  } else {').concat(",
        "  '    setJurisdiction("");').concat(",
        "  '    setConfirmVisibility(false);').concat(",
        "  '  }').concat(",
        "  '  document._setNextButton();').concat(",
        "  '};').concat(",
        "    ",
        "  'document._setNextButton = function() {').concat(",
        "  '  var jurisdiction = getJurisdiction();').concat(",
        "  '  var cb = getCheckbox();').concat(",
        "  '  loginHelpers.disableNextButton(!jurisdiction || !cb.checked);').concat(",
        "  '};').concat(",
        "    ",
        "  'var getJurisdiction = function() {').concat(",
        "  '  var sel = document.getElementById("').concat(selectId).concat('");').concat(",
        "  '  var opt = sel.options[sel.selectedIndex];').concat(",
        "  '  return opt.value ? { name: opt.value, url: opt.getAttribute("data-url") } : null;').concat(",
        "  '};').concat(",
        "    ",
        "  'var getCheckbox = function() {').concat(",
        "  '  return document.getElementById("confirm-check");').concat(",
        "  '};').concat(",
        "    ",
        "  'var setConfirmVisibility = function(show) {').concat(",
        "  '  var el = document.getElementById("confirm-wrapper");').concat(",
        "  '  el.style.visibility = show ? "visible" : "hidden";').concat(",
        "  '};').concat(",
        "    ",
        "  'var setPolicyLink = function(url) {').concat(",
        "  '  document.getElementById("policy-link").setAttribute("href", url);').concat(",
        "  '};').concat(",
        "",
        "  'var setJurisdiction = function(name) {').concat(",
        "  '  loginHelpers.setHiddenCallback("').concat(inputId).concat('", name);').concat(",
        "  '};').concat(",
        "    ",
        "  'var isPageReady = function() {').concat(",
        "  '  return document.getElementById("callback_0") != null;').concat(",
        "  '};').concat(",
        "    ",
        "  'var setupPage = function() {').concat(",
        "  '  if (!isPageReady()) {').concat(",
        "  '    return setTimeout(setupPage, 100);').concat(",
        "  '  }').concat(",
        "  '  loginHelpers.disableNextButton(true);').concat(",
        "  '  var container = document.getElementById("callback_0");').concat(",
        "  '  container.insertAdjacentHTML("beforeend", "').concat(html).concat('");').concat(",
        "  '};').concat(",
        "    ",
        "  'setupPage();');",
        "",
        "function isValidJurisdiction(name) {",
        "  for (var i = 0; i < jurisdictions.length; i++) {",
        "    if (jurisdictions[i].name == name) {",
        "      return true;",
        "    }",
        "  }",
        "  return false;",
        "}",
        "",
        "var fr = JavaImporter(",
        "  org.forgerock.openam.auth.node.api.Action,",
        "  com.sun.identity.authentication.callbacks.HiddenValueCallback,",
        "  com.sun.identity.authentication.callbacks.ScriptTextOutputCallback,",
        "  java.util.HashMap",
        ")",
        "",
        "with (fr) {",
        "  if (callbacks.isEmpty() || !isValidJurisdiction(callbacks.get(0).getValue())) {",
        "    action = Action.send(",
        "      new HiddenValueCallback(inputId, ''),",
        "      new ScriptTextOutputCallback(script)",
        "    ).build();",
        "  } else {",
        "    var OBJ_ATTRS = 'objectAttributes';",
        "    var attrs = sharedState.containsKey(OBJ_ATTRS) ? sharedState.get(OBJ_ATTRS) : new HashMap();",
        "    attrs.put('jurisdiction', callbacks.get(0).getValue());",
        "    sharedState.put(OBJ_ATTRS, attrs);",
        "    action = Action.goTo('True').build();",
        "  }",
        "}",
        "",
        " /*",
        "  * Generate a token in the desired format. All 'x' characters will be replaced with a random number 0-9.",
        "  * ",
        "  * Example:",
        "  * 'xxxxx' produces '28535'",
        "  * 'xxx-xxx' produces '432-521'",
        "  */",
        "function generateNumericToken(format) {",
        "  return format.replace(/[x]/g, function(c) {",
        "    var r = Math.random()*10|0;",
        "    var v = r;",
        "    return v.toString(10);",
        "  });",
        "}",
      ],
    },
    "663d0f65-ddf3-419c-8369-a90fde43d521": {
      "_id": "663d0f65-ddf3-419c-8369-a90fde43d521",
      "context": "AUTHENTICATION_TREE_DECISION_NODE",
      "createdBy": "null",
      "creationDate": 0,
      "default": false,
      "description": "Generate QR Code",
      "language": "JAVASCRIPT",
      "lastModifiedBy": "null",
      "lastModifiedDate": 0,
      "name": "QR Code",
      "script": [
        "/* QR Code",
        " * ",
        " * Generate QR Code",
        " * ",
        " * This script needs to be parametrized. It will not work properly as is.",
        " * ",
        " * The Scripted Decision Node needs the following outcomes defined:",
        " * - true",
        " *",
        " * Author: volker.scheuber@forgerock.com",
        " */",
        "(function () {",
        "  outcome = "true";",
        "  ",
        "  /**",
        "   * Modify the qrCodeUrl variable to a static string or read from shared state. Must contain the URL you want the QR code to represent.",
        "   */",
        "  var qrCodeUrl = 'https://www.forgerock.com/';",
        "  //var qrCodeUrl = sharedState.get("qrCodeUrl").toString();",
        "  ",
        "  var fr = JavaImporter(",
        "    org.forgerock.openam.auth.node.api,",
        "    com.sun.identity.authentication.callbacks.ScriptTextOutputCallback",
        "  );",
        "  ",
        "  if (callbacks.isEmpty()) {",
        "    var qrCallback = new fr.ScriptTextOutputCallback("window.QRCodeReader.createCode({\\n    id: 'callback_0',\\n    text: '"+qrCodeUrl+"',\\n    version: '20',\\n    code: 'L'\\n});");",
        "    action = fr.Action.send(qrCallback).build();",
        "  } else {",
        "    action = fr.Action.goTo(outcome).build();",
        "  }",
        "}());",
      ],
    },
    "68d5a8e7-fcc9-4215-9e63-a01afe8fa849": {
      "_id": "68d5a8e7-fcc9-4215-9e63-a01afe8fa849",
      "context": "AUTHENTICATION_TREE_DECISION_NODE",
      "createdBy": "null",
      "creationDate": 0,
      "default": false,
      "description": "Perform IDP lookup based on email domain. Set users' external IDP in shared state or continue to local authentication.",
      "language": "JAVASCRIPT",
      "lastModifiedBy": "null",
      "lastModifiedDate": 0,
      "name": "IDP Lookup",
      "script": [
        "/* IDP Lookup",
        " * ",
        " * Perform IDP lookup based on email domain. Set users' external IDP in shared state or continue to local authentication.",
        " * ",
        " * This script requires parametrization. Make sure you carefully review the configuration parameters.",
        " * ",
        " * The Scripted Decision Node needs the following outcomes defined:",
        " * - one",
        " * - multiple",
        " * - none",
        " *",
        " * Author: volker.scheuber@forgerock.com",
        " */",
        "(function () {",
        "    logger.message("IDP Lookup: start");",
        "      outcome = "none";",
        "      var username = sharedState.get("username");",
        "      var domain = username.substr(username.lastIndexOf("@")+1);",
        "      var referer = parseUrl(requestHeaders.get("referer").get(0));",
        "",
        "      /* Begin Configuration */",
        "  ",
        "    // long-lived token",
        "    var IDM_API_TOKEN = systemEnv.getProperty("esv.admin.token");",
        "  ",
        "    // IDM API Configuration",
        "    var IDM_API_URI = referer.origin + "/openidm/managed/alpha_organization?_queryFilter=idpDomains+co+'" + domain + "'&_fields=name,description,idpName,idpType,idpDomains,idpJourney,idpTheme,idpPersist,samlConfig";",
        "",
        "      /* End Configuration */",
        "",
        "    var request = new org.forgerock.http.protocol.Request();",
        "    request.setMethod('GET');",
        "    request.setUri(IDM_API_URI);",
        "    request.getHeaders().add("Content-Type", "application/json; charset=UTF-8");",
        "    request.getHeaders().add("Authorization", "Bearer " + IDM_API_TOKEN);",
        "",
        "    var response = httpClient.send(request).get();",
        "    var result = JSON.parse(response.getEntity().getString());",
        "    logger.message("IDP Lookup: JSON result: " + JSON.stringify(result));",
        "    ",
        "      var routedIDPs = result.result.length ? result.result : [{}];",
        "      // stringify the samlConfig property",
        "      routedIDPs.forEach(function (routedIDP, index) {",
        "          routedIDPs[index].samlConfig = JSON.stringify(routedIDP.samlConfig);",
        "    });",
        "      sharedState.put("routedIDPs", routedIDPs);",
        "    if (result.resultCount === 1) {",
        "        logger.message("IDP Lookup: Found exactly 1 IDP");",
        "        outcome = "one";",
        "    }",
        "      else if (result.resultCount > 1) {",
        "        logger.message("IDP Lookup: Found {} IDPs", result.resultCount);",
        "        outcome = "multiple";",
        "    }",
        "      else {",
        "        logger.message("IDP Lookup: Found no IDPs");",
        "    }",
        "    logger.message("IDP Lookup: end [outcome={}]", outcome);",
        "",
        "    /*",
        "     * Parse a URL into its components and make them easily accessible by name",
        "     *",
        "     * Use in a Scripte Decision Node Script as follows:",
        "     * var referer = parseUrl(requestHeaders.get("referer").get(0));",
        "     * var origin = referer.origin;",
        "     * ",
        "     * e.g.: https://openam-volker-dev.forgeblocks.com/am/XUI/?realm=/bravo&authIndexType=service&authIndexValue=InitiateOwnerClaim#/",
        "     * {",
        "     *     hash: '#/',",
        "     *     host: 'openam-volker-dev.forgeblocks.com',",
        "     *     hostname: 'openam-volker-dev.forgeblocks.com',",
        "     *     href: 'https://openam-volker-dev.forgeblocks.com/am/XUI/?realm=/bravo&authIndexType=service&authIndexValue=InitiateOwnerClaim#/',",
        "     *     origin: 'https://openam-volker-dev.forgeblocks.com',",
        "     *     pathname: '/am/XUI/',",
        "     *     port: '',",
        "     *     protocol: 'https',",
        "     *     search: '?realm=/bravo&authIndexType=service&authIndexValue=InitiateOwnerClaim',",
        "     *     username: '',",
        "     *     password: '',",
        "     *     searchParam: {",
        "     *         realm: '/bravo',",
        "     *         authIndexType: 'service',",
        "     *         authIndexValue: 'InitiateOwnerClaim'",
        "     *     }",
        "     * }",
        "     */",
        "    function parseUrl(href) {",
        "        var m = href.match(/^(([^:\\/?#]+):?(?:\\/\\/((?:([^\\/?#:]*):([^\\/?#:]*)@)?([^\\/?#:]*)(?::([^\\/?#:]*))?)))?([^?#]*)(\\?[^#]*)?(#.*)?$/),",
        "        r = {",
        "            hash: m[10] || "",                      // #/",
        "            host: m[3] || "",                       // openam-volker-dev.forgeblocks.com",
        "            hostname: m[6] || "",                   // openam-volker-dev.forgeblocks.com",
        "            href: m[0] || "",                       // https://openam-volker-dev.forgeblocks.com/am/XUI/?realm=/bravo&authIndexType=service&authIndexValue=InitiateOwnerClaim#/",
        "            origin: m[1] || "",                     // https://openam-volker-dev.forgeblocks.com",
        "            pathname: m[8] || (m[1] ? "/" : ""),    // /am/XUI/",
        "            port: m[7] || "",                       // ",
        "            protocol: m[2] || "",                   // https",
        "            search: m[9] || "",                     // ?realm=/bravo&authIndexType=service&authIndexValue=InitiateOwnerClaim",
        "            username: m[4] || "",                   // ",
        "            password: m[5] || "",                   // ",
        "            searchParam: {}                         // { realm: '/bravo',",
        "                                                    //   authIndexType: 'service',",
        "                                                    //   authIndexValue: 'InitiateOwnerClaim' }",
        "        };",
        "        if (r.protocol.length == 2) {",
        "            r.protocol = "file:///" + r.protocol.toUpperCase();",
        "            r.origin = r.protocol + "//" + r.host;",
        "        }",
        "        if (r.search.length > 2) {",
        "            var query = (r.search.indexOf('?') === 0) ? r.search.substr(1) : r.search;",
        "            var vars = query.split('&');",
        "            for (var i = 0; i < vars.length; i++) {",
        "            var pair = vars[i].split('=');",
        "            r.searchParam[decodeURIComponent(pair[0])] = decodeURIComponent(pair[1]);",
        "            }",
        "        }",
        "        r.href = r.origin + r.pathname + r.search + r.hash;",
        "        return r;",
        "    };",
        "}());",
      ],
    },
    "6963d84e-e2f0-4db1-a746-116604189602": {
      "_id": "6963d84e-e2f0-4db1-a746-116604189602",
      "context": "AUTHENTICATION_TREE_DECISION_NODE",
      "createdBy": "null",
      "creationDate": 0,
      "default": false,
      "description": "null",
      "language": "JAVASCRIPT",
      "lastModifiedBy": "null",
      "lastModifiedDate": 0,
      "name": "Admin_SetCurrentYear",
      "script": [
        "var currentYear = new Date().getFullYear().toString();",
        "",
        "var objAttrs = sharedState.get('objectAttributes') || new java.util.HashMap();",
        "objAttrs.put('currentYear', currentYear);",
        "sharedState.put('objectAttributes', objAttrs);",
        "",
        "outcome = 'True';",
        "",
      ],
    },
    "6ad22934-5d12-43a6-96a7-a2fba8d999bf": {
      "_id": "6ad22934-5d12-43a6-96a7-a2fba8d999bf",
      "context": "AUTHENTICATION_TREE_DECISION_NODE",
      "createdBy": "null",
      "creationDate": 0,
      "default": false,
      "description": "Call out to University of Phoenix Course Registration System and get current course.",
      "language": "JAVASCRIPT",
      "lastModifiedBy": "null",
      "lastModifiedDate": 0,
      "name": "UOP Get Course ID",
      "script": [
        "/* UOP Get Course ID",
        " *",
        " * Author: volker.scheuber@forgerock.com",
        " * ",
        " * Call out to University of Phoenix Course Registration System and get current class.",
        " * ",
        " * This script does not need to be parametrized. It will work properly as is. ",
        " * It requires the Identify Existing User node before it is being called.",
        " * ",
        " * The Scripted Decision Node needs the following outcomes defined:",
        " * - has classes",
        " * - no classes",
        " * - error",
        " */",
        "logger.warning("UOP Get Course ID: start now");",
        "",
        "outcome = "error";",
        "",
        "if (sharedState.get("_id") && idRepository.getAttribute(sharedState.get("_id"), "mail").iterator().hasNext()) {",
        "",
        "       /* BEGIN SCRIPT CONFIGURATION",
        "     *",
        "     * REPLACE WITH YOUR OWN API SETTINGS",
        "     */",
        "      var email = idRepository.getAttribute(sharedState.get("_id"), "mail").iterator().next();",
        "    var UOP_CLASS_API_URI = "https://dy4rpew5va.execute-api.us-east-1.amazonaws.com/forgerock/course?courseId=CES422";",
        "      //var UOP_CLASS_API_URI = "https://dy4rpew5va.execute-api.us-east-1.amazonaws.com/forgerock/course?emailId=".concat(email);",
        "    /*",
        "     * END SCRIPT CONFIGURATION",
        "     */",
        "",
        "    var request = new org.forgerock.http.protocol.Request();",
        "    request.setMethod('GET');",
        "    request.setUri(UOP_CLASS_API_URI);",
        "",
        "    var response = httpClient.send(request).get();",
        "    var UOPClassID = response.getEntity().getString();",
        "    logger.warning("UOP Get Course ID: API call result: Course ID=".concat(UOPClassID));",
        "",
        "    /* Sample API response",
        "    CES421",
        "    */",
        "",
        "    if (UOPClassID) {",
        "        outcome = "has classes";",
        "",
        "        // preserve result in shared state",
        "        sharedState.put("uopCurrentClassID", UOPClassID);",
        "    } ",
        "    else if (UOPClassID === "") {",
        "        outcome = "no classes";",
        "    }",
        "    else {",
        "        outcome = "error";",
        "    }",
        "",
        "} else {",
        "    logger.error("UOP Get Course ID: no classes!");",
        "}",
        "",
        "logger.warning("UOP Get Course ID: End (outcome=".concat(outcome).concat(")"));",
      ],
    },
    "6b3cfd48-62d3-48ff-a96f-fe8f3a22ab30": {
      "_id": "6b3cfd48-62d3-48ff-a96f-fe8f3a22ab30",
      "context": "SOCIAL_IDP_PROFILE_TRANSFORMATION",
      "createdBy": "null",
      "creationDate": 0,
      "default": true,
      "description": "Normalizes raw profile data from Amazon",
      "language": "GROOVY",
      "lastModifiedBy": "null",
      "lastModifiedDate": 0,
      "name": "Amazon Profile Normalization",
      "script": [
        "/*",
        " * Copyright 2020 ForgeRock AS. All Rights Reserved",
        " *",
        " * Use of this code requires a commercial software license with ForgeRock AS.",
        " * or with one of its affiliates. All use shall be exclusively subject",
        " * to such license between the licensee and ForgeRock AS.",
        " */",
        "",
        "import static org.forgerock.json.JsonValue.field",
        "import static org.forgerock.json.JsonValue.json",
        "import static org.forgerock.json.JsonValue.object",
        "",
        "return json(object(",
        "        field("id", rawProfile.user_id),",
        "        field("displayName", rawProfile.name),",
        "        field("email", rawProfile.email),",
        "        field("username", rawProfile.email)))",
      ],
    },
    "6ccf7507-38a4-49fe-9fb2-927186538e66": {
      "_id": "6ccf7507-38a4-49fe-9fb2-927186538e66",
      "context": "AUTHENTICATION_TREE_DECISION_NODE",
      "createdBy": "null",
      "creationDate": 0,
      "default": false,
      "description": "null",
      "language": "JAVASCRIPT",
      "lastModifiedBy": "null",
      "lastModifiedDate": 0,
      "name": "Admin_PasswordUpdatedMessage",
      "script": [
        "/*",
        " * Copyright 2023 ForgeRock AS. All Rights Reserved",
        " *",
        " * Use of this code requires a commercial software license with ForgeRock AS.",
        " * or with one of its affiliates. All use shall be exclusively subject",
        " * to such license between the licensee and ForgeRock AS.",
        " */",
        "",
        "/*",
        "This script creates callbacks to display a confirmation message with a single button. The Message Node always",
        "produces two buttons for separate outcomes.",
        "*/",
        "",
        "var message = "<h2 class='h2'>Success</h2><div style='margin-bottom:1em'>Your password was updated successfully.</div>";",
        "var optionValue = 'Sign In';",
        "",
        "var loadingMessage = 'Loading...';",
        "var token = generateNumericToken('xxx');",
        "var inputId = 'input-'.concat(token);",
        "",
        "var setupPageScript =",
        "  'var setupPage = function() {'.concat(",
        "  '  var inputElem = document.getElementById("').concat(inputId).concat('");').concat(",
        "  '  var messageElem;').concat(",
        "  '  document.getElementsByClassName("callback-component").forEach(').concat(",
        "  '    function (e) {').concat(",
        "  '      var m = e.firstElementChild;').concat(",
        "  '      if (m.firstChild && m.firstChild.nodeName == "#text" && m.firstChild.nodeValue.trim() == "').concat(loadingMessage).concat('") {').concat(",
        "  '        messageElem = m;').concat(",
        "  '      }').concat(",
        "  '    }').concat(",
        "  '  );').concat(",
        "  '  if (!inputElem || !messageElem) {').concat(",
        "  '    return setTimeout(setupPage, 50);').concat(",
        "  '  }').concat(",
        "  '  inputElem.value = "').concat(optionValue).concat('";').concat(",
        "  '  messageElem.align = "center";').concat(",
        "  '  messageElem.innerHTML = "').concat(message).concat('";').concat(",
        "  '};').concat(",
        "  'setupPage();');",
        "",
        "var fr = JavaImporter(",
        "  org.forgerock.openam.auth.node.api.Action,",
        "  javax.security.auth.callback.ConfirmationCallback,",
        "  javax.security.auth.callback.TextOutputCallback,",
        "  com.sun.identity.authentication.callbacks.HiddenValueCallback,",
        "  com.sun.identity.authentication.callbacks.ScriptTextOutputCallback",
        ")",
        "",
        "with (fr) {",
        "  if (callbacks.isEmpty()) {",
        "    action = Action.send(",
        "      new TextOutputCallback(",
        "          TextOutputCallback.INFORMATION,",
        "          loadingMessage",
        "      ),",
        "      new ConfirmationCallback(",
        "          ConfirmationCallback.INFORMATION,",
        "          [optionValue],",
        "          0",
        "      ),",
        "      new HiddenValueCallback(inputId, 'false'),",
        "      new ScriptTextOutputCallback(setupPageScript)",
        "    ).build()",
        "  } else {",
        "    action = Action.goTo(optionValue).build();",
        "  }",
        "}",
        "",
        " /*",
        "  * Generate a token in the desired format. All 'x' characters will be replaced with a random number 0-9.",
        "  * ",
        "  * Example:",
        "  * 'xxxxx' produces '28535'",
        "  * 'xxx-xxx' produces '432-521'",
        "  */",
        "function generateNumericToken(format) {",
        "  return format.replace(/[x]/g, function(c) {",
        "    var r = Math.random()*10|0;",
        "    var v = r;",
        "    return v.toString(10);",
        "  });",
        "}",
      ],
    },
    "6cde0f58-437d-460a-bb44-7d76999e5ed5": {
      "_id": "6cde0f58-437d-460a-bb44-7d76999e5ed5",
      "context": "AUTHENTICATION_TREE_DECISION_NODE",
      "createdBy": "null",
      "creationDate": 0,
      "default": false,
      "description": "null",
      "language": "JAVASCRIPT",
      "lastModifiedBy": "null",
      "lastModifiedDate": 0,
      "name": "Admin_GroupBasedOnboarding",
      "script": [
        "/*",
        " * Copyright 2023 ForgeRock AS. All Rights Reserved",
        " *",
        " * Use of this code requires a commercial software license with ForgeRock AS.",
        " * or with one of its affiliates. All use shall be exclusively subject",
        " * to such license between the licensee and ForgeRock AS.",
        " */",
        "",
        "/*",
        " * This script checks if group membership was established upstream after authenticating",
        " * via an IdP with groups claim mappings configured. If so, we need to auto-populate",
        " * missing object attributes in order to create a valid managed object.",
        " */",
        "",
        "var groups = sharedState.get('groups');",
        "",
        "if (groups && groups.length > 0) {",
        "  ",
        "  var OBJECT_ATTRS = 'objectAttributes';",
        "  var objAttrs = sharedState.get(OBJECT_ATTRS);",
        "  objAttrs.put('groups', groups);",
        "  objAttrs.put('inviteDate', '-');",
        "  objAttrs.put('userName', objAttrs.get('mail'));",
        "  sharedState.put(OBJECT_ATTRS, objAttrs);",
        "  ",
        "  outcome = 'True';",
        "} else {",
        "  outcome = 'False';",
        "}",
        "",
      ],
    },
    "6d6c2202-725b-4196-9436-92ec11a0b385": {
      "_id": "6d6c2202-725b-4196-9436-92ec11a0b385",
      "context": "AUTHENTICATION_TREE_DECISION_NODE",
      "createdBy": "null",
      "creationDate": 0,
      "default": false,
      "description": "Display sharedState and transientState.",
      "language": "JAVASCRIPT",
      "lastModifiedBy": "null",
      "lastModifiedDate": 0,
      "name": "Display States - imported (2)",
      "script": [
        "/* Display States",
        " * ",
        " * Display sharedState and transientState.",
        " * ",
        " * This script does not need to be parametrized. It will work properly as is.",
        " * ",
        " * The Scripted Decision Node needs the following outcomes defined:",
        " * - true",
        " *",
        " * Author: volker.scheuber@forgerock.com",
        " */",
        "(function () {",
        "    outcome = "true";",
        "",
        "    var anchor = "anchor-".concat(generateNumericToken('xxx'));",
        "    var halign = "left";",
        "    var message = "<h4>Current State Values</h4>".concat(",
        "        "<p><b>Shared State</b>:<br/>").concat(",
        "        sharedState.toString()).concat("</p>").concat(",
        "        "<p><b>Transient State</b>:<br/>").concat(",
        "        transientState.toString()).concat("</p>")",
        "    var script = "Array.prototype.slice.call(\\n".concat(",
        "      "document.getElementsByClassName('callback-component')).forEach(\\n").concat(",
        "      "function (e) {\\n").concat(",
        "      "  var message = e.firstElementChild;\\n").concat(",
        "      "  if (message.firstChild && message.firstChild.nodeName == '#text' && message.firstChild.nodeValue.trim() == '").concat(anchor).concat("') {\\n").concat(",
        "      "    message.className = \\"\\";\\n").concat(",
        "      "    message.style = \\"text-align: left; inline-size: 430px; overflow-wrap: break-word;\\";\\n").concat(",
        "      "    message.align = \\"").concat(halign).concat("\\";\\n").concat(",
        "      "    message.innerHTML = '").concat(message).concat("';\\n").concat(",
        "      "  }\\n").concat(",
        "      "})")",
        "    var fr = JavaImporter(",
        "        org.forgerock.openam.auth.node.api.Action,",
        "        javax.security.auth.callback.TextOutputCallback,",
        "        com.sun.identity.authentication.callbacks.ScriptTextOutputCallback",
        "    )",
        "    if (message.length && callbacks.isEmpty()) {",
        "        action = fr.Action.send(",
        "            new fr.TextOutputCallback(",
        "                fr.TextOutputCallback.INFORMATION,",
        "                anchor",
        "            ),",
        "            new fr.ScriptTextOutputCallback(script)",
        "        ).build()",
        "    }",
        "    else {",
        "      action = fr.Action.goTo(outcome).build();",
        "    }",
        "",
        "     /*",
        "      * Generate a token in the desired format. All 'x' characters will be replaced with a random number 0-9.",
        "      * ",
        "      * Example:",
        "      * 'xxxxx' produces '28535'",
        "      * 'xxx-xxx' produces '432-521'",
        "      */",
        "    function generateNumericToken(format) {",
        "        return format.replace(/[x]/g, function(c) {",
        "            var r = Math.random()*10|0;",
        "            var v = r;",
        "            return v.toString(10);",
        "        });",
        "    }",
        "}());",
      ],
    },
    "6dfc6de4-64cb-4d47-8269-6c5ced44344d": {
      "_id": "6dfc6de4-64cb-4d47-8269-6c5ced44344d",
      "context": "AUTHENTICATION_TREE_DECISION_NODE",
      "createdBy": "null",
      "creationDate": 0,
      "default": false,
      "description": "null",
      "language": "JAVASCRIPT",
      "lastModifiedBy": "null",
      "lastModifiedDate": 0,
      "name": "Admin_IsInvited",
      "script": [
        "/*",
        " * Copyright 2023 ForgeRock AS. All Rights Reserved",
        " *",
        " * Use of this code requires a commercial software license with ForgeRock AS.",
        " * or with one of its affiliates. All use shall be exclusively subject",
        " * to such license between the licensee and ForgeRock AS.",
        " */",
        "",
        "if (sharedState.get('invited') == true) {",
        "  outcome = 'True';",
        "} else {",
        "  outcome = 'False';",
        "}",
      ],
    },
    "703dab1a-1921-4981-98dd-b8e5349d8548": {
      "_id": "703dab1a-1921-4981-98dd-b8e5349d8548",
      "context": "AUTHENTICATION_SERVER_SIDE",
      "createdBy": "null",
      "creationDate": 0,
      "default": true,
      "description": "Default global script for server side Device Id (Match) Authentication Module",
      "language": "JAVASCRIPT",
      "lastModifiedBy": "null",
      "lastModifiedDate": 0,
      "name": "Device Id (Match) - Server Side",
      "script": [
        "/*",
        " * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS HEADER.",
        " *",
        " * Copyright (c) 2009 Sun Microsystems Inc. All Rights Reserved",
        " *",
        " * The contents of this file are subject to the terms",
        " * of the Common Development and Distribution License",
        " * (the License). You may not use this file except in",
        " * compliance with the License.",
        " *",
        " * You can obtain a copy of the License at",
        " * https://opensso.dev.java.net/public/CDDLv1.0.html or",
        " * opensso/legal/CDDLv1.0.txt",
        " * See the License for the specific language governing",
        " * permission and limitations under the License.",
        " *",
        " * When distributing Covered Code, include this CDDL",
        " * Header Notice in each file and include the License file",
        " * at opensso/legal/CDDLv1.0.txt.",
        " * If applicable, add the following below the CDDL Header,",
        " * with the fields enclosed by brackets [] replaced by",
        " * your own identifying information:",
        " * "Portions Copyrighted [year] [name of copyright owner]"",
        " *",
        " */",
        "/*",
        " * Portions Copyrighted 2013 Syntegrity.",
        " * Portions Copyrighted 2013-2018 ForgeRock AS.",
        " */",
        "",
        "var ScalarComparator = {}, ScreenComparator = {}, MultiValueComparator = {}, UserAgentComparator = {}, GeolocationComparator = {};",
        "",
        "var config = {",
        "    profileExpiration: 30,              //in days",
        "    maxProfilesAllowed: 5,",
        "    maxPenaltyPoints: 0,",
        "    attributes: {",
        "        screen: {",
        "            required: true,",
        "            comparator: ScreenComparator,",
        "            args: {",
        "                penaltyPoints: 50",
        "            }",
        "        },",
        "        plugins: {",
        "            installedPlugins: {",
        "                required: false,",
        "                comparator: MultiValueComparator,",
        "                args: {",
        "                    maxPercentageDifference: 10,",
        "                    maxDifferences: 5,",
        "                    penaltyPoints: 100",
        "                }",
        "            }",
        "        },",
        "        fonts: {",
        "            installedFonts: {",
        "                required: false,",
        "                comparator: MultiValueComparator,",
        "                args: {",
        "                    maxPercentageDifference: 10,",
        "                    maxDifferences: 5,",
        "                    penaltyPoints: 100",
        "                }",
        "            }",
        "        },",
        "        timezone: {",
        "            timezone: {",
        "                required: false,",
        "                comparator: ScalarComparator,",
        "                args: {",
        "                    penaltyPoints: 100",
        "                }",
        "            }",
        "        },",
        "        userAgent: {",
        "            required: true,",
        "            comparator: UserAgentComparator,",
        "            args: {",
        "                ignoreVersion: true,",
        "                penaltyPoints: 100",
        "            }",
        "        },",
        "        geolocation: {",
        "            required: false,",
        "            comparator: GeolocationComparator,",
        "            args: {",
        "                allowedRange: 100,            //in miles",
        "                penaltyPoints: 100",
        "            }",
        "        }",
        "    }",
        "};",
        "",
        "//---------------------------------------------------------------------------//",
        "//                           Comparator functions                            //",
        "//---------------------------------------------------------------------------//",
        "",
        "var all, any, calculateDistance, calculateIntersection, calculatePercentage, nullOrUndefined, splitAndTrim,",
        "    undefinedLocation;",
        "",
        "// ComparisonResult",
        "",
        "/**",
        " * Constructs an instance of a ComparisonResult with the given penalty points.",
        " *",
        " * @param penaltyPoints (Number) The penalty points for the comparison (defaults to 0).",
        " * @param additionalInfoInCurrentValue (boolean) Whether the current value contains more information",
        " *                                               than the stored value (defaults to false).",
        " */",
        "function ComparisonResult() {",
        "",
        "    var penaltyPoints = 0,",
        "        additionalInfoInCurrentValue = false;",
        "",
        "    if (arguments[0] !== undefined && arguments[1] !== undefined) {",
        "        penaltyPoints = arguments[0];",
        "        additionalInfoInCurrentValue = arguments[1];",
        "    }",
        "",
        "    if (arguments[0] !== undefined && arguments[1] === undefined) {",
        "        if (typeof(arguments[0]) === "boolean") {",
        "            additionalInfoInCurrentValue = arguments[0];",
        "        } else {",
        "            penaltyPoints = arguments[0];",
        "        }",
        "    }",
        "",
        "    this.penaltyPoints = penaltyPoints;",
        "    this.additionalInfoInCurrentValue = additionalInfoInCurrentValue;",
        "",
        "}",
        "",
        "ComparisonResult.ZERO_PENALTY_POINTS = new ComparisonResult(0);",
        "",
        "/**",
        " * Static method for functional programming.",
        " *",
        " * @return boolean true if comparisonResult.isSuccessful().",
        " */",
        "ComparisonResult.isSuccessful =  function(comparisonResult) {",
        "    return comparisonResult.isSuccessful();",
        "};",
        "",
        "",
        "/**",
        " * Static method for functional programming.",
        " *",
        " * @return boolean true if comparisonResult.additionalInfoInCurrentValue.",
        " */",
        "ComparisonResult.additionalInfoInCurrentValue =  function(comparisonResult) {",
        "    return comparisonResult.additionalInfoInCurrentValue;",
        "};",
        "",
        "/**",
        " * Comparison function that can be provided as an argument to array.sort",
        " */",
        "ComparisonResult.compare = function(first, second) {",
        "    if (nullOrUndefined(first) && nullOrUndefined(second)) {",
        "        return 0;",
        "    } else if (nullOrUndefined(first)) {",
        "        return -1;",
        "    } else if (nullOrUndefined(second)) {",
        "        return 1;",
        "    } else {",
        "        if (first.penaltyPoints !== second.penaltyPoints) {",
        "            return first.penaltyPoints - second.penaltyPoints;",
        "        } else {",
        "            return (first.additionalInfoInCurrentValue ? 1 : 0) - (second.additionalInfoInCurrentValue ? 1 : 0);",
        "        }",
        "    }",
        "};",
        "",
        "/**",
        " * Amalgamates the given ComparisonResult into this ComparisonResult.",
        " *",
        " * @param comparisonResult The ComparisonResult to include.",
        " */",
        "ComparisonResult.prototype.addComparisonResult = function(comparisonResult) {",
        "    this.penaltyPoints += comparisonResult.penaltyPoints;",
        "    if (comparisonResult.additionalInfoInCurrentValue) {",
        "        this.additionalInfoInCurrentValue = comparisonResult.additionalInfoInCurrentValue;",
        "    }",
        "};",
        "",
        "/**",
        " * Returns true if no penalty points have been assigned for the comparison.",
        " *",
        " * @return boolean true if the comparison was successful.",
        " */",
        "ComparisonResult.prototype.isSuccessful = function() {",
        "    return nullOrUndefined(this.penaltyPoints) || this.penaltyPoints === 0;",
        "};",
        "",
        "/**",
        " * Compares two simple objects (String|Number) and if they are equal then returns a ComparisonResult with zero",
        " * penalty points assigned, otherwise returns a ComparisonResult with the given number of penalty points assigned.",
        " *",
        " * @param currentValue (String|Number) The current value.",
        " * @param storedValue (String|Number) The stored value.",
        " * @param config: {",
        " *            "penaltyPoints": (Number) The number of penalty points.",
        " *        }",
        " * @return ComparisonResult.",
        " */",
        "ScalarComparator.compare = function (currentValue, storedValue, config) {",
        "    if (logger.messageEnabled()) {",
        "        logger.message("StringComparator.compare:currentValue: " + JSON.stringify(currentValue));",
        "        logger.message("StringComparator.compare:storedValue: " + JSON.stringify(storedValue));",
        "        logger.message("StringComparator.compare:config: " + JSON.stringify(config));",
        "    }",
        "    if (config.penaltyPoints === 0) {",
        "        return ComparisonResult.ZERO_PENALTY_POINTS;",
        "    }",
        "",
        "    if (!nullOrUndefined(storedValue)) {",
        "        if (nullOrUndefined(currentValue) || currentValue !== storedValue) {",
        "            return new ComparisonResult(config.penaltyPoints);",
        "        }",
        "    } else if (!nullOrUndefined(currentValue)) {",
        "        return new ComparisonResult(true);",
        "    }",
        "",
        "    return ComparisonResult.ZERO_PENALTY_POINTS;",
        "};",
        "",
        "/**",
        " * Compares two screens and if they are equal then returns a ComparisonResult with zero penalty points assigned,",
        " * otherwise returns a ComparisonResult with the given number of penalty points assigned.",
        " *",
        " * @param currentValue: {",
        " *            "screenWidth": (Number) The current client screen width.",
        " *            "screenHeight": (Number) The current client screen height.",
        " *            "screenColourDepth": (Number) The current client screen colour depth.",
        " *        }",
        " * @param storedValue: {",
        " *            "screenWidth": (Number) The stored client screen width.",
        " *            "screenHeight": (Number) The stored client screen height.",
        " *            "screenColourDepth": (Number) The stored client screen colour depth.",
        " *        }",
        " * @param config: {",
        " *            "penaltyPoints": (Number) The number of penalty points.",
        " *        }",
        " * @return ComparisonResult",
        " */",
        "ScreenComparator.compare = function (currentValue, storedValue, config) {",
        "    if (logger.messageEnabled()) {",
        "        logger.message("ScreenComparator.compare:currentValue: " + JSON.stringify(currentValue));",
        "        logger.message("ScreenComparator.compare:storedValue: " + JSON.stringify(storedValue));",
        "        logger.message("ScreenComparator.compare:config: " + JSON.stringify(config));",
        "    }",
        "",
        "    if (nullOrUndefined(currentValue)) {",
        "        currentValue = {screenWidth: null, screenHeight: null, screenColourDepth: null};",
        "    }",
        "    if (nullOrUndefined(storedValue)) {",
        "        storedValue = {screenWidth: null, screenHeight: null, screenColourDepth: null};",
        "    }",
        "",
        "    var comparisonResults = [",
        "        ScalarComparator.compare(currentValue.screenWidth, storedValue.screenWidth, config),",
        "        ScalarComparator.compare(currentValue.screenHeight, storedValue.screenHeight, config),",
        "        ScalarComparator.compare(currentValue.screenColourDepth, storedValue.screenColourDepth, config)];",
        "",
        "    if (all(comparisonResults, ComparisonResult.isSuccessful)) {",
        "        return new ComparisonResult(any(comparisonResults, ComparisonResult.additionalInfoInCurrentValue));",
        "    } else {",
        "        return new ComparisonResult(config.penaltyPoints);",
        "    }",
        "};",
        "",
        "/**",
        " * Splits both values using delimiter, trims every value and compares collections of values.",
        " * Returns zero-result for same multi-value attributes.",
        " *",
        " * If collections are not same checks if number of differences is less or equal maxDifferences or",
        " * percentage of difference is less or equal maxPercentageDifference.",
        " *",
        " * If yes then returns zero-result with additional info, else returns penaltyPoints-result.",
        " *",
        " * @param currentValue: (String) The current value.",
        " * @param storedValue: (String) The stored value.",
        " * @param config: {",
        " *            "maxPercentageDifference": (Number) The max difference percentage in the values,",
        " *                                                before the penalty is assigned.",
        " *            "maxDifferences": (Number) The max number of differences in the values,",
        " *                                       before the penalty points are assigned.",
        " *            "penaltyPoints": (Number) The number of penalty points.",
        "  *        }",
        " * @return ComparisonResult",
        " */",
        "MultiValueComparator.compare = function (currentValue, storedValue, config) {",
        "    if (logger.messageEnabled()) {",
        "        logger.message("MultiValueComparator.compare:currentValue: " + JSON.stringify(currentValue));",
        "        logger.message("MultiValueComparator.compare:storedValue: " + JSON.stringify(storedValue));",
        "        logger.message("MultiValueComparator.compare:config: " + JSON.stringify(config));",
        "    }",
        "",
        "    var delimiter = ";",",
        "        currentValues = splitAndTrim(currentValue, delimiter),",
        "        storedValues = splitAndTrim(storedValue, delimiter),",
        "        maxNumberOfElements = Math.max(currentValues.length, storedValues.length),",
        "        numberOfTheSameElements = calculateIntersection(currentValues, storedValues).length,",
        "        numberOfDifferences = maxNumberOfElements - numberOfTheSameElements,",
        "        percentageOfDifferences = calculatePercentage(numberOfDifferences, maxNumberOfElements);",
        "",
        "    if (nullOrUndefined(storedValue) && !nullOrUndefined(currentValue)) {",
        "        return new ComparisonResult(true);",
        "    }",
        "",
        "    if (logger.messageEnabled()) {",
        "        logger.message(numberOfTheSameElements + " of " + maxNumberOfElements + " are same");",
        "    }",
        "",
        "    if (maxNumberOfElements === 0) {",
        "        logger.message("Ignored because no attributes found in both profiles");",
        "        return ComparisonResult.ZERO_PENALTY_POINTS;",
        "    }",
        "",
        "    if (numberOfTheSameElements === maxNumberOfElements) {",
        "        logger.message("Ignored because all attributes are same");",
        "        return ComparisonResult.ZERO_PENALTY_POINTS;",
        "    }",
        "",
        "    if (numberOfDifferences > config.maxDifferences) {",
        "        if (logger.messageEnabled()) {",
        "            logger.message("Would be ignored if not more than " + config.maxDifferences + " differences");",
        "        }",
        "        return new ComparisonResult(config.penaltyPoints);",
        "    }",
        "",
        "    if (percentageOfDifferences > config.maxPercentageDifference) {",
        "        if (logger.messageEnabled()) {",
        "            logger.message(percentageOfDifferences + " percents are different");",
        "            logger.message("Would be ignored if not more than " + config.maxPercentageDifference + " percent");",
        "        }",
        "        return new ComparisonResult(config.penaltyPoints);",
        "    }",
        "",
        "    if (logger.messageEnabled()) {",
        "        logger.message("Ignored because number of differences(" + numberOfDifferences + ") not more than "",
        "            + config.maxDifferences);",
        "        logger.message(percentageOfDifferences + " percents are different");",
        "        logger.message("Ignored because not more than " + config.maxPercentageDifference + " percent");",
        "    }",
        "    return new ComparisonResult(true);",
        "};",
        "",
        "/**",
        " * Compares two User Agent Strings and if they are equal then returns a ComparisonResult with zero penalty",
        " * points assigned, otherwise returns a ComparisonResult with the given number of penalty points assigned.",
        " *",
        " * @param currentValue (String) The current value.",
        " * @param storedValue (String) The stored value.",
        " * @param config: {",
        " *            "ignoreVersion": (boolean) If the version numbers in the User Agent Strings should be ignore",
        " *                                       in the comparison.",
        " *            "penaltyPoints": (Number) The number of penalty points.",
        " *        }",
        " * @return A ComparisonResult.",
        " */",
        "UserAgentComparator.compare = function (currentValue, storedValue, config) {",
        "    if (logger.messageEnabled()) {",
        "        logger.message("UserAgentComparator.compare:currentValue: " + JSON.stringify(currentValue));",
        "        logger.message("UserAgentComparator.compare:storedValue: " + JSON.stringify(storedValue));",
        "        logger.message("UserAgentComparator.compare:config: " + JSON.stringify(config));",
        "    }",
        "",
        "    if (config.ignoreVersion) {",
        "        // remove version number",
        "        currentValue = nullOrUndefined(currentValue) ? null : currentValue.replace(/[\\d\\.]+/g, "").trim();",
        "        storedValue = nullOrUndefined(storedValue) ? null : storedValue.replace(/[\\d\\.]+/g, "").trim();",
        "    }",
        "",
        "    return ScalarComparator.compare(currentValue, storedValue, config);",
        "};",
        "",
        "/**",
        " * Compares two locations, taking into account a degree of difference.",
        " *",
        " * @param currentValue: {",
        " *            "latitude": (Number) The current latitude.",
        " *            "longitude": (Number) The current longitude.",
        " *        }",
        " * @param storedValue: {",
        " *            "latitude": (Number) The stored latitude.",
        " *            "longitude": (Number) The stored longitude.",
        " *        }",
        " * @param config: {",
        " *            "allowedRange": (Number) The max difference allowed in the two locations, before the penalty is assigned.",
        " *            "penaltyPoints": (Number) The number of penalty points.",
        "*         }",
        " * @return ComparisonResult",
        " */",
        "GeolocationComparator.compare = function (currentValue, storedValue, config) {",
        "    if (logger.messageEnabled()) {",
        "        logger.message("GeolocationComparator.compare:currentValue: " + JSON.stringify(currentValue));",
        "        logger.message("GeolocationComparator.compare:storedValue: " + JSON.stringify(storedValue));",
        "        logger.message("GeolocationComparator.compare:config: " + JSON.stringify(config));",
        "    }",
        "",
        "    // Check for undefined stored or current locations",
        "",
        "    if (undefinedLocation(currentValue) && undefinedLocation(storedValue)) {",
        "        return ComparisonResult.ZERO_PENALTY_POINTS;",
        "    }",
        "    if (undefinedLocation(currentValue) && !undefinedLocation(storedValue)) {",
        "        return new ComparisonResult(config.penaltyPoints);",
        "    }",
        "    if (!undefinedLocation(currentValue) && undefinedLocation(storedValue)) {",
        "        return new ComparisonResult(true);",
        "    }",
        "",
        "    // Both locations defined, therefore perform comparison",
        "",
        "    var distance = calculateDistance(currentValue, storedValue);",
        "",
        "    if (logger.messageEnabled()) {",
        "        logger.message("Distance between (" + currentValue.latitude + "," + currentValue.longitude + ") and (" +",
        "            storedValue.latitude + "," + storedValue.longitude + ") is " + distance + " miles");",
        "    }",
        "",
        "    if (parseFloat(distance.toPrecision(5)) === 0) {",
        "        logger.message("Location is the same");",
        "        return ComparisonResult.ZERO_PENALTY_POINTS;",
        "    }",
        "",
        "    if (distance <= config.allowedRange) {",
        "        if (logger.messageEnabled()) {",
        "            logger.message("Tolerated because distance not more then " + config.allowedRange);",
        "        }",
        "        return new ComparisonResult(true);",
        "    } else {",
        "        if (logger.messageEnabled()) {",
        "            logger.message("Would be ignored if distance not more then " + config.allowedRange);",
        "        }",
        "        return new ComparisonResult(config.penaltyPoints);",
        "    }",
        "};",
        "",
        "",
        "//---------------------------------------------------------------------------//",
        "//                    Device Print Logic - DO NOT MODIFY                     //",
        "//---------------------------------------------------------------------------//",
        "",
        "// Utility functions",
        "",
        "/**",
        " * Returns true if evaluating function f on each element of the Array a returns true.",
        " *",
        " * @param a: (Array) The array of elements to evaluate",
        " * @param f: (Function) A single argument function for mapping elements of the array to boolean.",
        " * @return boolean.",
        " */",
        "all = function(a, f) {",
        "    var i;",
        "    for (i = 0; i < a.length; i++) {",
        "        if (f(a[i]) === false) {",
        "            return false;",
        "        }",
        "    }",
        "    return true;",
        "};",
        "",
        "/**",
        " * Returns true if evaluating function f on any element of the Array a returns true.",
        " *",
        " * @param a: (Array) The array of elements to evaluate",
        " * @param f: (Function) A single argument function for mapping elements of the array to boolean.",
        " * @return boolean.",
        " */",
        "any = function(a, f) {",
        "    var i;",
        "    for (i = 0; i < a.length; i++) {",
        "        if (f(a[i]) === true) {",
        "            return true;",
        "        }",
        "    }",
        "    return false;",
        "};",
        "",
        "/**",
        " * Returns true if the provided location is null or has undefined longitude or latitude values.",
        " *",
        " * @param location: {",
        " *            "latitude": (Number) The latitude.",
        " *            "longitude": (Number) The longitude.",
        " *        }",
        " * @return boolean",
        " */",
        "undefinedLocation = function(location) {",
        "    return nullOrUndefined(location) || nullOrUndefined(location.latitude) || nullOrUndefined(location.longitude);",
        "};",
        "",
        "/**",
        " * Returns true if the provided value is null or undefined.",
        " *",
        " * @param value: a value of any type",
        " * @return boolean",
        " */",
        "nullOrUndefined = function(value) {",
        "    return value === null || value === undefined;",
        "};",
        "",
        "/**",
        " * Calculates the distances between the two locations.",
        " *",
        " * @param first: {",
        " *            "latitude": (Number) The first latitude.",
        " *            "longitude": (Number) The first longitude.",
        " *        }",
        " * @param second: {",
        " *            "latitude": (Number) The second latitude.",
        " *            "longitude": (Number) The second longitude.",
        " *        }",
        " * @return Number The distance between the two locations.",
        " */",
        "calculateDistance = function(first, second) {",
        "    var factor = (Math.PI / 180),",
        "        theta,",
        "        dist;",
        "    function degreesToRadians(degrees) {",
        "        return degrees * factor;",
        "    }",
        "    function radiansToDegrees(radians) {",
        "        return radians / factor;",
        "    }",
        "    theta = first.longitude - second.longitude;",
        "    dist = Math.sin(degreesToRadians(first.latitude)) * Math.sin(degreesToRadians(second.latitude))",
        "        + Math.cos(degreesToRadians(first.latitude)) * Math.cos(degreesToRadians(second.latitude))",
        "        * Math.cos(degreesToRadians(theta));",
        "    dist = Math.acos(dist);",
        "    dist = radiansToDegrees(dist);",
        "    dist = dist * 60 * 1.1515;",
        "    return dist;",
        "};",
        "",
        "/**",
        " * Converts a String holding a delimited sequence of values into an array.",
        " *",
        " * @param text (String) The String representation of a delimited sequence of values.",
        " * @param delimiter (String) The character delimiting values within the text String.",
        " * @return (Array) The comma separated values.",
        " */",
        "splitAndTrim = function(text, delimiter) {",
        "",
        "    var results = [],",
        "        i,",
        "        values,",
        "        value;",
        "    if (text === null) {",
        "        return results;",
        "    }",
        "",
        "    values = text.split(delimiter);",
        "    for (i = 0; i < values.length; i++) {",
        "        value = values[i].trim();",
        "        if (value !== "") {",
        "            results.push(value);",
        "        }",
        "    }",
        "",
        "    return results;",
        "};",
        "",
        "/**",
        " * Converts value to a percentage of range.",
        " *",
        " * @param value (Number) The actual number to be converted to a percentage.",
        " * @param range (Number) The total number of values (i.e. represents 100%).",
        " * @return (Number) The percentage.",
        " */",
        "calculatePercentage = function(value, range) {",
        "    if (range === 0) {",
        "        return 0;",
        "    }",
        "    return parseFloat((value / range).toPrecision(2)) * 100;",
        "};",
        "",
        "/**",
        " * Creates a new array containing only those elements found in both arrays received as arguments.",
        " *",
        " * @param first (Array) The first array.",
        " * @param second (Array) The second array.",
        " * @return (Array) The elements that found in first and second.",
        " */",
        "calculateIntersection = function(first, second) {",
        "    return first.filter(function(element) {",
        "        return second.indexOf(element) !== -1;",
        "    });",
        "};",
        "",
        "function getValue(obj, attributePath) {",
        "    var value = obj,",
        "        i;",
        "    for (i = 0; i < attributePath.length; i++) {",
        "        if (value === undefined) {",
        "            return null;",
        "        }",
        "        value = value[attributePath[i]];",
        "    }",
        "    return value;",
        "}",
        "",
        "",
        "function isLeafNode(attributeConfig) {",
        "    return attributeConfig.comparator !== undefined;",
        "}",
        "",
        "function getAttributePaths(attributeConfig, attributePath) {",
        "",
        "    var attributePaths = [],",
        "        attributeName,",
        "        attrPaths,",
        "        attrPath,",
        "        i;",
        "",
        "    for (attributeName in attributeConfig) {",
        "        if (attributeConfig.hasOwnProperty(attributeName)) {",
        "",
        "            if (isLeafNode(attributeConfig[attributeName])) {",
        "                attrPath = attributePath.slice();",
        "                attrPath.push(attributeName);",
        "                attributePaths.push(attrPath);",
        "            } else {",
        "                attrPath = attributePath.slice();",
        "                attrPath.push(attributeName);",
        "                attrPaths = getAttributePaths(attributeConfig[attributeName], attrPath);",
        "                for (i = 0; i < attrPaths.length; i++) {",
        "                    attributePaths.push(attrPaths[i]);",
        "                }",
        "            }",
        "        }",
        "    }",
        "",
        "    return attributePaths;",
        "}",
        "",
        "function getDevicePrintAttributePaths(attributeConfig) {",
        "    return getAttributePaths(attributeConfig, []);",
        "}",
        "",
        "function hasRequiredAttributes(devicePrint, attributeConfig) {",
        "",
        "    var attributePaths = getDevicePrintAttributePaths(attributeConfig),",
        "        i,",
        "        attrValue,",
        "        attrConfig;",
        "",
        "    for (i = 0; i < attributePaths.length; i++) {",
        "",
        "        attrValue = getValue(devicePrint, attributePaths[i]);",
        "        attrConfig = getValue(attributeConfig, attributePaths[i]);",
        "",
        "        if (attrConfig.required && attrValue === undefined) {",
        "            logger.warning("Device Print profile missing required attribute, " + attributePaths[i]);",
        "            return false;",
        "        }",
        "    }",
        "",
        "    logger.message("device print has required attributes");",
        "    return true;",
        "}",
        "",
        "function compareDevicePrintProfiles(attributeConfig, devicePrint, devicePrintProfiles, maxPenaltyPoints) {",
        "",
        "    var attributePaths = getDevicePrintAttributePaths(attributeConfig),",
        "        dao = sharedState.get('_DeviceIdDao'),",
        "        results,",
        "        j,",
        "        aggregatedComparisonResult,",
        "        i,",
        "        currentValue,",
        "        storedValue,",
        "        attrConfig,",
        "        comparisonResult,",
        "        selectedComparisonResult,",
        "        selectedProfile,",
        "        curDevicePrintProfile,",
        "        vals;",
        "",
        "    results = [];",
        "    for (j = 0; j < devicePrintProfiles.length; j++) {",
        "        curDevicePrintProfile = JSON.parse(org.forgerock.json.JsonValue.json(devicePrintProfiles[j]));",
        "        aggregatedComparisonResult = new ComparisonResult();",
        "        for (i = 0; i < attributePaths.length; i++) {",
        "",
        "            currentValue = getValue(devicePrint, attributePaths[i]);",
        "            storedValue = getValue(curDevicePrintProfile.devicePrint, attributePaths[i]);",
        "            attrConfig = getValue(attributeConfig, attributePaths[i]);",
        "",
        "            if (storedValue === null) {",
        "                comparisonResult = new ComparisonResult(attrConfig.penaltyPoints);",
        "            } else {",
        "                comparisonResult = attrConfig.comparator.compare(currentValue, storedValue, attrConfig.args);",
        "            }",
        "",
        "            if (logger.messageEnabled()) {",
        "                logger.message("Comparing attribute path: " + attributePaths[i]",
        "                    + ", Comparison result: successful=" + comparisonResult.isSuccessful() + ", penaltyPoints="",
        "                    + comparisonResult.penaltyPoints + ", additionalInfoInCurrentValue="",
        "                    + comparisonResult.additionalInfoInCurrentValue);",
        "            }",
        "            aggregatedComparisonResult.addComparisonResult(comparisonResult);",
        "        }",
        "        if (logger.messageEnabled()) {",
        "            logger.message("Aggregated comparison result: successful="",
        "                + aggregatedComparisonResult.isSuccessful() + ", penaltyPoints="",
        "                + aggregatedComparisonResult.penaltyPoints + ", additionalInfoInCurrentValue="",
        "                + aggregatedComparisonResult.additionalInfoInCurrentValue);",
        "        }",
        "",
        "        results.push({",
        "            key: aggregatedComparisonResult,",
        "            value: devicePrintProfiles[j]",
        "        });",
        "    }",
        "",
        "    if (results.length === 0) {",
        "        return null;",
        "    }",
        "",
        "    results.sort(function(a, b) {",
        "        return ComparisonResult.compare(a.key, b.key);",
        "    });",
        "    selectedComparisonResult = results[0].key;",
        "    if (logger.messageEnabled()) {",
        "        logger.message("Selected comparison result: successful=" + selectedComparisonResult.isSuccessful()",
        "            + ", penaltyPoints=" + selectedComparisonResult.penaltyPoints + ", additionalInfoInCurrentValue="",
        "            + selectedComparisonResult.additionalInfoInCurrentValue);",
        "    }",
        "",
        "    selectedProfile = null;",
        "    if (selectedComparisonResult.penaltyPoints <= maxPenaltyPoints) {",
        "        selectedProfile = results[0].value;",
        "        if (logger.messageEnabled()) {",
        "            logger.message("Selected profile: " + selectedProfile +",
        "                " with " + selectedComparisonResult.penaltyPoints + " penalty points");",
        "        }",
        "    }",
        "",
        "    if (selectedProfile === null) {",
        "        return false;",
        "    }",
        "",
        "    /* update profile */",
        "    selectedProfile.put("selectionCounter",",
        "        java.lang.Integer.valueOf(parseInt(selectedProfile.get("selectionCounter"), 10) + 1));",
        "    selectedProfile.put("lastSelectedDate", java.lang.Long.valueOf(new Date().getTime()));",
        "    selectedProfile.put("devicePrint", devicePrint);",
        "",
        "    vals = [];",
        "    for (i = 0; i < devicePrintProfiles.length; i++) {",
        "        vals.push(org.forgerock.json.JsonValue.json(devicePrintProfiles[i]));",
        "    }",
        "",
        "    dao.saveDeviceProfiles(username, realm, vals);",
        "",
        "    return true;",
        "}",
        "",
        "function matchDevicePrint() {",
        "",
        "    if (!username) {",
        "        logger.error("Username not set. Cannot compare user's device print profiles.");",
        "        authState = FAILED;",
        "    } else {",
        "",
        "        if (logger.messageEnabled()) {",
        "            logger.message("client devicePrint: " + clientScriptOutputData);",
        "        }",
        "",
        "        var getProfiles = function () {",
        "",
        "                function isExpiredProfile(devicePrintProfile) {",
        "                    var expirationDate = new Date(),",
        "                        lastSelectedDate;",
        "                    expirationDate.setDate(expirationDate.getDate() - config.profileExpiration);",
        "",
        "                    lastSelectedDate = new Date(devicePrintProfile.lastSelectedDate);",
        "",
        "                    return lastSelectedDate < expirationDate;",
        "                }",
        "",
        "                function getNotExpiredProfiles() {",
        "                    var profile,",
        "                        dao = sharedState.get('_DeviceIdDao'),",
        "                        results = [],",
        "                        profiles,",
        "                        iter;",
        "",
        "                    profiles = dao.getDeviceProfiles(username, realm);",
        "",
        "                    if (profiles) {",
        "                        iter = profiles.iterator();",
        "",
        "                        while (iter.hasNext()) {",
        "                            profile = iter.next().getObject();",
        "                            if (!isExpiredProfile(profile)) {",
        "                                results.push(profile);",
        "                            }",
        "                        }",
        "                    }",
        "                    if (logger.messageEnabled()) {",
        "                        logger.message("stored non-expired profiles: " + results);",
        "                    }",
        "                    return results;",
        "                }",
        "",
        "                return getNotExpiredProfiles();",
        "            },",
        "            devicePrint = JSON.parse(clientScriptOutputData),",
        "            devicePrintProfiles = getProfiles();",
        "",
        "        if (!hasRequiredAttributes(devicePrint, config.attributes)) {",
        "            logger.message("devicePrint.hasRequiredAttributes: false");",
        "            // Will fail this module but fall-through to next module. Which should be OTP.",
        "            authState = FAILED;",
        "        } else if (compareDevicePrintProfiles(config.attributes, devicePrint, devicePrintProfiles, config.maxPenaltyPoints)) {",
        "            logger.message("devicePrint.hasValidProfile: true");",
        "            authState = SUCCESS;",
        "        } else {",
        "            logger.message("devicePrint.hasValidProfile: false");",
        "            sharedState.put('devicePrintProfile', JSON.stringify(devicePrint));",
        "            // Will fail this module but fall-through to next module. Which should be OTP.",
        "            authState = FAILED;",
        "        }",
        "    }",
        "}",
        "",
        "matchDevicePrint();",
      ],
    },
    "70e8aa07-aa8f-4ec3-b9fb-6f6f8aa14e3c": {
      "_id": "70e8aa07-aa8f-4ec3-b9fb-6f6f8aa14e3c",
      "context": "AUTHENTICATION_TREE_DECISION_NODE",
      "createdBy": "null",
      "creationDate": 0,
      "default": false,
      "description": "Analyze an email address using the IPQualityScore (IPQS) service.",
      "language": "JAVASCRIPT",
      "lastModifiedBy": "null",
      "lastModifiedDate": 0,
      "name": "IPQS Email Address",
      "script": [
        "/* IPQS Email Address",
        " *",
        " * Author: volker.scheuber@forgerock.com",
        " * ",
        " * Analyze an email address using the IPQualityScore (IPQS) service.",
        " * ",
        " * This script does not need to be parametrized. It will work properly as is.",
        " * ",
        " * The Scripted Decision Node needs the following outcomes defined:",
        " * - unknown",
        " * - timed_out",
        " * - invalid",
        " * - valid_unreachable",
        " * - valid_temporary_error",
        " * - valid_accepts_all",
        " * - valid_verified",
        " * - suspicious",
        " * - fraudulent",
        " */",
        "(function () {",
        "    logger.message("IPQS Email Address: start");",
        "",
        "    outcome = "unknown";",
        "",
        "    var email = getEmail();",
        "    logger.message("IPQS Email Address: mail=".concat(email));",
        "",
        "    if (email) {",
        "",
        "        // IPQS API Configuration",
        "        var IPQS_API_KEY = systemEnv.getProperty("esv.ipqs.api.key");",
        "        var IPQS_OPTIONS = "strictness=0&timeout=1";",
        "        var IPQS_API_URI = "https://ipqualityscore.com/api/json/email/".concat(IPQS_API_KEY).concat("/").concat(email).concat("?").concat(IPQS_OPTIONS);",
        "",
        "        var request = new org.forgerock.http.protocol.Request();",
        "        request.setMethod('GET');",
        "        request.setUri(IPQS_API_URI);",
        "",
        "        var response = httpClient.send(request).get();",
        "        var result = JSON.parse(response.getEntity().getString());",
        "        logger.message("IPQS Email Address: JSON result: ".concat(JSON.stringify(result)));",
        "",
        "        // preserve result in transient state",
        "        transientState.put("IPQS_Email_Address", JSON.stringify(result));",
        "",
        "        if (result.timed_out) {",
        "            outcome = "timed_out";",
        "        } ",
        "        else {",
        "            if (result.fraud_score >= 100) {",
        "                outcome = "fraudulent";",
        "            } ",
        "            else if (result.fraud_score >= 75) {",
        "                outcome = "suspicious";",
        "            }",
        "            else {",
        "                switch(result.overall_score) {",
        "                    case 0:",
        "                        outcome = "invalid";",
        "                        break;",
        "                    case 1:",
        "                        outcome = "valid_unreachable";",
        "                        break;",
        "                    case 2:",
        "                        outcome = "valid_temporary_error";",
        "                        break;",
        "                    case 3:",
        "                        outcome = "valid_accepts_all";",
        "                        break;",
        "                    case 4:",
        "                        outcome = "valid_verified";",
        "                        break;",
        "                }",
        "            }",
        "        }",
        "",
        "    } else {",
        "        logger.error("IPQS Email Address: no email address!");",
        "    }",
        "",
        "    logger.message("OIPQS Email Address: End (outcome=".concat(outcome).concat(")"));",
        "",
        "    /*",
        "     * !!! ASSUMES ID CLOUD !!!",
        "     *",
        "     * Returns the user's email address from shared state or the repository.",
        "     */",
        "    function getEmail() {",
        "        if (sharedState.get("objectAttributes") && sharedState.get("objectAttributes").get("mail")) {",
        "            return sharedState.get("objectAttributes").get("mail");",
        "        }",
        "        var attr = idRepository.getAttribute(sharedState.get("_id"), "mail");",
        "        if (attr && attr.iterator().hasNext()) {",
        "            return attr.iterator().next().toString();",
        "        }",
        "        return null;",
        "    }",
        "  ",
        "  ",
        "",
        "        /* Sample IPQS REST API Response",
        "        {",
        "            "message": "Success.",",
        "            "success": true,",
        "            "valid": true,",
        "            "disposable": false,",
        "            "smtp_score": 3,",
        "            "overall_score": 4,",
        "            "first_name": "Unknown",",
        "            "generic": false,",
        "            "common": true,",
        "            "dns_valid": true,",
        "            "honeypot": true,",
        "            "deliverability": "medium",",
        "            "frequent_complainer": false,",
        "            "spam_trap_score": "high",",
        "            "catch_all": false,",
        "            "timed_out": false,",
        "            "suspect": false,",
        "            "recent_abuse": false,",
        "            "fraud_score": 70,",
        "            "suggested_domain": "N\\/A",",
        "            "leaked": true,",
        "            "domain_age": {",
        "                "human": "26 years ago",",
        "                "timestamp": 808286400,",
        "                "iso": "1995-08-13T00:00:00-04:00"",
        "            },",
        "            "first_seen": {",
        "                "human": "4 years ago",",
        "                "timestamp": 1483250461,",
        "                "iso": "2017-01-01T01:01:01-05:00"",
        "            },",
        "            "sanitized_email": "vscheuber@gmail.com",",
        "            "request_id": "4uTOQGwfdFW3br"",
        "        }",
        "    */",
        "}());",
      ],
    },
    "71545db5-ce01-46b1-b79f-d41af36bd548": {
      "_id": "71545db5-ce01-46b1-b79f-d41af36bd548",
      "context": "AUTHENTICATION_TREE_DECISION_NODE",
      "createdBy": "null",
      "creationDate": 0,
      "default": false,
      "description": "Capture Evidence",
      "language": "JAVASCRIPT",
      "lastModifiedBy": "null",
      "lastModifiedDate": 0,
      "name": "Onfido-CaptureEvidence",
      "script": [
        "logger.error("Onfido-CaptureEvidence: Start");",
        "/*",
        " * !!! Extend your authentication session time so your identity proofing flows don't time out !!!",
        " *",
        " * Authentication > Settings > Trees > Max Duration (Minutes)",
        " *",
        " * Set to 15 minutes.",
        " *",
        " */",
        "",
        "/*",
        " * BEGIN SCRIPT CONFIGURATION",
        " */",
        "var onfido_auth_token = String(sharedState.get("onfidoAuthToken"));",
        "var onfido_dialog_title = "Join the Expanse family!";",
        "var onfido_dialog_msg1 = "To open an Expanse account, we will need to verify your identity.";",
        "var onfido_dialog_msg2 = "It will only take a couple of minutes.";",
        "var onfido_country_code = "US";",
        "/*",
        " * END SCRIPT CONFIGURATION",
        " */",
        "",
        "var mobile = idRepository.getAttribute(sharedState.get("_id"), "telephoneNumber");",
        "var smsNumber = "";",
        "if (mobile && mobile.iterator().hasNext()) {",
        "    smsNumber = String(mobile.iterator().next().toString());",
        "}",
        "",
        "// Inject Onfido SDK into login page",
        "onfidoScript = String("var body=document.body;\\n" +",
        "    "var script = document.createElement('script');\\n" +",
        "    "document.getElementById('callbacksPanel').style.display = 'none';\\n" +",
        "    "var onfido_div = document.createElement(\\"div\\");\\n" +",
        "    "onfido_div.id=\\"onfido-mount\\";\\n" +",
        "    "script.src = 'https://assets.onfido.com/web-sdk-releases/5.2.1/onfido.min.js';\\n" +",
        "    "var head = document.head; \\n " +",
        "    "var link = document.createElement(\\"link\\");  \\n" +",
        "    "     link.type = \\"text/css\\"; \\n " +",
        "    "     link.rel = \\"stylesheet\\"; \\n " +",
        "    "     link.href = 'https://assets.onfido.com/web-sdk-releases/5.2.1/style.css'; \\n " +",
        "    "    head.appendChild(link); \\n " +",
        "    ";\\n" +",
        "    "var onfido = {};\\n" +",
        "    "script.onload=function() {\\n" +",
        "    "    onfido=Onfido.init({\\n" +",
        "    "       token: '" + onfido_auth_token + "', \\n" +",
        "    "       useModal: true, \\n" +",
        "    "       isModalOpen: true, \\n" +",
        "    "       smsNumberCountryCode: '" + onfido_country_code + "', \\n" +",
        "    "       userDetails: { \\n" +",
        "    "           smsNumber: '" + smsNumber + "' \\n" +",
        "    "       }, \\n" +",
        "    "       steps: [\\n" +",
        "    "           {\\n" +",
        "    "               type:'welcome',\\n" +",
        "    "               options:{\\n" +",
        "    "                   title:'" + onfido_dialog_title + "',\\n" +",
        "    "                   descriptions:[\\n" +",
        "    "                       '" + onfido_dialog_msg1 + "',\\n" +",
        "    "                       '" + onfido_dialog_msg2 + "',\\n" +",
        "    "                   ]\\n" +",
        "    "               }\\n" +",
        "    "          },\\n" +",
        "    "          'document',\\n" +",
        "    "          'face',\\n" +",
        "    "          'complete',\\n" +",
        "    "       ],\\n" +",
        "    "       onComplete: function(data){ console.log('DONE'); onfido.setOptions({ isModalOpen:false }); document.getElementById('loginButton_0').click(); } \\n" +",
        "    "    })\\n" +",
        "    "};\\n" +",
        "    "document.body.appendChild(script);\\n");",
        "",
        "var fr = JavaImporter(",
        "    org.forgerock.openam.auth.node.api,",
        "    javax.security.auth.callback.NameCallback,",
        "    com.sun.identity.authentication.callbacks.ScriptTextOutputCallback",
        ");",
        "",
        "with (fr) {",
        "    if (callbacks.isEmpty()) {",
        "        logger.error("Onfido-CaptureEvidence: Sending callbacks");",
        "        action = Action.send(new ScriptTextOutputCallback(onfidoScript)).build();",
        "    } else {",
        "        logger.error("Onfido-CaptureEvidence: End (outcome=true)");",
        "        action = Action.goTo("true").build();",
        "    }",
        "}",
      ],
    },
    "71b3c70b-920c-464b-a918-4c86eaaddccd": {
      "_id": "71b3c70b-920c-464b-a918-4c86eaaddccd",
      "context": "AUTHENTICATION_TREE_DECISION_NODE",
      "createdBy": "null",
      "creationDate": 0,
      "default": false,
      "description": "Render a dropdown",
      "language": "JAVASCRIPT",
      "lastModifiedBy": "null",
      "lastModifiedDate": 0,
      "name": "Dropdown",
      "script": [
        "/* Dropdown",
        " *",
        " * Author: volker.scheuber@forgerock.com",
        " * ",
        " * Render a dropdown selector",
        " * ",
        " * This script does not need to be parametrized. It will work properly as is.",
        " * ",
        " * The Scripted Decision Node needs the following outcomes defined:",
        " * - true",
        " */",
        "(function () {",
        "  outcome = "true";",
        "  var choices = [" ", "Red pill", "Blue pill", "Steak", "Rabbit hole"];",
        "  ",
        "  var fr = JavaImporter(",
        "    org.forgerock.openam.auth.node.api.Action,",
        "    javax.security.auth.callback.ChoiceCallback",
        "  )",
        "",
        "  if (callbacks.isEmpty()) {",
        "    action = fr.Action.send([",
        "      new fr.ChoiceCallback("Make your choice", choices, 0, false)",
        "    ]).build();",
        "  } else {",
        "    var choice = parseInt(callbacks.get(0).getSelectedIndexes()[0]);",
        "    nodeState.putShared("choice", choices[choice]);",
        "    action = fr.Action.goTo(outcome).build();",
        "  }",
        "}());",
      ],
    },
    "739bdc48-fd24-4c52-b353-88706d75558a": {
      "_id": "739bdc48-fd24-4c52-b353-88706d75558a",
      "context": "AUTHENTICATION_TREE_DECISION_NODE",
      "createdBy": "null",
      "creationDate": 0,
      "default": false,
      "description": "Check if username has already been collected.",
      "language": "JAVASCRIPT",
      "lastModifiedBy": "null",
      "lastModifiedDate": 0,
      "name": "Check Username",
      "script": [
        "/* Check Username",
        " *",
        " * Author: volker.scheuber@forgerock.com",
        " * ",
        " * Check if username has already been collected.",
        " * Return "known" if yes, "unknown" otherwise.",
        " * ",
        " * This script does not need to be parametrized. It will work properly as is.",
        " * ",
        " * The Scripted Decision Node needs the following outcomes defined:",
        " * - known",
        " * - unknown",
        " */",
        "(function () {",
        "    if (null != sharedState.get("username")) {",
        "        outcome = "known";",
        "    }",
        "    else {",
        "        outcome = "unknown";",
        "    }",
        "}());",
      ],
    },
    "73cecbfc-dad0-4395-be6a-6858ee3a80e5": {
      "_id": "73cecbfc-dad0-4395-be6a-6858ee3a80e5",
      "context": "SOCIAL_IDP_PROFILE_TRANSFORMATION",
      "createdBy": "null",
      "creationDate": 0,
      "default": true,
      "description": "Normalizes raw profile data from Microsoft",
      "language": "GROOVY",
      "lastModifiedBy": "null",
      "lastModifiedDate": 0,
      "name": "Microsoft Profile Normalization",
      "script": [
        "/*",
        " * Copyright 2020 ForgeRock AS. All Rights Reserved",
        " *",
        " * Use of this code requires a commercial software license with ForgeRock AS.",
        " * or with one of its affiliates. All use shall be exclusively subject",
        " * to such license between the licensee and ForgeRock AS.",
        " */",
        "",
        "/*",
        "{",
        "    "@odata.context": "https://graph.microsoft.com/v1.0/$metadata#users/$entity",",
        "    "@odata.id": "https://graph.microsoft.com/v2/711ffa9c-5972-4713-ace3-688c9732614a/directoryObjects/7d7759e2-36d8-4e64-b173-3f890d7d46d6/Microsoft.DirectoryServices.User",",
        "    "businessPhones": [",
        "        "18014735451"",
        "    ],",
        "    "displayName": "Volker Scheuber",",
        "    "givenName": "Volker",",
        "    "jobTitle": null,",
        "    "mail": "vscheuber@vscheuber.onmicrosoft.com",",
        "    "mobilePhone": null,",
        "    "officeLocation": null,",
        "    "preferredLanguage": null,",
        "    "surname": "Scheuber",",
        "    "userPrincipalName": "vscheuber@vscheuber.onmicrosoft.com",",
        "    "id": "7d7759e2-36d8-4e64-b173-3f890d7d46d6"",
        "}",
        " */",
        "",
        "import static org.forgerock.json.JsonValue.field",
        "import static org.forgerock.json.JsonValue.json",
        "import static org.forgerock.json.JsonValue.object",
        "",
        "logger.message("Kauai Microsoft Profile Normalization: rawProfile={}", rawProfile)",
        "",
        "return json(object(",
        "        field("id", rawProfile.id),",
        "        field("displayName", rawProfile.displayName),",
        "        field("givenName", rawProfile.givenName),",
        "        field("familyName", rawProfile.surname),",
        "        field("email", rawProfile.userPrincipalName),",
        "        field("username", rawProfile.userPrincipalName),",
        "        field("groups", rawProfile.groups)))",
      ],
    },
    "740cf6fa-a173-4e9d-b17c-44758e9b19ec": {
      "_id": "740cf6fa-a173-4e9d-b17c-44758e9b19ec",
      "context": "CONFIG_PROVIDER_NODE",
      "createdBy": "null",
      "creationDate": 0,
      "default": false,
      "description": "CP-InnerTreeEvaluator-static-inner2",
      "language": "JAVASCRIPT",
      "lastModifiedBy": "null",
      "lastModifiedDate": 0,
      "name": "CP-ITE-static-inner2",
      "script": [
        "/*",
        " * Copyright 2021 ForgeRock AS. All Rights Reserved",
        " * Use of this code requires a commercial software license with ForgeRock AS.",
        " * or with one of its affiliates. All use shall be exclusively subject",
        " * to such license between the licensee and ForgeRock AS.",
        " */",
        "",
        "/**",
        " * The following script is a simplified template for understanding how to build",
        " * up a config Map object with custom values. The Config Provider Node will then",
        " * provide this config Map to the desired node type. It is important that the Map",
        " * you build here is named 'config'.",
        " *",
        " * Defined variables:",
        " *",
        " * nodeState - Node State (1)",
        " *           Always present, this represents the current values stored in the node state.",
        " *",
        " * idRepository - Profile Data (2)",
        " *           Always present, a repository to retrieve user information.",
        " *",
        " * secrets - Credentials and Secrets (3)",
        " *           Always present, an interface to access the Secrets API from a scripting context.",
        " *",
        " * requestHeaders (4) - Map (5)",
        " *           Always present, an object that provides methods for accessing headers in the login request.",
        " *",
        " * logger - Debug Logging (6)",
        " *          Always present, the debug logger instance.",
        " *",
        " * httpClient - HTTP Client (7)",
        " *          Always present, the HTTP client that can be used to make external HTTP requests.",
        " *",
        " * realm - String (primitive).",
        " *          Always present, the name of the realm the user is authenticating to.",
        " *",
        " * existingSession - Map<String, String> (5)",
        " *          Present if the request contains the session cookie, the user's session object. The returned map from",
        " *          SSOToken.getProperties() (8)",
        " *",
        " * requestParameters - Map (5)",
        " *          Always present, the object that contains the authentication request parameters.",
        " *",
        " *",
        " * Outputs:",
        " *",
        " * config - Map (5)",
        " *           Define and fill a Map object named 'config' with custom values, this will define the configuration for the",
        " *           associated node selected in the ConfigProviderNode.",
        " *",
        " * Reference:",
        " * (1) Node State - https://backstage.forgerock.com/docs/idcloud-am/latest/authentication-guide/scripting-api-node.html#scripting-api-node-nodeState",
        " * (2) Profile Data - https://backstage.forgerock.com/docs/am/7.1/authentication-guide/scripting-api-node.html#scripting-api-node-id-repo",
        " * (3) Credentials and Secrets - https://backstage.forgerock.com/docs/am/7.1/authentication-guide/scripting-api-node.html#scripting-api-authn-secrets",
        " * (4) Request Headers - https://backstage.forgerock.com/docs/am/7/authentication-guide/scripting-api-node.html#scripting-api-node-requestHeaders.",
        " * (5) Map - https://docs.oracle.com/en/java/javase/11/docs/api/java.base/java/util/Map.html",
        " * (6) Debug Logging - https://backstage.forgerock.com/docs/am/7/scripting-guide/scripting-api-global-logger.html#scripting-api-global-logger.",
        " * (7) HTTP Client - https://backstage.forgerock.com/docs/am/7/apidocs/org/forgerock/http/Client.html.",
        " * (8) SSOToken - https://backstage.forgerock.com/docs/am/7/apidocs/com/iplanet/sso/SSOToken.html.",
        " */",
        "",
        "config = {",
        "  tree: 'inner2'",
        "};",
      ],
    },
    "743351b3-001a-4ec8-b3ac-a674ddb8de22": {
      "_id": "743351b3-001a-4ec8-b3ac-a674ddb8de22",
      "context": "AUTHENTICATION_TREE_DECISION_NODE",
      "createdBy": "null",
      "creationDate": 0,
      "default": false,
      "description": "Enrich user session with UOP class ID.",
      "language": "JAVASCRIPT",
      "lastModifiedBy": "null",
      "lastModifiedDate": 0,
      "name": "UOP Enrich Session",
      "script": [
        "/* UOP Enrich Session",
        " *",
        " * Author: volker.scheuber@forgerock.com",
        " * ",
        " * Add current class ID to user session.",
        " * ",
        " * This script does not need to be parametrized. It will work properly as is. ",
        " * It requires the Identify Existing User node before it is being called.",
        " * ",
        " * The Scripted Decision Node needs the following outcomes defined:",
        " * - true",
        " * - false",
        " */",
        "logger.warning("UOP Enrich Session: start");",
        "outcome = "false";",
        "",
        "if (sharedState.get("uopCurrentClassID")) {",
        "    outcome = "true";",
        "    logger.warning("UOP Enrich Session: going to enrich session with class id: ".concat(sharedState.get("uopCurrentClassID")));",
        "  ",
        "    var fr = JavaImporter(",
        "      org.forgerock.openam.auth.node.api",
        "    );",
        "",
        "    with (fr) {",
        "        logger.warning("UOP Enrich Session: End (outcome=".concat(outcome).concat(")"));",
        "        action = Action.goTo(outcome).putSessionProperty("UOPClassID", sharedState.get("uopCurrentClassID")).build();",
        "    }",
        "  ",
        "} else {",
        "    logger.error("UOP Enrich Session: no classes!");",
        "    logger.warning("UOP Enrich Session: End (outcome=".concat(outcome).concat(")"));",
        "}",
      ],
    },
    "76421cb0-0550-43e7-89f8-51ad1d95d306": {
      "_id": "76421cb0-0550-43e7-89f8-51ad1d95d306",
      "context": "AUTHENTICATION_TREE_DECISION_NODE",
      "createdBy": "null",
      "creationDate": 0,
      "default": false,
      "description": "Detect and preserve currently active theme before setting the new theme.",
      "language": "JAVASCRIPT",
      "lastModifiedBy": "null",
      "lastModifiedDate": 0,
      "name": "Set Theme",
      "script": [
        "/* Set Theme",
        " * ",
        " * Detect and preserve currently active theme before setting the new theme.",
        " * ",
        " * This script does not need to be parametrized. It will work properly as is.",
        " * ",
        " * The Scripted Decision Node needs the following outcomes defined:",
        " * - true",
        " *",
        " * Author: volker.scheuber@forgerock.com",
        " */",
        "(function () {",
        "      outcome = "true";",
        "      ",
        "      var theme = "Expanse_MFA";",
        "",
        "    // do not change, must be a random identifier",
        "    var anchor = generateNumericToken('xxx');",
        "  ",
        "      var script = "";",
        "    script += "document.getElementById(\\"theme-id-"+anchor+"\\").value = localStorage.getItem('theme-id');";",
        "    script += "console.log('theme-id='+document.getElementById(\\"theme-id-"+anchor+"\\").value);";",
        "      script += "document.getElementById(\\"loginButton_0\\").click();";",
        "",
        "    var fr = JavaImporter(",
        "        org.forgerock.openam.auth.node.api.Action,",
        "          org.forgerock.openam.authentication.callbacks.PollingWaitCallback,",
        "        com.sun.identity.authentication.callbacks.HiddenValueCallback,",
        "        com.sun.identity.authentication.callbacks.ScriptTextOutputCallback",
        "    )",
        "    // discover active theme from UI",
        "    if (callbacks.isEmpty()) {",
        "        action = fr.Action.send(",
        "            new fr.HiddenValueCallback("theme-id-"+anchor, "false"),",
        "            new fr.ScriptTextOutputCallback(script)",
        "        ).build();",
        "    }",
        "      // get active theme from callback and set new theme",
        "      else if (callbacks.size() === 2) {",
        "        // did we get the id of the currently active theme?",
        "        if (callbacks.get(0).getValue() !== "theme-id-"+anchor) {",
        "              sharedState.put("themeId", callbacks.get(0).getValue());",
        "        }",
        "        // set new theme",
        "        var stage = "themeId="+theme;",
        "        action = fr.Action.send(",
        "              new fr.PollingWaitCallback("100", "Please wait ...")",
        "        ).withStage(stage).build();",
        "    }",
        "      else {",
        "        // continue",
        "        action = fr.Action.goTo(outcome).build();",
        "    }",
        "",
        "     /*",
        "      * Generate a token in the desired format. All 'x' characters will be replaced with a random number 0-9.",
        "      * ",
        "      * Example:",
        "      * 'xxxxx' produces '28535'",
        "      * 'xxx-xxx' produces '432-521'",
        "      */",
        "    function generateNumericToken(format) {",
        "        return format.replace(/[x]/g, function(c) {",
        "            var r = Math.random()*10|0;",
        "            var v = r;",
        "            return v.toString(10);",
        "        });",
        "    }",
        "}());",
      ],
    },
    "766ed2a6-29dd-4bd7-a60d-9eabbd63545c": {
      "_id": "766ed2a6-29dd-4bd7-a60d-9eabbd63545c",
      "context": "AUTHENTICATION_TREE_DECISION_NODE",
      "createdBy": "null",
      "creationDate": 0,
      "default": false,
      "description": "null",
      "language": "JAVASCRIPT",
      "lastModifiedBy": "null",
      "lastModifiedDate": 0,
      "name": "Service Account - Verify JWT",
      "script": [
        "var fr = JavaImporter(",
        "  org.forgerock.util.Options,",
        "  org.forgerock.json.jose.jwk.JWKSet,",
        "  org.forgerock.json.jose.jws.SigningManager,",
        "  org.forgerock.json.jose.builders.JwtBuilderFactory,",
        "  org.forgerock.json.jose.jws.SignedJwt",
        ");",
        "",
        "var sm = new fr.SigningManager();",
        "",
        "function getJWKs(svcAcctId) {",
        "  var svcAcct = idRepository.getIdentity(svcAcctId);",
        "  if (svcAcct == null) {",
        "    logger.message('No service account found for {}', svcAcctId);",
        "    return null;",
        "  }",
        "  var jwksAttrs = svcAcct.getAttributeValues('fr-attr-jwks');",
        "  if (!jwksAttrs || jwksAttrs.length === 0) {",
        "    logger.message('No jwks attributes in issuer');",
        "    return null;",
        "  }",
        "  var jwkSet = jwksAttrs[0];",
        "  if (!jwkSet) {",
        "    logger.message('No jwk set in jwks attribute in issuer');",
        "    return null;",
        "  }",
        "  return fr.JWKSet.parse(jwkSet).getJWKsAsList();",
        "}",
        "",
        "outcome = (function () {",
        "  var authz = requestHeaders.get('authorization');",
        "  if (authz === null || authz.length === 0 || authz[0].indexOf('svcacct') !== 0) {",
        "    logger.message('No authorization header');",
        "    return 'False';",
        "  }",
        "",
        "  authz = authz[0].split(' ');",
        "  if (authz.length !== 3) {",
        "    logger.message('Bad authorization header length {}', authz.length);",
        "    return 'False';",
        "  }",
        "  var svcAcctId = authz[1];",
        "  var jwt = authz[2];",
        "  var signedJwt = new fr.JwtBuilderFactory().reconstruct(jwt, fr.SignedJwt);",
        "",
        "  var jwks = getJWKs(svcAcctId);",
        "  for (var i = 0; i < jwks.size(); i++) {",
        "    var verifier = sm.newVerificationHandler(jwks.get(i))",
        "    if (signedJwt.verify(verifier)) {",
        "      nodeState.putShared("username", svcAcctId);",
        "      return 'True';",
        "    }",
        "  }",
        "",
        "  logger.message('Could not verify jwt');",
        "  return 'False';",
        "})();",
      ],
    },
    "779bb956-676d-4e44-b828-b9efa3c866d4": {
      "_id": "779bb956-676d-4e44-b828-b9efa3c866d4",
      "context": "AUTHENTICATION_TREE_DECISION_NODE",
      "createdBy": "null",
      "creationDate": 0,
      "default": false,
      "description": "null",
      "language": "JAVASCRIPT",
      "lastModifiedBy": "null",
      "lastModifiedDate": 0,
      "name": "ForgeRockVpnOnly",
      "script": [
        "/*",
        "  - Data made available by nodes that have already executed are available in the sharedState variable.",
        "  - The script should set outcome to either "true" or "false".",
        " */",
        "",
        "var validIpAddresses = [",
        "  "37.71.148.92", // FR Grenoble",
        "  "84.214.156.50", // FR Oslo",
        "  "180.255.64.26", // FR Singapore",
        "  "128.106.105.136", // FR Singapore Sales",
        "  "188.39.235.130", // FR Bristol",
        "  "78.33.22.162", // FR Bristol Marsh Street",
        "  "65.113.98.10", // FR San Francisco",
        "  "24.155.146.18" // FR Austin",
        "];",
        "",
        "try {",
        "  outcome = function() {",
        "    logger.message(requestHeaders);",
        "    var vpnBypassSecret = systemEnv.getProperty('esv.amadmin.vpn.bypass.secret', '') + '';",
        "    var bypassHeader = requestHeaders.get(new java.lang.String('x-forgerock-tests-bearer'));",
        "    logger.message("checking for VPN bypass - header {} to match secret {}", bypassHeader, vpnBypassSecret);",
        "    if (vpnBypassSecret && bypassHeader && bypassHeader.size() === 1) {",
        "      logger.message("bypass header is present");",
        "      if (bypassHeader.get(0) + '' === vpnBypassSecret + '') {",
        "        logger.warning("bypassing VPN check - request from tests authorized");",
        "        return 'True';",
        "      }",
        "    }",
        "    var clientIpAddresses = requestHeaders.get(new java.lang.String('x-forwarded-for'));",
        "    logger.message(clientIpAddresses);",
        "    if (!clientIpAddresses) {",
        "      logger.message("No forwarded header - internal cluster request");",
        "      return 'True';",
        "    }",
        "    for (var i = 0; i < clientIpAddresses.size(); i++) {",
        "      var clientIpHeader = clientIpAddresses.get(i);",
        "      var ipAddresses = clientIpHeader.split(',');",
        "      for (var j = 0; j < ipAddresses.length; j++) {",
        "        var clientIp = ipAddresses[j].trim();",
        "        logger.message('Checking client IP ' + clientIp);",
        "        for (var k = 0; k < validIpAddresses.length; k++) {",
        "          if (clientIp + '' === validIpAddresses[k]) {",
        "            logger.warning("request from ForgeRock VPN authorized");",
        "            return 'True';",
        "          }",
        "        }",
        "      }",
        "    }",
        "    logger.warning("request from outside the cluster and not from ForgeRock VPN rejected");",
        "    return 'False';",
        "  }();",
        "",
        "} catch (e) {",
        "",
        "  logger.error('ForgeRockVpnOnly failed to check IP');",
        "  logger.error(e);",
        "  outcome = 'Error';",
        "",
        "}",
        "",
      ],
    },
    "790045fa-a325-4e3e-96f8-d4a91b32e9de": {
      "_id": "790045fa-a325-4e3e-96f8-d4a91b32e9de",
      "context": "AUTHENTICATION_TREE_DECISION_NODE",
      "createdBy": "null",
      "creationDate": 0,
      "default": false,
      "description": "Use Have I Been Pwned Password to check if password has been breached.",
      "language": "JAVASCRIPT",
      "lastModifiedBy": "null",
      "lastModifiedDate": 0,
      "name": "HIBP Password Breach Analysis",
      "script": [
        "/* HIBP Password Breach Analysis",
        " *",
        " * Authors: jon.knight@forgerock.com, volker.scheuber@forgerock.com",
        " * ",
        " * Use Have I Been Pwned Password to check if password has been breached.",
        " * Calls HIBP API to retrieve the count of matching passwords in breached ",
        " * password database",
        " * ",
        " * This script needs to be parametrized. It will not work properly as is. ",
        " * It requires the Password or Platform Password collector nodes before",
        " * it can operate.",
        " * ",
        " * The Scripted Decision Node needs the following outcomes defined:",
        " * - clear",
        " *   The number of breaches for password was either zero or less than the ",
        " *   value of THRESHOLD",
        " * - breached ",
        " *   The number of incidents of the password in the breached password ",
        " *   database exceeds THRESHOLD",
        " * - failed",
        " *   The API call was rejected.",
        " */",
        "(function () {",
        "    var USER_AGENT="ForgeRock";",
        "    var HIBP_API_KEY=systemEnv.getProperty("esv.hibp.api.key");",
        "    var THRESHOLD=0;",
        "",
        "    function toHexString(byteArray) {",
        "        var s = '';",
        "        byteArray.forEach(function(byte) {",
        "            s += ('0' + (byte & 0xFF).toString(16)).slice(-2);",
        "        });",
        "        return s;",
        "    }",
        "",
        "    outcome = "failed";",
        "",
        "    var md = java.security.MessageDigest.getInstance('SHA-1');",
        "      var password = nodeState.get("password").asString();",
        "//      var password = new java.lang.String("");",
        "//      if (nodeState.get("password")) {",
        "//      password = nodeState.get("password").asString();",
        "//    }",
        "    var byteArray = password.getBytes("UTF-8");",
        "    md.update(byteArray);",
        "    var digest = md.digest();",
        "    var hex = String(toHexString(digest)).toUpperCase();",
        "",
        "    var request = new org.forgerock.http.protocol.Request();",
        "    request.setMethod('GET');",
        "    request.setUri('https://api.pwnedpasswords.com/range/' + hex.substring(0,5));",
        "    request.getHeaders().add("Accept","*/*");",
        "    request.getHeaders().add("Content-Type","application/json");",
        "    request.getHeaders().add("User-Agent", USER_AGENT);",
        "    request.getHeaders().add("hibp-api-key", HIBP_API_KEY);",
        "",
        "    var response = httpClient.send(request).get();",
        "",
        "    if (response.getStatus().getCode() === 200) {",
        "        var max = 0;",
        "        outcome = "clear";",
        "        var result = response.getEntity().getString();",
        "        var lines = result.split('\\n');",
        "        for (i=0; i<lines.length; i++) {",
        "            var prefix = lines[i].split(':')[0];",
        "            if (String(hex.substring(0,5) + prefix) == hex) {",
        "                var count = lines[i].split(':')[1];",
        "                if (count > max) max = count;",
        "            }",
        "        }",
        "        if (max > THRESHOLD) outcome = "breached";",
        "        sharedState.put("hibp_password_count", max);",
        "    }",
        "}());",
      ],
    },
    "7dce8f07-d9fe-4752-94b9-ff99dfd0433b": {
      "_id": "7dce8f07-d9fe-4752-94b9-ff99dfd0433b",
      "context": "AUTHENTICATION_TREE_DECISION_NODE",
      "createdBy": "null",
      "creationDate": 0,
      "default": false,
      "description": "Parse parameters of the incoming call.",
      "language": "JAVASCRIPT",
      "lastModifiedBy": "null",
      "lastModifiedDate": 0,
      "name": "Twilio IVR: Parse Call Parameters",
      "script": [
        "/* Twilio IVR Integration",
        " * ",
        " * The Scripted Decision Node needs the following outcomes defined:",
        " * - true",
        " * - false",
        " * ",
        " * Depending on the amount of data collected through callbacks and how many of the callParams",
        " * you activate below, you will need to change your authentication session from JWT to CTS or",
        " * Memory.",
        " */",
        "",
        "logger.warning("Twilio IVR: Parse Call Parameters: start");",
        "outcome = "false";",
        "",
        "/* Begin Twilio IVR Configuration Parameters",
        " *",
        " * These are used to protect this journey so it is only being executed by your Twilio account.",
        " */",
        "var TWILIO_ACCOUNT_SID = "AC750415e3163a2e57b7aeea7eed82d944";",
        "var TWILIO_PHONE_NUMBER = "+13176443107";",
        "",
        "// keep the params to a minimum to minimize authentication session size",
        "var callParams = {",
        "  //"CallSid" : decodeURIComponent(requestParameters.get("CallSid").get(0)),",
        "  "AccountSid" : decodeURIComponent(requestParameters.get("AccountSid").get(0)),",
        "  "From" : decodeURIComponent(requestParameters.get("From").get(0)),",
        "  "To" : decodeURIComponent(requestParameters.get("To").get(0)),",
        "  //"CallStatus" : decodeURIComponent(requestParameters.get("CallStatus").get(0)),",
        "  //"ApiVersion" : decodeURIComponent(requestParameters.get("ApiVersion").get(0)),",
        "  //"Direction" : decodeURIComponent(requestParameters.get("Direction").get(0)),",
        "  //"ForwardedFrom" : decodeURIComponent(requestParameters.get("ForwardedFrom").get(0)),",
        "  //"CallerName" : decodeURIComponent(requestParameters.get("CallerNameCallerName").get(0)),",
        "  //"ParentCallSid" : decodeURIComponent(requestParameters.get("ParentCallSid").get(0)),",
        "  //"FromCity" : decodeURIComponent(requestParameters.get("FromCity").get(0)),",
        "  //"FromState" : decodeURIComponent(requestParameters.get("FromState").get(0)),",
        "  //"FromZip" : decodeURIComponent(requestParameters.get("FromZip").get(0)),",
        "  //"FromCountry" : decodeURIComponent(requestParameters.get("FromCountry").get(0)),",
        "  //"ToCity" : decodeURIComponent(requestParameters.get("ToCity").get(0)),",
        "  //"ToState" : decodeURIComponent(requestParameters.get("ToState").get(0)),",
        "  //"ToZip" : decodeURIComponent(requestParameters.get("ToZip").get(0)),",
        "  //"ToCountry" : decodeURIComponent(requestParameters.get("ToCountry").get(0)),",
        "};",
        "",
        "/* End Twilio IVR Configuration Parameters ",
        " */",
        "",
        "if (callParams.AccountSid == TWILIO_ACCOUNT_SID &&",
        "    callParams.To == TWILIO_PHONE_NUMBER) ",
        "{",
        "      outcome = "true";",
        "    sharedState.put("TwilioIVRCallParams", callParams);",
        "    setSharedObjectAttribute("telephoneNumber", callParams.From);",
        "}",
        "",
        "logger.warning("Twilio IVR: Parse Call Parameters: finish [outcome=".concat(outcome).concat("]"));",
        "",
        "/*",
        " * Store attributes in shared state for use with the Create/Patch Object nodes.",
        " */",
        "function setSharedObjectAttribute(name, value) {",
        "       var storage = sharedState.get("objectAttributes");",
        "    if (storage && value) {",
        "          if (storage.put) {",
        "              storage.put(name, value);",
        "        }",
        "          else {",
        "              storage[name] = value;",
        "        }",
        "    }",
        "    else if (value) {",
        "        sharedState.put("objectAttributes", JSON.parse("{\\""+name+"\\":\\""+value+"\\"}"));",
        "    }",
        "}",
      ],
    },
    "7dd80834-e7b2-4737-85a7-40434bb19dde": {
      "_id": "7dd80834-e7b2-4737-85a7-40434bb19dde",
      "context": "AUTHENTICATION_TREE_DECISION_NODE",
      "createdBy": "null",
      "creationDate": 0,
      "default": false,
      "description": "Store the impersontor and impersonatee profile information in session properties.",
      "language": "JAVASCRIPT",
      "lastModifiedBy": "null",
      "lastModifiedDate": 0,
      "name": "Impersonate: Update Session Properties",
      "script": [
        "/* Impersonate: Update Session Properties",
        " * ",
        " * Store the impersontor and impersonatee profile information in session properties.",
        " * ",
        " * This script does not need to be parametrized. It will work properly as is.",
        " * ",
        " * The Scripted Decision Node needs the following outcomes defined:",
        " * - true",
        " *",
        " * Author: jake.feasel@forgerock.com, volker.scheuber@forgerock.com",
        " */",
        "(function () {",
        "      logger.message("Impersonate: Update Session Properties: start");",
        "      outcome = "true";",
        "  ",
        "    var goTo = org.forgerock.openam.auth.node.api.Action.goTo;",
        "    myGoto = goTo(outcome);",
        "    myGoto.putSessionProperty("userName", sharedState.get("username"));",
        "    myGoto.putSessionProperty("impersonator", sharedState.get("impersonator"));",
        "",
        "      logger.message("Impersonate: Update Session Properties: done [outcome={}]", outcome);",
        "    action = myGoto.build();",
        "}());",
      ],
    },
    "7e3d7067-d50f-4674-8c76-a3e13a810c33": {
      "_id": "7e3d7067-d50f-4674-8c76-a3e13a810c33",
      "context": "AUTHENTICATION_SERVER_SIDE",
      "createdBy": "null",
      "creationDate": 0,
      "default": true,
      "description": "Default global script for server side Scripted Authentication Module",
      "language": "JAVASCRIPT",
      "lastModifiedBy": "null",
      "lastModifiedDate": 0,
      "name": "Scripted Module - Server Side",
      "script": [
        "/*",
        " * Copyright 2015-2017 ForgeRock AS. All Rights Reserved",
        " *",
        " * Use of this code requires a commercial software license with ForgeRock AS.",
        " * or with one of its affiliates. All use shall be exclusively subject",
        " * to such license between the licensee and ForgeRock AS.",
        " */",
        "",
        "var START_TIME = 9;  // 9am",
        "var END_TIME   = 17; // 5pm",
        "var longitude, latitude;",
        "var localTime;",
        "",
        "logger.message("Starting scripted authentication");",
        "logger.message("User: " + username);",
        "",
        "var userPostalAddress = getUserPostalAddress();",
        "logger.message("User address: " + userPostalAddress);",
        "",
        "getLongitudeLatitudeFromUserPostalAddress();",
        "getLocalTime();",
        "",
        "logger.message("Current time at the users location: " + localTime.getHours());",
        "if (localTime.getHours() < START_TIME || localTime.getHours() > END_TIME) {",
        "    logger.error("Login forbidden outside work hours!");",
        "    authState = FAILED;",
        "} else {",
        "    logger.message("Authentication allowed!");",
        "    authState = SUCCESS;",
        "}",
        "",
        "function getLongitudeLatitudeFromUserPostalAddress() {",
        "",
        "    var request = new org.forgerock.http.protocol.Request();",
        "    request.setUri("http://maps.googleapis.com/maps/api/geocode/json?address=" + encodeURIComponent(userPostalAddress));",
        "      request.setMethod("GET");",
        "      //the above URI has to be extended with an API_KEY if used in a frequent manner",
        "      //see documentation: https://developers.google.com/maps/documentation/geocoding/intro",
        "",
        "    var response = httpClient.send(request).get();",
        "    logResponse(response);",
        "",
        "    var geocode = JSON.parse(response.getEntity().getString());",
        "    var i;",
        "    for (i = 0; i < geocode.results.length; i++) {",
        "        var result = geocode.results[i];",
        "        latitude = result.geometry.location.lat;",
        "        longitude = result.geometry.location.lng;",
        "      ",
        "           logger.message("latitude:" + latitude + " longitude:" + longitude);",
        "    }",
        "}",
        "",
        "function getLocalTime() {",
        "",
        "    var now = new Date().getTime() / 1000;",
        "    var location = "location=" + latitude + "," + longitude;",
        "    var timestamp = "timestamp=" + now;",
        "        ",
        "    var request = new org.forgerock.http.protocol.Request();",
        "    request.setUri("https://maps.googleapis.com/maps/api/timezone/json?" + location + "&" + timestamp);",
        "      request.setMethod("GET");",
        "      //the above URI has to be extended with an API_KEY if used in a frequent manner",
        "      //see documentation: https://developers.google.com/maps/documentation/timezone/intro",
        "",
        "    var response = httpClient.send(request).get();",
        "    logResponse(response);",
        "",
        "    var timezone = JSON.parse(response.getEntity().getString());",
        "    var localTimestamp = parseInt(now) + parseInt(timezone.dstOffset) + parseInt(timezone.rawOffset);",
        "    localTime = new Date(localTimestamp*1000);",
        "}",
        "",
        "function getUserPostalAddress() {",
        "    var userAddressSet = idRepository.getAttribute(username, "postalAddress");",
        "    if (userAddressSet == null || userAddressSet.isEmpty()) {",
        "        logger.warning("No address specified for user: " + username);",
        "        return false;",
        "    }",
        "    return userAddressSet.iterator().next()",
        "}",
        "",
        "function logResponse(response) {",
        "    logger.message("User REST Call. Status: " + response.getStatus() + ", Body: " + response.getEntity().getString());",
        "}",
      ],
    },
    "7f1c30ec-ea27-4bb1-bd0b-be5792c9a1a6": {
      "_id": "7f1c30ec-ea27-4bb1-bd0b-be5792c9a1a6",
      "context": "AUTHENTICATION_TREE_DECISION_NODE",
      "createdBy": "null",
      "creationDate": 0,
      "default": false,
      "description": "Unknown caller message",
      "language": "JAVASCRIPT",
      "lastModifiedBy": "null",
      "lastModifiedDate": 0,
      "name": "Twilio IVR: Unknown Caller Message",
      "script": [
        "/* Twilio IVR: Unverified Caller Message",
        " * ",
        " * The Scripted Decision Node needs the following outcomes defined:",
        " * - true",
        " * ",
        " * Depending on the amount of data collected through callbacks and how many of the callParams",
        " * you activate below, you will need to change your authentication session from JWT to CTS or",
        " * Memory.",
        " */",
        "outcome = "true";",
        "",
        "/* Begin Configuration",
        " */",
        "",
        "// Build out the full message",
        "var message = "I see we don't have a profile associated with your phone number!";",
        "",
        "/* End Configuration",
        " */",
        "",
        "var fr = JavaImporter(",
        "      org.forgerock.openam.auth.node.api,",
        "      javax.security.auth.callback.TextOutputCallback",
        ");",
        "  ",
        "with (fr) {",
        "      if (callbacks.isEmpty()) {",
        "        var output = new TextOutputCallback(TextOutputCallback.INFORMATION, message);",
        "        action = Action.send(output).build();",
        "      } ",
        "      else {",
        "        action = Action.goTo(outcome).build();",
        "      }",
        "}",
      ],
    },
    "7fb962a5-9f20-41d3-a077-b424a29c1198": {
      "_id": "7fb962a5-9f20-41d3-a077-b424a29c1198",
      "context": "AUTHENTICATION_TREE_DECISION_NODE",
      "createdBy": "null",
      "creationDate": 0,
      "default": false,
      "description": "Evaluate IPv4 CIDR access rules from "esv-ipv4-cidr-access-rules".",
      "language": "JAVASCRIPT",
      "lastModifiedBy": "null",
      "lastModifiedDate": 0,
      "name": "IPv4 CIDR Rules Engine",
      "script": [
        "/* IPv4 CIDR Rules Engine",
        " *",
        " * Author: volker.scheuber@forgerock.com, justin.chin@forgerock.com",
        " * ",
        " * Evaluate IPv4 CIDR access rules from "esv-ipv4-cidr-access-rules". ",
        " * Access rules must have the following format:",
        " * {",
        " *   "allow": [",
        " *     "140.118.0.0/16",",
        " *     "110.35.0.0/16",",
        " *     "131.26.0.0/16",",
        " *     "92.61.21.153/32"",
        " *   ]",
        " * }",
        " * ",
        " * This script does not need to be parametrized. It will work properly as is.",
        " * ",
        " * The Scripted Decision Node needs the following outcomes defined:",
        " * - allow",
        " * - deny",
        " */",
        "(function () {",
        "  outcome = "deny";",
        "  ",
        "  var rules = JSON.parse(systemEnv.getProperty("esv.ipv4.cidr.access.rules"));",
        "  var allow = rules['allow'];",
        "",
        "  /*",
        "   * Returns the value of the requested header",
        "   */",
        "  function getHeader(headerName) {",
        "    return requestHeaders.get(headerName).get(0);",
        "  }",
        "",
        "  /*",
        "   * Returns the client's IP address",
        "   */",
        "  function getClientIPAddress() {",
        "    return getHeader("x-forwarded-for").split(',')[0];",
        "  }",
        "",
        "  function IPnumber(IPaddress) {",
        "    var ip = IPaddress.match(/^(\\d+)\\.(\\d+)\\.(\\d+)\\.(\\d+)$/);",
        "    if (ip) {",
        "      return (+ip[1] << 24) + (+ip[2] << 16) + (+ip[3] << 8) + +ip[4];",
        "    }",
        "    // else ... ?",
        "    return null;",
        "  }",
        "",
        "  function IPmask(maskSize) {",
        "    return -1 << (32 - maskSize);",
        "  }",
        "",
        "  function isAllowed(ip) {",
        "    var allowed = false;",
        "    allow.forEach((cidr) => {",
        "      if (",
        "        (IPnumber(ip) & IPmask(cidr.split('/')[1])) ==",
        "        IPnumber(cidr.split('/')[0])",
        "      ) {",
        "        allowed = true;",
        "      }",
        "    });",
        "    return allowed;",
        "  }",
        "  ",
        "  if (isAllowed(getClientIPAddress())) {",
        "    outcome = "allow";",
        "  }",
        "}());",
      ],
    },
    "809330cf-874c-4d57-a8f1-5882c6dd855b": {
      "_id": "809330cf-874c-4d57-a8f1-5882c6dd855b",
      "context": "SOCIAL_IDP_PROFILE_TRANSFORMATION",
      "createdBy": "null",
      "creationDate": 0,
      "default": false,
      "description": "Converts a normalized social profile for iddataweb into a Managed user",
      "language": "GROOVY",
      "lastModifiedBy": "null",
      "lastModifiedDate": 0,
      "name": "Normalized idddataweb Profile to Managed User",
      "script": [
        "/* Normalized idddataweb Profile to Managed User",
        " * Copyright 2022 ForgeRock AS. All Rights Reserved",
        " *",
        " * Use of this code requires a commercial software license with ForgeRock AS.",
        " * or with one of its affiliates. All use shall be exclusively subject",
        " * to such license between the licensee and ForgeRock AS. Not for production use.",
        " * Modified by Stephen Payne, 2021-Mar-30",
        " */",
        "import static org.forgerock.json.JsonValue.field",
        "import static org.forgerock.json.JsonValue.json",
        "import static org.forgerock.json.JsonValue.object",
        "import org.forgerock.json.JsonValue",
        "logger.error("Normalized_Profile_IDDataWeb: Start " + normalizedProfile);",
        "",
        "JsonValue managedUser = json(object(",
        "        field("givenName", normalizedProfile.givenName),",
        "        field("sn", normalizedProfile.familyName),",
        "        field("userName", normalizedProfile.username)))",
        "if (normalizedProfile.postalAddress.isNotNull()) managedUser.put("postalAddress", normalizedProfile.postalAddress)",
        "if (normalizedProfile.addressLocality.isNotNull()) managedUser.put("city", normalizedProfile.addressLocality)",
        "if (normalizedProfile.addressRegion.isNotNull()) managedUser.put("stateProvince", normalizedProfile.addressRegion)",
        "if (normalizedProfile.postalCode.isNotNull()) managedUser.put("postalCode", normalizedProfile.postalCode)",
        "if (normalizedProfile.country.isNotNull()) managedUser.put("country", normalizedProfile.country)",
        "if (normalizedProfile.phone.isNotNull()) managedUser.put("telephoneNumber", normalizedProfile.phone)",
        "if (normalizedProfile.DOB.isNotNull()) managedUser.put("frIndexedString2", normalizedProfile.DOB)",
        "",
        "return managedUser",
        "",
      ],
    },
    "80c3e733-ae51-4851-a01d-1cbf193c80e9": {
      "_id": "80c3e733-ae51-4851-a01d-1cbf193c80e9",
      "context": "AUTHENTICATION_TREE_DECISION_NODE",
      "createdBy": "null",
      "creationDate": 0,
      "default": false,
      "description": "Activates the admin's account",
      "language": "JAVASCRIPT",
      "lastModifiedBy": "null",
      "lastModifiedDate": 0,
      "name": "Admin_SetOnboardingAttributes",
      "script": [
        "/*",
        " * Copyright 2023 ForgeRock AS. All Rights Reserved",
        " *",
        " * Use of this code requires a commercial software license with ForgeRock AS.",
        " * or with one of its affiliates. All use shall be exclusively subject",
        " * to such license between the licensee and ForgeRock AS.",
        " */",
        "",
        "function utcNow() {",
        "  return new Date().toISOString();",
        "}",
        "",
        "try {",
        "  ",
        "  var OBJECT_ATTRS = 'objectAttributes';",
        "",
        "  // Start by getting object attributes from shared state",
        "  var sharedObjAttrs = sharedState.get(OBJECT_ATTRS);",
        "  sharedObjAttrs.put('accountStatus', 'Active');",
        "  sharedObjAttrs.put('onboardDate', utcNow());",
        "  ",
        "  // Copy attributes from transient state",
        "  var transientObjAttrs = nodeState.get(OBJECT_ATTRS);",
        "  var attrs = ['aliasList', 'givenName', 'password', 'sn'];",
        "  for (var i = 0; i < attrs.length; i++) {",
        "    var val = transientObjAttrs.get(attrs[i]);",
        "    if (val.isNotNull()) {",
        "      sharedObjAttrs.put(attrs[i], val);",
        "    }",
        "  }",
        "  ",
        "  // Ensure object attributes match in both shared and transient state",
        "  nodeState.putTransient(OBJECT_ATTRS, sharedObjAttrs);",
        "  sharedState.put(OBJECT_ATTRS, sharedObjAttrs);",
        "  outcome = 'Success';",
        "",
        "} catch (e) {",
        "",
        "  logger.error('Failed to set attributes to complete onboarding: {}', e);",
        "  outcome = 'Error';",
        "",
        "}",
        "",
      ],
    },
    "847aab1b-c739-4d64-b26c-180f96cba02b": {
      "_id": "847aab1b-c739-4d64-b26c-180f96cba02b",
      "context": "AUTHENTICATION_TREE_DECISION_NODE",
      "createdBy": "null",
      "creationDate": 0,
      "default": false,
      "description": "Select and apply theme from based on the browser language in the request.",
      "language": "JAVASCRIPT",
      "lastModifiedBy": "null",
      "lastModifiedDate": 0,
      "name": "Select Theme by Browser Language",
      "script": [
        "/* Select Theme by Browser Language",
        " * ",
        " * Select and apply theme from based on the browser language in the request.",
        " * ",
        " * This script needs to be parametrized!",
        " * ",
        " * The Scripted Decision Node needs the following outcomes defined:",
        " * - true",
        " *",
        " * Author: volker.scheuber@forgerock.com",
        " */",
        "(function () {",
        "    /******************************/",
        "    /* Begin Script Configuration */",
        "",
        "    // the script expects the themes to be named <baseTheme>_<language>, e.g. "Zardoz_en"",
        "    var baseTheme = "Zardoz";",
        "",
        "    // add all the language codes you want to support",
        "    var supportedLanguages = ["de", "en", "fr"];",
        "",
        "    // specify the default language to fall back on if the browser language is not a supported language",
        "    var defaultLanguage = "en";",
        "",
        "    /* End Script Configuration   */",
        "    /******************************/",
        "",
        "    outcome = "true";",
        "    var theme = getThemeByLanguage(baseTheme);",
        "    var fr = JavaImporter(",
        "        org.forgerock.openam.auth.node.api.Action,",
        "        org.forgerock.openam.authentication.callbacks.PollingWaitCallback",
        "    )",
        "    if (theme && callbacks.isEmpty()) {",
        "        var stage = "themeId=" + theme;",
        "        action = fr.Action.send(",
        "            new fr.PollingWaitCallback("100", "Please wait ...")",
        "        ).withStage(stage).build();",
        "    } else {",
        "        action = fr.Action.goTo(outcome).build();",
        "    }",
        "",
        "    /*",
        "     * Returns the name of the theme to select based on browser language",
        "     */",
        "    function getThemeByLanguage(theme) {",
        "        var languageHeader = getHeader("accept-language");",
        "        var language = languageHeader.split(';')[0].split(',')[0].split('-')[0];",
        "        if (supportedLanguages.indexOf(language) < 0) {",
        "            language = defaultLanguage;",
        "        }",
        "        return theme + "_" + language;",
        "    }",
        "",
        "    /*",
        "     * Returns the value of the requested header",
        "     */",
        "    function getHeader(headerName) {",
        "        return requestHeaders.get(headerName).get(0) + "";",
        "    }",
        "}());",
      ],
    },
    "849ef5f3-7481-4607-a668-f0b5bf47db4c": {
      "_id": "849ef5f3-7481-4607-a668-f0b5bf47db4c",
      "context": "AUTHENTICATION_TREE_DECISION_NODE",
      "createdBy": "null",
      "creationDate": 0,
      "default": false,
      "description": "Goodbye Message",
      "language": "JAVASCRIPT",
      "lastModifiedBy": "null",
      "lastModifiedDate": 0,
      "name": "Twilio IVR: Goodbye Message",
      "script": [
        "/* Twilio IVR: Goodbye Message",
        " * ",
        " * The Scripted Decision Node needs the following outcomes defined:",
        " * - true",
        " * ",
        " * Depending on the amount of data collected through callbacks and how many of the callParams",
        " * you activate below, you will need to change your authentication session from JWT to CTS or",
        " * Memory.",
        " */",
        "logger.warning("Twilio IVR: Goodbye Message: start");",
        "outcome = "true";",
        "",
        "/* Begin Configuration",
        " */",
        "",
        "// Build out the full message",
        "var message = "Thank you for calling ForgeRock Identity Cloud. Goodbye!";",
        "",
        "/* End Configuration",
        " */",
        "",
        "var fr = JavaImporter(",
        "      org.forgerock.openam.auth.node.api,",
        "      javax.security.auth.callback.TextOutputCallback",
        ");",
        "  ",
        "with (fr) {",
        "      if (callbacks.isEmpty()) {",
        "        var output = new TextOutputCallback(TextOutputCallback.INFORMATION, message);",
        "        action = Action.send(output).build();",
        "      } ",
        "      else {",
        "        logger.warning("Twilio IVR: Goodbye Message: finish [outcome=".concat(outcome).concat("]"));",
        "        action = Action.goTo(outcome).build();",
        "      }",
        "}",
      ],
    },
    "8508a00e-ad45-4310-b3c7-c6871b6a41a9": {
      "_id": "8508a00e-ad45-4310-b3c7-c6871b6a41a9",
      "context": "AUTHENTICATION_TREE_DECISION_NODE",
      "createdBy": "null",
      "creationDate": 0,
      "default": false,
      "description": "Browser Language Decision",
      "language": "JAVASCRIPT",
      "lastModifiedBy": "null",
      "lastModifiedDate": 0,
      "name": "Browser Language Decision",
      "script": [
        "/* Browser Language Decision",
        " * ",
        " * Detect the browser language in the request and branch out to its named exit (e.g.: "de" or "en" or "fr") ",
        " * if it is part of the supportedLanguages array, otherwise take the "other" exit.",
        " * ",
        " * This script does not need to be parametrized. It will work properly as is.",
        " * ",
        " * The Scripted Decision Node needs the following outcomes defined:",
        " * - other",
        " * - <all of the items in the supportedLanguages array>",
        " *",
        " * Author: volker.scheuber@forgerock.com",
        " */",
        "(function () {",
        "      /******************************/",
        "      /* Begin Script Configuration */",
        "      ",
        "      // add all the language codes you want to support",
        "      var supportedLanguages = ["de","en","fr"];",
        "      ",
        "      /* End Script Configuration   */",
        "      /******************************/",
        "  ",
        "      outcome = getBrowserLanguage();",
        "      ",
        "    /*",
        "     * Returns the supported browser language or "other"",
        "     */",
        "    function getBrowserLanguage() {",
        "          var languageHeader = getHeader("accept-language");",
        "          var language = languageHeader.split(';')[0].split(',')[0].split('-')[0];",
        "          if (supportedLanguages.indexOf(language) < 0) {",
        "              return "other";",
        "        }",
        "        return language;",
        "    }",
        "",
        "    /*",
        "     * Returns the value of the requested header",
        "     */",
        "    function getHeader(headerName) {",
        "        return requestHeaders.get(headerName).get(0)+"";",
        "    }",
        "}());",
      ],
    },
    "85523e71-2d77-4577-b078-6f9674cc54e2": {
      "_id": "85523e71-2d77-4577-b078-6f9674cc54e2",
      "context": "SAML2_IDP_ADAPTER",
      "createdBy": "null",
      "creationDate": 0,
      "default": false,
      "description": "Always redirect browser pre-auth",
      "language": "JAVASCRIPT",
      "lastModifiedBy": "null",
      "lastModifiedDate": 0,
      "name": "Saml2 IDP Adapter Always Auth",
      "script": [
        "/*",
        " * Copyright 2021-2022 ForgeRock AS. All Rights Reserved",
        " *",
        " * Use of this code requires a commercial software license with ForgeRock AS.",
        " * or with one of its affiliates. All use shall be exclusively subject",
        " * to such license between the licensee and ForgeRock AS.",
        " */",
        "",
        "/*",
        " * The script has these top level functions that could be executed during a SAML2 flow.",
        " *      - preSingleSignOn",
        " *      - preAuthentication",
        " *      - preSendResponse",
        " *      - preSignResponse",
        " *      - preSendFailureResponse",
        " *",
        " * Please see the javadoc for the interface definition and more information about these methods.",
        " * https://backstage.forgerock.com/docs/am/7.2/apidocs/com/sun/identity/saml2/plugins/SAML2IdentityProviderAdapter.html",
        " * Note that the initialize method is not supported in the scripts.",
        " *",
        " * Defined variables. Check the documentation on the respective functions for the variables available to it.",
        " *",
        " * hostedEntityId - String",
        " *     Entity ID for the hosted IDP",
        " * realm - String",
        " *     Realm of the hosted IDP",
        " * idpAdapterScriptHelper - IdpAdapterScriptHelper (1)",
        " *     An instance of IdpAdapterScriptHelper containing helper methods. See Javadoc for more details.",
        " * request - HttpServletRequest (2)",
        " *     Servlet request object",
        " * response - HttpServletResponse (3)",
        " *     Servlet response object",
        " * authnRequest - AuthnRequest (4)",
        " *     The original authentication request sent from SP",
        " * reqId - String",
        " *     The id to use for continuation of processing if the adapter redirects",
        " * res - Response (5)",
        " *     The SAML Response",
        " * session - SSOToken (6)",
        " *     The single sign-on session. The reference type of this is Object and would need to be casted to SSOToken.",
        " * relayState - String",
        " *     The relayState that will be used in the redirect",
        " * faultCode - String",
        " *     the fault code that will be returned in the SAML response",
        " * faultDetail - String",
        " *     the fault detail that will be returned in the SAML response",
        " * logger - Logger instance",
        " *     https://backstage.forgerock.com/docs/am/7/scripting-guide/scripting-api-global-logger.html#scripting-api-global-logger.",
        " *     Corresponding log files will be prefixed with: scripts.<script name>",
        " *",
        " * Throws SAML2Exception (7):",
        " *     for any exceptions occurring in the adapter. The federation process will continue",
        " *",
        " * Class reference:",
        " * (1) idpAdapterScriptHelper - https://backstage.forgerock.com/docs/am/7.2/apidocs/com/sun/identity/saml2/plugins/scripted/IdpAdapterScriptHelper.html.",
        " * (2) HttpServletRequest - https://tomcat.apache.org/tomcat-7.0-doc/servletapi/javax/servlet/http/HttpServletRequest.html.",
        " * (3) HttpServletResponse - https://tomcat.apache.org/tomcat-7.0-doc/servletapi/javax/servlet/http/HttpServletResponse.html.",
        " * (4) AuthnRequest - https://backstage.forgerock.com/docs/am/7.2/apidocs/com/sun/identity/saml2/protocol/AuthnRequest.html.",
        " * (5) Response - https://backstage.forgerock.com/docs/am/7.2/apidocs/com/sun/identity/saml2/protocol/Response.html.",
        " * (6) SSOToken - https://backstage.forgerock.com/docs/am/7.2/apidocs/com/iplanet/sso/SSOToken.html.",
        " * (7) SAML2Exception - https://backstage.forgerock.com/docs/am/7.2/apidocs/com/sun/identity/saml2/common/SAML2Exception.html.",
        " */",
        "",
        "/*",
        " * Template/default script for SAML2 IDP Adapter scripted plugin.",
        " */",
        "",
        "/*",
        " * Available variables for preSingleSignOn:",
        " *     hostedEntityId",
        " *     realm",
        " *     idpAdapterScriptHelper",
        " *     request",
        " *     authnRequest",
        " *     response",
        " *     reqId",
        " *     logger",
        " *",
        " * Return - true if browser redirection is happening after processing, false otherwise. Default to false.",
        " */",
        "function preSingleSignOn () {",
        "      logger.error("Chicago: preSingleSignOn");",
        "    return true;",
        "}",
        "",
        "/*",
        " * Available variables for preAuthentication:",
        " *     hostedEntityId",
        " *     realm",
        " *     idpAdapterScriptHelper",
        " *     request",
        " *     authnRequest",
        " *     response",
        " *     reqId",
        " *     session",
        " *     relayState",
        " *     logger",
        " *",
        " * Return - true if browser redirection is happening after processing, false otherwise. Default to false.",
        " */",
        "function preAuthentication () {",
        "      logger.error("Chicago: preAuthentication");",
        "    return true;",
        "}",
        "",
        "/*",
        " * Available variables for preSendResponse:",
        " *     hostedEntityId",
        " *     realm",
        " *     idpAdapterScriptHelper",
        " *     request",
        " *     authnRequest",
        " *     response",
        " *     reqId",
        " *     session",
        " *     relayState",
        " *     logger",
        " *",
        " * Return - true if browser redirection happened after processing, false otherwise. Default to false.",
        " */",
        "function preSendResponse () {",
        "      logger.error("Chicago: preSendResponse");",
        "      logger.error("Chicago: authnRequest: "+authnRequest);",
        "      response.sendRedirect("https://idc.scheuber.io/am/XUI/?realm=alpha&authIndexType=service&authIndexValue=Dispatcher&ForceAuth=true&goto="+relayState);",
        "    return true;",
        "}",
        "",
        "/*",
        " * Available variables for preSignResponse:",
        " *     hostedEntityId",
        " *     realm",
        " *     idpAdapterScriptHelper",
        " *     request",
        " *     authnRequest",
        " *     session",
        " *     relayState",
        " *     res",
        " *     logger",
        " */",
        "function preSignResponse () {",
        "      logger.error("Chicago: preSignResponse");",
        "}",
        "",
        "/*",
        " * Available variables for preSendFailureResponse:",
        " *     hostedEntityId",
        " *     realm",
        " *     idpAdapterScriptHelper",
        " *     request",
        " *     response",
        " *     faultCode",
        " *     faultDetail",
        " *     logger",
        " */",
        "function preSendFailureResponse () {",
        "      logger.error("Chicago: preSendFailureResponse");",
        "}",
      ],
    },
    "87497360-d89c-412a-a99e-c8a9bec465cc": {
      "_id": "87497360-d89c-412a-a99e-c8a9bec465cc",
      "context": "AUTHENTICATION_TREE_DECISION_NODE",
      "createdBy": "null",
      "creationDate": 0,
      "default": false,
      "description": "null",
      "language": "JAVASCRIPT",
      "lastModifiedBy": "null",
      "lastModifiedDate": 0,
      "name": "ipstack",
      "script": [
        "logger.warning("ipstack: start");",
        "",
        "outcome = "unknown";",
        "",
        "var ip = getClientIPAddress();",
        "logger.warning("ipstack: ip=".concat(ip));",
        "",
        "if (ip) {",
        "",
        "      // ipstack API Configuration",
        "    var IPSTACK_ACCESS_KEY = "efc2f8d9796b9feff5f03359d6fbccc9";",
        "    var IPSTACK_API_URI = "http://api.ipstack.com/".concat(ip).concat("?access_key=").concat(IPSTACK_ACCESS_KEY);    ",
        "",
        "    var request = new org.forgerock.http.protocol.Request();",
        "    request.setMethod('GET');",
        "    request.setUri(IPSTACK_API_URI);",
        "",
        "    var response = httpClient.send(request).get();",
        "    var result = JSON.parse(response.getEntity().getString());",
        "    logger.warning("ipstack: JSON result: " + JSON.stringify(result));",
        "",
        "      /*",
        "    {",
        "        "ip": "99.72.28.182",",
        "        "type": "ipv4",",
        "        "continent_code": "NA",",
        "        "continent_name": "North America",",
        "        "country_code": "US",",
        "        "country_name": "United States",",
        "        "region_code": "TX",",
        "        "region_name": "Texas",",
        "        "city": "Georgetown",",
        "        "zip": "78626",",
        "        "latitude": 30.592500686645508,",
        "        "longitude": -97.66710662841797,",
        "        "location": {",
        "            "geoname_id": 4693342,",
        "            "capital": "Washington D.C.",",
        "            "languages": [",
        "                {",
        "                    "code": "en",",
        "                    "name": "English",",
        "                    "native": "English"",
        "                }",
        "            ],",
        "            "country_flag": "http://assets.ipstack.com/flags/us.svg",",
        "            "country_flag_emoji": "🇺🇸",",
        "            "country_flag_emoji_unicode": "U+1F1FA U+1F1F8",",
        "            "calling_code": "1",",
        "            "is_eu": false",
        "        }",
        "    }",
        "    */",
        "  ",
        "      // preserve result in transient state",
        "      transientState.put("ipstack", JSON.stringify(result));",
        "",
        "    switch(result.country_code) {",
        "      case "CA":",
        "        outcome = result.country_code;",
        "        break;",
        "      case "UK":",
        "        outcome = result.country_code;",
        "        break;",
        "      case "US":",
        "        outcome = result.country_code;",
        "        break;",
        "      default:",
        "        outcome = "other";",
        "    }",
        "",
        "} else {",
        "      logger.error("ipstack: no client ip!");",
        "}",
        "",
        "logger.warning("ipstack: finish");",
        "",
        " /*",
        "  * !!! ASSUMES ID CLOUD !!!",
        "  *",
        "  * Returns the client's IP address",
        "  */",
        " function getClientIPAddress() {",
        "    return requestHeaders.get("x-forwarded-for").get(0).split(',')[0];",
        " }",
      ],
    },
    "878816b3-2bb4-4b43-8001-10f926ddefff": {
      "_id": "878816b3-2bb4-4b43-8001-10f926ddefff",
      "context": "AUTHENTICATION_TREE_DECISION_NODE",
      "createdBy": "null",
      "creationDate": 0,
      "default": false,
      "description": "Switch Actors And Become Impersonatee.",
      "language": "JAVASCRIPT",
      "lastModifiedBy": "null",
      "lastModifiedDate": 0,
      "name": "Impersonate: Switch Actors And Become Impersonatee",
      "script": [
        "/* Impersonate: Switch Actors And Become Impersonatee",
        " *",
        " * Switch Actors And Become Impersonatee.",
        " *",
        " * The Scripted Decision Node needs the following outcomes defined:",
        " * - true",
        " * - false",
        " */",
        "",
        "(function () {",
        "    logger.warning("Impersonate: Switch Actors: start");",
        "    outcome = "false";",
        "",
        "    var impersonatee = sharedState.get("impersonatee");",
        "    var impersonator = sharedState.get("impersonator");",
        "    if (impersonatee && impersonator) {",
        "        outcome = "true";",
        "        sharedState.put("username", impersonatee);",
        "        setSharedObjectAttribute("userName", impersonatee);",
        "    }",
        "",
        "    logger.warning("Impersonate: Switch Actors: finish [outcome=".concat(outcome).concat("]"));",
        "  ",
        "    /*",
        "     * Store attributes in shared state for use with the Create/Patch Object nodes.",
        "     */",
        "    function setSharedObjectAttribute(name, value) {",
        "         var storage = sharedState.get("objectAttributes");",
        "        if (storage && value) {",
        "            if (storage.put) {",
        "                  storage.put(name, value);",
        "            }",
        "            else {",
        "                storage[name] = value;",
        "            }",
        "        }",
        "        else if (value) {",
        "            sharedState.put("objectAttributes", JSON.parse("{\\""+name+"\\":\\""+value+"\\"}"));",
        "        }",
        "    }",
        "}());",
      ],
    },
    "8862ca8f-7770-4af5-a888-ac0df0947f36": {
      "_id": "8862ca8f-7770-4af5-a888-ac0df0947f36",
      "context": "SOCIAL_IDP_PROFILE_TRANSFORMATION",
      "createdBy": "null",
      "creationDate": 0,
      "default": true,
      "description": "Normalizes raw profile data from LinkedIn",
      "language": "GROOVY",
      "lastModifiedBy": "null",
      "lastModifiedDate": 0,
      "name": "LinkedIn Profile Normalization",
      "script": [
        "/*",
        " * Copyright 2020 ForgeRock AS. All Rights Reserved",
        " *",
        " * Use of this code requires a commercial software license with ForgeRock AS.",
        " * or with one of its affiliates. All use shall be exclusively subject",
        " * to such license between the licensee and ForgeRock AS.",
        " */",
        "",
        "import static org.forgerock.json.JsonValue.field",
        "import static org.forgerock.json.JsonValue.json",
        "import static org.forgerock.json.JsonValue.object",
        "",
        "return json(object(",
        "        field("id", rawProfile.id),",
        "        field("givenName", rawProfile.firstName.localized.get(0)),",
        "        field("familyName", rawProfile.lastName.localized.get(0)),",
        "        field("photoUrl", rawProfile.profilePicture.displayImage),",
        "        field("email", rawProfile.elements.get(0).get("handle~").emailAddress),",
        "        field("username", rawProfile.elements.get(0).get("handle~").emailAddress)))",
      ],
    },
    "89eff37a-2e1e-47c2-8d62-5f7417fbb6b4": {
      "_id": "89eff37a-2e1e-47c2-8d62-5f7417fbb6b4",
      "context": "AUTHENTICATION_TREE_DECISION_NODE",
      "createdBy": "null",
      "creationDate": 0,
      "default": false,
      "description": "Return TextOutputCallback indicating the provided OTP was invalid.",
      "language": "JAVASCRIPT",
      "lastModifiedBy": "null",
      "lastModifiedDate": 0,
      "name": "OTP Invalid",
      "script": [
        "/* OTP Invalid",
        " *",
        " * Author: volker.scheuber@forgerock.com",
        " * ",
        " * Return TextOutputCallback indicating the provided OTP was invalid.",
        " * ",
        " * This script does not need to be parametrized. It will work properly as is.",
        " * ",
        " * The Scripted Decision Node needs the following outcomes defined:",
        " * - true",
        " */",
        "outcome = "true";",
        "var fr = JavaImporter(",
        "    org.forgerock.openam.auth.node.api.Action,",
        "    javax.security.auth.callback.TextOutputCallback",
        ")",
        "if (callbacks.isEmpty()) {",
        "    action = fr.Action.send(",
        "        new fr.TextOutputCallback(",
        "            fr.TextOutputCallback.INFORMATION,",
        "            "INVALID"",
        "        )",
        "    ).build()",
        "}",
        "else {",
        "  action = fr.Action.goTo(outcome).build();",
        "}",
      ],
    },
    "8a768bb3-01cd-46b8-881c-b77f5a26c283": {
      "_id": "8a768bb3-01cd-46b8-881c-b77f5a26c283",
      "context": "AUTHENTICATION_TREE_DECISION_NODE",
      "createdBy": "null",
      "creationDate": 0,
      "default": false,
      "description": "Write Onfido HTML Meta Tags",
      "language": "JAVASCRIPT",
      "lastModifiedBy": "null",
      "lastModifiedDate": 0,
      "name": "Onfido-Meta-Tags",
      "script": [
        "/* Write HTML Meta Tags",
        " *",
        " * Author: volker.scheuber@forgerock.com",
        " * ",
        " * This script writes meta tags to the header.",
        " * ",
        " * This script does not need to be parametrized. It will work properly as is.",
        " * ",
        " * The Scripted Decision Node needs the following outcomes defined:",
        " * - true",
        " */",
        "(function () {",
        "  var fr = JavaImporter(",
        "      org.forgerock.openam.auth.node.api.Action,",
        "      com.sun.identity.authentication.callbacks.ScriptTextOutputCallback",
        "  )",
        "",
        "  function createScript() {",
        "    return String("\\n\\",
        "    Array.prototype.slice.call(\\n\\",
        "      document.getElementsByTagName('head')\\n\\",
        "    ).forEach(\\n\\",
        "      function (e) {\\n\\",
        "        var meta = document.createElement('meta'); \\n\\",
        "        meta.name = \\"author\\"; \\n\\",
        "        meta.content = \\"John Doe\\"; \\n\\",
        "        document.getElementsByTagName('head')[0].appendChild(meta); \\n\\",
        "      }\\n\\",
        "    )");",
        "  }",
        "",
        "  if (callbacks.isEmpty()) {",
        "      action = fr.Action.send(",
        "          new fr.ScriptTextOutputCallback(createScript())",
        "      ).build()",
        "  } else {",
        "      action = fr.Action.goTo("true").build();",
        "  }",
        "}());",
      ],
    },
    "8bccfdd0-5556-4562-a1ca-6d725a449556": {
      "_id": "8bccfdd0-5556-4562-a1ca-6d725a449556",
      "context": "AUTHENTICATION_TREE_DECISION_NODE",
      "createdBy": "null",
      "creationDate": 0,
      "default": false,
      "description": "null",
      "language": "JAVASCRIPT",
      "lastModifiedBy": "null",
      "lastModifiedDate": 0,
      "name": "display country",
      "script": [
        "var fr = JavaImporter(",
        "  org.forgerock.openam.auth.node.api,",
        "  javax.security.auth.callback.TextOutputCallback",
        ");",
        "  ",
        "outcome = "true";",
        "",
        "var country = "unknown";",
        "if (transientState.get("ipstack")) {",
        "    country = JSON.parse(transientState.get("ipstack")).country_code;",
        "}",
        "  ",
        "with (fr) {",
        "  if (callbacks.isEmpty()) {",
        "    var callback = new TextOutputCallback(TextOutputCallback.INFORMATION, "Country: ".concat(country));",
        "    action = Action.send(callback).build();",
        "  } else {",
        "    action = Action.goTo("true").build();",
        "  }",
        "}",
      ],
    },
    "8e03eb43-ed5d-4c12-9e15-2051cc9be578": {
      "_id": "8e03eb43-ed5d-4c12-9e15-2051cc9be578",
      "context": "AUTHENTICATION_TREE_DECISION_NODE",
      "createdBy": "null",
      "creationDate": 0,
      "default": false,
      "description": "Copy SAML Data To ObjectAttributes",
      "language": "JAVASCRIPT",
      "lastModifiedBy": "null",
      "lastModifiedDate": 0,
      "name": "CopySAMLDataToObjectAttributes",
      "script": [
        "/* CopySAMLDataToObjectAttributes",
        " *",
        " * Author: volker.scheuber@forgerock.com",
        " * ",
        " * Copy SAML Data To ObjectAttributes.",
        " * ",
        " * This script does not need to be parametrized. It will work properly as is.",
        " * ",
        " * The Scripted Decision Node needs the following outcomes defined:",
        " * - true",
        " */",
        "outcome = "true";",
        "if (sharedState.get("userInfo")) {",
        "    if (sharedState.get("objectAttributes")) {",
        "          sharedState.remove("objectAttributes");",
        "    }",
        "    var userName=null,givenName=null,sn=null,mail=null,telephoneNumber=null,roles=null;",
        "",
        "    try { userName=sharedState.get("userInfo").get("userNames").get("uid").get(0).toString(); } catch (e) {}",
        "    try { givenName=sharedState.get("userInfo").get("attributes").get("givenName").get(0).toString(); } catch (e) {}",
        "    try { sn=sharedState.get("userInfo").get("attributes").get("sn").get(0).toString(); } catch (e) {}",
        "    try { mail=sharedState.get("userInfo").get("attributes").get("mail").get(0).toString(); } catch (e) {}",
        "    try { telephoneNumber=sharedState.get("userInfo").get("attributes").get("telephoneNumber").get(0).toString(); } catch (e) {}",
        "    //try { roles=sharedState.get("userInfo").get("attributes").get("roles").get(0).toString(); } catch (e) {}",
        "    try { roles=sharedState.get("userInfo").get("attributes").get("roles").toArray().join("|"); } catch (e) {}",
        "",
        "    sharedState.put("objectAttributes", {"userName":userName,"givenName":givenName,"sn":sn,"mail":mail,"telephoneNumber":telephoneNumber,"roles":roles});",
        "}",
      ],
    },
    "8e1060d8-73c4-425c-a524-0c3709b4fa8d": {
      "_id": "8e1060d8-73c4-425c-a524-0c3709b4fa8d",
      "context": "AUTHENTICATION_TREE_DECISION_NODE",
      "createdBy": "null",
      "creationDate": 0,
      "default": false,
      "description": "null",
      "language": "JAVASCRIPT",
      "lastModifiedBy": "null",
      "lastModifiedDate": 0,
      "name": "Admin_SetUsernameFromMail",
      "script": [
        "if (!sharedState.containsKey('username') || sharedState.get('username') == null) {",
        "  sharedState.put('username', sharedState.get('objectAttributes').get('mail'));",
        "}",
        "",
        "outcome = 'true';",
      ],
    },
    "8e298710-b55e-4085-a464-88a375a4004b": {
      "_id": "8e298710-b55e-4085-a464-88a375a4004b",
      "context": "SOCIAL_IDP_PROFILE_TRANSFORMATION",
      "createdBy": "null",
      "creationDate": 0,
      "default": true,
      "description": "Normalizes raw profile data from Twitter",
      "language": "GROOVY",
      "lastModifiedBy": "null",
      "lastModifiedDate": 0,
      "name": "Twitter Profile Normalization",
      "script": [
        "/*",
        " * Copyright 2020 ForgeRock AS. All Rights Reserved",
        " *",
        " * Use of this code requires a commercial software license with ForgeRock AS.",
        " * or with one of its affiliates. All use shall be exclusively subject",
        " * to such license between the licensee and ForgeRock AS.",
        " */",
        "",
        "import static org.forgerock.json.JsonValue.field",
        "import static org.forgerock.json.JsonValue.json",
        "import static org.forgerock.json.JsonValue.object",
        "",
        "return json(object(",
        "        field("id", rawProfile.id_str),",
        "        field("displayName", rawProfile.name),",
        "        field("photoUrl", rawProfile.profile_image_url),",
        "        field("email", rawProfile.email),",
        "        field("username", rawProfile.screen_name)))",
      ],
    },
    "90c4eca5-05f0-42f5-b9bf-88b693eabbbd": {
      "_id": "90c4eca5-05f0-42f5-b9bf-88b693eabbbd",
      "context": "SAML2_IDP_ATTRIBUTE_MAPPER",
      "createdBy": "null",
      "creationDate": 0,
      "default": false,
      "description": "null",
      "language": "JAVASCRIPT",
      "lastModifiedBy": "null",
      "lastModifiedDate": 0,
      "name": "Saml2 IDP Attribute Mapper Script",
      "script": [
        "/*",
        " * Copyright 2021 ForgeRock AS. All Rights Reserved",
        " * Use of this code requires a commercial software license with ForgeRock AS.",
        " * or with one of its affiliates. All use shall be exclusively subject",
        " * to such license between the licensee and ForgeRock AS.",
        " */",
        "",
        "/*",
        " * This script returns a list of SAML Attribute objects for the IDP framework to insert into the generated Assertion.",
        " *",
        " * Defined variables:",
        " * session - SSOToken (1)",
        " *           The single sign-on session.",
        " * hostedEntityId - String (primitive).",
        " *                  The hosted entity ID.",
        " * remoteEntityId - String (primitive).",
        " *                  The remote entity ID.",
        " * realm - String (primitive).",
        " *         The name of the realm the user is authenticating to.",
        " * logger - Always present, the debug logger instance:",
        " *          https://backstage.forgerock.com/docs/am/7/scripting-guide/scripting-api-global-logger.html#scripting-api-global-logger.",
        " *          Corresponding log files will be prefixed with: scripts.SAML2_IDP_ATTRIBUTE_MAPPER",
        " * idpAttributeMapperScriptHelper - IdpAttributeMapperScriptHelper (2)",
        " *                                - An IdpAttributeMapperScriptHelper instance containing methods used for IDP attribute mapping.",
        " *",
        " * Throws SAML2Exception:",
        " *      - on failing to map the IDP attributes.",
        " *",
        " * Return - a list of SAML Attribute (3) objects.",
        " *",
        " * Class reference:",
        " * (1) SSOToken - https://backstage.forgerock.com/docs/am/7/apidocs/com/iplanet/sso/SSOToken.html.",
        " * (2) IdpAttributeMapperScriptHelper - https://backstage.forgerock.com/docs/am/7/apidocs/com/sun/identity/saml2/plugins/scripted/IdpAttributeMapperScriptHelper.html.",
        " * (3) Attribute - https://backstage.forgerock.com/docs/am/7/apidocs/com/sun/identity/saml2/assertion/Attribute.html.",
        " */",
        "",
        "/**",
        " * Default SAML2 IDP Attribute Mapper.",
        " */",
        "function getAttributes() {",
        "    var frJava = JavaImporter(",
        "        com.sun.identity.saml2.common.SAML2Exception",
        "    );",
        "",
        "    const debugMethod = "ScriptedIDPAttributeMapper.getAttributes:: ";",
        "",
        "    try {",
        "",
        "        if (!idpAttributeMapperScriptHelper.isSessionValid(session)) {",
        "            logger.error(debugMethod + "Invalid session.");",
        "            return null;",
        "        }",
        "",
        "        var configMap = idpAttributeMapperScriptHelper.getRemoteSPConfigAttributeMap(realm, remoteEntityId);",
        "        logger.message(debugMethod + "Remote SP attribute map = {}", configMap);",
        "        if (configMap == null || configMap.isEmpty()) {",
        "            configMap = idpAttributeMapperScriptHelper.getHostedIDPConfigAttributeMap(realm, hostedEntityId);",
        "            if (configMap == null || configMap.isEmpty()) {",
        "                logger.message(debugMethod + "Configuration map is not defined.");",
        "                return null;",
        "            }",
        "            logger.message(debugMethod + "Hosted IDP attribute map = {}", configMap);",
        "        }",
        "",
        "        var attributes = new java.util.ArrayList();",
        "        var stringValueMap = new java.util.HashSet();",
        "        var binaryValueMap;",
        "        var localAttribute;",
        "",
        "        // Don't try to read the attributes from the datastore if the ignored profile is enabled in this realm.",
        "        if (!idpAttributeMapperScriptHelper.isIgnoredProfile(session, realm)) {",
        "            try {",
        "                // Resolve attributes to be read from the datastore.",
        "                var stringAttributes = new java.util.HashSet();",
        "                var binaryAttributes = new java.util.HashSet();",
        "                var keyIter = configMap.keySet().iterator();",
        "                while (keyIter.hasNext()) {",
        "                    var key = keyIter.next();",
        "                    localAttribute = configMap.get(key);",
        "                    if (!idpAttributeMapperScriptHelper.isStaticAttribute(localAttribute)) {",
        "                        if (idpAttributeMapperScriptHelper.isBinaryAttribute(localAttribute)) {",
        "                            // add it to the list of attributes to treat as being binary",
        "                            binaryAttributes.add(idpAttributeMapperScriptHelper.removeBinaryAttributeFlag(localAttribute));",
        "                        } else {",
        "                            stringAttributes.add(localAttribute);",
        "                        }",
        "                    }",
        "                }",
        "",
        "                if (!stringAttributes.isEmpty()) {",
        "                    stringValueMap = idpAttributeMapperScriptHelper.getAttributes(session, stringAttributes);",
        "                }",
        "                if (!binaryAttributes.isEmpty()) {",
        "                    binaryValueMap = idpAttributeMapperScriptHelper.getBinaryAttributes(session, binaryAttributes);",
        "                }",
        "            } catch (error) {",
        "                logger.error(debugMethod + "Error accessing the datastore. " + error);",
        "                //continue to check in ssotoken.",
        "            }",
        "        }",
        "",
        "        var keyIter = configMap.keySet().iterator();",
        "        while (keyIter.hasNext()) {",
        "            var key = keyIter.next()",
        "            var nameFormat = null;",
        "            var samlAttribute = key;",
        "            localAttribute = configMap.get(key);",
        "            // check if samlAttribute has format nameFormat|samlAttribute",
        "            var samlAttributes = String(new java.lang.String(samlAttribute));",
        "            var tokens = samlAttributes.split('|');",
        "",
        "            if (tokens.length > 1) {",
        "                nameFormat = tokens[0];",
        "                samlAttribute = tokens[1];",
        "            }",
        "",
        "            var attributeValues = new java.util.HashSet();",
        "            if (idpAttributeMapperScriptHelper.isStaticAttribute(localAttribute)) {",
        "                // Remove the static flag before using it as the static value",
        "                localAttribute = idpAttributeMapperScriptHelper.removeStaticAttributeFlag(localAttribute);",
        "                attributeValues = new java.util.HashSet([localAttribute]);",
        "                logger.message(debugMethod + "Adding static value {} for attribute named {}", localAttribute, samlAttribute);",
        "            } else {",
        "                if (idpAttributeMapperScriptHelper.isBinaryAttribute(localAttribute)) {",
        "                    // Remove the flag as not used for lookup",
        "                    localAttribute = idpAttributeMapperScriptHelper.removeBinaryAttributeFlag(localAttribute);",
        "                    attributeValues = idpAttributeMapperScriptHelper.getBinaryAttributeValues(samlAttribute, localAttribute,",
        "                        binaryValueMap);",
        "                } else {",
        "                    if (stringValueMap != null && !stringValueMap.isEmpty()) {",
        "                        attributeValues = stringValueMap.get(localAttribute);",
        "                    } else {",
        "                        logger.message(debugMethod + "{} string value map was empty or null.", localAttribute);",
        "                    }",
        "                }",
        "",
        "                // If all else fails, try to get the value from the users ssoToken",
        "                if (attributeValues == null || attributeValues.isEmpty()) {",
        "                    logger.message(debugMethod + "User profile does not have value for {}, checking SSOToken.", localAttribute);",
        "                    attributeValues = new java.util.HashSet(idpAttributeMapperScriptHelper.getPropertySet(session, localAttribute));",
        "                }",
        "            }",
        "",
        "            if (attributeValues == null || attributeValues.isEmpty()) {",
        "                logger.message(debugMethod + "{} not found in user profile or SSOToken.", localAttribute);",
        "            } else {",
        "                attributes.add(idpAttributeMapperScriptHelper.createSAMLAttribute(samlAttribute, nameFormat, attributeValues));",
        "            }",
        "        }",
        "",
        "        return attributes;",
        "",
        "    } catch (error) {",
        "        logger.error(debugMethod + "Error mapping IDP attributes. " + error);",
        "        throw new frJava.SAML2Exception(error);",
        "    }",
        "}",
        "",
        "getAttributes();",
      ],
    },
    "91554b10-79a5-4aa8-aca1-59481a734c19": {
      "_id": "91554b10-79a5-4aa8-aca1-59481a734c19",
      "context": "AUTHENTICATION_TREE_DECISION_NODE",
      "createdBy": "null",
      "creationDate": 0,
      "default": false,
      "description": "Twilio SMS OTP Sender",
      "language": "JAVASCRIPT",
      "lastModifiedBy": "null",
      "lastModifiedDate": 0,
      "name": "Twilio SMS OTP Sender",
      "script": [
        "/* Twilio SMS OTP Sender",
        " *",
        " * Author: volker.scheuber@forgerock.com",
        " * ",
        " * This script will send an SMS containing the OTP to the phone number in the user's profile.",
        " * ",
        " * This script needs to be parametrized. It will not work properly as is. ",
        " * It requires the Identify Existing User node and HOTP Generator node before it is being called.",
        " * ",
        " * The Scripted Decision Node needs the following outcomes defined:",
        " * - sent",
        " * - failed",
        " */",
        "logger.warning("Twilio SMS OTP Sender: start");",
        "",
        "if (sharedState.get("_id") && idRepository.getAttribute(sharedState.get("_id"), "telephoneNumber").iterator().hasNext()) {",
        "    var Base64={_keyStr:"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=",encode:function(input){var output="";var chr1,chr2,chr3,enc1,enc2,enc3,enc4;var i=0;input=Base64._utf8_encode(input);while(i<input.length){chr1=input.charCodeAt(i++);chr2=input.charCodeAt(i++);chr3=input.charCodeAt(i++);enc1=chr1>>2;enc2=(chr1&3)<<4|chr2>>4;enc3=(chr2&15)<<2|chr3>>6;enc4=chr3&63;if(isNaN(chr2)){enc3=enc4=64}else if(isNaN(chr3)){enc4=64}output=output+this._keyStr.charAt(enc1)+this._keyStr.charAt(enc2)+this._keyStr.charAt(enc3)+this._keyStr.charAt(enc4)}return output},decode:function(input){var output="";var chr1,chr2,chr3;var enc1,enc2,enc3,enc4;var i=0;input=input.replace(/[^A-Za-z0-9\\+\\/\\=]/g,"");while(i<input.length){enc1=this._keyStr.indexOf(input.charAt(i++));enc2=this._keyStr.indexOf(input.charAt(i++));enc3=this._keyStr.indexOf(input.charAt(i++));enc4=this._keyStr.indexOf(input.charAt(i++));chr1=enc1<<2|enc2>>4;chr2=(enc2&15)<<4|enc3>>2;chr3=(enc3&3)<<6|enc4;output=output+String.fromCharCode(chr1);if(enc3!=64){output=output+String.fromCharCode(chr2)}if(enc4!=64){output=output+String.fromCharCode(chr3)}}output=Base64._utf8_decode(output);return output},_utf8_encode:function(string){string=string.replace(/\\r\\n/g,"\\n");var utftext="";for(var n=0;n<string.length;n++){var c=string.charCodeAt(n);if(c<128){utftext+=String.fromCharCode(c)}else if(c>127&&c<2048){utftext+=String.fromCharCode(c>>6|192);utftext+=String.fromCharCode(c&63|128)}else{utftext+=String.fromCharCode(c>>12|224);utftext+=String.fromCharCode(c>>6&63|128);utftext+=String.fromCharCode(c&63|128)}}return utftext},_utf8_decode:function(utftext){var string="";var i=0;var c=c1=c2=0;while(i<utftext.length){c=utftext.charCodeAt(i);if(c<128){string+=String.fromCharCode(c);i++}else if(c>191&&c<224){c2=utftext.charCodeAt(i+1);string+=String.fromCharCode((c&31)<<6|c2&63);i+=2}else{c2=utftext.charCodeAt(i+1);c3=utftext.charCodeAt(i+2);string+=String.fromCharCode((c&15)<<12|(c2&63)<<6|c3&63);i+=3}}return string}};",
        "",
        "       /* BEGIN SCRIPT CONFIGURATION",
        "     *",
        "     * REPLACE WITH YOUR OWN AZURE AD SETTINGS",
        "     */",
        "    var TWILIO_API_SID = "AC750415e3163a2e57b7aeea7eed82d944";",
        "    var TWILIO_API_TOKEN = "d36a719c94b4be08592d69ec4f80a5bb";",
        "    var TWILIO_API_FROM = "+13176443107";",
        "    /*",
        "     * END SCRIPT CONFIGURATION",
        "     */",
        "  ",
        "    // Twilio SMS Message API Configuration",
        "    var TWILIO_API_URI = "https://api.twilio.com/2010-04-01/Accounts/".concat(TWILIO_API_SID).concat("/Messages.json");    ",
        "    var TWILIO_API_TO = idRepository.getAttribute(sharedState.get("_id"), "telephoneNumber").iterator().next();",
        "    var TWILIO_API_BODY = "OTP for account ".concat(sharedState.get("username")).concat(": ").concat(sharedState.get("oneTimePassword"));",
        "    //logger.warning("Twilio SMS OTP Sender: To: ".concat(TWILIO_API_TO));",
        "    //logger.warning("Twilio SMS OTP Sender: Message: ".concat(TWILIO_API_BODY));",
        "",
        "    var AUTHZ = "Basic ".concat(Base64.encode(TWILIO_API_SID.concat(':').concat(TWILIO_API_TOKEN)));",
        "    //logger.warning("Twilio SMS OTP Sender: AUTHZ - ".concat(AUTHZ));",
        "",
        "    var request = new org.forgerock.http.protocol.Request();",
        "    request.setMethod('POST');",
        "    request.setUri(TWILIO_API_URI);",
        "    request.getHeaders().add("Content-Type", "application/x-www-form-urlencoded");",
        "    request.getHeaders().add("Authorization", AUTHZ);",
        "    var params = request.getForm();",
        "    params.add("From", TWILIO_API_FROM);",
        "    params.add("Body", TWILIO_API_BODY);",
        "    params.add("To", TWILIO_API_TO);",
        "    request.getEntity().setString(params.toString());",
        "",
        "    var response = httpClient.send(request).get();",
        "    var result = JSON.parse(response.getEntity().getString());",
        "    //logger.warning("Twilio SMS OTP Sender: JSON result: " + JSON.stringify(result));",
        "",
        "    if (result["error_code"]) {",
        "        outcome = "failed";",
        "        logger.error("Twilio SMS OTP Sender: error_code = ".concat(result["error_code"]));",
        "        logger.error("Twilio SMS OTP Sender: error_message = ".concat(result["error_message"]));",
        "        logger.error("Twilio SMS OTP Sender: outcome = failed");",
        "    } else if (result["code"]) {",
        "        outcome = "failed";",
        "        logger.error("Twilio SMS OTP Sender: code = ".concat(result["code"]));",
        "        logger.error("Twilio SMS OTP Sender: message = ".concat(result["message"]));",
        "    } else {",
        "        outcome = "sent";",
        "        logger.warning("Twilio SMS OTP Sender: outcome = sent");",
        "    }",
        "} else {",
        "      outcome = "failed";",
        "      logger.error("Twilio SMS OTP Sender: No user or phone number found! Use 'Identify Existing User node before this script to populate the user's _id in shared state!'");",
        "      logger.error("Twilio SMS OTP Sender: outcome = failed");",
        "}",
      ],
    },
    "91d197de-5916-4dca-83b5-9a4df26e7159": {
      "_id": "91d197de-5916-4dca-83b5-9a4df26e7159",
      "context": "SOCIAL_IDP_PROFILE_TRANSFORMATION",
      "createdBy": "null",
      "creationDate": 0,
      "default": true,
      "description": "Normalizes raw profile data from WordPress",
      "language": "GROOVY",
      "lastModifiedBy": "null",
      "lastModifiedDate": 0,
      "name": "WordPress Profile Normalization",
      "script": [
        "/*",
        " * Copyright 2020 ForgeRock AS. All Rights Reserved",
        " *",
        " * Use of this code requires a commercial software license with ForgeRock AS.",
        " * or with one of its affiliates. All use shall be exclusively subject",
        " * to such license between the licensee and ForgeRock AS.",
        " */",
        "",
        "import static org.forgerock.json.JsonValue.field",
        "import static org.forgerock.json.JsonValue.json",
        "import static org.forgerock.json.JsonValue.object",
        "",
        "return json(object(",
        "        field("id", rawProfile.username),",
        "        field("displayName", rawProfile.display_name),",
        "        field("photoUrl", rawProfile.avatar_URL),",
        "        field("email", rawProfile.email),",
        "        field("username", rawProfile.username)))",
      ],
    },
    "92511927-75e6-427f-8e64-eb6ca74115ef": {
      "_id": "92511927-75e6-427f-8e64-eb6ca74115ef",
      "context": "AUTHENTICATION_TREE_DECISION_NODE",
      "createdBy": "null",
      "creationDate": 0,
      "default": false,
      "description": "null",
      "language": "JAVASCRIPT",
      "lastModifiedBy": "null",
      "lastModifiedDate": 0,
      "name": "Admin_IsFederationEnforcedForTenant",
      "script": [
        "/*",
        " * Copyright 2023 ForgeRock AS. All Rights Reserved",
        " *",
        " * Use of this code requires a commercial software license with ForgeRock AS.",
        " * or with one of its affiliates. All use shall be exclusively subject",
        " * to such license between the licensee and ForgeRock AS.",
        " */",
        "",
        "var enforcement = 'none';",
        "outcome = enforcement == 'all' ? 'True' : 'False';",
        "",
      ],
    },
    "92edf2c7-0bab-412c-a0da-82ad4f04505b": {
      "_id": "92edf2c7-0bab-412c-a0da-82ad4f04505b",
      "context": "AUTHENTICATION_TREE_DECISION_NODE",
      "createdBy": "null",
      "creationDate": 0,
      "default": false,
      "description": "null",
      "language": "JAVASCRIPT",
      "lastModifiedBy": "null",
      "lastModifiedDate": 0,
      "name": "Collect Extra Fields",
      "script": [
        "/* Collect Extra Fields",
        " * ",
        " * Collect extra fields not part of the user profile.",
        " * ",
        " * This script does not need to be parametrized. It will work properly as is.",
        " * ",
        " * The Scripted Decision Node needs the following outcomes defined:",
        " * - true",
        " *",
        " * Author: volker.scheuber@forgerock.com",
        " */",
        "(function () {",
        "    outcome = 'true';",
        "    var fr = JavaImporter(",
        "        org.forgerock.openam.auth.node.api.Action,",
        "          javax.security.auth.callback.NameCallback",
        "    )",
        "    if (callbacks.isEmpty()) {",
        "        action = fr.Action.send(",
        "            new fr.NameCallback('modality'),",
        "            new fr.NameCallback('jwtToken')",
        "        ).build();",
        "    }",
        "    else {",
        "          var modality = callbacks.get(0).getName();",
        "          var jwtToken = callbacks.get(1).getName();",
        "          nodeState.putShared('modality', modality);",
        "          nodeState.putShared('jwtToken', jwtToken);",
        "        action = fr.Action.goTo(outcome).build();",
        "    }",
        "}());",
      ],
    },
    "9399ac8b-3a6e-423b-95a2-6e0fd07262b1": {
      "_id": "9399ac8b-3a6e-423b-95a2-6e0fd07262b1",
      "context": "AUTHENTICATION_TREE_DECISION_NODE",
      "createdBy": "null",
      "creationDate": 0,
      "default": false,
      "description": "APIProtection: Get Key And Secret",
      "language": "JAVASCRIPT",
      "lastModifiedBy": "null",
      "lastModifiedDate": 0,
      "name": "APIProtection: Get Key And Secret",
      "script": [
        "logger.warning("APIProtection: Get Key And Secret: start");",
        "",
        "/*",
        " * BEGIN SCRIPT CONFIGURATION",
        " */",
        "var KEY_HEADER_NAME = "x-api-key";",
        "var SECRET_HEADER_NAME = "x-api-secret";",
        "var USERNAME_HEADER_NAME = "X-OpenAM-Username";",
        "var PASSWORD_HEADER_NAME = "X-OpenAM-Password";",
        "/*",
        " * END SCRIPT CONFIGURATION",
        " */",
        "",
        "outcome = "false";",
        "",
        "var key = getHeader(KEY_HEADER_NAME) || readValue(KEY_HEADER_NAME) || null;",
        "var secret = getHeader(SECRET_HEADER_NAME) || readTransientValue(SECRET_HEADER_NAME) || null;",
        "",
        "var username = sharedState.get("username") || null;",
        "var password = transientState.get("password") || null;",
        "",
        "if (key && secret) {",
        "    logger.warning("APIProtection: Get Key And Secret: key=".concat(key));",
        "  ",
        "      storeValue(KEY_HEADER_NAME, key);",
        "      storeValue("username", username);",
        "      sharedState.put("username", key);",
        "      ",
        "      storeTransientValue(SECRET_HEADER_NAME, secret);",
        "      storeTransientValue("password", password);",
        "      transientState.put("password", secret);",
        "  ",
        "    outcome = "true";",
        "}",
        "",
        "logger.warning("APIProtection: Get Key And Secret: finish [outcome=".concat(outcome).concat("]"));",
        "",
        "/*",
        " * Returns the value of the requested header",
        " */",
        "function getHeader(headerName) {",
        "      if (requestHeaders.get(headerName) && requestHeaders.get(headerName).get(0)) {",
        "        return requestHeaders.get(headerName).get(0).toString();",
        "    }",
        "      return null;",
        "}",
        "",
        "/*",
        " * Store value for APIProtection script use",
        " */",
        "function storeValue(name, value) {",
        "      var storage = sharedState.get("APIProtection");",
        "    if (storage && value) {",
        "          if (storage.put) {",
        "            storage.put(name, value);",
        "        }",
        "          else {",
        "              storage[name] = value;",
        "        }",
        "    }",
        "    else if (value) {",
        "        sharedState.put("APIProtection", JSON.parse("{\\""+name+"\\":\\""+value+"\\"}"));",
        "    }",
        "}",
        "",
        "/*",
        " * Read value from storage for APIProtection script use",
        " */",
        "function readValue(name) {",
        "      var storage = sharedState.get("APIProtection");",
        "    if (storage) {",
        "          if (storage.get) {",
        "            return sharedState.get("APIProtection").get(name);",
        "        }",
        "          else {",
        "              return storage.name;",
        "        }",
        "    }",
        "      return null;",
        "}",
        "",
        "/*",
        " * Store transient value for APIProtection script use",
        " */",
        "function storeTransientValue(name, value) {",
        "    var transientStorage = transientState.get("APIProtection");",
        "    if (transientStorage && value) {",
        "          if (transientStorage.put) {",
        "            transientStorage.put(name, value);",
        "        }",
        "          else {",
        "              transientStorage[name] = value;",
        "        }",
        "    }",
        "    else if (value) {",
        "        transientState.put("APIProtection", JSON.parse("{\\""+name+"\\":\\""+value+"\\"}"));",
        "    }",
        "}",
        "",
        "/*",
        " * Read transient value from storage for APIProtection script use",
        " */",
        "function readTransientValue(name) {",
        "      var transientStorage = transientState.get("APIProtection");",
        "    if (transientStorage) {",
        "          if (transientStorage.get) {",
        "            return transientState.get("APIProtection").get(name);",
        "        }",
        "          else {",
        "              return transientStorage.name;",
        "        }",
        "    }",
        "      return null;",
        "}",
      ],
    },
    "9535446c-0ff6-4a76-8576-616599119d64": {
      "_id": "9535446c-0ff6-4a76-8576-616599119d64",
      "context": "AUTHENTICATION_TREE_DECISION_NODE",
      "createdBy": "null",
      "creationDate": 0,
      "default": false,
      "description": "Remove button from page.",
      "language": "JAVASCRIPT",
      "lastModifiedBy": "null",
      "lastModifiedDate": 0,
      "name": "Remove Button",
      "script": [
        "/* Remove Button",
        " *",
        " * Author: volker.scheuber@forgerock.com",
        " * ",
        " * Hide buttons on the journey page.",
        " * ",
        " * This script does not need to be parametrized. It will work properly as is.",
        " * ",
        " * The Scripted Decision Node needs the following outcomes defined:",
        " * - true",
        " */",
        "(function () {",
        "    var script = "Array.prototype.slice.call(document.getElementsByTagName('button')).forEach(function (e) {e.style.display = 'none'})"",
        "    var fr = JavaImporter(",
        "        org.forgerock.openam.auth.node.api.Action,",
        "        javax.security.auth.callback.TextOutputCallback,",
        "        com.sun.identity.authentication.callbacks.ScriptTextOutputCallback",
        "    )",
        "    var message = " "",
        "    if (callbacks.isEmpty()) {",
        "        action = fr.Action.send(",
        "            new fr.TextOutputCallback(",
        "                fr.TextOutputCallback.INFORMATION,",
        "                message",
        "            ),",
        "            new fr.ScriptTextOutputCallback(script)",
        "        ).build()",
        "    }",
        "}());",
      ],
    },
    "988c10fa-98da-4bf7-8ac9-a558d2fef1fd": {
      "_id": "988c10fa-98da-4bf7-8ac9-a558d2fef1fd",
      "context": "AUTHENTICATION_TREE_DECISION_NODE",
      "createdBy": "null",
      "creationDate": 0,
      "default": false,
      "description": "Protection from malicious IDPs. Only allow white-listed email domains (usernames are email addresses).",
      "language": "JAVASCRIPT",
      "lastModifiedBy": "null",
      "lastModifiedDate": 0,
      "name": "IDP Integrity Check",
      "script": [
        "/* IDP Integrity Check",
        " * ",
        " * Protection from malicious IDPs. Only allow white-listed email domains (usernames are email addresses).",
        " * ",
        " * This script does not require cofiguration. It will work properly as is.",
        " * ",
        " * The Scripted Decision Node needs the following outcomes defined:",
        " * - true",
        " * - false",
        " *",
        " * Author: volker.scheuber@forgerock.com",
        " */",
        "(function () {",
        "    outcome = "false";",
        "      var routedIDP = sharedState.get("routedIDPs").get(0);",
        "      var validDomains = [];",
        "      if (routedIDP) {",
        "          validDomains = routedIDP.get("idpDomains");",
        "    }",
        "      ",
        "      var username = sharedState.get("username");",
        "      var domain = username.substr(username.lastIndexOf("@")+1);",
        "      if (validDomains.indexOf(domain) > -1) {",
        "          outcome = "true";",
        "    }",
        "}());",
      ],
    },
    "98a87024-3d07-4c75-b1ea-43ff905e9def": {
      "_id": "98a87024-3d07-4c75-b1ea-43ff905e9def",
      "context": "AUTHENTICATION_TREE_DECISION_NODE",
      "createdBy": "null",
      "creationDate": 0,
      "default": false,
      "description": "Reset the IDM profile shared state so it can be patched to the user profile.",
      "language": "JAVASCRIPT",
      "lastModifiedBy": "null",
      "lastModifiedDate": 0,
      "name": "ResetOTPProfileAttribute",
      "script": [
        "/* ResetOTPProfileAttribute",
        " *",
        " * Author: volker.scheuber@forgerock.com",
        " * ",
        " * Reset the IDM profile shared state so it can be patched to the user profile.",
        " * ",
        " * This script does not need to be parametrized. It will work properly as is.",
        " * ",
        " * The Scripted Decision Node needs the following outcomes defined:",
        " * - true",
        " */",
        "if (sharedState.get("objectAttributes")) {",
        "    sharedState.get("objectAttributes").put("description", "")",
        "}",
        "else {",
        "    sharedState.put("objectAttributes", {description: ""});",
        "}",
        "outcome = "true";",
      ],
    },
    "9de3eb62-f131-4fac-a294-7bd170fd4acb": {
      "_id": "9de3eb62-f131-4fac-a294-7bd170fd4acb",
      "context": "POLICY_CONDITION",
      "createdBy": "null",
      "creationDate": 0,
      "default": true,
      "description": "Default global script for Scripted Policy Conditions",
      "language": "JAVASCRIPT",
      "lastModifiedBy": "null",
      "lastModifiedDate": 0,
      "name": "Scripted Policy Condition",
      "script": [
        "/*",
        " * Copyright 2015-2017 ForgeRock AS. All Rights Reserved",
        " *",
        " * Use of this code requires a commercial software license with ForgeRock AS.",
        " * or with one of its affiliates. All use shall be exclusively subject",
        " * to such license between the licensee and ForgeRock AS.",
        " */",
        "/**",
        " * This is a Policy Condition example script. It demonstrates how to access a user's information,",
        " * use that information in external HTTP calls and make a policy decision based on the outcome.",
        " */",
        "",
        "var userAddress, userIP, resourceHost;",
        "",
        "if (validateAndInitializeParameters()) {",
        "",
        "    var countryFromUserAddress = getCountryFromUserAddress();",
        "    logger.message("Country retrieved from user's address: " + countryFromUserAddress);",
        "    var countryFromUserIP = getCountryFromUserIP();",
        "    logger.message("Country retrieved from user's IP: " + countryFromUserIP);",
        "    var countryFromResourceURI = getCountryFromResourceURI();",
        "    logger.message("Country retrieved from resource URI: " + countryFromResourceURI);",
        "",
        "    if (countryFromUserAddress === countryFromUserIP && countryFromUserAddress === countryFromResourceURI) {",
        "        logger.message("Authorization Succeeded");",
        "        responseAttributes.put("countryOfOrigin", [countryFromUserAddress]);",
        "        authorized = true;",
        "    } else {",
        "        logger.message("Authorization Failed");",
        "        authorized = false;",
        "    }",
        "",
        "} else {",
        "    logger.message("Required parameters not found. Authorization Failed.");",
        "    authorized = false;",
        "}",
        "",
        "/**",
        " * Use the user's address to lookup their country of residence.",
        " *",
        " * @returns {*} The user's country of residence.",
        " */",
        "function getCountryFromUserAddress() {",
        "",
        "    var request = new org.forgerock.http.protocol.Request();",
        "    request.setUri("http://maps.googleapis.com/maps/api/geocode/json?address=" + encodeURIComponent(userAddress));",
        "      request.setMethod("GET");",
        "",
        "    var response = httpClient.send(request).get();",
        "    logResponse(response);",
        "",
        "    var geocode = JSON.parse(response.getEntity().getString());",
        "    var i;",
        "    for (i = 0; i < geocode.results.length; i++) {",
        "        var result = geocode.results[i];",
        "        var j;",
        "        for (j = 0; j < result.address_components.length; i++) {",
        "            if (result.address_components[i].types[0] == "country") {",
        "                return result.address_components[i].long_name;",
        "            }",
        "        }",
        "    }",
        "}",
        "",
        "/**",
        " * Use the user's IP to lookup the country from which the request originated.",
        " *",
        " * @returns {*} The country from which the request originated.",
        " */",
        "function getCountryFromUserIP() {",
        "    var request = new org.forgerock.http.protocol.Request();",
        "    request.setUri("http://ip-api.com/json/" + userIP);",
        "      request.setMethod("GET");",
        "",
        "    var response = httpClient.send(request).get();",
        "    logResponse(response);",
        "",
        "    var result = JSON.parse(response.getEntity().getString());",
        "    if (result) {",
        "        return result.country;",
        "    }",
        "}",
        "",
        "/**",
        " * Use the requested resource's host name to lookup the country where the resource is hosted.",
        " *",
        " * @returns {*} The country in which the resource is hosted.",
        " */",
        "function getCountryFromResourceURI() {",
        "    var request = new org.forgerock.http.protocol.Request();",
        "    request.setUri("http://ip-api.com/json/" + encodeURIComponent(resourceHost));",
        "      request.setMethod("GET");",
        "",
        "    var response = httpClient.send(request).get();",
        "    logResponse(response);",
        "",
        "    var result = JSON.parse(response.getEntity().getString());",
        "    if (result) {",
        "        return result.country;",
        "    }",
        "}",
        "",
        "/**",
        " * Retrieve and validate the variables required to make the external HTTP calls.",
        " *",
        " * @returns {boolean} Will be true if validation was successful.",
        " */",
        "function validateAndInitializeParameters() {",
        "    var userAddressSet = identity.getAttribute("postalAddress");",
        "    if (userAddressSet == null || userAddressSet.isEmpty()) {",
        "        logger.warning("No address specified for user: " + username);",
        "        return false;",
        "    }",
        "    userAddress = userAddressSet.iterator().next();",
        "    logger.message("User address: " + userAddress);",
        "",
        "    if (!environment) {",
        "        logger.warning("No environment parameters specified in the evaluation request.");",
        "        return false;",
        "    }",
        "",
        "    var ipSet = environment.get("IP");",
        "    if (ipSet == null || ipSet.isEmpty()) {",
        "        logger.warning("No IP specified in the evaluation request environment parameters.");",
        "        return false;",
        "    }",
        "    userIP = ipSet.iterator().next();",
        "    logger.message("User IP: " + userIP);",
        "",
        "    if (!resourceURI) {",
        "        logger.warning("No resource URI specified.");",
        "        return false;",
        "    }",
        "    resourceHost = resourceURI.match(/^(.*:\\/\\/)(www\\.)?([A-Za-z0-9\\-\\.]+)(:[0-9]+)?(.*)$/)[3];",
        "    logger.message("Resource host: " + resourceHost);",
        "",
        "    return true;",
        "}",
        "",
        "function logResponse(response) {",
        "    logger.message("User REST Call. Status: " + response.getStatus() + ", Body: " + response.getEntity().getString());",
        "}",
      ],
    },
    "9e9c6c4d-5d9d-4990-9f05-d8b2b25ad52b": {
      "_id": "9e9c6c4d-5d9d-4990-9f05-d8b2b25ad52b",
      "context": "AUTHENTICATION_TREE_DECISION_NODE",
      "createdBy": "null",
      "creationDate": 0,
      "default": false,
      "description": "Custom risk policy engine combining Autonomous Access signals with external signals.",
      "language": "JAVASCRIPT",
      "lastModifiedBy": "null",
      "lastModifiedDate": 0,
      "name": "AA Custom Policy Engine",
      "script": [
        "/* AA Custom Policy Engine",
        " *",
        " * Author: marcin.zimny@forgerock.com",
        " * Adaptations: volker.scheuber@forgerock.com",
        " * ",
        " * Custom policy engine combining the Autonomous Access risk engine output with external systems and custom policy output:",
        " * ",
        " * - use multiple risk scoring policies (currently it's part of risk config file and used across all evaluations)",
        " * - deliver custom logic of delivering outcome (we can sum the signals instead of returning the highest)",
        " * - use custom signals as part of the (single) risk node (for example anonymisation detection)",
        " * - exceptions/overrides (i.e. if we have to allow a flow with high risk for whatever reason) ",
        " * ",
        " * This script needs to be parametrized. It will NOT work properly as is!",
        " * ",
        " * The Scripted Decision Node needs the following outcomes defined:",
        " * - low",
        " * - medium",
        " * - high",
        " * - failed",
        " */",
        "(function () {",
        "  /* ",
        "   * MUST CONFIGURE THIS SECTION",
        "   * Custom signals parameters",
        "   */",
        "  ",
        "  // IPQualityScore API",
        "  var USER_AGENT = "ForgeRock"",
        "  var API_KEY = systemEnv.getProperty("esv.ipqs.api.key");",
        "  ",
        "  /*",
        "   * END MANDATORY CONFIGURATION",
        "   */",
        "  ",
        "  outcome = "failed"; //default outcome",
        "  /*",
        "    Risk Policy - Signal Scores",
        "  */",
        "  var aa_impossible_travel_score = 21;",
        "  var aa_credential_stuffing_score = 100;",
        "  var aa_automated_user_agent_score = 25;",
        "  var aa_brute_force_score = 100;",
        "  var aa_suspicious_ip_score = 35;",
        "  /*",
        "    Risk Policy - Custom Signals",
        "  */",
        "  var aa_use_anonymizer_detection = 1;",
        "  var custom_aa_tor_detected_score = 50;",
        "  var custom_aa_vpn_detected_score = 20;",
        "  var custom_aa_proxy_detected_score = 20;",
        "  /*",
        "    Risk Policy - Thresholds And Extra Features",
        "  */",
        "  var aa_medium_risk_threshold = 30;",
        "  var aa_high_risk_threshold = 75;",
        "  var aa_max_signal_count_high_risk_override = 99;",
        "  /*",
        "    Risk Policy - Method",
        "      0 - highest score out of all triggered signals",
        "      1 - summary of all triggered signals",
        "  */",
        "  var aa_risk_method=1;",
        "  /*",
        "    Risk Policy - UEBA method",
        "      0 - highest score out of 3 models",
        "      1 - average score out of 3 models",
        "  */",
        "  var aa_ueba_method=0;",
        "  /*",
        "    Risk Policy - Overrides",
        "",
        "    Whitelist - false positive control",
        "    Blacklist - preventative block",
        "    Example - ip_whitelist or ip_blacklist = ["62.21.63.30-62.21.63.30","82.21.168.1-82.21.168.255"];",
        "  */",
        "  var ip_whitelist = [];",
        "  var ip_blacklist = [];",
        "  ",
        "  /********************************************************",
        "    The engine *",
        "  */",
        "  //Define variables",
        "  var signal_count = 0;",
        "  var pos = 0;",
        "  var arr_scores = [];",
        "  var arr_scores_models = [];",
        "  var score = 0;",
        "  var predictionResultChopped;",
        "  var predictionResultChoppedVal;",
        "  //Define signal variables and assign defaults (negative)",
        "  var is_impossible_travel = 0;",
        "  var is_credential_stuffing = 0;",
        "  var is_automated_user_agent = 0;",
        "  var is_brute_force = 0;",
        "  var is_suspicious_ip = 0;",
        "  var model1_score = 0;",
        "  var model2_score = 0;",
        "  var model3_score = 0;",
        "  var isAnonymizedResult;",
        "  //Get risk data",
        "  var predictionResultRaw = sharedState.get("predictionResult");",
        "  var predictionResultString = predictionResultRaw.toString();",
        "",
        "  var result;",
        "",
        "  function inet_aton (ip)",
        "  {",
        "      return ip.split(".").reduce((int, v) => int * 256 + +v);",
        "  }",
        "",
        "",
        "  function isAnonymized()",
        "  {",
        "    var payload = sharedState.get("IPQualityScore")",
        "",
        "    if (payload)",
        "    {",
        "      var jsonResult = JSON.parse(payload);",
        "    }",
        "    else",
        "    {",
        "      var ipaddress = requestHeaders.get("X-FORWARDED-FOR").get(0).split(",")[0].trim();",
        "",
        "      var request = new org.forgerock.http.protocol.Request();",
        "      request.setMethod("GET");",
        "      request.setUri("https://ipqualityscore.com/api/json/ip/" + API_KEY + "/" + ipaddress + "?strictness=0&allow_public_access_points=false&fast=false&lighter_penalties=false&mobile=false");",
        "      request.getHeaders().add("Accept","application/json");",
        "      request.getHeaders().add("User-Agent", USER_AGENT);",
        "",
        "      var response = httpClient.send(request).get();",
        "      if (response.getStatus().getCode() === 200) {",
        "        var payload = response.getEntity().getString();",
        "        var jsonResult = JSON.parse(payload)",
        "          if (jsonResult.success === true) {",
        "          sharedState.put("Debug-IPQualityScore", payload);",
        "        }",
        "      }",
        "    }",
        "",
        "    if (jsonResult) {",
        "      if (jsonResult.tor === true) {",
        "        isAnonymizedResult = "tor";",
        "      } else if (jsonResult.vpn === true) {",
        "        isAnonymizedResult= "vpn";",
        "      } else if (jsonResult.proxy === true) {",
        "        isAnonymizedResult = "proxy";",
        "      } else {",
        "        isAnonymizedResult = "not_detected";",
        "      }",
        "    }",
        "  }",
        "",
        "",
        "  if(aa_use_anonymizer_detection==1)",
        "  {",
        "    isAnonymized();",
        "    sharedState.put("custom_aa_isAnonymized",isAnonymizedResult);",
        "    if(isAnonymizedResult=="vpn")",
        "    {",
        "      arr_scores.push(custom_aa_vpn_detected_score);",
        "    }",
        "    else if(isAnonymizedResult=="proxy")",
        "    {",
        "      arr_scores.push(custom_aa_proxy_detected_score);",
        "    }",
        "    else if(isAnonymizedResult=="tor")",
        "    {",
        "      arr_scores.push(custom_aa_tor_detected_score);",
        "    }",
        "    else",
        "    {",
        "      arr_scores.push(0);",
        "    }",
        "  }",
        "",
        "  if(predictionResultString.search("risk_score_data")>=0)",
        "  {",
        "    outcome = "low"; //default if there's data from risk API",
        "  }",
        "",
        "  //Check if we're assessing impossible travel and assign result",
        "  pos = predictionResultString.search("impossibleTravellerCheck=true");",
        "  if(pos>0)",
        "  {",
        "    pos = predictionResultString.search("is_impossible_travel=false");",
        "    if(pos<0)",
        "    {",
        "      signal_count++;",
        "      is_impossible_travel=1;",
        "      arr_scores.push(aa_impossible_travel_score);",
        "    }",
        "  }",
        "  //Check if we're assessing credential stuffing and assign result",
        "  pos = predictionResultString.search("credentialStuffing=true");",
        "  if(pos>0)",
        "  {",
        "    pos = predictionResultString.search("is_credential_stuffing=false");",
        "    if(pos<0)",
        "    {",
        "      signal_count++;",
        "      is_credential_stuffing=1;",
        "      arr_scores.push(aa_credential_stuffing_score);",
        "    }",
        "  }",
        "  //Check if we're assessing automated user angent (antibot) and assign result",
        "  pos = predictionResultString.search("automatedUserAgentsFilter=true");",
        "  if(pos>0)",
        "  {",
        "    pos = predictionResultString.search("is_automated_user_agent=false");",
        "    if(pos<0)",
        "    {",
        "      signal_count++;",
        "      is_automated_user_agent=1;",
        "      arr_scores.push(aa_automated_user_agent_score);",
        "    }",
        "  }",
        "  //Check if we're assessing brute-force and assign result",
        "  pos = predictionResultString.search("bruteForcePreventionCheck=true");",
        "  if(pos>0)",
        "  {",
        "    pos = predictionResultString.search("is_brute_force=false");",
        "    if(pos<0)",
        "    {",
        "      signal_count++;",
        "      is_brute_force=1;",
        "      arr_scores.push(aa_brute_force_score);",
        "    }",
        "  }",
        "  //Check if we're assessing suspicious IP and assign result",
        "  pos = predictionResultString.search("suspiciousIPCheck=true");",
        "  if(pos>0)",
        "  {",
        "    pos = predictionResultString.search("is_suspicious_ip=false");",
        "    if(pos<0)",
        "    {",
        "      signal_count++;",
        "      is_suspicious_ip=1;",
        "      arr_scores.push(aa_suspicious_ip_score);",
        "    }",
        "  }",
        "  //Check if we're assessing UEBA and assign result",
        "  pos = predictionResultString.search("anomalyDetection=true");",
        "  if(pos>0)",
        "  {",
        "    pos = predictionResultString.search("clustering_result=");",
        "    if(pos>0)",
        "    {",
        "        predictionResultChopped=predictionResultString.substring(pos);",
        "        predictionResultChopped=predictionResultChopped.substring(predictionResultChopped.search("risk_score="));",
        "        predictionResultChoppedVal=predictionResultChopped.substring(11,predictionResultChopped.search(","));",
        "        predictionResultChopped=predictionResultChopped.substring(11);",
        "        model1score=parseInt(predictionResultChoppedVal,10);",
        "",
        "        predictionResultChopped=predictionResultChopped.substring(predictionResultChopped.search("risk_score="));",
        "        predictionResultChoppedVal=predictionResultChopped.substring(11,predictionResultChopped.search(","));",
        "        predictionResultChopped=predictionResultChopped.substring(11);",
        "        model2score=parseInt(predictionResultChoppedVal,10);",
        "",
        "        predictionResultChopped=predictionResultChopped.substring(predictionResultChopped.search("risk_score="));",
        "        predictionResultChoppedVal=predictionResultChopped.substring(11,predictionResultChopped.search(","));",
        "        predictionResultChopped=predictionResultChopped.substring(11);",
        "        model3score=parseInt(predictionResultChoppedVal,10);",
        "",
        "        arr_scores_models.push(model1score,model2score,model3score);",
        "    }",
        "  }",
        "",
        "  //Deliver risk score",
        "  if(aa_ueba_method==0)",
        "  {",
        "    score = Math.max.apply(null, arr_scores_models);",
        "  }",
        "  else if(aa_ueba_method==1)",
        "  {",
        "    score = arr_scores_models.reduce((a, b) => a + b, 0)/arr_scores_models.length;",
        "  }",
        "  arr_scores.push(score);",
        "",
        "",
        "  if(aa_risk_method==0)",
        "  {",
        "    score = Math.max.apply(null, arr_scores);",
        "  }",
        "  else if (aa_risk_method===1)",
        "  {",
        "    score = arr_scores.reduce((a, b) => a + b, 0);",
        "  }",
        "  //Deliver risk outcome",
        "  if(score>aa_medium_risk_threshold)",
        "  {",
        "    outcome="medium";",
        "  }",
        "  if(score>aa_high_risk_threshold)",
        "  {",
        "    outcome="high";",
        "  }",
        "  if(signal_count>=aa_max_signal_count_high_risk_override && outcome=="medium")",
        "  {",
        "    outcome="high";",
        "    sharedState.put("debug-signal-count-override","true");",
        "  }",
        "",
        "  //process the blacklist and whitelist",
        "  var src_ipaddress;",
        "  var src_ipaddress_dec;",
        "  var list_first_ipaddress_dec;",
        "  var list_last_ipaddress_dec;",
        "  var list_entry;",
        "  var logmessage;",
        "  src_ipaddress = requestHeaders.get("X-FORWARDED-FOR").get(0).split(",")[0].trim();",
        "  src_ipaddress_dec = inet_aton(src_ipaddress);",
        "",
        "  if(ip_blacklist.length>0)",
        "  {",
        "    for (var i = 0; i < ip_blacklist.length; i++)",
        "    {",
        "      list_entry = ip_blacklist[i].split("-");",
        "      list_first_ipaddress_dec=inet_aton(list_entry[0]);",
        "      list_last_ipaddress_dec=inet_aton(list_entry[1]);",
        "",
        "      if(src_ipaddress_dec>=list_first_ipaddress_dec && src_ipaddress_dec<=list_last_ipaddress_dec)",
        "      {",
        "          sharedState.put("debug-blacklist","condition met for: " + src_ipaddress + ", " + outcome + "->high");",
        "           outcome="high";",
        "      }",
        "    }",
        "  }",
        "  if(ip_whitelist.length>0)",
        "  {",
        "    for (var i = 0; i < ip_whitelist.length; i++)",
        "    {",
        "      //list_entry = ip_whitelist[i].split("-");",
        "      list_entry = ip_whitelist[i].split("-");",
        "      list_first_ipaddress_dec=inet_aton(list_entry[0]);",
        "      list_last_ipaddress_dec=inet_aton(list_entry[1]);",
        "      if(src_ipaddress_dec>=list_first_ipaddress_dec && src_ipaddress_dec<=list_last_ipaddress_dec)",
        "      {",
        "        sharedState.put("debug-whitelist","condition met for: " + src_ipaddress + ", " + outcome + "->low");",
        "        outcome = "low";",
        "      }",
        "    }",
        "  }",
        "",
        "",
        "",
        "  sharedState.put('debug-score',score.toString());",
        "  sharedState.put('debug-signal-count',signal_count.toString());",
        "  sharedState.put('debug-outcome',outcome);",
        "}());",
      ],
    },
    "a064f7b7-29c5-480b-ac09-d3d122829278": {
      "_id": "a064f7b7-29c5-480b-ac09-d3d122829278",
      "context": "AUTHENTICATION_TREE_DECISION_NODE",
      "createdBy": "null",
      "creationDate": 0,
      "default": false,
      "description": "Sanitize objectAttributes",
      "language": "JAVASCRIPT",
      "lastModifiedBy": "null",
      "lastModifiedDate": 0,
      "name": "Sanitize objectAttributes",
      "script": [
        "/*",
        "{",
        "    "userName": "sholmes",",
        "    "givenName": "Sherlock",",
        "    "sn": "Holmes",",
        "    "mail": "info918@06152alerts.security.org",",
        "    "telephoneNumber": ,",
        "    "postalAddress": "221B Baker Street",",
        "    "city": "London",",
        "    "stateProvince": ,",
        "    "postalCode": "NW1",",
        "    "country": "United States",",
        "    "preferences": {",
        "        "marketing": false,",
        "        "updates": true",
        "    }",
        "}",
        "*/",
        "logger.error("Sanitize objectAttributes: start");",
        "outcome = "true";",
        "var attrs = sharedState.get("objectAttributes");",
        "if (attrs) {",
        "  var keys = [",
        "    "userName",",
        "    "givenName",",
        "    "sn",",
        "    "mail",",
        "    "telephoneNumber",",
        "    "postalAddress",",
        "    "city",",
        "    "stateProvince",",
        "    "postalCode",",
        "    "country",",
        "    "frIndexedString2"",
        "  ]",
        "  keys.forEach(function (key) {",
        "    if (attrs.get(key) && attrs.get(key).toString() == "") {",
        "      logger.error("Sanitize objectAttributes: remove ".concat(key));",
        "      attrs.remove(key);",
        "    }",
        "  })",
        "}",
        "if (transientState.get("objectAttributes") && transientState.get("objectAttributes").get("password").toString() !== "") {",
        "  logger.error("Sanitize objectAttributes: preserve password in shared state");",
        "  setSharedObjectAttribute("password", transientState.get("objectAttributes").get("password").toString());",
        "}",
        "logger.error("Sanitize objectAttributes: end");",
        "",
        "/*",
        " * Properly set attributes in shared state for use with the Create/Patch Object nodes.",
        " */",
        "function setSharedObjectAttribute(name, value) {",
        "    if (sharedState.get("objectAttributes")) {",
        "        sharedState.get("objectAttributes").put(name, value);",
        "    }",
        "    else {",
        "        sharedState.put("objectAttributes", JSON.parse("{\\""+name+"\\":"+value+"}"));",
        "    }",
        "}",
      ],
    },
    "a186232a-683d-48ce-8893-d6f92652ec82": {
      "_id": "a186232a-683d-48ce-8893-d6f92652ec82",
      "context": "AUTHENTICATION_TREE_DECISION_NODE",
      "createdBy": "null",
      "creationDate": 0,
      "default": false,
      "description": "Analyze an IP address using the IPQualityScore (IPQS) service.",
      "language": "JAVASCRIPT",
      "lastModifiedBy": "null",
      "lastModifiedDate": 0,
      "name": "IPQS IP Address",
      "script": [
        "/* IPQS IP Address",
        " *",
        " * Author: volker.scheuber@forgerock.com",
        " * ",
        " * Analyze an IP address using the IPQualityScore (IPQS) service.",
        " * ",
        " * This script does not need to be parametrized. It will work properly as is.",
        " * ",
        " * The Scripted Decision Node needs the following outcomes defined:",
        " * - high",
        " * - suspicious",
        " * - low",
        " * - unknown",
        " */",
        "(function () {",
        "    logger.warning("IPQS IP Address: start");",
        "",
        "    outcome = "unknown";",
        "",
        "    var ip = getClientIPAddress();",
        "    logger.warning("IPQS IP Address: ip=".concat(ip));",
        "",
        "    if (ip) {",
        "",
        "        // IPQS API Configuration",
        "        var IPQS_API_KEY = systemEnv.getProperty("esv.ipqs.api.key");",
        "        var IPQS_OPTIONS = "strictness=0&allow_public_access_points=true&user_agent=".concat(encodeURIComponent(getHeader("user-agent"))).concat("&user_language=").concat(encodeURIComponent(getHeader("accept-language")));",
        "        var IPQS_API_URI = "https://ipqualityscore.com/api/json/ip/".concat(IPQS_API_KEY).concat("/").concat(ip).concat("?").concat(IPQS_OPTIONS);",
        "",
        "        var request = new org.forgerock.http.protocol.Request();",
        "        request.setMethod('GET');",
        "        request.setUri(IPQS_API_URI);",
        "",
        "        var response = httpClient.send(request).get();",
        "        var result = JSON.parse(response.getEntity().getString());",
        "        logger.warning("IPQS IP Address: JSON result: ".concat(JSON.stringify(result)));",
        "",
        "        // preserve result in transient state",
        "        transientState.put("IPQS_IP_Address", JSON.stringify(result));",
        "",
        "        if (result.fraud_score >= 85) {",
        "            outcome = "high";",
        "        } ",
        "        else if (result.fraud_score >= 75) {",
        "            outcome = "suspicious";",
        "        }",
        "        else {",
        "            outcome = "low";",
        "        }",
        "",
        "    } else {",
        "        logger.error("IPQS IP Address: no client ip!");",
        "    }",
        "",
        "    logger.warning("OIPQS IP Address: End (outcome=".concat(outcome).concat(")"));",
        "",
        "    /*",
        "     * !!! ASSUMES ID CLOUD !!!",
        "     *",
        "     * Returns the client's IP address",
        "     */",
        "    function getClientIPAddress() {",
        "        return getHeader("x-forwarded-for").split(',')[0];",
        "    }",
        "",
        "    /*",
        "     * Returns the value of the requested header",
        "     */",
        "    function getHeader(headerName) {",
        "        return requestHeaders.get(headerName).get(0);",
        "    }",
        "",
        "        /* Sample IPQS REST API Response",
        "        {",
        "            "success": true,",
        "            "message": "Success",",
        "            "fraud_score": 100,",
        "            "country_code": "US",",
        "            "region": "Washington",",
        "            "city": "Seattle",",
        "            "ISP": "Emerald Onion",",
        "            "ASN": 396507,",
        "            "operating_system": "Mac 10.16",",
        "            "browser": "Firefox 85.0",",
        "            "organization": "Emerald Onion",",
        "            "latitude": 47.6,",
        "            "longitude": -122.33,",
        "            "is_crawler": false,",
        "            "timezone": "America\\/Chicago",",
        "            "mobile": false,",
        "            "host": "2620:18c:0:192::232",",
        "            "proxy": true,",
        "            "vpn": true,",
        "            "tor": true,",
        "            "active_vpn": false,",
        "            "active_tor": true,",
        "            "device_brand": "N\\/A",",
        "            "device_model": "N\\/A",",
        "            "recent_abuse": true,",
        "            "bot_status": false,",
        "            "connection_type": "Premium required.",",
        "            "abuse_velocity": "Premium required.",",
        "            "request_id": "4uTO78pDxyr3PP"",
        "        }",
        "    */",
        "}());",
      ],
    },
    "a2c639ac-7ccd-4906-bb31-f6e69632c93b": {
      "_id": "a2c639ac-7ccd-4906-bb31-f6e69632c93b",
      "context": "AUTHENTICATION_TREE_DECISION_NODE",
      "createdBy": "null",
      "creationDate": 0,
      "default": false,
      "description": "Hash State Variables",
      "language": "JAVASCRIPT",
      "lastModifiedBy": "null",
      "lastModifiedDate": 0,
      "name": "Hash State Variables",
      "script": [
        "/* Hash State Variables",
        " * ",
        " * The Scripted Decision Node needs the following outcomes defined:",
        " * - true",
        " * ",
        " * See copyright notices, conditions, and disclaimers at the bottom of this script.",
        " * ",
        " * volker.scheuber@forgerock.com",
        " */",
        "(function () {",
        "      logger.message("Hash State Variables: start");",
        "    outcome = "true";",
        "  ",
        "    /* Begin Configuration */",
        "      ",
        "      // hashing algorithm (MD2, MD5, SHA-1, SHA-224, SHA-256, SHA-384, SHA-512/224, SHA-512/256, SHA3-224, SHA3-256, SHA3-384, SHA3-512)",
        "      var algorithm = "SHA-224";",
        "  ",
        "      // salt",
        "      var salt = "supersecret";",
        "  ",
        "      // List of attributes (IDM namespace) you would like to hash.",
        "      var keys = [",
        "            "userName",",
        "            "telephoneNumber"",
        "          ]",
        "",
        "    /* End Configuration */",
        "      ",
        "    // Hash values in shared state",
        "    var values = sharedState.get("objectAttributes");",
        "    if (values) {",
        "        keys.forEach(function (key) {",
        "              var value = values.get(key);",
        "            if (value) {",
        "                logger.message("Hash State Variables: hash "+key+" in shared state");",
        "                  //var hash = generateHashB64(value, algorithm);",
        "                  var hash = generateSaltedHashB642(value, algorithm, salt);",
        "                setSharedObjectAttribute(key, hash);",
        "                  // Also hash username if userName is in keys",
        "                  if (key === "userName" && sharedState.get("username") && value === sharedState.get("username").toString()) {",
        "                    logger.message("Hash State Variables: hash username in shared state");",
        "                      sharedState.put("username", hash);",
        "                }",
        "            }",
        "        })",
        "    }",
        "      ",
        "      // Hash values in transient state",
        "    values = transientState.get("objectAttributes");",
        "    if (values) {",
        "        keys.forEach(function (key) {",
        "              var value = values.get(key);",
        "            if (value) {",
        "                logger.message("Hash State Variables: hash "+key+" in transient state");",
        "                  //var hash = generateHashB64(value, algorithm);",
        "                  var hash = generateSaltedHashB642(value, algorithm, salt);",
        "                setTransientObjectAttribute(key, hash);",
        "                  // Also hash username if userName is in keys",
        "                  if (key === "userName" && transientState.get("username") && value === transientState.get("username").toString()) {",
        "                    logger.message("Hash State Variables: hash username in transient state");",
        "                      transientState.put("username", hash);",
        "                }",
        "            }",
        "        })",
        "    }",
        "    logger.message("Hash State Variables: end");",
        "",
        "    /*",
        "     * Store attributes in shared state for use with the Create/Patch Object nodes.",
        "     */",
        "    function setSharedObjectAttribute(name, value) {",
        "        var storage = sharedState.get("objectAttributes");",
        "        if (storage && value) {",
        "            if (storage.put) {",
        "                  storage.put(name, value);",
        "            }",
        "            else {",
        "                storage[name] = value;",
        "            }",
        "        }",
        "        else if (value) {",
        "              var object = {",
        "                  name: value",
        "            };",
        "            sharedState.put("objectAttributes", object);",
        "        }",
        "    }",
        "",
        "    /*",
        "     * Store attributes in transient state for use with the Create/Patch Object nodes.",
        "     */",
        "    function setTransientObjectAttribute(name, value) {",
        "        var transientStorage = transientState.get("objectAttributes");",
        "        if (transientStorage && value) {",
        "            if (transientStorage.put) {",
        "                transientStorage.put(name, value);",
        "            }",
        "            else {",
        "                transientStorage[name] = value;",
        "            }",
        "        }",
        "        else if (value) {",
        "              var object = {",
        "                  name: value",
        "            };",
        "            transientState.put("objectAttributes", object);",
        "        }",
        "    }",
        "      ",
        "    /*",
        "     * Hash a string using any of these algorithms:",
        "     * - MD2",
        "     * - MD5",
        "     * - SHA-1",
        "     * - SHA-224",
        "     * - SHA-256",
        "     * - SHA-384",
        "     * - SHA-512/224",
        "     * - SHA-512/256",
        "     * - SHA3-224",
        "     * - SHA3-256",
        "     * - SHA3-384",
        "     * - SHA3-512",
        "     */",
        "      function generateHashHex(value, alg) {",
        "          var md = java.security.MessageDigest.getInstance(alg);",
        "          return toHexString(md.digest(new java.lang.String(value).getBytes()));",
        "    }",
        "  ",
        "      function generateHashB64(value, alg) {",
        "          var md = java.security.MessageDigest.getInstance(alg);",
        "          return org.forgerock.util.encode.Base64.encode(md.digest(new java.lang.String(value).getBytes()));",
        "    }",
        "  ",
        "    /*",
        "     * Salt and hash a string using any of these algorithms:",
        "     * - MD2",
        "     * - MD5",
        "     * - SHA-1",
        "     * - SHA-224",
        "     * - SHA-256",
        "     * - SHA-384",
        "     * - SHA-512/224",
        "     * - SHA-512/256",
        "     * - SHA3-224",
        "     * - SHA3-256",
        "     * - SHA3-384",
        "     * - SHA3-512",
        "     */",
        "      function generateSaltedHashHex(value, alg, salt) {",
        "          var md = java.security.MessageDigest.getInstance(alg);",
        "          md.update(new java.lang.String(salt).getBytes());",
        "          return toHexString(md.digest(new java.lang.String(value).getBytes()));",
        "    }",
        "  ",
        "      function generateSaltedHashB64(value, alg, salt) {",
        "          var md = java.security.MessageDigest.getInstance(alg);",
        "          md.update(new java.lang.String(salt).getBytes());",
        "          return org.forgerock.util.encode.Base64.encode(md.digest(new java.lang.String(value).getBytes()));",
        "    }",
        "  ",
        "      function generateSaltedHashB642(value, alg, salt) {",
        "          var md = java.security.MessageDigest.getInstance(alg);",
        "          md.update(new java.lang.String(salt).getBytes());",
        "          return org.forgerock.util.encode.Base64.encode(concatByteArrays(md.digest(new java.lang.String(value).getBytes()),new java.lang.String(salt).getBytes()));",
        "    }",
        "  ",
        "    function toHexString(byteArray) {",
        "        var s = '';",
        "        byteArray.forEach(function(byte) {",
        "              s += ('0' + (byte & 0xFF).toString(16)).slice(-2);",
        "        });",
        "        return s;",
        "    }",
        "  ",
        "    function concatByteArrays(byteArray1, byteArray2) {",
        "          var length = byteArray1.length + byteArray2.length;",
        "          var bytes = [];",
        "        byteArray1.forEach(function(byte) {",
        "              bytes.push(byte);",
        "        });",
        "        byteArray2.forEach(function(byte) {",
        "              bytes.push(byte);",
        "        });",
        "        return bytes;",
        "    }",
        "}());",
        "/*",
        " * Base64 encode / decode",
        " *  http://www.webtoolkit.info/",
        " * ",
        " * Example:",
        " * Base64.encode('some string')",
        " * Base64.decode('some encoded string')",
        " */",
      ],
    },
    "a316aedd-8b3b-4f68-b6e8-65859f1e87be": {
      "_id": "a316aedd-8b3b-4f68-b6e8-65859f1e87be",
      "context": "AUTHENTICATION_TREE_DECISION_NODE",
      "createdBy": "null",
      "creationDate": 0,
      "default": false,
      "description": "null",
      "language": "JAVASCRIPT",
      "lastModifiedBy": "null",
      "lastModifiedDate": 0,
      "name": "Admin_LocalRegistrationPrep",
      "script": [
        "/*",
        " * Copyright 2023 ForgeRock AS. All Rights Reserved",
        " *",
        " * Use of this code requires a commercial software license with ForgeRock AS.",
        " * or with one of its affiliates. All use shall be exclusively subject",
        " * to such license between the licensee and ForgeRock AS.",
        " */",
        "",
        "/*",
        "When an admin managed object is created at the time of invitation, the email address",
        "is used to populate the required first/last names.  This script clears those attributes",
        "(if set to the email address) so the UI doesn't display the email address in the first/last",
        "name input fields.",
        "",
        "It also populates other required attributes with fake values to ensure password policy",
        "validation works correctly when AM calls IDM.",
        "*/",
        "",
        "var objAttrs = sharedState.get('objectAttributes') || new java.util.HashMap();",
        "objAttrs.put('givenName', '');",
        "objAttrs.put('sn', '');",
        "objAttrs.put('groups', ['fake']);",
        "objAttrs.put('inviteDate', 'fake');",
        "sharedState.put('objectAttributes', objAttrs);",
        "",
        "outcome = 'True';",
        "",
      ],
    },
    "a31a1796-8410-46b8-82ca-eb0c6e901775": {
      "_id": "a31a1796-8410-46b8-82ca-eb0c6e901775",
      "context": "AUTHENTICATION_TREE_DECISION_NODE",
      "createdBy": "null",
      "creationDate": 0,
      "default": false,
      "description": "Collect all the configuration items required for the Set Custom Cookie node to function properly.",
      "language": "JAVASCRIPT",
      "lastModifiedBy": "null",
      "lastModifiedDate": 0,
      "name": "Collect Set Custom Cookie Node Config",
      "script": [
        "/* Collect Set Custom Cookie Node Config",
        " * ",
        " * Collect all the configuration items required for the Set Custom Cookie node to function properly.",
        " * ",
        " * This script does not need to be parametrized. It will work properly as is.",
        " * ",
        " * The Scripted Decision Node needs the following outcomes defined:",
        " * - true",
        " *",
        " * Author: volker.scheuber@forgerock.com",
        " */",
        "(function () {",
        "    outcome = "true";",
        "      var config = {",
        "        "name": "oreo",",
        "        "value": "original",",
        "        "domain": ".scheuber.io",",
        "        "path": "/",",
        "        "maxAge": 3600,",
        "        "useHttpOnlyCookie": true,",
        "        "useSecureCookie": true,",
        "        "sameSite": "NONE"",
        "    };",
        "  ",
        "      var script = "";",
        "    script += "Array.prototype.slice.call(";",
        "    script += "    document.getElementsByTagName('input')";",
        "    script += ").forEach(";",
        "    script += "    function (input,i) {";",
        "    script += "        console.log('input '+i);"",
        "    script += "        var config = JSON.parse('"+JSON.stringify(config)+"');";",
        "    script += "        var keys = Object.keys(config);";",
        "    script += "        if (input.type === 'text') {";",
        "    script += "            input.setAttribute('value', config[keys[i]]);";",
        "    script += "            input.dispatchEvent(new KeyboardEvent( 'input' , {'key':'Enter'} ));";",
        "    script += "        }";",
        "    script += "    }";",
        "    script += ");";",
        "    var fr = JavaImporter(",
        "        org.forgerock.openam.auth.node.api.Action,",
        "          javax.security.auth.callback.NameCallback,",
        "        com.sun.identity.authentication.callbacks.ScriptTextOutputCallback",
        "    )",
        "    if (callbacks.isEmpty()) {",
        "        action = fr.Action.send(",
        "            new fr.NameCallback("name"),",
        "            new fr.NameCallback("value"),",
        "            new fr.NameCallback("domain"),",
        "            new fr.NameCallback("path"),",
        "            new fr.NameCallback("maxAge"),",
        "            new fr.NameCallback("useHttpOnlyCookie"),",
        "            new fr.NameCallback("useSecureCookie"),",
        "            new fr.NameCallback("sameSite"),",
        "              new fr.ScriptTextOutputCallback(script)",
        "        ).build();",
        "    }",
        "    else {",
        "          config[callbacks.get(0).getPrompt()] = callbacks.get(0).getName();",
        "          config[callbacks.get(1).getPrompt()] = callbacks.get(1).getName();",
        "          config[callbacks.get(2).getPrompt()] = callbacks.get(2).getName();",
        "          config[callbacks.get(3).getPrompt()] = callbacks.get(3).getName();",
        "          config[callbacks.get(4).getPrompt()] = parseInt(callbacks.get(4).getName(), 10).toFixed();",
        "          config[callbacks.get(5).getPrompt()] = (""+callbacks.get(5).getName() === 'true');",
        "          config[callbacks.get(6).getPrompt()] = (""+callbacks.get(6).getName() === 'true');",
        "          config[callbacks.get(7).getPrompt()] = callbacks.get(7).getName();",
        "          nodeState.putShared("nodeConfig", config);",
        "        action = fr.Action.goTo(outcome).build();",
        "    }",
        "}());",
      ],
    },
    "a7a78773-445b-4eca-bb93-409e86bced81": {
      "_id": "a7a78773-445b-4eca-bb93-409e86bced81",
      "context": "SOCIAL_IDP_PROFILE_TRANSFORMATION",
      "createdBy": "null",
      "creationDate": 0,
      "default": true,
      "description": "Normalizes raw profile data from GitHub",
      "language": "GROOVY",
      "lastModifiedBy": "null",
      "lastModifiedDate": 0,
      "name": "GitHub Profile Normalization",
      "script": [
        "/*",
        " * Copyright 2022 ForgeRock AS. All Rights Reserved",
        " *",
        " * Use of this code requires a commercial software license with ForgeRock AS.",
        " * or with one of its affiliates. All use shall be exclusively subject",
        " * to such license between the licensee and ForgeRock AS.",
        " */",
        "",
        "import static org.forgerock.json.JsonValue.field",
        "import static org.forgerock.json.JsonValue.json",
        "import static org.forgerock.json.JsonValue.object",
        "",
        "return json(object(",
        "        field("id", rawProfile.id),",
        "        field("displayName", rawProfile.name),",
        "        field("username", rawProfile.login)))",
      ],
    },
    "a873fcd8-8f17-4675-9dd6-54ab1c11e2df": {
      "_id": "a873fcd8-8f17-4675-9dd6-54ab1c11e2df",
      "context": "AUTHENTICATION_TREE_DECISION_NODE",
      "createdBy": "null",
      "creationDate": 0,
      "default": false,
      "description": "Record that MFA has been performed for this journey and no longer needs to be performed. This allows journeys and inner journeys to check that flag before performing MFA multiple times.",
      "language": "JAVASCRIPT",
      "lastModifiedBy": "null",
      "lastModifiedDate": 0,
      "name": "Record MFA",
      "script": [
        "/* MFA Status",
        " *",
        " * Author: volker.scheuber@forgerock.com",
        " * ",
        " * Record that MFA has been performed for this journey and no longer needs ",
        " * to be performed. This allows journeys and inner journeys to check that ",
        " * flag before performing MFA multiple times.",
        " * ",
        " * This script does not need to be parametrized. It will work properly as is.",
        " * ",
        " * The Scripted Decision Node needs the following outcomes defined:",
        " * - true",
        " */",
        "outcome = "true";",
        "sharedState.put("mfaPerformed", "true");",
      ],
    },
    "a8f10e93-3f6c-4d6c-b6a3-a8453e3d6b3a": {
      "_id": "a8f10e93-3f6c-4d6c-b6a3-a8453e3d6b3a",
      "context": "AUTHENTICATION_TREE_DECISION_NODE",
      "createdBy": "null",
      "creationDate": 0,
      "default": false,
      "description": "Reset the attributes holding replay credentials for the IG replay use case.",
      "language": "JAVASCRIPT",
      "lastModifiedBy": "null",
      "lastModifiedDate": 0,
      "name": "ResetPasswordReplayCredentials",
      "script": [
        "/* ResetPasswordReplayCredentials",
        " *",
        " * Author: volker.scheuber@forgerock.com",
        " * ",
        " * Reset the attributes holding replay credentials for the IG replay use case.",
        " * ",
        " * This script needs to be parametrized for your env.",
        " * ",
        " * The Scripted Decision Node needs the following outcomes defined:",
        " * - true",
        " */",
        "(function () {",
        "  outcome = "true";",
        "  var REPLAY_USERNAME_IDM_ATTR = "frUnindexedString1";",
        "  var REPLAY_PASSWORD_IDM_ATTR = "frUnindexedString2";",
        "  ",
        "  sharedState.get("objectAttributes").put(REPLAY_USERNAME_IDM_ATTR, null);",
        "  sharedState.get("objectAttributes").put(REPLAY_PASSWORD_IDM_ATTR, null);",
        "}());",
      ],
    },
    "aa2dabff-f5c4-4dc5-b4ac-5909e88a3a8f": {
      "_id": "aa2dabff-f5c4-4dc5-b4ac-5909e88a3a8f",
      "context": "AUTHENTICATION_TREE_DECISION_NODE",
      "createdBy": "null",
      "creationDate": 0,
      "default": false,
      "description": "Verify known caller by first name",
      "language": "JAVASCRIPT",
      "lastModifiedBy": "null",
      "lastModifiedDate": 0,
      "name": "Twilio IVR: Verify Known Caller",
      "script": [
        "/* Twilio IVR: Verify Known Caller",
        " * ",
        " * The Scripted Decision Node needs the following outcomes defined:",
        " * - true",
        " * - false",
        " * ",
        " * Depending on the amount of data collected through callbacks and how many of the callParams",
        " * you activate below, you will need to change your authentication session from JWT to CTS or",
        " * Memory.",
        " */",
        "logger.warning("Twilio IVR: Verify Known Caller: start");",
        "outcome = "false";",
        "",
        "/* Begin Configuration",
        " */",
        "",
        "// For ID Cloud use "_id", for classic deployments use "username"",
        "var userid = sharedState.get("_id")",
        "",
        "// Retrieve the known caller's first name",
        "var firstName = idRepository.getAttribute(userid, "givenName").iterator().next().replaceAll("[^a-zA-Z ]", "").toLowerCase();",
        "",
        "// Build out the full message",
        "var message = "I see we have a profile associated with your phone number!";",
        "",
        "// Build out the verification prompt",
        "var prompt = "To verify I have the right account, please say your first name.";",
        "",
        "/* End Configuration",
        " */",
        "",
        "var fr = JavaImporter(",
        "      org.forgerock.openam.auth.node.api,",
        "      javax.security.auth.callback.TextOutputCallback,",
        "      javax.security.auth.callback.TextInputCallback",
        ");",
        "  ",
        "with (fr) {",
        "      if (callbacks.isEmpty()) {",
        "        var output = new TextOutputCallback(TextOutputCallback.INFORMATION, message);",
        "        var input = new TextInputCallback(prompt);",
        "        action = Action.send(output, input).build();",
        "      } ",
        "      else {",
        "          var answer = callbacks.get(1).getText().replaceAll("[^a-zA-Z ]", "").toLowerCase();",
        "        logger.warning("Twilio IVR: Verify Known Caller: callbacks received: answer=".concat(answer).concat(" [firstName=").concat(firstName).concat("]"));",
        "        if (answer == firstName) {",
        "              outcome = "true";",
        "        }",
        "          else if (answer.length == 0) {",
        "              outcome = "no input";",
        "        }",
        "        logger.warning("Twilio IVR: Verify Known Caller: finish [outcome=".concat(outcome).concat("]"));",
        "        action = Action.goTo(outcome).build();",
        "      }",
        "}",
      ],
    },
    "ab78dcb5-85cb-41a6-813e-e07a77761376": {
      "_id": "ab78dcb5-85cb-41a6-813e-e07a77761376",
      "context": "SOCIAL_IDP_PROFILE_TRANSFORMATION",
      "createdBy": "null",
      "creationDate": 0,
      "default": false,
      "description": "null",
      "language": "JAVASCRIPT",
      "lastModifiedBy": "null",
      "lastModifiedDate": 0,
      "name": "Admin_ProfileToManagedObject",
      "script": [
        "/*",
        " * Copyright 2023 ForgeRock AS. All Rights Reserved",
        " *",
        " * Use of this code requires a commercial software license with ForgeRock AS.",
        " * or with one of its affiliates. All use shall be exclusively subject",
        " * to such license between the licensee and ForgeRock AS.",
        " */",
        "",
        "function setIfValidString(managedData, managedKey, profileKey) {",
        "  var normalizedValue = normalizedProfile.get(profileKey);",
        "  if (normalizedValue && !normalizedValue.isNull() && normalizedValue.asString() != '') {",
        "    managedData.put(managedKey, normalizedValue);",
        "  }",
        "}",
        "",
        "(function () {",
        "  var frJava = JavaImporter(",
        "    org.forgerock.json.JsonValue,",
        "    java.util.HashMap",
        "  );",
        "",
        "  var OBJ_ATTR = 'objectAttributes';",
        "",
        "  // We should have objectAttributes during onboarding because the user is established earlier in",
        "  // the journey.  We won't have objectAttributes during login, though.",
        "  var objAttrs = sharedState.containsKey(OBJ_ATTR) ? sharedState.get(OBJ_ATTR) : new frJava.HashMap();",
        "",
        "  // If this flow requires email matching, confirm the IdP user email address matches the FR email address",
        "  if (sharedState.checkEmailClaim == true) {",
        "    var idpEmail = normalizedProfile.get('email').asString();",
        "    var frEmail = objAttrs.get('mail');",
        "    if (idpEmail != frEmail) {",
        "      throw 'Email claim from IDP does not match identity mail attribute';",
        "    }",
        "  }",
        "",
        "  // Update user with first/last name from IDP, if available",
        "  var managedUserData = frJava.JsonValue.json(frJava.JsonValue.object());",
        "  setIfValidString(managedUserData, 'givenName', 'givenName');",
        "  setIfValidString(managedUserData, 'sn', 'familyName');",
        "  ",
        "  // For login: Ensure the mail attribute is set in case we have to look up the admin using",
        "  // their email.  This will occur when an existing admin is federating for the first time.",
        "  if (!objAttrs.containsKey('mail')) {",
        "    managedUserData.put('mail', normalizedProfile.get('email').asString());",
        "  }",
        "",
        "  if (!normalizedProfile.get('groups').isNull()) {",
        "    managedUserData.put('groups', normalizedProfile.get('groups').asList());",
        "  }",
        "  ",
        "  // Merge anything we've put into \`managedUserData\` into sharedState.objectAttributes because",
        "  // \`managedUserData\` goes into transient state, which isn't used by our downstream nodes",
        "  var keys = managedUserData.keys().toArray();",
        "  for (var i = 0; i < keys.length; i++) {",
        "    objAttrs.put(keys[i], managedUserData.get(keys[i]));",
        "  }",
        "  sharedState.put(OBJ_ATTR, objAttrs);",
        "",
        "  return managedUserData;",
        "}());",
      ],
    },
    "ab917dad-6fdb-46c2-8c8c-42f094ebeea1": {
      "_id": "ab917dad-6fdb-46c2-8c8c-42f094ebeea1",
      "context": "AUTHENTICATION_TREE_DECISION_NODE",
      "createdBy": "null",
      "creationDate": 0,
      "default": false,
      "description": "Perform IDP re-lookup based on the Organization ID from the initial lookup. Set users' external IDP in shared state for further processing.",
      "language": "JAVASCRIPT",
      "lastModifiedBy": "null",
      "lastModifiedDate": 0,
      "name": "IDP Re-Lookup",
      "script": [
        "/* IDP Re-Lookup",
        " * ",
        " * Perform IDP re-lookup based on the Organization ID from the initial lookup. ",
        " * Set users' external IDP in shared state for further processing.",
        " * ",
        " * This script requires parametrization. Make sure you carefully review the configuration parameters.",
        " * ",
        " * The Scripted Decision Node needs the following outcomes defined:",
        " * - true",
        " * - false",
        " *",
        " * Author: volker.scheuber@forgerock.com",
        " */",
        "(function () {",
        "    logger.message("IDP Re-Lookup: start");",
        "      outcome = "false";",
        "      var referer = parseUrl(requestHeaders.get("referer").get(0));",
        "      var orgId = referer.searchParam.o;",
        "      sharedState.put("username", referer.searchParam.u);",
        "",
        "      /* Begin Configuration */",
        "  ",
        "    // long-lived token, expires: Friday, January 16, 2032 9:45:14 PM GMT-06:00",
        "    var IDM_API_TOKEN = "eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJlMWE1YzU5OC04MGUyLTRhZGMtYjM0NS0zMWQwMmUyOThjNGIiLCJjdHMiOiJPQVVUSDJfR1JBTlRfU0VUIiwiYXV0aF9sZXZlbCI6MCwiYXVkaXRUcmFja2luZ0lkIjoiNGYzMDkxYTktZjU0Ni00MDdiLTkzNjMtM2RiZGJiZjYzMDc0LTM1NzcwOSIsInN1Ym5hbWUiOiJlMWE1YzU5OC04MGUyLTRhZGMtYjM0NS0zMWQwMmUyOThjNGIiLCJpc3MiOiJodHRwczovL29wZW5hbS12b2xrZXItZGV2LmZvcmdlYmxvY2tzLmNvbTo0NDMvYW0vb2F1dGgyL2FscGhhIiwidG9rZW5OYW1lIjoiYWNjZXNzX3Rva2VuIiwidG9rZW5fdHlwZSI6IkJlYXJlciIsImF1dGhHcmFudElkIjoiLUIxQlRUM3FqNi04Zkd3a2d6bzgzNzlSRjVJLjA4NkNJdTFyOUNCNlROcEIwV3Q5OFEyNTJYcyIsImF1ZCI6IjY5ZDA1YzExLWU4ZmUtNGFlNS1hN2M5LTIyNTJhNGQ4NWRmNCIsIm5iZiI6MTY0MjU2MzkxNCwiZ3JhbnRfdHlwZSI6InBhc3N3b3JkIiwic2NvcGUiOlsiZnI6aWRtOioiXSwiYXV0aF90aW1lIjoxNjQyNTYzOTE0LCJyZWFsbSI6Ii9hbHBoYSIsImV4cCI6MTk1NzkyMzkxNCwiaWF0IjoxNjQyNTYzOTE0LCJleHBpcmVzX2luIjozMTUzNjAwMDAsImp0aSI6Ii1CMUJUVDNxajYtOGZHd2tnem84Mzc5UkY1SS5CSHFZNVp3c0lGNVpMbEtvcGNvUlVGVHNLUjAiLCJtYXlfYWN0Ijp7ImNsaWVudF9pZCI6WyI2OWQwNWMxMS1lOGZlLTRhZTUtYTdjOS0yMjUyYTRkODVkZjQiXX19.f2NmwHVtekH93jO7-jM6mkFRcuvEN3WzcKsH-RAPnlc";",
        "",
        "    // IDM API Configuration",
        "    var IDM_API_URI = referer.origin + "/openidm/managed/alpha_organization/"+ orgId + "?_fields=name,description,idpName,idpType,idpDomains,idpJourney,idpTheme,idpPersist";",
        "",
        "      /* End Configuration */",
        "",
        "    var request = new org.forgerock.http.protocol.Request();",
        "    request.setMethod('GET');",
        "    request.setUri(IDM_API_URI);",
        "    request.getHeaders().add("Content-Type", "application/json; charset=UTF-8");",
        "    request.getHeaders().add("Authorization", "Bearer " + IDM_API_TOKEN);",
        "",
        "    var response = httpClient.send(request).get();",
        "    var result = JSON.parse(response.getEntity().getString());",
        "    logger.message("IDP Re-Lookup: JSON result: " + JSON.stringify(result));",
        "    ",
        "      if (result) {",
        "          outcome = "true";",
        "        var routedIDPs = [result];",
        "        sharedState.put("routedIDPs", routedIDPs);",
        "        logger.message("IDP Re-Lookup: Found IDP");",
        "    }",
        "    logger.message("IDP Re-Lookup: end [outcome={}]", outcome);",
        "",
        "    /*",
        "     * Parse a URL into its components and make them easily accessible by name",
        "     *",
        "     * Use in a Scripte Decision Node Script as follows:",
        "     * var referer = parseUrl(requestHeaders.get("referer").get(0));",
        "     * var origin = referer.origin;",
        "     * ",
        "     * e.g.: https://openam-volker-dev.forgeblocks.com/am/XUI/?realm=/bravo&authIndexType=service&authIndexValue=InitiateOwnerClaim#/",
        "     * {",
        "     *     hash: '#/',",
        "     *     host: 'openam-volker-dev.forgeblocks.com',",
        "     *     hostname: 'openam-volker-dev.forgeblocks.com',",
        "     *     href: 'https://openam-volker-dev.forgeblocks.com/am/XUI/?realm=/bravo&authIndexType=service&authIndexValue=InitiateOwnerClaim#/',",
        "     *     origin: 'https://openam-volker-dev.forgeblocks.com',",
        "     *     pathname: '/am/XUI/',",
        "     *     port: '',",
        "     *     protocol: 'https',",
        "     *     search: '?realm=/bravo&authIndexType=service&authIndexValue=InitiateOwnerClaim',",
        "     *     username: '',",
        "     *     password: '',",
        "     *     searchParam: {",
        "     *         realm: '/bravo',",
        "     *         authIndexType: 'service',",
        "     *         authIndexValue: 'InitiateOwnerClaim'",
        "     *     }",
        "     * }",
        "     */",
        "    function parseUrl(href) {",
        "        var m = href.match(/^(([^:\\/?#]+):?(?:\\/\\/((?:([^\\/?#:]*):([^\\/?#:]*)@)?([^\\/?#:]*)(?::([^\\/?#:]*))?)))?([^?#]*)(\\?[^#]*)?(#.*)?$/),",
        "        r = {",
        "            hash: m[10] || "",                      // #/",
        "            host: m[3] || "",                       // openam-volker-dev.forgeblocks.com",
        "            hostname: m[6] || "",                   // openam-volker-dev.forgeblocks.com",
        "            href: m[0] || "",                       // https://openam-volker-dev.forgeblocks.com/am/XUI/?realm=/bravo&authIndexType=service&authIndexValue=InitiateOwnerClaim#/",
        "            origin: m[1] || "",                     // https://openam-volker-dev.forgeblocks.com",
        "            pathname: m[8] || (m[1] ? "/" : ""),    // /am/XUI/",
        "            port: m[7] || "",                       // ",
        "            protocol: m[2] || "",                   // https",
        "            search: m[9] || "",                     // ?realm=/bravo&authIndexType=service&authIndexValue=InitiateOwnerClaim",
        "            username: m[4] || "",                   // ",
        "            password: m[5] || "",                   // ",
        "            searchParam: {}                         // { realm: '/bravo',",
        "                                                    //   authIndexType: 'service',",
        "                                                    //   authIndexValue: 'InitiateOwnerClaim' }",
        "        };",
        "        if (r.protocol.length == 2) {",
        "            r.protocol = "file:///" + r.protocol.toUpperCase();",
        "            r.origin = r.protocol + "//" + r.host;",
        "        }",
        "        if (r.search.length > 2) {",
        "            var query = (r.search.indexOf('?') === 0) ? r.search.substr(1) : r.search;",
        "            var vars = query.split('&');",
        "            for (var i = 0; i < vars.length; i++) {",
        "            var pair = vars[i].split('=');",
        "            r.searchParam[decodeURIComponent(pair[0])] = decodeURIComponent(pair[1]);",
        "            }",
        "        }",
        "        r.href = r.origin + r.pathname + r.search + r.hash;",
        "        return r;",
        "    };",
        "}());",
      ],
    },
    "ac9fc25e-3ad9-4f80-a796-2d9093795439": {
      "_id": "ac9fc25e-3ad9-4f80-a796-2d9093795439",
      "context": "AUTHENTICATION_TREE_DECISION_NODE",
      "createdBy": "null",
      "creationDate": 0,
      "default": false,
      "description": "Check if MFA has already been performed for this journey. This allows journeys and inner journeys not to perform MFA multiple times.",
      "language": "JAVASCRIPT",
      "lastModifiedBy": "null",
      "lastModifiedDate": 0,
      "name": "MFA Status",
      "script": [
        "/* MFA Status",
        " *",
        " * Author: volker.scheuber@forgerock.com",
        " * ",
        " * Check if MFA has already been performed for this journey. ",
        " * This allows journeys and inner journeys not to perform MFA multiple times.",
        " * ",
        " * This script does not need to be parametrized. It will work properly as is.",
        " * ",
        " * The Scripted Decision Node needs the following outcomes defined:",
        " * - true",
        " * - false",
        " */",
        "outcome = "false";",
        "if (sharedState.get("mfaPerformed")=="true") {",
        "      outcome = "true";",
        "}",
      ],
    },
    "ae04e1a0-c662-43aa-9d80-21af78528b45": {
      "_id": "ae04e1a0-c662-43aa-9d80-21af78528b45",
      "context": "AUTHENTICATION_TREE_DECISION_NODE",
      "createdBy": "null",
      "creationDate": 0,
      "default": false,
      "description": "Parse Access Token from Azure AD pass through authentication using the Resource Owner Password Credential flow",
      "language": "JAVASCRIPT",
      "lastModifiedBy": "null",
      "lastModifiedDate": 0,
      "name": "AAD Passthru Parse Access Token",
      "script": [
        "/* AAD Passthru Parse Access Token",
        " *",
        " * Author: volker.scheuber@forgerock.com",
        " * ",
        " * Parse Access Token from Azure AD pass through authentication using the ",
        " * Resource Owner Password Credential flow",
        " * ",
        " * This script does not need to be parametrized. It will work properly as is. ",
        " * It requires the AAD Passthru ROPC script to run before and finish with the ",
        " * "Valid" outcome (only outcome that results in an access token).",
        " * ",
        " * The Scripted Decision Node needs the following outcomes defined:",
        " * - true",
        " * - false",
        " */",
        "logger.message("AAD Passthru Parse Access Token: start");",
        "",
        "/*",
        " * Base64 encode / decode",
        " *  http://www.webtoolkit.info/",
        " * ",
        " * Usage:",
        " * Base64.encode('some string')",
        " * Base64.decode('some encoded string')",
        " */",
        "var Base64={_keyStr:"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=",encode:function(input){var output="";var chr1,chr2,chr3,enc1,enc2,enc3,enc4;var i=0;input=Base64._utf8_encode(input);while(i<input.length){chr1=input.charCodeAt(i++);chr2=input.charCodeAt(i++);chr3=input.charCodeAt(i++);enc1=chr1>>2;enc2=(chr1&3)<<4|chr2>>4;enc3=(chr2&15)<<2|chr3>>6;enc4=chr3&63;if(isNaN(chr2)){enc3=enc4=64}else if(isNaN(chr3)){enc4=64}output=output+this._keyStr.charAt(enc1)+this._keyStr.charAt(enc2)+this._keyStr.charAt(enc3)+this._keyStr.charAt(enc4)}return output},decode:function(input){var output="";var chr1,chr2,chr3;var enc1,enc2,enc3,enc4;var i=0;input=input.replace(/[^A-Za-z0-9\\+\\/\\=]/g,"");while(i<input.length){enc1=this._keyStr.indexOf(input.charAt(i++));enc2=this._keyStr.indexOf(input.charAt(i++));enc3=this._keyStr.indexOf(input.charAt(i++));enc4=this._keyStr.indexOf(input.charAt(i++));chr1=enc1<<2|enc2>>4;chr2=(enc2&15)<<4|enc3>>2;chr3=(enc3&3)<<6|enc4;output=output+String.fromCharCode(chr1);if(enc3!=64){output=output+String.fromCharCode(chr2)}if(enc4!=64){output=output+String.fromCharCode(chr3)}}output=Base64._utf8_decode(output);return output},_utf8_encode:function(string){string=string.replace(/\\r\\n/g,"\\n");var utftext="";for(var n=0;n<string.length;n++){var c=string.charCodeAt(n);if(c<128){utftext+=String.fromCharCode(c)}else if(c>127&&c<2048){utftext+=String.fromCharCode(c>>6|192);utftext+=String.fromCharCode(c&63|128)}else{utftext+=String.fromCharCode(c>>12|224);utftext+=String.fromCharCode(c>>6&63|128);utftext+=String.fromCharCode(c&63|128)}}return utftext},_utf8_decode:function(utftext){var string="";var i=0;var c=c1=c2=0;while(i<utftext.length){c=utftext.charCodeAt(i);if(c<128){string+=String.fromCharCode(c);i++}else if(c>191&&c<224){c2=utftext.charCodeAt(i+1);string+=String.fromCharCode((c&31)<<6|c2&63);i+=2}else{c2=utftext.charCodeAt(i+1);c3=utftext.charCodeAt(i+2);string+=String.fromCharCode((c&15)<<12|(c2&63)<<6|c3&63);i+=3}}return string}};",
        "",
        "outcome = "false";",
        "if (transientState.get("aadAccessToken")) {",
        "      try {",
        "        var jsonToken = parseJwt(transientState.get("aadAccessToken").toString());",
        "        setSharedObjectAttribute("givenName", jsonToken.given_name);",
        "        setSharedObjectAttribute("sn", jsonToken.family_name);",
        "        setSharedObjectAttribute("mail", jsonToken.unique_name);",
        "        outcome = "true"",
        "    } catch (e) {",
        "        logger.message("AAD Passthru Parse Access Token: Exception: ".concat(e));",
        "    }",
        "} else {",
        "      outcome = "false";",
        "      logger.message("AAD Passthru Parse Access Token: No access token found in transient state! Use ROPC script before this script to populate transient state!'");",
        "}",
        "logger.message("AAD Passthru Parse Access Token: End (outcome=".concat(outcome).concat(")"));",
        "",
        "/*",
        " * Parse a non-encrypted JWT token and return its JSON body without header and signature",
        " */",
        "function parseJwt (token) {",
        "      return JSON.parse(Base64.decode("".concat(token).split('.')[1]).replace(/\\0/g, ''));",
        "}",
        "",
        "/*",
        " * Store attributes in shared state for use with the Create/Patch Object nodes.",
        " */",
        "function setSharedObjectAttribute(name, value) {",
        "       var storage = sharedState.get("objectAttributes");",
        "    if (storage && value) {",
        "          if (storage.put) {",
        "              storage.put(name, value);",
        "        }",
        "          else {",
        "              storage[name] = value;",
        "        }",
        "    }",
        "    else if (value) {",
        "        sharedState.put("objectAttributes", JSON.parse("{\\""+name+"\\":\\""+value+"\\"}"));",
        "    }",
        "}",
      ],
    },
    "aef262d0-7a42-4a34-9826-e7dbc2ea6eb9": {
      "_id": "aef262d0-7a42-4a34-9826-e7dbc2ea6eb9",
      "context": "AUTHENTICATION_TREE_DECISION_NODE",
      "createdBy": "null",
      "creationDate": 0,
      "default": false,
      "description": "Route users to their organization's IDP of type saml, oidc, local, or custom and apply the organization's theme, if specified",
      "language": "JAVASCRIPT",
      "lastModifiedBy": "null",
      "lastModifiedDate": 0,
      "name": "IDP Router",
      "script": [
        "/* IDP Router",
        " * ",
        " * Route users to their organization's IDP of type saml, oidc, local, ",
        " * or custom and apply the organization's theme, if specified.",
        " * ",
        " * This script does not need to be parametrized. It will work properly as is.",
        " * ",
        " * The Scripted Decision Node needs the following outcomes defined:",
        " * - saml",
        " * - oidc",
        " * - local",
        " * - custom",
        " *",
        " * Author: volker.scheuber@forgerock.com",
        " */",
        "(function () {",
        "      logger.message("IDP Router: Start");",
        "    outcome = "local";",
        "      var referer = parseUrl(requestHeaders.get("referer").get(0));",
        "      var routedIDP = sharedState.get("routedIDPs").get(0);",
        "      if (routedIDP) {",
        "        outcome = routedIDP.get("idpType");",
        "        logger.message("IDP Router: Routed IDP: " + routedIDP);",
        "          sharedState.put("selectedIdp", routedIDP.get("idpName"));",
        "        var nodeConfig = {};",
        "          // load samlConfig",
        "          if (routedIDP.get("samlConfig")) {",
        "              nodeConfig = JSON.parse(routedIDP.get("samlConfig"));",
        "        }",
        "          // route to a custom journey",
        "        if (routedIDP.get("idpJourney")) {",
        "            logger.message("IDP Router: Route to custom IDP {}, journey: {}", routedIDP.get("idpName"), routedIDP.get("idpJourney"));",
        "              nodeConfig.tree = routedIDP.get("idpJourney");",
        "              outcome = "custom";",
        "        }",
        "          sharedState.put("nodeConfig", nodeConfig);",
        "          // only send callback if the org/idp requires a custom theme",
        "        if (routedIDP.get("idpTheme") && callbacks.isEmpty()) {",
        "            var stage = "themeId="+routedIDP.get("idpTheme");",
        "            var fr = JavaImporter(",
        "                org.forgerock.openam.auth.node.api.Action,",
        "                org.forgerock.openam.authentication.callbacks.PollingWaitCallback",
        "            )",
        "              action = fr.Action.send(",
        "                  new fr.PollingWaitCallback("0", "Please wait ...")",
        "            ).withStage(stage).build();",
        "          }",
        "    }",
        "      logger.message("IDP Router: Done [outcome={}]", outcome);",
        "",
        "    /*",
        "     * Parse a URL into its components and make them easily accessible by name",
        "     *",
        "     * Use in a Scripte Decision Node Script as follows:",
        "     * var referer = parseUrl(requestHeaders.get("referer").get(0));",
        "     * var origin = referer.origin;",
        "     * ",
        "     * e.g.: https://openam-volker-dev.forgeblocks.com/am/XUI/?realm=/bravo&authIndexType=service&authIndexValue=InitiateOwnerClaim#/",
        "     * {",
        "     *     hash: '#/',",
        "     *     host: 'openam-volker-dev.forgeblocks.com',",
        "     *     hostname: 'openam-volker-dev.forgeblocks.com',",
        "     *     href: 'https://openam-volker-dev.forgeblocks.com/am/XUI/?realm=/bravo&authIndexType=service&authIndexValue=InitiateOwnerClaim#/',",
        "     *     origin: 'https://openam-volker-dev.forgeblocks.com',",
        "     *     pathname: '/am/XUI/',",
        "     *     port: '',",
        "     *     protocol: 'https',",
        "     *     search: '?realm=/bravo&authIndexType=service&authIndexValue=InitiateOwnerClaim',",
        "     *     username: '',",
        "     *     password: '',",
        "     *     searchParam: {",
        "     *         realm: '/bravo',",
        "     *         authIndexType: 'service',",
        "     *         authIndexValue: 'InitiateOwnerClaim'",
        "     *     }",
        "     * }",
        "     */",
        "    function parseUrl(href) {",
        "        var m = href.match(/^(([^:\\/?#]+):?(?:\\/\\/((?:([^\\/?#:]*):([^\\/?#:]*)@)?([^\\/?#:]*)(?::([^\\/?#:]*))?)))?([^?#]*)(\\?[^#]*)?(#.*)?$/),",
        "        r = {",
        "            hash: m[10] || "",                      // #/",
        "            host: m[3] || "",                       // openam-volker-dev.forgeblocks.com",
        "            hostname: m[6] || "",                   // openam-volker-dev.forgeblocks.com",
        "            href: m[0] || "",                       // https://openam-volker-dev.forgeblocks.com/am/XUI/?realm=/bravo&authIndexType=service&authIndexValue=InitiateOwnerClaim#/",
        "            origin: m[1] || "",                     // https://openam-volker-dev.forgeblocks.com",
        "            pathname: m[8] || (m[1] ? "/" : ""),    // /am/XUI/",
        "            port: m[7] || "",                       // ",
        "            protocol: m[2] || "",                   // https",
        "            search: m[9] || "",                     // ?realm=/bravo&authIndexType=service&authIndexValue=InitiateOwnerClaim",
        "            username: m[4] || "",                   // ",
        "            password: m[5] || "",                   // ",
        "            searchParam: {}                         // { realm: '/bravo',",
        "                                                    //   authIndexType: 'service',",
        "                                                    //   authIndexValue: 'InitiateOwnerClaim' }",
        "        };",
        "        if (r.protocol.length == 2) {",
        "            r.protocol = "file:///" + r.protocol.toUpperCase();",
        "            r.origin = r.protocol + "//" + r.host;",
        "        }",
        "        if (r.search.length > 2) {",
        "            var query = (r.search.indexOf('?') === 0) ? r.search.substr(1) : r.search;",
        "            var vars = query.split('&');",
        "            for (var i = 0; i < vars.length; i++) {",
        "            var pair = vars[i].split('=');",
        "            r.searchParam[decodeURIComponent(pair[0])] = decodeURIComponent(pair[1]);",
        "            }",
        "        }",
        "        r.href = r.origin + r.pathname + r.search + r.hash;",
        "        return r;",
        "    };",
        "}());",
      ],
    },
    "b1fd9b38-fc54-46c6-9199-3d0de0abfaee": {
      "_id": "b1fd9b38-fc54-46c6-9199-3d0de0abfaee",
      "context": "AUTHENTICATION_TREE_DECISION_NODE",
      "createdBy": "null",
      "creationDate": 0,
      "default": false,
      "description": "Display the value of an ESV",
      "language": "JAVASCRIPT",
      "lastModifiedBy": "null",
      "lastModifiedDate": 0,
      "name": "Display ESV",
      "script": [
        "/*",
        " * Begin configuration",
        " *",
        " * Modify the following variables to adapt to your needs",
        " */",
        "",
        "// Specify the message you want to display. You may use HTML for formatting. Avoid line breaks! Use <br> instead.",
        "var message = "<h5>".concat(systemEnv.getProperty("esv.admin.token")).concat("</h5>")",
        "",
        "// Choose the horizontal alignment of your message. Use left, center, right.",
        "var halign = "left";",
        "/*",
        " * End configuration",
        " */",
        "",
        "var output = true;",
        "var anchor = "anchor-".concat(generateNumericToken('xxx'));",
        "var script = "Array.prototype.slice.call(\\n".concat(",
        "  "document.getElementsByClassName('callback-component')).forEach(\\n").concat(",
        "  "function (e) {\\n").concat(",
        "  "  var message = e.firstElementChild;\\n").concat(",
        "  "  if (message.firstChild && message.firstChild.nodeName == '#text' && message.firstChild.nodeValue.trim() == '").concat(anchor).concat("') {\\n").concat(",
        "  "    message.align = \\"").concat(halign).concat("\\";\\n").concat(",
        "  "    message.innerHTML = '").concat(message).concat("';\\n").concat(",
        "  "  }\\n").concat(",
        "  "})")",
        "var fr = JavaImporter(",
        "    org.forgerock.openam.auth.node.api.Action,",
        "    javax.security.auth.callback.TextOutputCallback,",
        "    com.sun.identity.authentication.callbacks.ScriptTextOutputCallback",
        ")",
        "if (message.length && callbacks.isEmpty()) {",
        "    action = fr.Action.send(",
        "        new fr.TextOutputCallback(",
        "            fr.TextOutputCallback.INFORMATION,",
        "            anchor",
        "        ),",
        "        new fr.ScriptTextOutputCallback(script)",
        "    ).build()",
        "}",
        "else {",
        "  action = fr.Action.goTo("true").build();",
        "}",
        "",
        " /*",
        "  * Generate a token in the desired format. All 'x' characters will be replaced with a random number 0-9.",
        "  * ",
        "  * Example:",
        "  * 'xxxxx' produces '28535'",
        "  * 'xxx-xxx' produces '432-521'",
        "  */",
        "function generateNumericToken(format) {",
        "    return format.replace(/[x]/g, function(c) {",
        "        var r = Math.random()*10|0;",
        "        var v = r;",
        "        return v.toString(10);",
        "    });",
        "}",
      ],
    },
    "b3824c66-2dff-4613-9e54-4a7577fdb765": {
      "_id": "b3824c66-2dff-4613-9e54-4a7577fdb765",
      "context": "AUTHENTICATION_TREE_DECISION_NODE",
      "createdBy": "null",
      "creationDate": 0,
      "default": false,
      "description": "Places a timestamp in the frIndexedMultivalued1 attribute",
      "language": "JAVASCRIPT",
      "lastModifiedBy": "null",
      "lastModifiedDate": 0,
      "name": "TimeStamp_Login",
      "script": [
        "/*",
        "  - Data made available by nodes that have already executed are available in the sharedState variable.",
        "  - The script should set outcome to either "true" or "false".",
        " */",
        "",
        "",
        "//var timestamps = sharedState.get("objectAttributes").get("frIndexedMultivalued1");",
        "",
        "",
        "var lastLogin = new Date();",
        "/*",
        "var datetime = ""+ currentdate.getDate() + "/"",
        "                + (currentdate.getMonth()+1)  + "/" ",
        "                + currentdate.getFullYear() + " @ "  ",
        "                + currentdate.getHours() + ":"  ",
        "                + currentdate.getMinutes() + ":" ",
        "                + currentdate.getSeconds();",
        "*/",
        "",
        "var objectAttributes = sharedState.get("objectAttributes");",
        "",
        "",
        "sharedState.put("last Login",lastLogin.toString());",
        "",
        "",
        "",
        "",
        "",
        "objectAttributes.put("frUnindexedString1",lastLogin.toString());",
        "",
        "",
        "sharedState.put("objectAttributes",objectAttributes);",
        "",
        "",
        "outcome = "true";",
      ],
    },
    "b4067e18-2d4d-4257-a38e-0b3ba3001a58": {
      "_id": "b4067e18-2d4d-4257-a38e-0b3ba3001a58",
      "context": "AUTHENTICATION_TREE_DECISION_NODE",
      "createdBy": "null",
      "creationDate": 0,
      "default": false,
      "description": "null",
      "language": "JAVASCRIPT",
      "lastModifiedBy": "null",
      "lastModifiedDate": 0,
      "name": "Admin_SessionCheck",
      "script": [
        "if (sharedState.containsKey('username')) {",
        "  outcome = 'True';",
        "} else {",
        "  outcome = 'False';",
        "}",
      ],
    },
    "b63981d8-cb73-4e47-8749-e58654dcaa31": {
      "_id": "b63981d8-cb73-4e47-8749-e58654dcaa31",
      "context": "AUTHENTICATION_TREE_DECISION_NODE",
      "createdBy": "null",
      "creationDate": 0,
      "default": false,
      "description": "This script uses phonevalidator.com to determine the type of phone number stored in the user profile.",
      "language": "JAVASCRIPT",
      "lastModifiedBy": "null",
      "lastModifiedDate": 0,
      "name": "Phone Validator - Line Type",
      "script": [
        "/* Phone Validator - Line Type",
        " *",
        " * Author: volker.scheuber@forgerock.com",
        " * ",
        " * This script uses phonevalidator.com to determine the type of phone number stored in the user profile.",
        " * Get your own API Key at https://www.phonevalidator.com",
        " * ",
        " * This script needs to be parametrized. It will not work properly as is. ",
        " * It requires the Identify Existing User node before it is being called.",
        " * ",
        " * The Scripted Decision Node needs the following outcomes defined:",
        " * - CELL PHONE",
        " * - LANDLINE",
        " * - VOIP",
        " * - TOLL-FREE",
        " * - UNKNOWN",
        " * - failed",
        " */",
        "logger.warning("Phone Validator - Line Type: start");",
        "",
        "if (getSharedObjectAttribute("telephoneNumber") || (sharedState.get("_id") && idRepository.getAttribute(sharedState.get("_id"), "telephoneNumber").iterator().hasNext())) {",
        "",
        "    /* BEGIN SCRIPT CONFIGURATION",
        "     *",
        "     * REPLACE WITH YOUR OWN AZURE AD SETTINGS",
        "     *",
        "       * Phone Validator - Line Type API Configuration",
        "       * Get your own API Key at https://www.phonevalidator.com",
        "     */",
        "    var PV_API_KEY = "849d564a-594d-4bde-b691-afe5ddadd547";",
        "    /*",
        "     * END SCRIPT CONFIGURATION",
        "     */",
        "",
        "      var PV_API_TYPE = "basic";",
        "    var PV_API_PHONE = getSharedObjectAttribute("telephoneNumber") || idRepository.getAttribute(sharedState.get("_id"), "telephoneNumber").iterator().next();",
        "    var PV_API_URI = "https://www.phonevalidator.com/api/v2/phonesearch?apikey=".concat(PV_API_KEY).concat("&phone=").concat(PV_API_PHONE).concat("&type=").concat(PV_API_TYPE);    ",
        "",
        "    var request = new org.forgerock.http.protocol.Request();",
        "    request.setMethod('GET');",
        "    request.setUri(PV_API_URI);",
        "",
        "    var response = httpClient.send(request).get();",
        "    var result = JSON.parse(response.getEntity().getString());",
        "",
        "    if (result["StatusCode"]=="200") {",
        "        outcome = result["PhoneBasic"]["LineType"];",
        "    } else {",
        "        outcome = "failed";",
        "    }",
        "    logger.error("Phone Validator - Line Type: StatusCode = ".concat(result["StatusCode"]));",
        "    logger.error("Phone Validator - Line Type: StatusMessage = ".concat(result["StatusMessage"]));",
        "    logger.error("Phone Validator - Line Type: outcome = ".concat(outcome));",
        "} else {",
        "      outcome = "failed";",
        "      logger.error("Phone Validator - Line Type: No user or phone number found! Use 'Identify Existing User node before this script to populate the user's _id in shared state or put a valid cell phone number into sharedState.objectAttributes.telephoneNumber!'");",
        "    logger.error("Phone Validator - Line Type: outcome = ".concat(outcome));",
        "}",
        "",
        "/*",
        " * Read attributes in shared state for use with the Create/Patch Object nodes.",
        " */",
        "function getSharedObjectAttribute(name) {",
        "    var storage = sharedState.get("objectAttributes");",
        "    if (storage) {",
        "          if (storage.get) {",
        "            return sharedState.get("objectAttributes").get(name);",
        "        }",
        "          else {",
        "            return storage.name;",
        "        }",
        "    }",
        "    return null;",
        "}",
      ],
    },
    "b6fce769-cf21-4963-a8dc-7c5370a4d15b": {
      "_id": "b6fce769-cf21-4963-a8dc-7c5370a4d15b",
      "context": "AUTHENTICATION_TREE_DECISION_NODE",
      "createdBy": "null",
      "creationDate": 0,
      "default": false,
      "description": "null",
      "language": "JAVASCRIPT",
      "lastModifiedBy": "null",
      "lastModifiedDate": 0,
      "name": "shared State Printer",
      "script": [
        "var fr = JavaImporter(",
        "  org.forgerock.openam.auth.node.api,",
        "  javax.security.auth.callback.TextOutputCallback",
        ");",
        "outcome = "true";",
        "with (fr) {",
        "  if (callbacks.isEmpty()) {",
        "    var callback = new TextOutputCallback(TextOutputCallback.INFORMATION, "sharedState: ".concat(sharedState.toString()));",
        "    action = Action.send(callback).build();",
        "  } else {",
        "    action = Action.goTo("true").build();",
        "  }",
        "}",
      ],
    },
    "b703581a-e112-42b9-bc24-6db8bced5a13": {
      "_id": "b703581a-e112-42b9-bc24-6db8bced5a13",
      "context": "AUTHENTICATION_TREE_DECISION_NODE",
      "createdBy": "null",
      "creationDate": 0,
      "default": false,
      "description": "Display sharedState and transientState.",
      "language": "JAVASCRIPT",
      "lastModifiedBy": "null",
      "lastModifiedDate": 0,
      "name": "Display States",
      "script": [
        "/* Display States",
        " * ",
        " * Display sharedState and transientState.",
        " * ",
        " * This script does not need to be parametrized. It will work properly as is.",
        " * ",
        " * The Scripted Decision Node needs the following outcomes defined:",
        " * - true",
        " *",
        " * Author: volker.scheuber@forgerock.com",
        " */",
        "(function () {",
        "    outcome = "true";",
        "",
        "    var anchor = "anchor-".concat(generateNumericToken('xxx'));",
        "    var halign = "left";",
        "    var message = "<h4>Current State Values</h4>".concat(",
        "        "<p><b>Shared State</b>:<br/>").concat(",
        "        sharedState.toString()).concat("</p>").concat(",
        "        "<p><b>Transient State</b>:<br/>").concat(",
        "        transientState.toString()).concat("</p>").concat(",
        "        "<p><b>Request Headers</b>:<br/>").concat(",
        "        requestHeaders.toString()).concat("</p>")",
        "    var script = "Array.prototype.slice.call(\\n".concat(",
        "      "document.getElementsByClassName('callback-component')).forEach(\\n").concat(",
        "      "function (e) {\\n").concat(",
        "      "  var message = e.firstElementChild;\\n").concat(",
        "      "  if (message.firstChild && message.firstChild.nodeName == '#text' && message.firstChild.nodeValue.trim() == '").concat(anchor).concat("') {\\n").concat(",
        "      "    message.className = \\"\\";\\n").concat(",
        "      "    message.style = \\"text-align: left; inline-size: 430px; overflow-wrap: break-word;\\";\\n").concat(",
        "      "    message.align = \\"").concat(halign).concat("\\";\\n").concat(",
        "      "    message.innerHTML = '").concat(message).concat("';\\n").concat(",
        "      "  }\\n").concat(",
        "      "})")",
        "    var fr = JavaImporter(",
        "        org.forgerock.openam.auth.node.api.Action,",
        "        javax.security.auth.callback.TextOutputCallback,",
        "        com.sun.identity.authentication.callbacks.ScriptTextOutputCallback",
        "    )",
        "    if (message.length && callbacks.isEmpty()) {",
        "        action = fr.Action.send(",
        "            new fr.TextOutputCallback(",
        "                fr.TextOutputCallback.INFORMATION,",
        "                anchor",
        "            ),",
        "            new fr.ScriptTextOutputCallback(script)",
        "        ).build()",
        "    }",
        "    else {",
        "      action = fr.Action.goTo(outcome).build();",
        "    }",
        "",
        "     /*",
        "      * Generate a token in the desired format. All 'x' characters will be replaced with a random number 0-9.",
        "      * ",
        "      * Example:",
        "      * 'xxxxx' produces '28535'",
        "      * 'xxx-xxx' produces '432-521'",
        "      */",
        "    function generateNumericToken(format) {",
        "        return format.replace(/[x]/g, function(c) {",
        "            var r = Math.random()*10|0;",
        "            var v = r;",
        "            return v.toString(10);",
        "        });",
        "    }",
        "}());",
      ],
    },
    "b7ce17a1-e41d-42b0-bedc-f88a4d5e1c3a": {
      "_id": "b7ce17a1-e41d-42b0-bedc-f88a4d5e1c3a",
      "context": "AUTHENTICATION_TREE_DECISION_NODE",
      "createdBy": "null",
      "creationDate": 0,
      "default": false,
      "description": "Prepares onboarding check if not amadmin",
      "language": "JAVASCRIPT",
      "lastModifiedBy": "null",
      "lastModifiedDate": 0,
      "name": "Admin_AmadminCheck",
      "script": [
        "/*",
        " * Copyright 2023 ForgeRock AS. All Rights Reserved",
        " *",
        " * Use of this code requires a commercial software license with ForgeRock AS.",
        " * or with one of its affiliates. All use shall be exclusively subject",
        " * to such license between the licensee and ForgeRock AS.",
        " */",
        "",
        "var fr = new JavaImporter(",
        "  java.util.HashMap",
        ");",
        "",
        "with (fr) {",
        "  try {",
        "    ",
        "    if (sharedState.get('username').toLowerCase() == 'amadmin') {",
        "      outcome = 'True';",
        "    } else {",
        "      outcome = 'False';",
        "    }",
        "    ",
        "  } catch (e) {",
        "",
        "    logger.error('Failed to determine if user is amadmin: {}', e);",
        "    outcome = 'Error';",
        "",
        "  }",
        "}",
      ],
    },
    "b88ce1fe-2480-4fd5-8062-2bd1f4659e2e": {
      "_id": "b88ce1fe-2480-4fd5-8062-2bd1f4659e2e",
      "context": "AUTHENTICATION_TREE_DECISION_NODE",
      "createdBy": "null",
      "creationDate": 0,
      "default": false,
      "description": "null",
      "language": "JAVASCRIPT",
      "lastModifiedBy": "null",
      "lastModifiedDate": 0,
      "name": "Admin_LoadObjectByID",
      "script": [
        "/*",
        " * Copyright 2023 ForgeRock AS. All Rights Reserved",
        " *",
        " * Use of this code requires a commercial software license with ForgeRock AS.",
        " * or with one of its affiliates. All use shall be exclusively subject",
        " * to such license between the licensee and ForgeRock AS.",
        " */",
        "",
        "/*",
        " * This is a utility script to simplify access to admin identity properties. It",
        " * requires that \`sharedState._id\` be populated, which can be loaded using an",
        " * Identify Existing User node.",
        " */",
        "",
        "function val(attrs, name) {",
        "  if (attrs.containsKey(name)) {",
        "    return attrs.get(name).iterator().next();",
        "  }",
        "  return '';",
        "}",
        "",
        "(function() {",
        "  var fr = new JavaImporter(",
        "    org.forgerock.openam.auth.nodes,",
        "    org.forgerock.guice.core",
        "  );",
        "",
        "  with (fr) {",
        "    try {",
        "",
        "      outcome = 'False';",
        "",
        "      if (!sharedState.containsKey('_id')) {",
        "        throw 'Required sharedState property _id is missing';",
        "      }      ",
        "      ",
        "      var realm = sharedState.get('realm');",
        "      var uuid = sharedState.get('_id');",
        "      ",
        "      var identityProvider = InjectorHolder.getInstance(IdentityProvider);",
        "      var identity = identityProvider.getIdentity(uuid, realm);",
        "      var attrs = identity.getAttributes();",
        "      ",
        "      sharedState.put('adminObject', {",
        "        givenName: val(attrs, 'givenName'),        ",
        "        sn: val(attrs, 'sn'),",
        "        mail: val(attrs, 'mail'),",
        "        inviteDate: val(attrs, 'fr-idm-inviteDate'),",
        "        onboardDate: val(attrs, 'fr-idm-onboardDate')        ",
        "      });",
        "",
        "      logger.message('Loaded admin object for id: {}', uuid);",
        "",
        "      outcome = 'True';",
        "",
        "    } catch (e) {",
        "      logger.error('Failed to load admin object: {}', e);",
        "    }",
        "  }",
        "}());",
      ],
    },
    "bae1d54a-e97d-4997-aa5d-c027f21af82c": {
      "_id": "bae1d54a-e97d-4997-aa5d-c027f21af82c",
      "context": "SOCIAL_IDP_PROFILE_TRANSFORMATION",
      "createdBy": "null",
      "creationDate": 0,
      "default": true,
      "description": "Normalizes raw profile data from Facebook",
      "language": "GROOVY",
      "lastModifiedBy": "null",
      "lastModifiedDate": 0,
      "name": "Facebook Profile Normalization",
      "script": [
        "/*",
        " * Copyright 2020 ForgeRock AS. All Rights Reserved",
        " *",
        " * Use of this code requires a commercial software license with ForgeRock AS.",
        " * or with one of its affiliates. All use shall be exclusively subject",
        " * to such license between the licensee and ForgeRock AS.",
        " */",
        "",
        "import static org.forgerock.json.JsonValue.field",
        "import static org.forgerock.json.JsonValue.json",
        "import static org.forgerock.json.JsonValue.object",
        "",
        "return json(object(",
        "        field("id", rawProfile.id),",
        "        field("displayName", rawProfile.name),",
        "        field("givenName", rawProfile.first_name),",
        "        field("familyName", rawProfile.last_name),",
        "        field("photoUrl", rawProfile.picture.data.url),",
        "        field("email", rawProfile.email),",
        "        field("username", rawProfile.email)))",
      ],
    },
    "bdaf9f64-0fd6-4d2d-b305-bf295f09f797": {
      "_id": "bdaf9f64-0fd6-4d2d-b305-bf295f09f797",
      "context": "AUTHENTICATION_TREE_DECISION_NODE",
      "createdBy": "null",
      "creationDate": 0,
      "default": false,
      "description": "Decide if a user should never or always be prompted for MFA based on membership in the 'MFA Never' or 'MFA Always' groups. Membership in neither results in a neutral decision.",
      "language": "JAVASCRIPT",
      "lastModifiedBy": "null",
      "lastModifiedDate": 0,
      "name": "MFA Splitter",
      "script": [
        "/* MFA Splitter",
        " * ",
        " * Decide if a user should never or always be prompted for MFA based on",
        " * membership in the 'MFA Never' or 'MFA Always' groups. Membership in ",
        " * neither results in a neutral decision.",
        " * ",
        " * This script needs to be parametrized!",
        " * ",
        " * The Scripted Decision Node needs the following outcomes defined:",
        " * - never",
        " * - neutral",
        " * - always",
        " * - error",
        " *",
        " * Author: volker.scheuber@forgerock.com",
        " */",
        "(function () {",
        "  try {",
        "    outcome = 'error';",
        "    logger.message('MFA Splitter: start');",
        "    ",
        "    /**********************************************************************/",
        "    /********************* BEGIN SCRIPT CONFIGURATION *********************/",
        "    /**********************************************************************/",
        "    /* ",
        "     * Specify the name of the group whose members should always be prompted for MFA",
        "     */",
        "    var groupNameAlways = 'MFA Always';",
        "    /* ",
        "     * Specify the name of the group whose members should never be prompted for MFA",
        "     */",
        "    var groupNameNever = 'MFA Never';",
        "",
        "    /**********************************************************************/",
        "    /********************** END SCRIPT CONFIGURATION **********************/",
        "    /**********************************************************************/",
        "",
        "    var groupAttrName = 'isMemberOf';",
        "    var userid = nodeState.get('_id').asString();",
        "    var groups = [];",
        "    var groupIterator = idRepository.getAttribute(userid, groupAttrName).iterator();",
        "    while (groupIterator.hasNext()) {",
        "      var group = groupIterator.next().toString()+'';",
        "      groups.push(group.split(',')[0].split('=')[1]);",
        "    }",
        "    if (groups.includes(groupNameAlways)) {",
        "      outcome = 'always';",
        "    } else if (groups.includes(groupNameNever)) {",
        "      outcome = 'never';",
        "    } else {",
        "      outcome = 'neutral';",
        "    }",
        "  } catch (error) {",
        "    outcome = 'error';",
        "    nodeState.putShared('error', error.message);",
        "    logger.error('MFA Splitter: error: {}', error);",
        "  } finally {",
        "    logger.message('MFA Splitter: end [outcome={}]', outcome);",
        "  }",
        "}());",
      ],
    },
    "be6f1f2c-30ee-41fb-9e1e-8da72267fad3": {
      "_id": "be6f1f2c-30ee-41fb-9e1e-8da72267fad3",
      "context": "AUTHENTICATION_TREE_DECISION_NODE",
      "createdBy": "null",
      "creationDate": 0,
      "default": false,
      "description": "Greet verified caller",
      "language": "JAVASCRIPT",
      "lastModifiedBy": "null",
      "lastModifiedDate": 0,
      "name": "Twilio IVR: Greet Verified Caller",
      "script": [
        "/* Twilio IVR: Greet Verified Caller",
        " * ",
        " * The Scripted Decision Node needs the following outcomes defined:",
        " * - true",
        " * ",
        " * Depending on the amount of data collected through callbacks and how many of the callParams",
        " * you activate below, you will need to change your authentication session from JWT to CTS or",
        " * Memory.",
        " */",
        "outcome = "true";",
        "",
        "/* Begin Configuration",
        " */",
        "",
        "// For ID Cloud use "_id", for classic deployments use "username"",
        "var userid = sharedState.get("_id")",
        "",
        "// Configure how you would like to address the verified caller. The default is the full name.",
        "var name = [idRepository.getAttribute(userid, "givenName").iterator().next(), idRepository.getAttribute(userid, "sn").iterator().next()].join(" ");",
        "",
        "// Build out the full message",
        "var message = ["Hello", name, "! How can I help you today?"].join(" ");",
        "",
        "/* End Configuration",
        " */",
        "",
        "var fr = JavaImporter(",
        "      org.forgerock.openam.auth.node.api,",
        "      javax.security.auth.callback.TextOutputCallback",
        ");",
        "  ",
        "with (fr) {",
        "      if (callbacks.isEmpty()) {",
        "        var output = new TextOutputCallback(TextOutputCallback.INFORMATION, message);",
        "        action = Action.send(output).build();",
        "      } ",
        "      else {",
        "        action = Action.goTo(outcome).build();",
        "      }",
        "}",
      ],
    },
    "c234ba0b-58a1-4cfd-9567-09edde980745": {
      "_id": "c234ba0b-58a1-4cfd-9567-09edde980745",
      "context": "OAUTH2_ACCESS_TOKEN_MODIFICATION",
      "createdBy": "null",
      "creationDate": 1433147666269,
      "default": true,
      "description": "Internal token modification script",
      "language": "JAVASCRIPT",
      "lastModifiedBy": "null",
      "lastModifiedDate": 0,
      "name": "ForgeRock Internal: OAuth2 Access Token Modification Script",
      "script": [
        "/*",
        " * Copyright 2023 ForgeRock AS. All Rights Reserved",
        " *",
        " * Use of this code requires a commercial software license with ForgeRock AS.",
        " * or with one of its affiliates. All use shall be exclusively subject",
        " * to such license between the licensee and ForgeRock AS.",
        " */",
        "// Script is intentionally empty",
        "",
      ],
    },
    "c253a7ac-ebc9-4268-9e62-89f38f98e4ab": {
      "_id": "c253a7ac-ebc9-4268-9e62-89f38f98e4ab",
      "context": "AUTHENTICATION_TREE_DECISION_NODE",
      "createdBy": "null",
      "creationDate": 0,
      "default": false,
      "description": "null",
      "language": "JAVASCRIPT",
      "lastModifiedBy": "null",
      "lastModifiedDate": 0,
      "name": "CopyIDToObjectAttributes",
      "script": [
        "/*",
        "  - Data made available by nodes that have already executed are available in the sharedState variable.",
        "  - The script should set outcome to either "true" or "false".",
        " */",
        "",
        "sharedState.get("objectAttributes").put("_id", sharedState.get("_id"));",
        "",
        "outcome = "true";",
      ],
    },
    "c827d2b4-3608-4693-868e-bbcf86bd87c7": {
      "_id": "c827d2b4-3608-4693-868e-bbcf86bd87c7",
      "context": "AUTHENTICATION_CLIENT_SIDE",
      "createdBy": "null",
      "creationDate": 0,
      "default": true,
      "description": "Default global script for client side Scripted Authentication Module",
      "language": "JAVASCRIPT",
      "lastModifiedBy": "null",
      "lastModifiedDate": 0,
      "name": "Scripted Module - Client Side",
      "script": [
        "/*",
        " * Copyright 2016-2017 ForgeRock AS. All Rights Reserved",
        " *",
        " * Use of this code requires a commercial software license with ForgeRock AS.",
        " * or with one of its affiliates. All use shall be exclusively subject",
        " * to such license between the licensee and ForgeRock AS.",
        " */",
        "/* Default Authentication client side script to use as a template for new scripts */",
      ],
    },
    "c9fa3899-c3ce-4833-af83-64d709202600": {
      "_id": "c9fa3899-c3ce-4833-af83-64d709202600",
      "context": "AUTHENTICATION_TREE_DECISION_NODE",
      "createdBy": "null",
      "creationDate": 0,
      "default": false,
      "description": "Verify security PIN",
      "language": "JAVASCRIPT",
      "lastModifiedBy": "null",
      "lastModifiedDate": 0,
      "name": "Twilio IVR: Verify Security PIN",
      "script": [
        "/* Twilio IVR: Verify Security PIN",
        " * ",
        " * The Scripted Decision Node needs the following outcomes defined:",
        " * - true",
        " * - false",
        " * ",
        " * Depending on the amount of data collected through callbacks and how many of the callParams",
        " * you activate below, you will need to change your authentication session from JWT to CTS or",
        " * Memory.",
        " */",
        "logger.warning("Twilio IVR: Verify Security PIN: start");",
        "outcome = "false";",
        "",
        "/* Begin Configuration",
        " */",
        "",
        "// For ID Cloud use "_id", for classic deployments use "username"",
        "var userid = sharedState.get("_id")",
        "",
        "// Retrieve the identified caller's PIN (in IDM: frUnindexedInteger5, in AM: fr-attr-int5)",
        "var securityPIN = idRepository.getAttribute(userid, "fr-attr-int5").iterator().next();",
        "",
        "// Build out the verification prompt",
        "var prompt = "To verify I have the right account, please enter your 4-digit security PIN.";",
        "",
        "/* End Configuration",
        " */",
        "",
        "var fr = JavaImporter(",
        "      org.forgerock.openam.auth.node.api,",
        "      javax.security.auth.callback.TextInputCallback",
        ");",
        "  ",
        "with (fr) {",
        "      if (callbacks.isEmpty()) {",
        "        var input = new TextInputCallback(prompt);",
        "        action = Action.send(input).build();",
        "      } ",
        "      else {",
        "          var answer = new String(callbacks.get(0).getText()).replace(/[^0-9]/g, "");",
        "        logger.warning("Twilio IVR: Verify Security PIN: callbacks received");",
        "        if (answer == securityPIN) {",
        "              outcome = "true";",
        "        }",
        "        logger.warning("Twilio IVR: Verify Security PIN: finish [outcome=".concat(outcome).concat("]"));",
        "        action = Action.goTo(outcome).build();",
        "      }",
        "}",
      ],
    },
    "cdea92a1-d2bf-4364-a525-fde8b7a95792": {
      "_id": "cdea92a1-d2bf-4364-a525-fde8b7a95792",
      "context": "AUTHENTICATION_TREE_DECISION_NODE",
      "createdBy": "null",
      "creationDate": 0,
      "default": false,
      "description": "null",
      "language": "JAVASCRIPT",
      "lastModifiedBy": "null",
      "lastModifiedDate": 0,
      "name": "Get Lockout Status",
      "script": [
        "outcome = "true";",
        "",
        "var username = sharedState.get("_id")",
        "var lockoutDataAttr = "sunAMAuthInvalidAttemptsData"",
        "var accountStatusAttr = "inetUserStatus"",
        "",
        "var lockoutData = idRepository.getAttribute(username, lockoutDataAttr)",
        "var accountStatus = idRepository.getAttribute(username, accountStatusAttr)",
        "",
        "transientState.put("lockoutData", lockoutData)",
        "transientState.put("accountStatus", accountStatus)",
        "",
        "logger.error(lockoutData.toString())",
      ],
    },
    "ce6fbbcf-5d9a-471b-bcc1-448758a6374a": {
      "_id": "ce6fbbcf-5d9a-471b-bcc1-448758a6374a",
      "context": "AUTHENTICATION_TREE_DECISION_NODE",
      "createdBy": "null",
      "creationDate": 0,
      "default": false,
      "description": "Validate OTP in profile attribute",
      "language": "JAVASCRIPT",
      "lastModifiedBy": "null",
      "lastModifiedDate": 0,
      "name": "MobileOTP: Validate OTP In Profile Attribute",
      "script": [
        "/*",
        " * Validate OTP in user profile attribute against OTP in shared state",
        " */",
        "outcome = "false";",
        "var OTP_LENGTH = 8;",
        "",
        "if (sharedState.get("mobileOTP")) {",
        "      var profileOTP = idRepository.getAttribute(username, "fr-attr-int5");",
        "}",
        "",
        "function checkPassword(profileOTP, password) {",
        "    var oneTimePassword = profileOTP.substring(0,7);",
        "    var passwordTimestamp = Number(profileOTP.substring(8));",
        "",
        "    var passwordMatches = oneTimePassword",
        "        && (oneTimePassword == password)",
        "        && passwordTimestamp != null",
        "        && isWithinExpiryTime(passwordTimestamp);",
        "    return passwordMatches;",
        "}",
        "",
        "function isWithinExpiryTime(passwordTimestamp) {",
        "        Instant previous = Instant.ofEpochSecond(passwordTimestamp);",
        "        Duration passwordExpiry = Duration.ofMinutes(config.passwordExpiryTime());",
        "        Instant now = Time.getClock().instant();",
        "        logger.debug("previous {} \\n passwordExpiry {} \\n now {}", previous, passwordExpiry, now);",
        "        boolean withinExpiryTime = Duration.between(previous.plus(passwordExpiry), now).isNegative();",
        "        logger.debug("withinExpiryTime {}", withinExpiryTime);",
        "        return withinExpiryTime;",
        "}",
        "",
        "/*",
        "    private Action checkPassword(TreeContext context, String password) {",
        "        JsonValue oneTimePassword = context.getState(ONE_TIME_PASSWORD);",
        "        JsonValue passwordTimestamp = context.getState(ONE_TIME_PASSWORD_TIMESTAMP);",
        "",
        "        boolean passwordMatches = oneTimePassword != null && oneTimePassword.isString()",
        "                && oneTimePassword.asString().equals(password)",
        "                && passwordTimestamp != null && passwordTimestamp.isNumber()",
        "                && isWithinExpiryTime(passwordTimestamp.asLong());",
        "        logger.debug("passwordMatches {}", passwordMatches);",
        "        return goTo(passwordMatches).build();",
        "    }",
        "",
        "    private boolean isWithinExpiryTime(long passwordTimestamp) {",
        "        Instant previous = Instant.ofEpochSecond(passwordTimestamp);",
        "        Duration passwordExpiry = Duration.ofMinutes(config.passwordExpiryTime());",
        "        Instant now = Time.getClock().instant();",
        "        logger.debug("previous {} \\n passwordExpiry {} \\n now {}", previous, passwordExpiry, now);",
        "        boolean withinExpiryTime = Duration.between(previous.plus(passwordExpiry), now).isNegative();",
        "        logger.debug("withinExpiryTime {}", withinExpiryTime);",
        "        return withinExpiryTime;",
        "    }",
        "    */",
      ],
    },
    "cf3515f0-8278-4ee3-a530-1bad7424c416": {
      "_id": "cf3515f0-8278-4ee3-a530-1bad7424c416",
      "context": "OIDC_CLAIMS",
      "createdBy": "null",
      "creationDate": 0,
      "default": false,
      "description": "Default alpha realm script for OIDC claims",
      "language": "JAVASCRIPT",
      "lastModifiedBy": "null",
      "lastModifiedDate": 0,
      "name": "Alpha OIDC Claims Script",
      "script": [
        "/*",
        " * Copyright 2014-2021 ForgeRock AS. All Rights Reserved",
        " *",
        " * Use of this code requires a commercial software license with ForgeRock AS",
        " * or with one of its affiliates. All use shall be exclusively subject",
        " * to such license between the licensee and ForgeRock AS.",
        " */",
        "",
        "/*",
        " * This script computes claim values returned in ID tokens and/or at the UserInfo Endpoint.",
        " * The claim values are computed for:",
        " * the claims derived from the requested scopes,",
        " * the claims provided by the authorization server,",
        " * and the claims requested by the client via the claims parameter.",
        " *",
        " * In the CONFIGURATION AND CUSTOMIZATION section, you can",
        " * define the scope-to-claims mapping, and",
        " * assign to each claim a resolver function that will compute the claim value.",
        " *",
        " * Defined variables (class references are provided below):",
        " * scopes - Set<String> (6).",
        " *          Always present, the requested scopes.",
        " * claims - Map<String, Object> (5).",
        " *          Always present, default server provided claims.",
        " * claimObjects - List<Claim> (7, 2).",
        " *                Always present, the default server provided claims.",
        " * requestedClaims - Map<String, Set<String>> (5).",
        " *                   Always present, not empty if the request contains the claims parameter and the server has enabled",
        " *                   claims_parameter_supported. A map of the requested claims to possible values, otherwise empty;",
        " *                   requested claims with no requested values will have a key but no value in the map. A key with",
        " *                   a single value in its Set (6) indicates that this is the only value that should be returned.",
        " * requestedTypedClaims - List<Claim> (7, 2).",
        " *                        Always present, the requested claims.",
        " *                        Requested claims with no requested values will have a claim with no values.",
        " *                        A claim with a single value indicates this is the only value that should be returned.",
        " * claimsLocales - List<String> (7).",
        " *                 The values from the 'claims_locales' parameter.",
        " *                 See https://openid.net/specs/openid-connect-core-1_0.html#ClaimsLanguagesAndScripts for the OIDC specification details.",
        " * requestProperties - Unmodifiable Map (5).",
        " *                     Always present, contains a map of request properties:",
        " *                     requestUri - The request URI.",
        " *                     realm - The realm that the request relates to.",
        " *                     requestParams - A map of the request params and/or posted data.",
        " *                                     Each value is a list of one or more properties.",
        " *                                     Please note that these should be handled in accordance with OWASP best practices:",
        " *                                     https://owasp.org/www-community/vulnerabilities/Unsafe_use_of_Reflection.",
        " * clientProperties - Unmodifiable Map (5).",
        " *                    Present if the client specified in the request was identified, contains a map of client properties:",
        " *                    clientId - The client's URI for the request locale.",
        " *                    allowedGrantTypes - List of the allowed grant types (org.forgerock.oauth2.core.GrantType) for the client.",
        " *                    allowedResponseTypes - List of the allowed response types for the client.",
        " *                    allowedScopes - List of the allowed scopes for the client.",
        " *                    customProperties - A map of the custom properties of the client.",
        " *                                       Lists or maps will be included as sub-maps; for example:",
        " *                                       customMap[Key1]=Value1 will be returned as customMap -> Key1 -> Value1.",
        " *                                       To add custom properties to a client, update the Custom Properties field",
        " *                                       in AM Console > Realm Name > Applications > OAuth 2.0 > Clients > Client ID > Advanced.",
        " * identity - AMIdentity (3).",
        " *            Always present, the identity of the resource owner.",
        " * session - SSOToken (4).",
        " *           Present if the request contains the session cookie, the user's session object.",
        " * scriptName - String (primitive).",
        " *              Always present, the display name of the script.",
        " * logger - Always present, the "OAuth2Provider" debug logger instance:",
        " *          https://backstage.forgerock.com/docs/am/7/scripting-guide/scripting-api-global-logger.html#scripting-api-global-logger.",
        " *          Corresponding files will be prefixed with: scripts.OIDC_CLAIMS.",
        " * httpClient - HTTP Client (8).",
        " *              Always present, the HTTP Client instance:",
        " *              https://backstage.forgerock.com/docs/am/7/scripting-guide/scripting-api-global-http-client.html#scripting-api-global-http-client.",
        " *              In order to use the client, you may need to add",
        " *              org.forgerock.http.Client,",
        " *              org.forgerock.http.protocol.*,",
        " *              and org.forgerock.util.promise.PromiseImpl",
        " *              to the allowed Java classes in the scripting engine configuration, as described in:",
        " *              https://backstage.forgerock.com/docs/am/7/scripting-guide/script-engine-security.html",
        " *",
        " * Return - a new UserInfoClaims(Map<String, Object> values, Map<String, List<String>> compositeScopes) (1) object.",
        " *          The result of the last statement in the script is returned to the server.",
        " *          Currently, the Immediately Invoked Function Expression (also known as Self-Executing Anonymous Function)",
        " *          is the last (and only) statement in this script, and its return value will become the script result.",
        " *          Do not use "return variable" statement outside of a function definition.",
        " *          See RESULTS section for additional details.",
        " *",
        " * Class reference:",
        " * (1) UserInfoClaims - https://backstage.forgerock.com/docs/am/7/apidocs/org/forgerock/oauth2/core/UserInfoClaims.html.",
        " * (2) Claim - https://backstage.forgerock.com/docs/am/7/apidocs/org/forgerock/openidconnect/Claim.html).",
        " *         An instance of org.forgerock.openidconnect.Claim has methods to access",
        " *         the claim name, requested values, locale, and whether the claim is essential.",
        " * (3) AMIdentity - https://backstage.forgerock.com/docs/am/7/apidocs/com/sun/identity/idm/AMIdentity.html.",
        " * (4) SSOToken - https://backstage.forgerock.com/docs/am/7/apidocs/com/iplanet/sso/SSOToken.html.",
        " * (5) Map - https://docs.oracle.com/en/java/javase/11/docs/api/java.base/java/util/HashMap.html,",
        " *           or https://docs.oracle.com/en/java/javase/11/docs/api/java.base/java/util/LinkedHashMap.html.",
        " * (6) Set - https://docs.oracle.com/en/java/javase/11/docs/api/java.base/java/util/HashSet.html.",
        " * (7) List - https://docs.oracle.com/en/java/javase/11/docs/api/java.base/java/util/ArrayList.html.",
        " * (8) Client - https://backstage.forgerock.com/docs/am/7/apidocs/org/forgerock/http/Client.html.",
        "*/",
        "",
        "(function () {",
        "    // SETUP",
        "",
        "    /**",
        "     * Claim processing utilities.",
        "     * An object that contains reusable functions for processing claims.",
        "     * @see CLAIM PROCESSING UTILITIES section for details.",
        "     */",
        "    var utils = getUtils();",
        "",
        "    // CONFIGURATION AND CUSTOMIZATION",
        "",
        "    /**",
        "     * OAuth 2.0 scope values (scopes) can be used by the Client to request OIDC claims.",
        "     *",
        "     * Call this configuration method, and pass in as the first argument",
        "     * an object that maps a scope value to an array of claim names",
        "     * to specify which claims need to be processed and returned for the requested scopes.",
        "     * @see {@link https://openid.net/specs/openid-connect-core-1_0.html#ScopeClaims}",
        "     * for the scope values that could be used to request claims as defined in the OIDC specification.",
        "     *",
        "     * Below, find a default configuration that is expected to work in the current environment.",
        "     *",
        "     * CUSTOMIZATION",
        "     * You can choose the claim names returned for a scope.",
        "     */",
        "    utils.setScopeClaimsMap({",
        "        profile: [",
        "            'name',",
        "            'family_name',",
        "            'given_name',",
        "            'zoneinfo',",
        "            'locale'",
        "        ],",
        "        email: ['email'],",
        "        address: ['address'],",
        "        phone: ['phone_number']",
        "    });",
        "",
        "    /**",
        "     * In this script, each claim",
        "     * derived from the requested scopes,",
        "     * provided by the authorization server, and",
        "     * requested by the client via the claims parameter",
        "     * will be processed by a function associated with the claim name.",
        "     *",
        "     * Call this configuration method, and pass in as the first argument",
        "     * an object that maps a claim name to a resolver function,",
        "     * which will be automatically executed for each claim processed by the script.",
        "     *",
        "     * The claim resolver function will receive the requested claim information",
        "     * in an instance of org.forgerock.openidconnect.Claim as the first argument.",
        "     * @see {@link https://backstage.forgerock.com/docs/am/7/apidocs/org/forgerock/openidconnect/Claim.html}",
        "     * for details on the Claim class.",
        "     *",
        "     * If the claim resolver function returns a value,",
        "     * other than undefined or null,",
        "     * the claim will be included in the script's results.",
        "     *",
        "     * The Claim instance provides methods to check",
        "     * what the name of the claim is,",
        "     * which values the claim request contains,",
        "     * whether the claim is essential, and",
        "     * which locale the claim is associated with.",
        "     * The resolver function can consider this information when computing and returning the claim value.",
        "     *",
        "     * Below, find a default configuration that is expected to work in the current environment.",
        "     * A reusable function, utils.getUserProfileClaimResolver(String attribute-name),",
        "     * is called to return a claim resolver function based on a user profile attribute.",
        "     * @see CLAIM RESOLVERS section for the implementation details and examples.",
        "     * For the address claim, an example of a claim resolver that uses another claim resolver is provided.",
        "     *",
        "     * CUSTOMIZATION",
        "     * You can reuse the predefined utils methods with your custom arguments.",
        "     * You can also specify a custom resolver function for a claim name,",
        "     * that will compute and return the claim value—as shown in the commented out example below.",
        "     */",
        "    utils.setClaimResolvers({",
        "        /*",
        "        // An example of a simple claim resolver function that is defined for a claim",
        "        // directly in the configuration object:",
        "        custom-claim-name: function (requestedClaim) {",
        "            // In this case, initially, the claim value comes straight from a user profile attribute value:",
        "            var claimValue = identity.getAttribute('custom-attribute-name').toArray()[0]",
        "",
        "            // Optionally, provide additional logic for processing (filtering, formatting, etc.) the claim value.",
        "            // You can use:",
        "            // requestedClaim.getName()",
        "            // requestedClaim.getValues()",
        "            // requestedClaim.getLocale()",
        "            // requestedClaim.isEssential()",
        "",
        "            return claimValue",
        "        },",
        "        */",
        "        /**",
        "         * The use of utils.getUserProfileClaimResolver shows how",
        "         * an argument passed to a function that returns a claim resolver",
        "         * becomes available to the resolver function (via its lexical context).",
        "         */",
        "        name: utils.getUserProfileClaimResolver('cn'),",
        "        family_name: utils.getUserProfileClaimResolver('sn'),",
        "        given_name: utils.getUserProfileClaimResolver('givenname'),",
        "        zoneinfo: utils.getUserProfileClaimResolver('preferredtimezone'),",
        "        locale: utils.getUserProfileClaimResolver('preferredlocale'),",
        "        email: utils.getUserProfileClaimResolver('mail'),",
        "        address: utils.getAddressClaimResolver(",
        "            /**",
        "             * The passed in user profile claim resolver function",
        "             * can be used by the address claim resolver function",
        "             * to obtain the claim value to be formatted as per the OIDC specification:",
        "             * @see https://openid.net/specs/openid-connect-core-1_0.html#AddressClaim.",
        "             */",
        "            utils.getUserProfileClaimResolver('postaladdress')",
        "        ),",
        "        phone_number: utils.getUserProfileClaimResolver('telephonenumber')",
        "    });",
        "",
        "    // CLAIM PROCESSING UTILITIES",
        "",
        "    /**",
        "     * @returns {object} An object that contains reusable claim processing utilities.",
        "     * @see PUBLIC METHODS section and the return statement for the list of exported functions.",
        "     */",
        "    function getUtils () {",
        "        // IMPORT JAVA",
        "",
        "        /**",
        "         * Provides Java scripting functionality.",
        "         * @see {@link https://developer.mozilla.org/en-US/docs/Mozilla/Projects/Rhino/Scripting_Java#javaimporter_constructor}.",
        "         */",
        "        var frJava = JavaImporter(",
        "            org.forgerock.oauth2.core.exceptions.InvalidRequestException,",
        "            org.forgerock.oauth2.core.UserInfoClaims,",
        "            org.forgerock.openidconnect.Claim,",
        "",
        "            java.util.LinkedHashMap,",
        "            java.util.ArrayList",
        "        );",
        "",
        "        // SET UP CONFIGURATION",
        "",
        "        /**",
        "         * Placeholder for a configuration option that contains",
        "         * an object that maps the supported scope values (scopes)",
        "         * and the corresponding claim names for each scope value.",
        "         */",
        "        var scopeClaimsMap;",
        "",
        "        /**",
        "         * Placeholder for a configuration option that contains",
        "         * an object that maps the supported claim names",
        "         * and the resolver functions returning the claim value.",
        "         */",
        "        var claimResolvers;",
        "",
        "        /**",
        "         * A (public) method that accepts an object that maps the supported scopes and the corresponding claim names,",
        "         * and assigns it to a (private) variable that serves as a configuration option.",
        "         * @param {object} params - An object that maps each supported scope value to an array of claim names,",
        "         * in order to specify which claims need to be processed for the requested scopes.",
        "         * @see {@link https://openid.net/specs/openid-connect-core-1_0.html#ScopeClaims} for details.",
        "         * @param {string[]} [params.profile] - An array of claim names to be returned if the profile scope is requested.",
        "         * @param {string[]} [params.email] - An array of claim names to be returned if the email scope is requested.",
        "         * @param {string[]} [params.address] - An array of claim names to be returned if the address scope is requested.",
        "         * @param {string[]} [params.phone] - An array of claim names to be returned if the phone scope is requested.",
        "         * @returns {undefined}",
        "         */",
        "        function setScopeClaimsMap(params) {",
        "            scopeClaimsMap = params;",
        "        }",
        "",
        "        /**",
        "         * A (public) method that accepts an object that maps the supported claim names",
        "         * and the resolver functions returning the claim value,",
        "         * and assigns it to a (private) variable that serves as a configuration option.",
        "         * @param {object} params - An object that maps",
        "         * each supported claim name to a function that computes and returns the claim value.",
        "         */",
        "        function setClaimResolvers(params) {",
        "            claimResolvers = params;",
        "        }",
        "",
        "        // CLAIM RESOLVERS",
        "",
        "        /**",
        "         * Claim resolvers are functions that return a claim value.",
        "         * @param {*}",
        "         * @returns {*}",
        "         */",
        "",
        "        /**",
        "         * Defines a claim resolver based on a user profile attribute.",
        "         * @param {string} attributeName - Name of the user profile attribute.",
        "         * @returns {function} A function that will determine the claim value",
        "         * based on the user profile attribute and the (requested) claim properties.",
        "         */",
        "        function getUserProfileClaimResolver (attributeName) {",
        "            /**",
        "             * Resolves a claim with a user profile attribute value.",
        "             * Returns undefined if the identity attribute is not populated,",
        "             * OR if the claim has requested values that do not contain the identity attribute value.",
        "             * ATTENTION: the aforementioned comparison is case-sensitive.",
        "             * @param {org.forgerock.openidconnect.Claim} claim",
        "             * An object that provides methods to obtain information/requirements associated with a claim.",
        "             * @see {@link https://backstage.forgerock.com/docs/am/7/apidocs/org/forgerock/openidconnect/Claim.html} for details.",
        "             * @returns {string|HashSet|undefined}",
        "             */",
        "            function resolveClaim(claim) {",
        "                var userProfileValue;",
        "",
        "                if (identity) {",
        "                    userProfileValue = getClaimValueFromSet(claim, identity.getAttribute(attributeName));",
        "",
        "                    if (userProfileValue && !userProfileValue.isEmpty()) {",
        "                        if (!claim.getValues() || claim.getValues().isEmpty() || claim.getValues().contains(userProfileValue)) {",
        "                            return userProfileValue;",
        "                        }",
        "                    }",
        "                }",
        "            }",
        "",
        "            return resolveClaim;",
        "        }",
        "",
        "        /**",
        "         * Returns an address claim resolver based on a claim value obtained with another claim resolver.",
        "         * @param {function} resolveClaim - A function that returns a claim value.",
        "         * @returns {function} A function that will accept a claim as an argument,",
        "         * run the claim resolver function for the claim and obtain the claim value,",
        "         * and apply additional formatting to the value before returning it.",
        "         */",
        "        function getAddressClaimResolver (resolveClaim) {",
        "            /**",
        "             * Creates an address claim object from a value returned by a claim resolver,",
        "             * and returns the address claim object as the claim value.",
        "             * @see {@link https://openid.net/specs/openid-connect-core-1_0.html#AddressClaim}.",
        "             * The claim value is obtained with a claim resolving function available from the closure.",
        "             * @param {org.forgerock.openidconnect.Claim} claim",
        "             * An object that provides methods to obtain information/requirements associated with a claim.",
        "             * @see {@link https://backstage.forgerock.com/docs/am/7/apidocs/org/forgerock/openidconnect/Claim.html} for details.",
        "             * @returns {java.util.LinkedHashMap|undefined} The address claim object created from a claim value.",
        "             */",
        "            function resolveAddressClaim(claim) {",
        "                var claimValue = resolveClaim(claim);",
        "                var addressObject;",
        "",
        "                if (isClaimValueValid(claimValue)) {",
        "                    addressObject = new frJava.LinkedHashMap();",
        "",
        "                    addressObject.put('formatted', claimValue);",
        "",
        "                    return addressObject;",
        "                }",
        "            }",
        "",
        "            return resolveAddressClaim;",
        "        }",
        "",
        "        /**",
        "         * Returns an essential claim resolver based on a claim value obtained with another claim resolver.",
        "         * @param {function} resolveClaim - A function that returns a claim value.",
        "         * @returns {function} A function that will accept a claim as an argument,",
        "         * run the claim resolver function for the claim and obtain the claim value,",
        "         * and apply additional logic for essential claims.",
        "         */",
        "        function getEssentialClaimResolver (resolveClaim) {",
        "            /**",
        "             * Returns a claim value or throws an error.",
        "             * The claim value is obtained with a claim resolving function available from the closure.",
        "             * Throws an exception if the claim is essential and no value is returned for the claim.",
        "             *",
        "             * Use of this resolver is optional.",
        "             * @see {@link https://openid.net/specs/openid-connect-core-1_0.html#IndividualClaimsRequests} stating:",
        "             * "Note that even if the Claims are not available because the End-User did not authorize their release or they are not present,",
        "             * the Authorization Server MUST NOT generate an error when Claims are not returned, whether they are Essential or Voluntary,",
        "             * unless otherwise specified in the description of the specific claim."",
        "             *",
        "             * @param {org.forgerock.openidconnect.Claim} claim",
        "             * An object that provides methods to obtain information/requirements associated with a claim.",
        "             * @see {@link https://backstage.forgerock.com/docs/am/7/apidocs/org/forgerock/openidconnect/Claim.html} for details.",
        "             * @returns {*}",
        "             * @throws {org.forgerock.oauth2.core.exceptions.InvalidRequestException}",
        "             */",
        "            function resolveEssentialClaim(claim) {",
        "                var claimValue = resolveClaim(claim);",
        "",
        "                if (claim.isEssential() && !isClaimValueValid(claimValue)) {",
        "                    throw new frJava.InvalidRequestException('Could not provide value for essential claim: ' + claim.getName());",
        "                }",
        "",
        "                return claimValue;",
        "            }",
        "",
        "            return resolveEssentialClaim;",
        "        }",
        "",
        "        /**",
        "         * Provides default resolution for a claim.",
        "         * Use it if a claim-specific resolver is not defined in the configuration.",
        "         * @param {org.forgerock.openidconnect.Claim} claim",
        "         * An object that provides methods to obtain information/requirements associated with a claim.",
        "         * @see {@link https://backstage.forgerock.com/docs/am/7/apidocs/org/forgerock/openidconnect/Claim.html} for details.",
        "         * @returns {*} A single value associated with this claim.",
        "         */",
        "        function resolveAnyClaim (claim) {",
        "            if (claim.getValues().size() === 1) {",
        "                return claim.getValues().toArray()[0];",
        "            }",
        "        }",
        "",
        "        // UTILITIES",
        "",
        "        /**",
        "         * Returns claim value from a set.",
        "         * If the set contains a single value, returns the value.",
        "         * If the set contains multiple values, returns the set.",
        "         * Otherwise, returns undefined.",
        "         *",
        "         * @param {org.forgerock.openidconnect.Claim} claim",
        "         * An object that provides methods to obtain information/requirements associated with a claim.",
        "         * @see {@link https://backstage.forgerock.com/docs/am/7/apidocs/org/forgerock/openidconnect/Claim.html} for details.",
        "         * @param {java.util.HashSet} set The set—for example, a user profile attribute value.",
        "         * @returns {string|java.util.HashSet|undefined}",
        "         */",
        "        function getClaimValueFromSet (claim, set) {",
        "            if (set && set.size()) {",
        "                if (set.size() === 1) {",
        "                    return set.toArray()[0];",
        "                } else {",
        "                    return set;",
        "                }",
        "            } else if (logger.warningEnabled()) {",
        "                logger.warning('OIDC Claims script. Got an empty set for claim: ' + claim.getName());",
        "            }",
        "        }",
        "",
        "        function isClaimValueValid (claimValue) {",
        "            if (typeof claimValue === 'undefined' || claimValue === null) {",
        "                return false;",
        "            }",
        "",
        "            return true;",
        "        }",
        "",
        "        // CLAIM PROCESSING",
        "",
        "        /**",
        "         * Constructs and returns an object populated with the computed claim values",
        "         * and the requested scopes mapped to the claim names.",
        "         * @returns {org.forgerock.oauth2.core.UserInfoClaims} The object to be returned to the authorization server.",
        "         * @see {@link https://backstage.forgerock.com/docs/am/7/apidocs/org/forgerock/oauth2/core/UserInfoClaims.html}.",
        "         * @see RESULTS section for the use of this function.",
        "         */",
        "        function getUserInfoClaims () {",
        "            return new frJava.UserInfoClaims(getComputedClaims(), getCompositeScopes());",
        "        }",
        "",
        "        /**",
        "         * Creates a map of (requested) claim names populated with the computed claim values.",
        "         * @returns {java.util.LinkedHashMap}",
        "         * A map of the requested claim names and the corresponding claim values.",
        "         */",
        "        function getComputedClaims () {",
        "            /**",
        "             * Creates a complete list of claim objects from:",
        "             * the claims derived from the scopes,",
        "             * the claims provided by the authorization server,",
        "             * and the claims requested by the client.",
        "             * @returns {java.util.ArrayList}",
        "             * Returns a complete list of org.forgerock.openidconnect.Claim objects available to the script.",
        "             * @see {@link https://backstage.forgerock.com/docs/am/7/apidocs/org/forgerock/openidconnect/Claim.html} for the claim object details.",
        "             */",
        "            function getClaims() {",
        "                /**",
        "                 * Returns a list of claim objects for the requested scopes.",
        "                 * Uses the scopeClaimsMap configuration option to derive the claim names;",
        "                 * no other properties of a claim derived from a scope are populated.",
        "                 * @returns {java.util.ArrayList}",
        "                 * A list of org.forgerock.openidconnect.Claim objects derived from the requested scopes.",
        "                 * @see {@link https://backstage.forgerock.com/docs/am/7/apidocs/org/forgerock/openidconnect/Claim.html} for the claim object details.",
        "                 */",
        "                function convertScopeToClaims() {",
        "                    var claims = new frJava.ArrayList();",
        "",
        "                    scopes.toArray().forEach(function (scope) {",
        "                        if (String(scope) !== 'openid' && scopeClaimsMap[scope]) {",
        "                            scopeClaimsMap[scope].forEach(function (claimName) {",
        "                                claims.add(new frJava.Claim(claimName));",
        "                            });",
        "                        }",
        "                    });",
        "",
        "                    return claims;",
        "                }",
        "",
        "                var claims = new frJava.ArrayList();",
        "",
        "                claims.addAll(convertScopeToClaims());",
        "                claims.addAll(claimObjects);",
        "                claims.addAll(requestedTypedClaims);",
        "",
        "                return claims;",
        "            }",
        "",
        "            /**",
        "             * Computes and returns a claim value.",
        "             * To obtain the claim value, uses the resolver function specified for the claim in the claimResolvers configuration object.",
        "             * @see claimResolvers",
        "             * If no resolver function is found, uses the default claim resolver function.",
        "             *",
        "             * @param {org.forgerock.openidconnect.Claim} claim",
        "             * An object that provides methods to obtain information/requirements associated with a claim.",
        "             * @see {@link https://backstage.forgerock.com/docs/am/7/apidocs/org/forgerock/openidconnect/Claim.html} for details.",
        "             * @returns {*} Claim value.",
        "             * @throws {org.forgerock.oauth2.core.exceptions.InvalidRequestException}",
        "             * Rethrows this exception if a claim resolver throws it.",
        "             * You can throw org.forgerock.oauth2.core.exceptions.InvalidRequestException from your custom claim resolver",
        "             * if you want to terminate the claim processing.",
        "             */",
        "            function computeClaim(claim) {",
        "                var resolveClaim;",
        "                var message;",
        "",
        "                try {",
        "                    resolveClaim = claimResolvers[claim.getName()] || resolveAnyClaim;",
        "",
        "                    return resolveClaim(claim);",
        "                } catch (e) {",
        "                    message = 'OIDC Claims script exception. Unable to resolve OIDC Claim. ' + e;",
        "",
        "                    if (String(e).indexOf('org.forgerock.oauth2.core.exceptions.InvalidRequestException') !== -1) {",
        "                        throw e;",
        "                    }",
        "",
        "                    if (logger.warningEnabled()) {",
        "                        logger.warning(message);",
        "                    }",
        "                }",
        "            }",
        "",
        "            var computedClaims = new frJava.LinkedHashMap();",
        "",
        "            getClaims().toArray().forEach(function (claim) {",
        "                var claimValue = computeClaim(claim);",
        "",
        "                if (isClaimValueValid(claimValue)) {",
        "                    computedClaims.put(claim.getName(), claimValue);",
        "                } else {",
        "                    /**",
        "                     * If a claim has been processed, but appears in the list again,",
        "                     * and its value cannot be computed under the new conditions,",
        "                     * the claim is removed from the final result.",
        "                     *",
        "                     * For example, a claim could be mapped to a scope and found in the user profile,",
        "                     * but also requested by the client with required values that don't match the computed one.",
        "                     * @see {link https://openid.net/specs/openid-connect-core-1_0.html#IndividualClaimsRequests}.",
        "                     * for the relevant OIDC specification details.",
        "                     */",
        "                    computedClaims.remove(claim.getName());",
        "                }",
        "            });",
        "",
        "            return computedClaims;",
        "        }",
        "",
        "        /**",
        "         * Creates a map of requested scopes and the corresponding claim names.",
        "         * @returns {java.util.LinkedHashMap}",
        "         */",
        "        function getCompositeScopes () {",
        "            var compositeScopes = new frJava.LinkedHashMap();",
        "",
        "            scopes.toArray().forEach(function (scope) {",
        "                var scopeClaims = new frJava.ArrayList();",
        "",
        "                if (scopeClaimsMap[scope]) {",
        "                    scopeClaimsMap[scope].forEach(function (claimName) {",
        "                        scopeClaims.add(claimName);",
        "                    });",
        "                }",
        "",
        "                if (scopeClaims.size()) {",
        "                    compositeScopes.put(scope, scopeClaims);",
        "                }",
        "            });",
        "",
        "            return compositeScopes;",
        "        }",
        "",
        "        // PUBLIC METHODS",
        "",
        "        return {",
        "            setScopeClaimsMap: setScopeClaimsMap,",
        "            setClaimResolvers: setClaimResolvers,",
        "            getUserProfileClaimResolver: getUserProfileClaimResolver,",
        "            getAddressClaimResolver: getAddressClaimResolver,",
        "            getEssentialClaimResolver: getEssentialClaimResolver,",
        "            getUserInfoClaims: getUserInfoClaims",
        "        };",
        "    }",
        "",
        "    // RESULTS",
        "",
        "    /**",
        "     * This script returns an instance of the org.forgerock.oauth2.core.UserInfoClaims class",
        "     * populated with the computed claim values and",
        "     * the requested scopes mapped to the claim names.",
        "     * @see {@link https://backstage.forgerock.com/docs/am/7/apidocs/org/forgerock/oauth2/core/UserInfoClaims.html}.",
        "     *",
        "     * Assigning it to a variable gives you an opportunity",
        "     * to log the content of the returned value during development.",
        "     */",
        "    var userInfoClaims = utils.getUserInfoClaims();",
        "",
        "    /*",
        "    logger.error(scriptName + ' results:')",
        "    logger.error('Values: ' + userInfoClaims.getValues())",
        "    logger.error('Scopes: ' + userInfoClaims.getCompositeScopes())",
        "    */",
        "",
        "    return userInfoClaims;",
        "}());",
      ],
    },
    "cfb208d8-241c-4953-b87b-bf59d1ab3d05": {
      "_id": "cfb208d8-241c-4953-b87b-bf59d1ab3d05",
      "context": "AUTHENTICATION_TREE_DECISION_NODE",
      "createdBy": "null",
      "creationDate": 0,
      "default": false,
      "description": "null",
      "language": "JAVASCRIPT",
      "lastModifiedBy": "null",
      "lastModifiedDate": 0,
      "name": "Admin_EnableEmailClaimCheck",
      "script": [
        "/*",
        " * Copyright 2023 ForgeRock AS. All Rights Reserved",
        " *",
        " * Use of this code requires a commercial software license with ForgeRock AS.",
        " * or with one of its affiliates. All use shall be exclusively subject",
        " * to such license between the licensee and ForgeRock AS.",
        " */",
        "",
        "nodeState.putShared('checkEmailClaim', true);",
        "",
        "outcome = 'True';",
      ],
    },
    "d1fffc59-1d57-4264-b715-242eee52e296": {
      "_id": "d1fffc59-1d57-4264-b715-242eee52e296",
      "context": "AUTHENTICATION_TREE_DECISION_NODE",
      "createdBy": "null",
      "creationDate": 0,
      "default": false,
      "description": "null",
      "language": "JAVASCRIPT",
      "lastModifiedBy": "null",
      "lastModifiedDate": 0,
      "name": "Add Session Properties",
      "script": [
        "var outcome = "true";",
        "",
        "var fr = JavaImporter(",
        "      org.forgerock.openam.auth.node.api",
        ");",
        "",
        "with (fr) {",
        "      action = Action.goTo(outcome).putSessionProperty("UOPClassID", "customValue").build();",
        "}",
      ],
    },
    "d22f9a0c-426a-4466-b95e-d0f125b0d5fa": {
      "_id": "d22f9a0c-426a-4466-b95e-d0f125b0d5fa",
      "context": "OAUTH2_ACCESS_TOKEN_MODIFICATION",
      "createdBy": "null",
      "creationDate": 0,
      "default": true,
      "description": "Default global script for OAuth2 Access Token Modification",
      "language": "JAVASCRIPT",
      "lastModifiedBy": "null",
      "lastModifiedDate": 0,
      "name": "OAuth2 Access Token Modification Script",
      "script": [
        "/*",
        " * Copyright 2019-2021 ForgeRock AS. All Rights Reserved.",
        " *",
        " * Use of this code requires a commercial software license with ForgeRock AS",
        " * or with one of its affiliates. All use shall be exclusively subject",
        " * to such license between the licensee and ForgeRock AS.",
        " */",
        "",
        "/*",
        " * This script lets you modify information associated with an OAuth2 access token",
        " * with methods provided by the AccessToken (1) interface.",
        " * The changes made to OAuth2 access tokens will directly impact the size of the CTS tokens,",
        " * and, similarly, the size of the JWTs if client-based OAuth2 tokens are utilized.",
        " * When adding/updating fields make sure that the token size remains within client/user-agent limits.",
        " *",
        " * Defined variables:",
        " * accessToken - AccessToken (1).",
        " *               The access token to be updated.",
        " *               Mutable object, all changes to the access token will be reflected.",
        " * scopes - Set<String> (6).",
        " *          Always present, the requested scopes.",
        " * requestProperties - Unmodifiable Map (5).",
        " *                     Always present, contains a map of request properties:",
        " *                     requestUri - The request URI.",
        " *                     realm - The realm that the request relates to.",
        " *                     requestParams - A map of the request params and/or posted data.",
        " *                                     Each value is a list of one or more properties.",
        " *                                     Please note that these should be handled in accordance with OWASP best practices:",
        " *                                     https://owasp.org/www-community/vulnerabilities/Unsafe_use_of_Reflection.",
        " * clientProperties - Unmodifiable Map (5).",
        " *                    Present if the client specified in the request was identified, contains a map of client properties:",
        " *                    clientId - The client's URI for the request locale.",
        " *                    allowedGrantTypes - List of the allowed grant types (org.forgerock.oauth2.core.GrantType) for the client.",
        " *                    allowedResponseTypes - List of the allowed response types for the client.",
        " *                    allowedScopes - List of the allowed scopes for the client.",
        " *                    customProperties - A map of the custom properties of the client.",
        " *                                       Lists or maps will be included as sub-maps; for example:",
        " *                                       customMap[Key1]=Value1 will be returned as customMap -> Key1 -> Value1.",
        " *                                       To add custom properties to a client, update the Custom Properties field",
        " *                                       in AM Console > Realm Name > Applications > OAuth 2.0 > Clients > Client ID > Advanced.",
        " * identity - AMIdentity (3).",
        " *            Always present, the identity of the resource owner.",
        " * session - SSOToken (4).",
        " *           Present if the request contains the session cookie, the user's session object.",
        " * scriptName - String (primitive).",
        " *              Always present, the display name of the script.",
        " * logger - Always present, the "OAuth2Provider" debug logger instance:",
        " *          https://backstage.forgerock.com/docs/am/7/scripting-guide/scripting-api-global-logger.html#scripting-api-global-logger.",
        " *          Corresponding log files will be prefixed with: scripts.OAUTH2_ACCESS_TOKEN_MODIFICATION.",
        " * httpClient - HTTP Client (8).",
        " *              Always present, the HTTP Client instance:",
        " *              https://backstage.forgerock.com/docs/am/7/scripting-guide/scripting-api-global-http-client.html#scripting-api-global-http-client.",
        " *",
        " * Return - no value is expected, changes shall be made to the accessToken parameter directly.",
        " *",
        " * Class reference:",
        " * (1) AccessToken - https://backstage.forgerock.com/docs/am/7/apidocs/org/forgerock/oauth2/core/AccessToken.html.",
        " * (3) AMIdentity - https://backstage.forgerock.com/docs/am/7/apidocs/com/sun/identity/idm/AMIdentity.html.",
        " * (4) SSOToken - https://backstage.forgerock.com/docs/am/7/apidocs/com/iplanet/sso/SSOToken.html.",
        " * (5) Map - https://docs.oracle.com/en/java/javase/11/docs/api/java.base/java/util/HashMap.html,",
        " *           or https://docs.oracle.com/en/java/javase/11/docs/api/java.base/java/util/LinkedHashMap.html.",
        " * (6) Set - https://docs.oracle.com/en/java/javase/11/docs/api/java.base/java/util/HashSet.html.",
        " * (8) Client - https://backstage.forgerock.com/docs/am/7/apidocs/org/forgerock/http/Client.html.",
        " */",
        "",
        "(function () {",
        "  // Adds new fields containing the session property values.",
        "  // NOTE: session may not be available for non-interactive authorization grants.",
        "  if (session) {",
        "    try {",
        "      accessToken.setField('ip_address', session.getProperty('Host'));",
        "    } catch (e) {",
        "      logger.error('Unable to retrieve session property value. ' + e);",
        "    }",
        "  }",
        "}());",
        "",
        "/* EXAMPLE",
        "(function () {",
        "    var frJava = JavaImporter(",
        "        org.forgerock.http.protocol.Request,",
        "        org.forgerock.http.protocol.Response",
        "    );",
        "",
        "    // Always includes this field in the token.",
        "    accessToken.setField('key1', 'value1');",
        "",
        "    // Receives and adds to the access token additional values by performing a REST call to an external service.",
        "    // WARNING: Below, you will find a reference to a third-party site, which is provided only as an example.",
        "    var uri = 'https://jsonplaceholder.typicode.com/posts';",
        "",
        "    try {",
        "        var request = new frJava.Request();",
        "",
        "        // You can chain methods that return the request object.",
        "        request.setUri(uri)",
        "            .setMethod('POST')",
        "            .setEntity(JSON.stringify({",
        "                updatedFields: {",
        "                    key2: 'value2',",
        "                    key3: 'value3'",
        "                }",
        "            }));",
        "",
        "        // You can call a method when chaining is not possible.",
        "        request.getHeaders().add('Content-Type', 'application/json; charset=UTF-8');",
        "",
        "        // Sends the request and receives the response.",
        "        var response = httpClient.send(request).getOrThrow();",
        "",
        "        // Checks if the response status is as expected.",
        "        if (response.getStatus() === org.forgerock.http.protocol.Status.CREATED) {",
        "            var result = JSON.parse(response.getEntity().getString());",
        "",
        "            // Set multiple token fields at once.",
        "            accessToken.setFields(result.updatedFields);",
        "        } else {",
        "            logger.error('Unable to obtain access token modifications. Status: ' + response.getStatus() + '. Content: ' + response.getEntity().getString());",
        "        }",
        "    } catch (e) {",
        "        logger.error('The request processing was interrupted. ' + e);",
        "",
        "        // The access token request fails with the HTTP 500 error in this case.",
        "        throw ('Unable to obtain response from: ' + uri);",
        "    }",
        "",
        "    // Adds new fields containing identity attribute values to the access token.",
        "    accessToken.setField('mail', identity.getAttribute('mail'));",
        "    accessToken.setField('phone', identity.getAttribute('telephoneNumber').toArray()[0]);",
        "",
        "    // Adds new fields containing the session property values.",
        "    // NOTE: session may not be available for non-interactive authorization grants.",
        "    if (session) {",
        "        try {",
        "            accessToken.setField('ipAddress', session.getProperty('Host'));",
        "        } catch (e) {",
        "            logger.error('Unable to retrieve session property value. ' + e);",
        "        }",
        "    }",
        "",
        "    // Removes a native field from the token entry, that was set by AM.",
        "    // WARNING: removing native fields from the token may result in loss of functionality.",
        "    // accessToken.removeTokenName()",
        "",
        "    // No return value is expected. Let it be undefined.",
        "}());",
        "*/",
      ],
    },
    "d25a1315-8beb-4a0c-84bf-534214fed087": {
      "_id": "d25a1315-8beb-4a0c-84bf-534214fed087",
      "context": "AUTHENTICATION_TREE_DECISION_NODE",
      "createdBy": "null",
      "creationDate": 0,
      "default": false,
      "description": "Prepare Reset Of OTP Profile Attribute",
      "language": "JAVASCRIPT",
      "lastModifiedBy": "null",
      "lastModifiedDate": 0,
      "name": "MobileOTP: Prepare Reset Of OTP Profile Attribute",
      "script": [
        "/*",
        " * Reset OTP profile attribute in ObjectAttributes so it can be patched to the user profile.",
        " */",
        "outcome = "true";",
        "",
        "setSharedObjectAttribute("fr-attr-int5", "0");",
        "",
        "/*",
        " * Store attributes in shared state for use with the Create/Patch Object nodes.",
        " */",
        "function setSharedObjectAttribute(name, value) {",
        "      var storage = sharedState.get("objectAttributes");",
        "    if (storage && value) {",
        "          if (storage.put) {",
        "              storage.put(name, value);",
        "        }",
        "          else {",
        "              storage[name] = value;",
        "        }",
        "    }",
        "    else if (value) {",
        "        sharedState.put("objectAttributes", JSON.parse("{\\""+name+"\\":\\""+value+"\\"}"));",
        "    }",
        "}",
      ],
    },
    "d2a41d85-d33a-42d9-a7dd-50dfbc9fa7c0": {
      "_id": "d2a41d85-d33a-42d9-a7dd-50dfbc9fa7c0",
      "context": "AUTHENTICATION_TREE_DECISION_NODE",
      "createdBy": "null",
      "creationDate": 0,
      "default": false,
      "description": "Check Applicant",
      "language": "JAVASCRIPT",
      "lastModifiedBy": "null",
      "lastModifiedDate": 0,
      "name": "Onfido-CheckApplicant",
      "script": [
        "logger.error("Onfido-CheckApplicant: Start");",
        "",
        "/*",
        " * !!! Extend your authentication session time so your identity proofing flows don't time out !!!",
        " *",
        " * Authentication > Settings > Trees > Max Duration (Minutes)",
        " *",
        " * Set to 15 minutes.",
        " *",
        " */",
        "",
        "/*",
        " * BEGIN SCRIPT CONFIGURATION",
        " *",
        " * REPLACE WITH YOUR OWN ONFIDO API TOKEN",
        " */",
        "//var ONFIDO_API_TOKEN = "api_live.StUdfxdiCFb.YrzbadxB_R2-qG5lFUc3lWg6JAc3Cnq-"",
        "var ONFIDO_API_TOKEN = "api_live.H5ysRusAomY.nbbkimoWc91cDZAWJZkJt0Tkqdjm1Rjr";",
        "/*",
        " * END SCRIPT CONFIGURATION",
        " */",
        "",
        "var requestBodyJson = {",
        "    "applicant_id": String(sharedState.get("onfidoApplicantID")),",
        "    "report_names": ["document", "facial_similarity_photo"]",
        "}",
        "// var requestBodyJson = {",
        "//     "applicant_id": String(sharedState.get("onfidoApplicantID")),",
        "//     "report_names": ["document"]",
        "// }",
        "",
        "var failure = true",
        "",
        "var fr = JavaImporter(",
        "    org.forgerock.http.protocol.Request",
        ")",
        "",
        "var request = new fr.Request()",
        "request.setUri("https://api.onfido.com/v3/checks")",
        "request.setMethod("POST")",
        "request.getHeaders().add("Content-Type", "application/json; charset=UTF-8")",
        "request.getHeaders().add("Authorization", "Token token=" + ONFIDO_API_TOKEN)",
        "request.getEntity().setString(JSON.stringify(requestBodyJson))",
        "",
        "var response = httpClient.send(request).get()",
        "logger.error("Onfido-CheckApplicant: Initiate checks response: ".concat(response.getEntity().getString()));",
        "",
        "if (response.getStatus().getCode() === 200) {",
        "    var id = JSON.parse(response.getEntity().getString()).id",
        "    failure = !id",
        "    if (!failure) sharedState.put("onfidoAuthToken", id);",
        "} else {",
        "    failure = true",
        "}",
        "",
        "outcome = failure ? "false" : "true";",
        "logger.error("Onfido-CheckApplicant: End (outcome=".concat(outcome).concat(")"));",
      ],
    },
    "d2cf4f18-651a-4a3c-9b04-ee4fc896d0c3": {
      "_id": "d2cf4f18-651a-4a3c-9b04-ee4fc896d0c3",
      "context": "SOCIAL_IDP_PROFILE_TRANSFORMATION",
      "createdBy": "null",
      "creationDate": 0,
      "default": false,
      "description": "Social Identity Provider Profile Transformation for ForgeRock OIDC Providers",
      "language": "GROOVY",
      "lastModifiedBy": "null",
      "lastModifiedDate": 0,
      "name": "ST_healthcare-idc-social-transformation",
      "script": [
        "/*",
        " * Copyright 2022 ForgeRock AS. All Rights Reserved",
        " *",
        " * Use of this code requires a commercial software license with ForgeRock AS.",
        " * or with one of its affiliates. All use shall be exclusively subject",
        " * to such license between the licensee and ForgeRock. Not for production use.",
        " * Modified by Stephen Payne",
        " */",
        "/* Social Identity Provider Profile Transformation script for Healthcare ID Cloud */",
        "import static org.forgerock.json.JsonValue.field",
        "import static org.forgerock.json.JsonValue.json",
        "import static org.forgerock.json.JsonValue.object",
        "",
        "logger.error("ST_healthcare-idc-social-transformation Healthcare ID Cloud Identity Provider Profile Transformation script: Start");",
        "",
        "logger.error("ST_healthcare-idc-social-transformation Profile Transformation script: Start");",
        "logger.error("ST_healthcare-idc-social-transformationy: givenName " + rawProfile.givenName);",
        "logger.error("ST_healthcare-idc-social-transformation: sn: " +rawProfile.familyName);",
        "logger.error("ST_healthcare-idc-social-transformation: id: " +rawProfile.id);",
        "logger.error("ST_healthcare-idc-social-transformation: mail: " + rawProfile.email);",
        "logger.error("ST_healthcare-idc-social-transformation: cn: " + rawProfile.displayName);",
        "logger.error("ST_healthcare-idc-social-transformation: userName: " + rawProfile.username);",
        "logger.error("ST_healthcare-idc-social-transformation: id: " + rawProfile.id.asString());",
        "//logger.error("ST_healthcare-idc-social-transformation: iplanet-am-user-alias-list: " + selectedIdp + '-' + rawProfile.id.asString() );",
        "//logger.error("ST_healthcare-idc-social-transformation: selectedIdp: " + selectedIdp);",
        "if (rawProfile.fhirUser.isNotNull()) logger.error("ST_healthcare-idc-social-transformation: fhirUser: " + rawProfile.fhirUser);",
        "if (rawProfile.IAL.isNotNull()) logger.error("ST_healthcare-idc-social-transformatio: IAL: " + rawProfile.IAL);",
        "",
        "",
        "",
        "",
        "return json(object(",
        "        field("id", rawProfile.sub),",
        "        field("displayName", rawProfile.name),",
        "        field("givenName", rawProfile.given_name),",
        "        field("familyName", rawProfile.family_name),",
        "        field("email", rawProfile.email),",
        "        field("username", rawProfile.email),",
        "        field("IAL", rawProfile.IAL),  ",
        "        field("telephoneNumber", rawProfile.phone_number),",
        "        field("fhirUser", rawProfile.fhirUser),",
        "        field("userType", rawProfile.userType),",
        "        )",
        ")",
      ],
    },
    "d3102a25-056d-4e34-973b-577ced8cc9b7": {
      "_id": "d3102a25-056d-4e34-973b-577ced8cc9b7",
      "context": "AUTHENTICATION_TREE_DECISION_NODE",
      "createdBy": "null",
      "creationDate": 0,
      "default": false,
      "description": "null",
      "language": "JAVASCRIPT",
      "lastModifiedBy": "null",
      "lastModifiedDate": 0,
      "name": "Has Email Changed",
      "script": [
        "logger.error("Has Email Changed: start");",
        "outcome = "unchanged";",
        "if (getObjectAttribute("frUnindexedString5")) {",
        "  outcome = "changed";",
        "}",
        "logger.error("Has Email Changed: end [outcome=".concat(outcome).concat("]"));",
        "",
        "/*",
        " * Get objectAttribute value",
        " */",
        "function getObjectAttribute(name) {",
        "    if (sharedState.get("objectAttributes") && sharedState.get("objectAttributes").get(name)) {",
        "        return sharedState.get("objectAttributes").get(name).toString();",
        "    }",
        "    else {",
        "        return null;",
        "    }",
        "}",
      ],
    },
    "d3405f9c-d338-4dc2-b00d-7aacf77b731d": {
      "_id": "d3405f9c-d338-4dc2-b00d-7aacf77b731d",
      "context": "AUTHENTICATION_TREE_DECISION_NODE",
      "createdBy": "null",
      "creationDate": 0,
      "default": false,
      "description": "Return the generated OTP using a TextOutputCallback",
      "language": "JAVASCRIPT",
      "lastModifiedBy": "null",
      "lastModifiedDate": 0,
      "name": "Return OTP",
      "script": [
        "/* Return OTP",
        " *",
        " * Author: volker.scheuber@forgerock.com",
        " * ",
        " * Return the generated OTP using a TextOutputCallback.",
        " * ",
        " * This script does not need to be parametrized. It will work properly as is.",
        " * ",
        " * The Scripted Decision Node needs the following outcomes defined:",
        " * - true",
        " */",
        "outcome = "true";",
        "var fr = JavaImporter(",
        "    org.forgerock.openam.auth.node.api.Action,",
        "    javax.security.auth.callback.TextOutputCallback",
        ")",
        "if (callbacks.isEmpty()) {",
        "    action = fr.Action.send(",
        "        new fr.TextOutputCallback(",
        "            fr.TextOutputCallback.INFORMATION,",
        "            nodeState.get("oneTimePassword").asString()",
        "        )",
        "    ).build()",
        "}",
        "else {",
        "  action = fr.Action.goTo(outcome).build();",
        "}",
      ],
    },
    "d6469639-249f-4df1-9e03-335cd3e37b3d": {
      "_id": "d6469639-249f-4df1-9e03-335cd3e37b3d",
      "context": "AUTHENTICATION_TREE_DECISION_NODE",
      "createdBy": "null",
      "creationDate": 0,
      "default": false,
      "description": "null",
      "language": "JAVASCRIPT",
      "lastModifiedBy": "null",
      "lastModifiedDate": 0,
      "name": "Get Email",
      "script": [
        "logger.error("Get Email: start");",
        "outcome = "true";",
        "if (getProfileAttribute("mail")) {",
        "  setSharedObjectAttribute("mail", getProfileAttribute("mail"));",
        "}",
        "logger.error("Get Email: end");",
        "",
        "/*",
        " * Get profile attribute",
        " */",
        "function getProfileAttribute(name) {",
        "    return idRepository.getAttribute(sharedState.get("_id"), name).iterator().next();",
        "}",
        "",
        "/*",
        " * Properly set attributes in shared state for use with the Create/Patch Object nodes.",
        " */",
        "function setSharedObjectAttribute(name, value) {",
        "    if (sharedState.get("objectAttributes")) {",
        "        sharedState.get("objectAttributes").put(name, value);",
        "    }",
        "    else {",
        "        sharedState.put("objectAttributes", JSON.parse("{\\""+name+"\\":"+value+"}"));",
        "    }",
        "}",
      ],
    },
    "d6f3befb-c73a-437e-b02a-66d9b4c93f8b": {
      "_id": "d6f3befb-c73a-437e-b02a-66d9b4c93f8b",
      "context": "AUTHENTICATION_TREE_DECISION_NODE",
      "createdBy": "null",
      "creationDate": 0,
      "default": false,
      "description": "Extract impersonatee and impersonator from headers and become impersonator.",
      "language": "JAVASCRIPT",
      "lastModifiedBy": "null",
      "lastModifiedDate": 0,
      "name": "Impersonate: Extract Actors And Become Impersonator",
      "script": [
        "/* Impersonate: Extract Actors And Become Impersonator",
        " *",
        " * Extract impersonatee and impersonator from headers and become impersonatee.",
        " *",
        " * The Scripted Decision Node needs the following outcomes defined:",
        " * - true",
        " * - false",
        " */",
        "",
        "(function () {",
        "    logger.warning("Impersonate: Extract Actors: start");",
        "    outcome = "false";",
        "",
        "    /*",
        "     * BEGIN SCRIPT CONFIGURATION",
        "     */",
        "    var IMPERSONATEE_HEADER_NAME = "X-Impersonatee";",
        "    var IMPERSONATOR_HEADER_NAME = "X-Impersonator";",
        "    /*",
        "     * END SCRIPT CONFIGURATION",
        "     */",
        "",
        "    var impersonatee = getHeader(IMPERSONATEE_HEADER_NAME);",
        "    var impersonator = getHeader(IMPERSONATOR_HEADER_NAME);",
        "    if (impersonatee && impersonator) {",
        "        outcome = "true";",
        "        sharedState.put("impersonatee", impersonatee);",
        "        sharedState.put("impersonator", impersonator);",
        "        sharedState.put("username", impersonator);",
        "        setSharedObjectAttribute("userName", impersonator);",
        "    }",
        "",
        "    logger.warning("Impersonate: Extract Actors: finish [outcome=".concat(outcome).concat("]"));",
        "",
        "    /*",
        "     * Returns the value of the requested header",
        "     */",
        "    function getHeader(headerName) {",
        "        if (requestHeaders.get(headerName) && requestHeaders.get(headerName).get(0)) {",
        "            return requestHeaders.get(headerName).get(0).toString();",
        "        }",
        "        return null;",
        "    }",
        "",
        "    /*",
        "     * Store attributes in shared state for use with the Create/Patch Object nodes.",
        "     */",
        "    function setSharedObjectAttribute(name, value) {",
        "         var storage = sharedState.get("objectAttributes");",
        "        if (storage && value) {",
        "            if (storage.put) {",
        "                  storage.put(name, value);",
        "            }",
        "            else {",
        "                storage[name] = value;",
        "            }",
        "        }",
        "        else if (value) {",
        "            sharedState.put("objectAttributes", JSON.parse("{\\""+name+"\\":\\""+value+"\\"}"));",
        "        }",
        "    }",
        "}());",
      ],
    },
    "d70df7a8-6390-409d-b821-166272a9a9c8": {
      "_id": "d70df7a8-6390-409d-b821-166272a9a9c8",
      "context": "AUTHENTICATION_TREE_DECISION_NODE",
      "createdBy": "null",
      "creationDate": 0,
      "default": false,
      "description": "Collect all the configuration items required for the Inner Tree Evaluator to function properly.",
      "language": "JAVASCRIPT",
      "lastModifiedBy": "null",
      "lastModifiedDate": 0,
      "name": "Collect Inner Tree Evaluator Config",
      "script": [
        "/* Collect Inner Tree Evaluator Config",
        " * ",
        " * Collect all the configuration items required for the Inner Tree Evaluator to function properly.",
        " * ",
        " * This script does not need to be parametrized. It will work properly as is.",
        " * ",
        " * The Scripted Decision Node needs the following outcomes defined:",
        " * - true",
        " *",
        " * Author: volker.scheuber@forgerock.com",
        " */",
        "(function () {",
        "    outcome = "true";",
        "      var config = {",
        "        "tree": "Login",",
        "    };",
        "      var script = "";",
        "    script += "Array.prototype.slice.call(";",
        "    script += "    document.getElementsByTagName('input')";",
        "    script += ").forEach(";",
        "    script += "    function (input,i) {";",
        "    script += "        console.log('input '+i);"",
        "    script += "        var config = JSON.parse('"+JSON.stringify(config)+"');";",
        "    script += "        var keys = Object.keys(config);";",
        "    script += "        if (input.type === 'text') {";",
        "    script += "            input.setAttribute('value', config[keys[i]]);";",
        "    script += "            input.dispatchEvent(new KeyboardEvent( 'input' , {'key':'Enter'} ));";",
        "    script += "        }";",
        "    script += "    }";",
        "    script += ");";",
        "    var fr = JavaImporter(",
        "        org.forgerock.openam.auth.node.api.Action,",
        "          javax.security.auth.callback.NameCallback,",
        "        com.sun.identity.authentication.callbacks.ScriptTextOutputCallback",
        "    )",
        "    if (callbacks.isEmpty()) {",
        "        action = fr.Action.send(",
        "            new fr.NameCallback("tree", config.tree),",
        "              new fr.ScriptTextOutputCallback(script)",
        "        ).build();",
        "    }",
        "    else {",
        "          config[callbacks.get(0).getPrompt()] = callbacks.get(0).getName();",
        "          nodeState.putShared("nodeConfig", config);",
        "        action = fr.Action.goTo(outcome).build();",
        "    }",
        "}());",
      ],
    },
    "d82a4ad6-cd8a-437b-af55-7373e50d685b": {
      "_id": "d82a4ad6-cd8a-437b-af55-7373e50d685b",
      "context": "AUTHENTICATION_TREE_DECISION_NODE",
      "createdBy": "null",
      "creationDate": 0,
      "default": false,
      "description": "Collect Replay Password (frUnindexedString2).",
      "language": "JAVASCRIPT",
      "lastModifiedBy": "null",
      "lastModifiedDate": 0,
      "name": "Collect Replay Password (frUnindexedString2)",
      "script": [
        "/* Collect And Encrypt Custom Password",
        " * ",
        " * The Scripted Decision Node needs the following outcomes defined:",
        " * - true",
        " * ",
        " * See copyright notices, conditions, and disclaimers at the bottom of this script.",
        " * ",
        " * volker.scheuber@forgerock.com",
        " */",
        "(function () {",
        "    "use strict";var sjcl={cipher:{},hash:{},keyexchange:{},mode:{},misc:{},codec:{},exception:{corrupt:function(message){this.toString=function(){return"CORRUPT: "+this.message};this.message=message},invalid:function(message){this.toString=function(){return"INVALID: "+this.message};this.message=message},bug:function(message){this.toString=function(){return"BUG: "+this.message};this.message=message},notReady:function(message){this.toString=function(){return"NOT READY: "+this.message};this.message=message}}};sjcl.cipher.aes=function(key){if(!this._tables[0][0][0]){this._precompute()}var i,j,tmp,encKey,decKey,sbox=this._tables[0][4],decTable=this._tables[1],keyLen=key.length,rcon=1;if(keyLen!==4&&keyLen!==6&&keyLen!==8){throw new sjcl.exception.invalid("invalid aes key size")}this._key=[encKey=key.slice(0),decKey=[]];for(i=keyLen;i<4*keyLen+28;i++){tmp=encKey[i-1];if(i%keyLen===0||keyLen===8&&i%keyLen===4){tmp=sbox[tmp>>>24]<<24^sbox[tmp>>16&255]<<16^sbox[tmp>>8&255]<<8^sbox[tmp&255];if(i%keyLen===0){tmp=tmp<<8^tmp>>>24^rcon<<24;rcon=rcon<<1^(rcon>>7)*283}}encKey[i]=encKey[i-keyLen]^tmp}for(j=0;i;j++,i--){tmp=encKey[j&3?i:i-4];if(i<=4||j<4){decKey[j]=tmp}else{decKey[j]=decTable[0][sbox[tmp>>>24]]^decTable[1][sbox[tmp>>16&255]]^decTable[2][sbox[tmp>>8&255]]^decTable[3][sbox[tmp&255]]}}};sjcl.cipher.aes.prototype={encrypt:function(data){return this._crypt(data,0)},decrypt:function(data){return this._crypt(data,1)},_tables:[[[],[],[],[],[]],[[],[],[],[],[]]],_precompute:function(){var encTable=this._tables[0],decTable=this._tables[1],sbox=encTable[4],sboxInv=decTable[4],i,x,xInv,d=[],th=[],x2,x4,x8,s,tEnc,tDec;for(i=0;i<256;i++){th[(d[i]=i<<1^(i>>7)*283)^i]=i}for(x=xInv=0;!sbox[x];x^=x2||1,xInv=th[xInv]||1){s=xInv^xInv<<1^xInv<<2^xInv<<3^xInv<<4;s=s>>8^s&255^99;sbox[x]=s;sboxInv[s]=x;x8=d[x4=d[x2=d[x]]];tDec=x8*16843009^x4*65537^x2*257^x*16843008;tEnc=d[s]*257^s*16843008;for(i=0;i<4;i++){encTable[i][x]=tEnc=tEnc<<24^tEnc>>>8;decTable[i][s]=tDec=tDec<<24^tDec>>>8}}for(i=0;i<5;i++){encTable[i]=encTable[i].slice(0);decTable[i]=decTable[i].slice(0)}},_crypt:function(input,dir){if(input.length!==4){throw new sjcl.exception.invalid("invalid aes block size")}var key=this._key[dir],a=input[0]^key[0],b=input[dir?3:1]^key[1],c=input[2]^key[2],d=input[dir?1:3]^key[3],a2,b2,c2,nInnerRounds=key.length/4-2,i,kIndex=4,out=[0,0,0,0],table=this._tables[dir],t0=table[0],t1=table[1],t2=table[2],t3=table[3],sbox=table[4];for(i=0;i<nInnerRounds;i++){a2=t0[a>>>24]^t1[b>>16&255]^t2[c>>8&255]^t3[d&255]^key[kIndex];b2=t0[b>>>24]^t1[c>>16&255]^t2[d>>8&255]^t3[a&255]^key[kIndex+1];c2=t0[c>>>24]^t1[d>>16&255]^t2[a>>8&255]^t3[b&255]^key[kIndex+2];d=t0[d>>>24]^t1[a>>16&255]^t2[b>>8&255]^t3[c&255]^key[kIndex+3];kIndex+=4;a=a2;b=b2;c=c2}for(i=0;i<4;i++){out[dir?3&-i:i]=sbox[a>>>24]<<24^sbox[b>>16&255]<<16^sbox[c>>8&255]<<8^sbox[d&255]^key[kIndex++];a2=a;a=b;b=c;c=d;d=a2}return out}};sjcl.bitArray={bitSlice:function(a,bstart,bend){a=sjcl.bitArray._shiftRight(a.slice(bstart/32),32-(bstart&31)).slice(1);return bend===undefined?a:sjcl.bitArray.clamp(a,bend-bstart)},extract:function(a,bstart,blength){var x,sh=Math.floor(-bstart-blength&31);if((bstart+blength-1^bstart)&-32){x=a[bstart/32|0]<<32-sh^a[bstart/32+1|0]>>>sh}else{x=a[bstart/32|0]>>>sh}return x&(1<<blength)-1},concat:function(a1,a2){if(a1.length===0||a2.length===0){return a1.concat(a2)}var last=a1[a1.length-1],shift=sjcl.bitArray.getPartial(last);if(shift===32){return a1.concat(a2)}else{return sjcl.bitArray._shiftRight(a2,shift,last|0,a1.slice(0,a1.length-1))}},bitLength:function(a){var l=a.length,x;if(l===0){return 0}x=a[l-1];return(l-1)*32+sjcl.bitArray.getPartial(x)},clamp:function(a,len){if(a.length*32<len){return a}a=a.slice(0,Math.ceil(len/32));var l=a.length;len=len&31;if(l>0&&len){a[l-1]=sjcl.bitArray.partial(len,a[l-1]&2147483648>>len-1,1)}return a},partial:function(len,x,_end){if(len===32){return x}return(_end?x|0:x<<32-len)+len*1099511627776},getPartial:function(x){return Math.round(x/1099511627776)||32},equal:function(a,b){if(sjcl.bitArray.bitLength(a)!==sjcl.bitArray.bitLength(b)){return false}var x=0,i;for(i=0;i<a.length;i++){x|=a[i]^b[i]}return x===0},_shiftRight:function(a,shift,carry,out){var i,last2=0,shift2;if(out===undefined){out=[]}for(;shift>=32;shift-=32){out.push(carry);carry=0}if(shift===0){return out.concat(a)}for(i=0;i<a.length;i++){out.push(carry|a[i]>>>shift);carry=a[i]<<32-shift}last2=a.length?a[a.length-1]:0;shift2=sjcl.bitArray.getPartial(last2);out.push(sjcl.bitArray.partial(shift+shift2&31,shift+shift2>32?carry:out.pop(),1));return out},_xor4:function(x,y){return[x[0]^y[0],x[1]^y[1],x[2]^y[2],x[3]^y[3]]},byteswapM:function(a){var i,v,m=65280;for(i=0;i<a.length;++i){v=a[i];a[i]=v>>>24|v>>>8&m|(v&m)<<8|v<<24}return a}};sjcl.codec.utf8String={fromBits:function(arr){var out="",bl=sjcl.bitArray.bitLength(arr),i,tmp;for(i=0;i<bl/8;i++){if((i&3)===0){tmp=arr[i/4]}out+=String.fromCharCode(tmp>>>8>>>8>>>8);tmp<<=8}return decodeURIComponent(escape(out))},toBits:function(str){str=unescape(encodeURIComponent(str));var out=[],i,tmp=0;for(i=0;i<str.length;i++){tmp=tmp<<8|str.charCodeAt(i);if((i&3)===3){out.push(tmp);tmp=0}}if(i&3){out.push(sjcl.bitArray.partial(8*(i&3),tmp))}return out}};sjcl.codec.base64={_chars:"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/",fromBits:function(arr,_noEquals,_url){var out="",i,bits=0,c=sjcl.codec.base64._chars,ta=0,bl=sjcl.bitArray.bitLength(arr);if(_url){c=c.substr(0,62)+"-_"}for(i=0;out.length*6<bl;){out+=c.charAt((ta^arr[i]>>>bits)>>>26);if(bits<6){ta=arr[i]<<6-bits;bits+=26;i++}else{ta<<=6;bits-=6}}while(out.length&3&&!_noEquals){out+="="}return out},toBits:function(str,_url){str=str.replace(/\\s|=/g,"");var out=[],i,bits=0,c=sjcl.codec.base64._chars,ta=0,x;if(_url){c=c.substr(0,62)+"-_"}for(i=0;i<str.length;i++){x=c.indexOf(str.charAt(i));if(x<0){throw new sjcl.exception.invalid("this isn't base64!")}if(bits>26){bits-=26;out.push(ta^x>>>bits);ta=x<<32-bits}else{bits+=6;ta^=x<<32-bits}}if(bits&56){out.push(sjcl.bitArray.partial(bits&56,ta,1))}return out}};sjcl.codec.base64url={fromBits:function(arr){return sjcl.codec.base64.fromBits(arr,1,1)},toBits:function(str){return sjcl.codec.base64.toBits(str,1)}};sjcl.hash.sha256=function(hash){if(!this._key[0]){this._precompute()}if(hash){this._h=hash._h.slice(0);this._buffer=hash._buffer.slice(0);this._length=hash._length}else{this.reset()}};sjcl.hash.sha256.hash=function(data){return(new sjcl.hash.sha256).update(data).finalize()};sjcl.hash.sha256.prototype={blockSize:512,reset:function(){this._h=this._init.slice(0);this._buffer=[];this._length=0;return this},update:function(data){if(typeof data==="string"){data=sjcl.codec.utf8String.toBits(data)}var i,b=this._buffer=sjcl.bitArray.concat(this._buffer,data),ol=this._length,nl=this._length=ol+sjcl.bitArray.bitLength(data);if(nl>9007199254740991){throw new sjcl.exception.invalid("Cannot hash more than 2^53 - 1 bits")}if(typeof Uint32Array!=="undefined"){var c=new Uint32Array(b);var j=0;for(i=512+ol-(512+ol&511);i<=nl;i+=512){this._block(c.subarray(16*j,16*(j+1)));j+=1}b.splice(0,16*j)}else{for(i=512+ol-(512+ol&511);i<=nl;i+=512){this._block(b.splice(0,16))}}return this},finalize:function(){var i,b=this._buffer,h=this._h;b=sjcl.bitArray.concat(b,[sjcl.bitArray.partial(1,1)]);for(i=b.length+2;i&15;i++){b.push(0)}b.push(Math.floor(this._length/4294967296));b.push(this._length|0);while(b.length){this._block(b.splice(0,16))}this.reset();return h},_init:[],_key:[],_precompute:function(){var i=0,prime=2,factor,isPrime;function frac(x){return(x-Math.floor(x))*4294967296|0}for(;i<64;prime++){isPrime=true;for(factor=2;factor*factor<=prime;factor++){if(prime%factor===0){isPrime=false;break}}if(isPrime){if(i<8){this._init[i]=frac(Math.pow(prime,1/2))}this._key[i]=frac(Math.pow(prime,1/3));i++}}},_block:function(w){var i,tmp,a,b,h=this._h,k=this._key,h0=h[0],h1=h[1],h2=h[2],h3=h[3],h4=h[4],h5=h[5],h6=h[6],h7=h[7];for(i=0;i<64;i++){if(i<16){tmp=w[i]}else{a=w[i+1&15];b=w[i+14&15];tmp=w[i&15]=(a>>>7^a>>>18^a>>>3^a<<25^a<<14)+(b>>>17^b>>>19^b>>>10^b<<15^b<<13)+w[i&15]+w[i+9&15]|0}tmp=tmp+h7+(h4>>>6^h4>>>11^h4>>>25^h4<<26^h4<<21^h4<<7)+(h6^h4&(h5^h6))+k[i];h7=h6;h6=h5;h5=h4;h4=h3+tmp|0;h3=h2;h2=h1;h1=h0;h0=tmp+(h1&h2^h3&(h1^h2))+(h1>>>2^h1>>>13^h1>>>22^h1<<30^h1<<19^h1<<10)|0}h[0]=h[0]+h0|0;h[1]=h[1]+h1|0;h[2]=h[2]+h2|0;h[3]=h[3]+h3|0;h[4]=h[4]+h4|0;h[5]=h[5]+h5|0;h[6]=h[6]+h6|0;h[7]=h[7]+h7|0}};sjcl.mode.ccm={name:"ccm",_progressListeners:[],listenProgress:function(cb){sjcl.mode.ccm._progressListeners.push(cb)},unListenProgress:function(cb){var index=sjcl.mode.ccm._progressListeners.indexOf(cb);if(index>-1){sjcl.mode.ccm._progressListeners.splice(index,1)}},_callProgressListener:function(val){var p=sjcl.mode.ccm._progressListeners.slice(),i;for(i=0;i<p.length;i+=1){p[i](val)}},encrypt:function(prf,plaintext,iv,adata,tlen){var L,out=plaintext.slice(0),tag,w=sjcl.bitArray,ivl=w.bitLength(iv)/8,ol=w.bitLength(out)/8;tlen=tlen||64;adata=adata||[];if(ivl<7){throw new sjcl.exception.invalid("ccm: iv must be at least 7 bytes")}for(L=2;L<4&&ol>>>8*L;L++){}if(L<15-ivl){L=15-ivl}iv=w.clamp(iv,8*(15-L));tag=sjcl.mode.ccm._computeTag(prf,plaintext,iv,adata,tlen,L);out=sjcl.mode.ccm._ctrMode(prf,out,iv,tag,tlen,L);return w.concat(out.data,out.tag)},decrypt:function(prf,ciphertext,iv,adata,tlen){tlen=tlen||64;adata=adata||[];var L,w=sjcl.bitArray,ivl=w.bitLength(iv)/8,ol=w.bitLength(ciphertext),out=w.clamp(ciphertext,ol-tlen),tag=w.bitSlice(ciphertext,ol-tlen),tag2;ol=(ol-tlen)/8;if(ivl<7){throw new sjcl.exception.invalid("ccm: iv must be at least 7 bytes")}for(L=2;L<4&&ol>>>8*L;L++){}if(L<15-ivl){L=15-ivl}iv=w.clamp(iv,8*(15-L));out=sjcl.mode.ccm._ctrMode(prf,out,iv,tag,tlen,L);tag2=sjcl.mode.ccm._computeTag(prf,out.data,iv,adata,tlen,L);if(!w.equal(out.tag,tag2)){throw new sjcl.exception.corrupt("ccm: tag doesn't match")}return out.data},_macAdditionalData:function(prf,adata,iv,tlen,ol,L){var mac,tmp,i,macData=[],w=sjcl.bitArray,xor=w._xor4;mac=[w.partial(8,(adata.length?1<<6:0)|tlen-2<<2|L-1)];mac=w.concat(mac,iv);mac[3]|=ol;mac=prf.encrypt(mac);if(adata.length){tmp=w.bitLength(adata)/8;if(tmp<=65279){macData=[w.partial(16,tmp)]}else if(tmp<=4294967295){macData=w.concat([w.partial(16,65534)],[tmp])}macData=w.concat(macData,adata);for(i=0;i<macData.length;i+=4){mac=prf.encrypt(xor(mac,macData.slice(i,i+4).concat([0,0,0])))}}return mac},_computeTag:function(prf,plaintext,iv,adata,tlen,L){var mac,i,w=sjcl.bitArray,xor=w._xor4;tlen/=8;if(tlen%2||tlen<4||tlen>16){throw new sjcl.exception.invalid("ccm: invalid tag length")}if(adata.length>4294967295||plaintext.length>4294967295){throw new sjcl.exception.bug("ccm: can't deal with 4GiB or more data")}mac=sjcl.mode.ccm._macAdditionalData(prf,adata,iv,tlen,w.bitLength(plaintext)/8,L);for(i=0;i<plaintext.length;i+=4){mac=prf.encrypt(xor(mac,plaintext.slice(i,i+4).concat([0,0,0])))}return w.clamp(mac,tlen*8)},_ctrMode:function(prf,data,iv,tag,tlen,L){var enc,i,w=sjcl.bitArray,xor=w._xor4,ctr,l=data.length,bl=w.bitLength(data),n=l/50,p=n;ctr=w.concat([w.partial(8,L-1)],iv).concat([0,0,0]).slice(0,4);tag=w.bitSlice(xor(tag,prf.encrypt(ctr)),0,tlen);if(!l){return{tag:tag,data:[]}}for(i=0;i<l;i+=4){if(i>n){sjcl.mode.ccm._callProgressListener(i/l);n+=p}ctr[3]++;enc=prf.encrypt(ctr);data[i]^=enc[0];data[i+1]^=enc[1];data[i+2]^=enc[2];data[i+3]^=enc[3]}return{tag:tag,data:w.clamp(data,bl)}}};sjcl.misc.hmac=function(key,Hash){this._hash=Hash=Hash||sjcl.hash.sha256;var exKey=[[],[]],i,bs=Hash.prototype.blockSize/32;this._baseHash=[new Hash,new Hash];if(key.length>bs){key=Hash.hash(key)}for(i=0;i<bs;i++){exKey[0][i]=key[i]^909522486;exKey[1][i]=key[i]^1549556828}this._baseHash[0].update(exKey[0]);this._baseHash[1].update(exKey[1]);this._resultHash=new Hash(this._baseHash[0])};sjcl.misc.hmac.prototype.encrypt=sjcl.misc.hmac.prototype.mac=function(data){if(!this._updated){this.update(data);return this.digest(data)}else{throw new sjcl.exception.invalid("encrypt on already updated hmac called!")}};sjcl.misc.hmac.prototype.reset=function(){this._resultHash=new this._hash(this._baseHash[0]);this._updated=false};sjcl.misc.hmac.prototype.update=function(data){this._updated=true;this._resultHash.update(data)};sjcl.misc.hmac.prototype.digest=function(){var w=this._resultHash.finalize(),result=new this._hash(this._baseHash[1]).update(w).finalize();this.reset();return result};sjcl.misc.pbkdf2=function(password,salt,count,length,Prff){count=count||1e4;if(length<0||count<0){throw new sjcl.exception.invalid("invalid params to pbkdf2")}if(typeof password==="string"){password=sjcl.codec.utf8String.toBits(password)}if(typeof salt==="string"){salt=sjcl.codec.utf8String.toBits(salt)}Prff=Prff||sjcl.misc.hmac;var prf=new Prff(password),u,ui,i,j,k,out=[],b=sjcl.bitArray;for(k=1;32*out.length<(length||1);k++){u=ui=prf.encrypt(b.concat(salt,[k]));for(i=1;i<count;i++){ui=prf.encrypt(ui);for(j=0;j<ui.length;j++){u[j]^=ui[j]}}out=out.concat(u)}if(length){out=b.clamp(out,length)}return out};sjcl.prng=function(defaultParanoia){this._pools=[new sjcl.hash.sha256];this._poolEntropy=[0];this._reseedCount=0;this._robins={};this._eventId=0;this._collectorIds={};this._collectorIdNext=0;this._strength=0;this._poolStrength=0;this._nextReseed=0;this._key=[0,0,0,0,0,0,0,0];this._counter=[0,0,0,0];this._cipher=undefined;this._defaultParanoia=defaultParanoia;this._collectorsStarted=false;this._callbacks={progress:{},seeded:{}};this._callbackI=0;this._NOT_READY=0;this._READY=1;this._REQUIRES_RESEED=2;this._MAX_WORDS_PER_BURST=65536;this._PARANOIA_LEVELS=[0,48,64,96,128,192,256,384,512,768,1024];this._MILLISECONDS_PER_RESEED=3e4;this._BITS_PER_RESEED=80};sjcl.prng.prototype={randomWords:function(nwords,paranoia){var out=[],i,readiness=this.isReady(paranoia),g;if(readiness===this._NOT_READY){throw new sjcl.exception.notReady("generator isn't seeded")}else if(readiness&this._REQUIRES_RESEED){this._reseedFromPools(!(readiness&this._READY))}for(i=0;i<nwords;i+=4){if((i+1)%this._MAX_WORDS_PER_BURST===0){this._gate()}g=this._gen4words();out.push(g[0],g[1],g[2],g[3])}this._gate();return out.slice(0,nwords)},setDefaultParanoia:function(paranoia,allowZeroParanoia){if(paranoia===0&&allowZeroParanoia!=="Setting paranoia=0 will ruin your security; use it only for testing"){throw new sjcl.exception.invalid("Setting paranoia=0 will ruin your security; use it only for testing")}this._defaultParanoia=paranoia},addEntropy:function(data,estimatedEntropy,source){source=source||"user";var id,i,tmp,t=(new Date).valueOf(),robin=this._robins[source],oldReady=this.isReady(),err=0,objName;id=this._collectorIds[source];if(id===undefined){id=this._collectorIds[source]=this._collectorIdNext++}if(robin===undefined){robin=this._robins[source]=0}this._robins[source]=(this._robins[source]+1)%this._pools.length;switch(typeof data){case"number":if(estimatedEntropy===undefined){estimatedEntropy=1}this._pools[robin].update([id,this._eventId++,1,estimatedEntropy,t,1,data|0]);break;case"object":objName=Object.prototype.toString.call(data);if(objName==="[object Uint32Array]"){tmp=[];for(i=0;i<data.length;i++){tmp.push(data[i])}data=tmp}else{if(objName!=="[object Array]"){err=1}for(i=0;i<data.length&&!err;i++){if(typeof data[i]!=="number"){err=1}}}if(!err){if(estimatedEntropy===undefined){estimatedEntropy=0;for(i=0;i<data.length;i++){tmp=data[i];while(tmp>0){estimatedEntropy++;tmp=tmp>>>1}}}this._pools[robin].update([id,this._eventId++,2,estimatedEntropy,t,data.length].concat(data))}break;case"string":if(estimatedEntropy===undefined){estimatedEntropy=data.length}this._pools[robin].update([id,this._eventId++,3,estimatedEntropy,t,data.length]);this._pools[robin].update(data);break;default:err=1}if(err){throw new sjcl.exception.bug("random: addEntropy only supports number, array of numbers or string")}this._poolEntropy[robin]+=estimatedEntropy;this._poolStrength+=estimatedEntropy;if(oldReady===this._NOT_READY){if(this.isReady()!==this._NOT_READY){this._fireEvent("seeded",Math.max(this._strength,this._poolStrength))}this._fireEvent("progress",this.getProgress())}},isReady:function(paranoia){var entropyRequired=this._PARANOIA_LEVELS[paranoia!==undefined?paranoia:this._defaultParanoia];if(this._strength&&this._strength>=entropyRequired){return this._poolEntropy[0]>this._BITS_PER_RESEED&&(new Date).valueOf()>this._nextReseed?this._REQUIRES_RESEED|this._READY:this._READY}else{return this._poolStrength>=entropyRequired?this._REQUIRES_RESEED|this._NOT_READY:this._NOT_READY}},getProgress:function(paranoia){var entropyRequired=this._PARANOIA_LEVELS[paranoia?paranoia:this._defaultParanoia];if(this._strength>=entropyRequired){return 1}else{return this._poolStrength>entropyRequired?1:this._poolStrength/entropyRequired}},startCollectors:function(){if(this._collectorsStarted){return}this._eventListener={loadTimeCollector:this._bind(this._loadTimeCollector),mouseCollector:this._bind(this._mouseCollector),keyboardCollector:this._bind(this._keyboardCollector),accelerometerCollector:this._bind(this._accelerometerCollector),touchCollector:this._bind(this._touchCollector)};if(window.addEventListener){window.addEventListener("load",this._eventListener.loadTimeCollector,false);window.addEventListener("mousemove",this._eventListener.mouseCollector,false);window.addEventListener("keypress",this._eventListener.keyboardCollector,false);window.addEventListener("devicemotion",this._eventListener.accelerometerCollector,false);window.addEventListener("touchmove",this._eventListener.touchCollector,false)}else if(document.attachEvent){document.attachEvent("onload",this._eventListener.loadTimeCollector);document.attachEvent("onmousemove",this._eventListener.mouseCollector);document.attachEvent("keypress",this._eventListener.keyboardCollector)}else{throw new sjcl.exception.bug("can't attach event")}this._collectorsStarted=true},stopCollectors:function(){if(!this._collectorsStarted){return}if(window.removeEventListener){window.removeEventListener("load",this._eventListener.loadTimeCollector,false);window.removeEventListener("mousemove",this._eventListener.mouseCollector,false);window.removeEventListener("keypress",this._eventListener.keyboardCollector,false);window.removeEventListener("devicemotion",this._eventListener.accelerometerCollector,false);window.removeEventListener("touchmove",this._eventListener.touchCollector,false)}else if(document.detachEvent){document.detachEvent("onload",this._eventListener.loadTimeCollector);document.detachEvent("onmousemove",this._eventListener.mouseCollector);document.detachEvent("keypress",this._eventListener.keyboardCollector)}this._collectorsStarted=false},addEventListener:function(name,callback){this._callbacks[name][this._callbackI++]=callback},removeEventListener:function(name,cb){var i,j,cbs=this._callbacks[name],jsTemp=[];for(j in cbs){if(cbs.hasOwnProperty(j)&&cbs[j]===cb){jsTemp.push(j)}}for(i=0;i<jsTemp.length;i++){j=jsTemp[i];delete cbs[j]}},_bind:function(func){var that=this;return function(){func.apply(that,arguments)}},_gen4words:function(){for(var i=0;i<4;i++){this._counter[i]=this._counter[i]+1|0;if(this._counter[i]){break}}return this._cipher.encrypt(this._counter)},_gate:function(){this._key=this._gen4words().concat(this._gen4words());this._cipher=new sjcl.cipher.aes(this._key)},_reseed:function(seedWords){this._key=sjcl.hash.sha256.hash(this._key.concat(seedWords));this._cipher=new sjcl.cipher.aes(this._key);for(var i=0;i<4;i++){this._counter[i]=this._counter[i]+1|0;if(this._counter[i]){break}}},_reseedFromPools:function(full){var reseedData=[],strength=0,i;this._nextReseed=reseedData[0]=(new Date).valueOf()+this._MILLISECONDS_PER_RESEED;for(i=0;i<16;i++){reseedData.push(Math.random()*4294967296|0)}for(i=0;i<this._pools.length;i++){reseedData=reseedData.concat(this._pools[i].finalize());strength+=this._poolEntropy[i];this._poolEntropy[i]=0;if(!full&&this._reseedCount&1<<i){break}}if(this._reseedCount>=1<<this._pools.length){this._pools.push(new sjcl.hash.sha256);this._poolEntropy.push(0)}this._poolStrength-=strength;if(strength>this._strength){this._strength=strength}this._reseedCount++;this._reseed(reseedData)},_keyboardCollector:function(){this._addCurrentTimeToEntropy(1)},_mouseCollector:function(ev){var x,y;try{x=ev.x||ev.clientX||ev.offsetX||0;y=ev.y||ev.clientY||ev.offsetY||0}catch(err){x=0;y=0}if(x!=0&&y!=0){this.addEntropy([x,y],2,"mouse")}this._addCurrentTimeToEntropy(0)},_touchCollector:function(ev){var touch=ev.touches[0]||ev.changedTouches[0];var x=touch.pageX||touch.clientX,y=touch.pageY||touch.clientY;this.addEntropy([x,y],1,"touch");this._addCurrentTimeToEntropy(0)},_loadTimeCollector:function(){this._addCurrentTimeToEntropy(2)},_addCurrentTimeToEntropy:function(estimatedEntropy){if(typeof window!=="undefined"&&window.performance&&typeof window.performance.now==="function"){this.addEntropy(window.performance.now(),estimatedEntropy,"loadtime")}else{this.addEntropy((new Date).valueOf(),estimatedEntropy,"loadtime")}},_accelerometerCollector:function(ev){var ac=ev.accelerationIncludingGravity.x||ev.accelerationIncludingGravity.y||ev.accelerationIncludingGravity.z;if(window.orientation){var or=window.orientation;if(typeof or==="number"){this.addEntropy(or,1,"accelerometer")}}if(ac){this.addEntropy(ac,2,"accelerometer")}this._addCurrentTimeToEntropy(0)},_fireEvent:function(name,arg){var j,cbs=sjcl.random._callbacks[name],cbsTemp=[];for(j in cbs){if(cbs.hasOwnProperty(j)){cbsTemp.push(cbs[j])}}for(j=0;j<cbsTemp.length;j++){cbsTemp[j](arg)}}};sjcl.random=new sjcl.prng(6);(function(){function getCryptoModule(){try{return require("crypto")}catch(e){return null}}try{var buf,crypt,ab;if(typeof module!=="undefined"&&module.exports&&(crypt=getCryptoModule())&&crypt.randomBytes){buf=crypt.randomBytes(1024/8);buf=new Uint32Array(new Uint8Array(buf).buffer);sjcl.random.addEntropy(buf,1024,"crypto.randomBytes")}else if(typeof window!=="undefined"&&typeof Uint32Array!=="undefined"){ab=new Uint32Array(32);if(window.crypto&&window.crypto.getRandomValues){window.crypto.getRandomValues(ab)}else if(window.msCrypto&&window.msCrypto.getRandomValues){window.msCrypto.getRandomValues(ab)}else{return}sjcl.random.addEntropy(ab,1024,"crypto.getRandomValues")}else{}}catch(e){if(typeof window!=="undefined"&&window.console){console.log("There was an error collecting entropy from the browser:");console.log(e)}}})();sjcl.json={defaults:{v:1,iter:1e4,ks:128,ts:64,mode:"ccm",adata:"",cipher:"aes"},_encrypt:function(password,plaintext,params,rp){params=params||{};rp=rp||{};var j=sjcl.json,p=j._add({iv:sjcl.random.randomWords(4,0)},j.defaults),tmp,prp,adata;j._add(p,params);adata=p.adata;if(typeof p.salt==="string"){p.salt=sjcl.codec.base64.toBits(p.salt)}if(typeof p.iv==="string"){p.iv=sjcl.codec.base64.toBits(p.iv)}if(!sjcl.mode[p.mode]||!sjcl.cipher[p.cipher]||typeof password==="string"&&p.iter<=100||p.ts!==64&&p.ts!==96&&p.ts!==128||p.ks!==128&&p.ks!==192&&p.ks!==256||(p.iv.length<2||p.iv.length>4)){throw new sjcl.exception.invalid("json encrypt: invalid parameters")}if(typeof password==="string"){tmp=sjcl.misc.cachedPbkdf2(password,p);password=tmp.key.slice(0,p.ks/32);p.salt=tmp.salt}else if(sjcl.ecc&&password instanceof sjcl.ecc.elGamal.publicKey){tmp=password.kem();p.kemtag=tmp.tag;password=tmp.key.slice(0,p.ks/32)}if(typeof plaintext==="string"){plaintext=sjcl.codec.utf8String.toBits(plaintext)}if(typeof adata==="string"){p.adata=adata=sjcl.codec.utf8String.toBits(adata)}prp=new sjcl.cipher[p.cipher](password);j._add(rp,p);rp.key=password;if(p.mode==="ccm"&&sjcl.arrayBuffer&&sjcl.arrayBuffer.ccm&&plaintext instanceof ArrayBuffer){p.ct=sjcl.arrayBuffer.ccm.encrypt(prp,plaintext,p.iv,adata,p.ts)}else{p.ct=sjcl.mode[p.mode].encrypt(prp,plaintext,p.iv,adata,p.ts)}return p},encrypt:function(password,plaintext,params,rp){var j=sjcl.json,p=j._encrypt.apply(j,arguments);return j.encode(p)},_decrypt:function(password,ciphertext,params,rp){params=params||{};rp=rp||{};var j=sjcl.json,p=j._add(j._add(j._add({},j.defaults),ciphertext),params,true),ct,tmp,prp,adata=p.adata;if(typeof p.salt==="string"){p.salt=sjcl.codec.base64.toBits(p.salt)}if(typeof p.iv==="string"){p.iv=sjcl.codec.base64.toBits(p.iv)}if(!sjcl.mode[p.mode]||!sjcl.cipher[p.cipher]||typeof password==="string"&&p.iter<=100||p.ts!==64&&p.ts!==96&&p.ts!==128||p.ks!==128&&p.ks!==192&&p.ks!==256||!p.iv||(p.iv.length<2||p.iv.length>4)){throw new sjcl.exception.invalid("json decrypt: invalid parameters")}if(typeof password==="string"){tmp=sjcl.misc.cachedPbkdf2(password,p);password=tmp.key.slice(0,p.ks/32);p.salt=tmp.salt}else if(sjcl.ecc&&password instanceof sjcl.ecc.elGamal.secretKey){password=password.unkem(sjcl.codec.base64.toBits(p.kemtag)).slice(0,p.ks/32)}if(typeof adata==="string"){adata=sjcl.codec.utf8String.toBits(adata)}prp=new sjcl.cipher[p.cipher](password);if(p.mode==="ccm"&&sjcl.arrayBuffer&&sjcl.arrayBuffer.ccm&&p.ct instanceof ArrayBuffer){ct=sjcl.arrayBuffer.ccm.decrypt(prp,p.ct,p.iv,p.tag,adata,p.ts)}else{ct=sjcl.mode[p.mode].decrypt(prp,p.ct,p.iv,adata,p.ts)}j._add(rp,p);rp.key=password;if(params.raw===1){return ct}else{return sjcl.codec.utf8String.fromBits(ct)}},decrypt:function(password,ciphertext,params,rp){var j=sjcl.json;return j._decrypt(password,j.decode(ciphertext),params,rp)},encode:function(obj){var i,out="{",comma="";for(i in obj){if(obj.hasOwnProperty(i)){if(!i.match(/^[a-z0-9]+$/i)){throw new sjcl.exception.invalid("json encode: invalid property name")}out+=comma+'"'+i+'":';comma=",";switch(typeof obj[i]){case"number":case"boolean":out+=obj[i];break;case"string":out+='"'+escape(obj[i])+'"';break;case"object":out+='"'+sjcl.codec.base64.fromBits(obj[i],0)+'"';break;default:throw new sjcl.exception.bug("json encode: unsupported type")}}}return out+"}"},decode:function(str){str=str.replace(/\\s/g,"");if(!str.match(/^\\{.*}$/)){throw new sjcl.exception.invalid("json decode: this isn't json!")}var a=str.replace(/^\\{|}$/g,"").split(/,/),out={},i,m;for(i=0;i<a.length;i++){if(!(m=a[i].match(/^\\s*(?:(["']?)([a-z][a-z0-9]*)\\1)\\s*:\\s*(?:(-?\\d+)|"([a-z0-9+\\/%*_.@=\\-]*)"|(true|false))$/i))){throw new sjcl.exception.invalid("json decode: this isn't json!")}if(m[3]!=null){out[m[2]]=parseInt(m[3],10)}else if(m[4]!=null){out[m[2]]=m[2].match(/^(ct|adata|salt|iv)$/)?sjcl.codec.base64.toBits(m[4]):unescape(m[4])}else if(m[5]!=null){out[m[2]]=m[5]==="true"}}return out},_add:function(target,src,requireSame){if(target===undefined){target={}}if(src===undefined){return target}var i;for(i in src){if(src.hasOwnProperty(i)){if(requireSame&&target[i]!==undefined&&target[i]!==src[i]){throw new sjcl.exception.invalid("required parameter overridden")}target[i]=src[i]}}return target},_subtract:function(plus,minus){var out={},i;for(i in plus){if(plus.hasOwnProperty(i)&&plus[i]!==minus[i]){out[i]=plus[i]}}return out},_filter:function(src,filter){var out={},i;for(i=0;i<filter.length;i++){if(src[filter[i]]!==undefined){out[filter[i]]=src[filter[i]]}}return out}};sjcl.encrypt=sjcl.json.encrypt;sjcl.decrypt=sjcl.json.decrypt;sjcl.misc._pbkdf2Cache={};sjcl.misc.cachedPbkdf2=function(password,obj){var cache=sjcl.misc._pbkdf2Cache,c,cp,str,salt,iter;obj=obj||{};iter=obj.iter||1e3;cp=cache[password]=cache[password]||{};c=cp[iter]=cp[iter]||{firstSalt:obj.salt&&obj.salt.length?obj.salt.slice(0):sjcl.random.randomWords(2,0)};salt=obj.salt===undefined?c.firstSalt:obj.salt;c[salt]=c[salt]||sjcl.misc.pbkdf2(password,salt,obj.iter);return{key:c[salt].slice(0),salt:salt.slice(0)}};if(typeof module!=="undefined"&&module.exports){module.exports=sjcl}if(typeof define==="function"){define([],function(){return sjcl})}",
        "    var Base64={_keyStr:"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=",encode:function(input){var output="";var chr1,chr2,chr3,enc1,enc2,enc3,enc4;var i=0;input=Base64._utf8_encode(input);while(i<input.length){chr1=input.charCodeAt(i++);chr2=input.charCodeAt(i++);chr3=input.charCodeAt(i++);enc1=chr1>>2;enc2=(chr1&3)<<4|chr2>>4;enc3=(chr2&15)<<2|chr3>>6;enc4=chr3&63;if(isNaN(chr2)){enc3=enc4=64}else if(isNaN(chr3)){enc4=64}output=output+this._keyStr.charAt(enc1)+this._keyStr.charAt(enc2)+this._keyStr.charAt(enc3)+this._keyStr.charAt(enc4)}return output},decode:function(input){var output="";var chr1,chr2,chr3;var enc1,enc2,enc3,enc4;var i=0;input=input.replace(/[^A-Za-z0-9\\+\\/\\=]/g,"");while(i<input.length){enc1=this._keyStr.indexOf(input.charAt(i++));enc2=this._keyStr.indexOf(input.charAt(i++));enc3=this._keyStr.indexOf(input.charAt(i++));enc4=this._keyStr.indexOf(input.charAt(i++));chr1=enc1<<2|enc2>>4;chr2=(enc2&15)<<4|enc3>>2;chr3=(enc3&3)<<6|enc4;output=output+String.fromCharCode(chr1);if(enc3!=64){output=output+String.fromCharCode(chr2)}if(enc4!=64){output=output+String.fromCharCode(chr3)}}output=Base64._utf8_decode(output);return output},_utf8_encode:function(string){string=string.replace(/\\r\\n/g,"\\n");var utftext="";for(var n=0;n<string.length;n++){var c=string.charCodeAt(n);if(c<128){utftext+=String.fromCharCode(c)}else if(c>127&&c<2048){utftext+=String.fromCharCode(c>>6|192);utftext+=String.fromCharCode(c&63|128)}else{utftext+=String.fromCharCode(c>>12|224);utftext+=String.fromCharCode(c>>6&63|128);utftext+=String.fromCharCode(c&63|128)}}return utftext},_utf8_decode:function(utftext){var string="";var i=0;var c=c1=c2=0;while(i<utftext.length){c=utftext.charCodeAt(i);if(c<128){string+=String.fromCharCode(c);i++}else if(c>191&&c<224){c2=utftext.charCodeAt(i+1);string+=String.fromCharCode((c&31)<<6|c2&63);i+=2}else{c2=utftext.charCodeAt(i+1);c3=utftext.charCodeAt(i+2);string+=String.fromCharCode((c&15)<<12|(c2&63)<<6|c3&63);i+=3}}return string}};",
        "",
        "      logger.message("Collect And Encrypt Custom Password: start");",
        "    outcome = "true";",
        "  ",
        "    /* Begin Configuration */",
        "      ",
        "      // Attribute name",
        "      var idmAttrName = "frUnindexedString2"; // AM: "fr-attr-str2"",
        "      ",
        "      // Pick a shared secret to use for encryption and decryption",
        "    var sharedSecret = "RainbowPoniesHaveNoStripes";",
        "",
        "      // Fine-tune encryption settings. Default iterations are 10k, to speed up the process, it's reduced to 1k here.",
        "      var encryptionParameters = { "iter" : 1000 };",
        "      ",
        "    // Build out the password prompt",
        "    var prompt = "Replay Password";",
        "",
        "    /* End Configuration */",
        "  ",
        "    var fr = JavaImporter(",
        "        org.forgerock.openam.auth.node.api.Action,",
        "        javax.security.auth.callback.PasswordCallback,",
        "          java.lang.String",
        "    )",
        "    ",
        "    if (callbacks.isEmpty()) {",
        "        action = fr.Action.send(",
        "          new fr.PasswordCallback(prompt, false)",
        "        ).build();",
        "    } ",
        "    else {",
        "          // PasswordCallback returns the password as a char[], which is not the same as a JS char array. It must be converted to a proper string using the java.lang.Sting.valueOf(char[]) method.",
        "        var password = new String(fr.String.valueOf(callbacks.get(0).getPassword()));",
        "        logger.message("Collect And Encrypt Custom Password: callbacks received");",
        "",
        "          /*",
        "        var cipherPasswordJson = sjcl.encrypt(sharedSecret, password, encryptionParameters);",
        "        //setSharedObjectAttribute(idmAttrName, Base64.encode(JSON.stringify(cipherPasswordJson)));",
        "        setSharedObjectAttribute(idmAttrName, JSON.stringify(cipherPasswordJson));",
        "        logger.message("Collect And Encrypt Custom Password: cipherPasswordJson="+JSON.stringify(cipherPasswordJson));",
        "        */",
        "      ",
        "        logger.message("Collect And Encrypt Custom Password: password="+Base64.encode(password));",
        "        setSharedObjectAttribute(idmAttrName, Base64.encode(password));",
        "",
        "        logger.message("Collect And Encrypt Custom Password: finish [outcome=".concat(outcome).concat("]"));",
        "        action = fr.Action.goTo(outcome).build();",
        "    }",
        "",
        "    /*",
        "     * Store attributes in shared state for use with the Create/Patch Object nodes.",
        "     */",
        "    function setSharedObjectAttribute(name, value) {",
        "        var storage = sharedState.get("objectAttributes");",
        "        if (storage && value) {",
        "            if (storage.put) {",
        "                  storage.put(name, value);",
        "            }",
        "            else {",
        "                storage[name] = value;",
        "            }",
        "        }",
        "        else if (value) {",
        "              var object = {",
        "                  name: value",
        "            };",
        "            sharedState.put("objectAttributes", object);",
        "            //sharedState.put("objectAttributes", JSON.parse("{\\""+name+"\\":\\""+value+"\\"}"));",
        "        }",
        "    }",
        "}());",
        "/* SJCL is open. You can use, modify and redistribute it under a BSD",
        "license or under the GNU GPL, version 2.0.",
        "",
        "---------------------------------------------------------------------",
        "",
        "http://opensource.org/licenses/BSD-2-Clause",
        "",
        "Copyright (c) 2009-2015, Emily Stark, Mike Hamburg and Dan Boneh at",
        "Stanford University. All rights reserved.",
        "",
        "Redistribution and use in source and binary forms, with or without",
        "modification, are permitted provided that the following conditions are",
        "met:",
        "",
        "1. Redistributions of source code must retain the above copyright",
        "notice, this list of conditions and the following disclaimer.",
        "",
        "2. Redistributions in binary form must reproduce the above copyright",
        "notice, this list of conditions and the following disclaimer in the",
        "documentation and/or other materials provided with the distribution.",
        "",
        "THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS",
        "IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED",
        "TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A",
        "PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT",
        "HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,",
        "SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED",
        "TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR",
        "PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF",
        "LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING",
        "NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS",
        "SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.",
        "",
        "---------------------------------------------------------------------",
        "",
        "http://opensource.org/licenses/GPL-2.0",
        "",
        "The Stanford Javascript Crypto Library (hosted here on GitHub) is a",
        "project by the Stanford Computer Security Lab to build a secure,",
        "powerful, fast, small, easy-to-use, cross-browser library for",
        "cryptography in Javascript.",
        "",
        "Copyright (c) 2009-2015, Emily Stark, Mike Hamburg and Dan Boneh at",
        "Stanford University.",
        "",
        "This program is free software; you can redistribute it and/or modify it",
        "under the terms of the GNU General Public License as published by the",
        "Free Software Foundation; either version 2 of the License, or (at your",
        "option) any later version.",
        "",
        "This program is distributed in the hope that it will be useful, but",
        "WITHOUT ANY WARRANTY; without even the implied warranty of",
        "MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU General",
        "Public License for more details.",
        "",
        "You should have received a copy of the GNU General Public License along",
        "with this program; if not, write to the Free Software Foundation, Inc.,",
        "59 Temple Place, Suite 330, Boston, MA 02111-1307 USA */",
        "",
        "/*",
        " * Base64 encode / decode",
        " *  http://www.webtoolkit.info/",
        " * ",
        " * Example:",
        " * Base64.encode('some string')",
        " * Base64.decode('some encoded string')",
        " */",
      ],
    },
    "db854830-a069-471f-875a-8dc67d45ea2d": {
      "_id": "db854830-a069-471f-875a-8dc67d45ea2d",
      "context": "AUTHENTICATION_TREE_DECISION_NODE",
      "createdBy": "null",
      "creationDate": 0,
      "default": false,
      "description": "null",
      "language": "JAVASCRIPT",
      "lastModifiedBy": "null",
      "lastModifiedDate": 0,
      "name": "Admin_SetInviteMailVars",
      "script": [
        "/*",
        " * Copyright 2023 ForgeRock AS. All Rights Reserved",
        " *",
        " * Use of this code requires a commercial software license with ForgeRock AS.",
        " * or with one of its affiliates. All use shall be exclusively subject",
        " * to such license between the licensee and ForgeRock AS.",
        " */",
        "",
        "var objAttrs = sharedState.get('objectAttributes') || new HashMap();",
        "objAttrs.put('currentYear', new Date().getFullYear().toString());",
        "sharedState.put('objectAttributes', objAttrs);",
        "",
        "outcome = 'True';",
        "",
      ],
    },
    "dbe0bf9a-72aa-49d5-8483-9db147985a47": {
      "_id": "dbe0bf9a-72aa-49d5-8483-9db147985a47",
      "context": "SOCIAL_IDP_PROFILE_TRANSFORMATION",
      "createdBy": "null",
      "creationDate": 0,
      "default": false,
      "description": "Normalizes raw profile data from ADFS",
      "language": "JAVASCRIPT",
      "lastModifiedBy": "null",
      "lastModifiedDate": 0,
      "name": "ADFS Profile Normalization (JS)",
      "script": [
        "/*",
        " * Copyright 2022 ForgeRock AS. All Rights Reserved",
        " *",
        " * Use of this code requires a commercial software license with ForgeRock AS",
        " * or with one of its affiliates. All use shall be exclusively subject",
        " * to such license between the licensee and ForgeRock AS.",
        " */",
        "",
        "/*",
        " * This script returns the social identity profile information for the authenticating user",
        " * in a standard form expected by the Social Provider Handler Node.",
        " *",
        " * Defined variables:",
        " * rawProfile - The social identity provider profile information for the authenticating user.",
        " *              JsonValue (1).",
        " * logger - The debug logger instance:",
        " *          https://backstage.forgerock.com/docs/am/7/scripting-guide/scripting-api-global-logger.html#scripting-api-global-logger.",
        " * realm - String (primitive).",
        " *         The name of the realm the user is authenticating to.",
        " * requestHeaders - TreeMap (2).",
        " *                  The object that provides methods for accessing headers in the login request:",
        " *                  https://backstage.forgerock.com/docs/am/7/authentication-guide/scripting-api-node.html#scripting-api-node-requestHeaders.",
        " * requestParameters - TreeMap (2).",
        " *                     The object that contains the authentication request parameters.",
        " * selectedIdp - String (primitive).",
        " *               The social identity provider name. For example: google.",
        " * sharedState - LinkedHashMap (3).",
        " *               The object that holds the state of the authentication tree and allows data exchange between the stateless nodes:",
        " *               https://backstage.forgerock.com/docs/am/7/auth-nodes/core-action.html#accessing-tree-state.",
        " * transientState - LinkedHashMap (3).",
        " *                  The object for storing sensitive information that must not leave the server unencrypted,",
        " *                  and that may not need to persist between authentication requests during the authentication session:",
        " *                  https://backstage.forgerock.com/docs/am/7/auth-nodes/core-action.html#accessing-tree-state.",
        " *",
        " * Return - a JsonValue (1).",
        " *          The result of the last statement in the script is returned to the server.",
        " *          Currently, the Immediately Invoked Function Expression (also known as Self-Executing Anonymous Function)",
        " *          is the last (and only) statement in this script, and its return value will become the script result.",
        " *          Do not use "return variable" statement outside of a function definition.",
        " *",
        " *          This script's last statement should result in a JsonValue (1) with the following keys:",
        " *          {",
        " *              {"displayName": "corresponding-social-identity-provider-value"},",
        " *              {"email": "corresponding-social-identity-provider-value"},",
        " *              {"familyName": "corresponding-social-identity-provider-value"},",
        " *              {"givenName": "corresponding-social-identity-provider-value"},",
        " *              {"id": "corresponding-social-identity-provider-value"},",
        " *              {"locale": "corresponding-social-identity-provider-value"},",
        " *              {"photoUrl": "corresponding-social-identity-provider-value"},",
        " *              {"username": "corresponding-social-identity-provider-value"}",
        " *          }",
        " *",
        " *          The consumer of this data defines which keys are required and which are optional.",
        " *          For example, the script associated with the Social Provider Handler Node and,",
        " *          ultimately, the managed object created/updated with this data",
        " *          will expect certain keys to be populated.",
        " *          In some common default configurations, the following keys are required to be not empty:",
        " *          username, givenName, familyName, email.",
        " *",
        " *          From RFC4517: A value of the Directory String syntax is a string of one or more",
        " *          arbitrary characters from the Universal Character Set (UCS).",
        " *          A zero-length character string is not permitted.",
        " *",
        " * (1) JsonValue - https://backstage.forgerock.com/docs/am/7/apidocs/org/forgerock/json/JsonValue.html.",
        " * (2) TreeMap - https://docs.oracle.com/en/java/javase/11/docs/api/java.base/java/util/TreeMap.html.",
        " * (3) LinkedHashMap - https://docs.oracle.com/en/java/javase/11/docs/api/java.base/java/util/LinkedHashMap.html.",
        " */",
        "",
        "(function () {",
        "    var frJava = JavaImporter(",
        "        org.forgerock.json.JsonValue",
        "    );",
        "",
        "    var normalizedProfileData = frJava.JsonValue.json(frJava.JsonValue.object());",
        "  ",
        "      //logger.message('Seguin rawProfile: '+rawProfile);",
        "",
        "    normalizedProfileData.put('id', rawProfile.get('sub').asString());",
        "    normalizedProfileData.put('displayName', rawProfile.get('givenName').asString() + ' ' + rawProfile.get('sn').asString());",
        "    normalizedProfileData.put('email', rawProfile.get('mail').asString());",
        "    normalizedProfileData.put('givenName', rawProfile.get('givenName').asString());",
        "    normalizedProfileData.put('familyName', rawProfile.get('sn').asString());",
        "    normalizedProfileData.put('username', rawProfile.get('upn').asString());",
        "    normalizedProfileData.put('roles', rawProfile.get('roles').asString());",
        "  ",
        "      //logger.message('Seguin normalizedProfileData: '+normalizedProfileData);",
        "",
        "    return normalizedProfileData;",
        "}());",
      ],
    },
    "dc0c9905-4a58-4f61-8562-337514e610a7": {
      "_id": "dc0c9905-4a58-4f61-8562-337514e610a7",
      "context": "SOCIAL_IDP_PROFILE_TRANSFORMATION",
      "createdBy": "null",
      "creationDate": 0,
      "default": false,
      "description": "null",
      "language": "JAVASCRIPT",
      "lastModifiedBy": "null",
      "lastModifiedDate": 0,
      "name": "Admin_IdPNormalization",
      "script": [
        "/*",
        " * Copyright 2023 ForgeRock AS. All Rights Reserved",
        " *",
        " * Use of this code requires a commercial software license with ForgeRock AS.",
        " * or with one of its affiliates. All use shall be exclusively subject",
        " * to such license between the licensee and ForgeRock AS.",
        " */",
        "",
        "/*",
        " * This script maps token claim values to managed object attributes. It uses a "claim map" that defines",
        " * several common claim names for a given attribute so that this same script can be used for all IdPs.",
        " * For example, the attribute \`familyName\` can be populated from claims \`familyName\`, \`family_name\`, or \`sn\`.",
        " * ",
        " * Also, if custom IdP config exists in shared state and defines IdP-to-IDC group membership mappings,",
        " * those will be applied/enforced by this script. ",
        " */",
        "",
        "var SHARED_STATE_KEY = 'idpCustomConfig';",
        "",
        "// Helper to avoid strict comparison of string objects",
        "function containsGroup(jsArray, javaString) {",
        "  for (var i = 0; i < jsArray.length; i++) {",
        "    if (jsArray[i] == javaString) {",
        "      return true;",
        "    }",
        "  }",
        "  return false;",
        "}",
        "",
        "(function () {",
        "  var fr = JavaImporter(",
        "    java.lang.String,",
        "    java.util.ArrayList,",
        "    org.forgerock.json.JsonValue",
        "  );",
        "  ",
        "  var normalizedProfileData = fr.JsonValue.json(fr.JsonValue.object());",
        "  var idpConfig = sharedState.get(SHARED_STATE_KEY);",
        "",
        "  // If we have config that defines a groups claim map for this IdP, ensure the claim value matches one that's in the map",
        "  if (idpConfig && idpConfig.groups) {",
        "",
        "    logger.message('enforcing groups claim config');",
        "",
        "    // Get the groups claim from the IdP profile",
        "    var groupsClaim = rawProfile.get(idpConfig.groups.claim);",
        "    if (groupsClaim.isNull()) {",
        "      logger.error('groups claim map was enabled for "{}", but claim "{}" was not found in the raw profile', selectedIdp, idpConfig.groups.claim);",
        "      throw 'Required groups claim is missing from raw profile';",
        "    }",
        "",
        "    logger.message('received group claim value {}', groupsClaim);",
        "",
        "    // Validate the claim type and convert strings to single-value collection",
        "    var groupsClaimList;",
        "    if (groupsClaim.isCollection()) {",
        "      groupsClaimList = groupsClaim;",
        "    } else if (groupsClaim.isString()) {",
        "      groupsClaimList = new fr.ArrayList();",
        "      groupsClaimList.add(groupsClaim);",
        "    } else {",
        "      throw 'Groups claim was not a string or collection';",
        "    }",
        "    ",
        "    // Assert the claim contains at least one group",
        "    var groupsClaimLen = groupsClaimList.size();",
        "    if (groupsClaimLen < 1) {",
        "      throw 'An empty groups claim was found in raw profile';",
        "    }",
        "",
        "    // Loop through each IDC group name in the map. If the raw profile groups claim contains",
        "    // a value that matches the map for that IDC group, add that IDC group to the list for this admin.",
        "    var groups = [];",
        "    for (var idcGroupName in idpConfig.groups.mappings) {",
        "      for (var i = 0; i < groupsClaimLen; i++) {",
        "        var claimGroupId = groupsClaimList.get(i).asString();",
        "",
        "        logger.message('checking if mapping for IDC group "{}" contains claim value "{}"', idcGroupName, claimGroupId);",
        "",
        "        if (containsGroup(idpConfig.groups.mappings[idcGroupName], claimGroupId)) {",
        "          groups.push(idcGroupName);",
        "        }",
        "      }",
        "    }",
        "",
        "    // Assert at least one group was mapped to the claim",
        "    if (groups.length == 0) {",
        "      logger.error('groups claim map was enabled for "{}", but the value of claim "{}" did not match a group mapping', selectedIdp, idpConfig.groups.claim);",
        "      throw 'Raw profile groups claim value does not match a configured mapping';",
        "    }",
        "",
        "    normalizedProfileData.put('groups', groups);",
        "    sharedState.put('groups', groups);",
        "  } else {",
        "    logger.message('no enabled groups claim config to enforce');",
        "  }",
        "",
        "  // Maps normalized profile keys to the possible raw profile keys that values can come from",
        "  var claimMap = {",
        "    email: ['email', 'mail'],",
        "    familyName: ['familyName', 'family_name', 'sn'],",
        "    givenName: ['givenName', 'given_name']",
        "  };",
        "",
        "  // Try to populate each normalized profile property",
        "  var keys = Object.keys(claimMap);",
        "  for (var i = 0; i < keys.length; i++) {",
        "    var normalizedProp = keys[i];",
        "    // Try each mapped raw profile key until a value is found",
        "    for (var j = 0; j < claimMap[normalizedProp].length; j++) {",
        "      var rawProp = claimMap[normalizedProp][j];",
        "      if (!rawProfile.get(rawProp).isNull()) {",
        "        normalizedProfileData.put(normalizedProp, rawProfile.get(rawProp));",
        "        break;",
        "      }",
        "    }",
        "  }",
        "",
        "  return normalizedProfileData;",
        "}());",
      ],
    },
    "dedbc9f6-7fc9-4332-a330-55f7aeb95e78": {
      "_id": "dedbc9f6-7fc9-4332-a330-55f7aeb95e78",
      "context": "AUTHENTICATION_TREE_DECISION_NODE",
      "createdBy": "null",
      "creationDate": 0,
      "default": false,
      "description": "FRAAS-7955 Shared State Only",
      "language": "JAVASCRIPT",
      "lastModifiedBy": "null",
      "lastModifiedDate": 0,
      "name": "FRAAS-7955 Shared State Only",
      "script": [
        "outcome = "true";",
        "",
        "setSharedObjectAttribute("userName", "FRAAS-7955");",
        "setSharedObjectAttribute("givenName", "First-shared");",
        "setSharedObjectAttribute("sn", "Last-shared");",
        "setSharedObjectAttribute("mail", "first.last-shared@company.com");",
        "",
        "/*",
        " * Store attributes in shared state for use with the Create/Patch Object nodes.",
        " */",
        "function setSharedObjectAttribute(name, value) {",
        "       var storage = sharedState.get("objectAttributes");",
        "    if (storage && value) {",
        "          if (storage.put) {",
        "              storage.put(name, value);",
        "        }",
        "          else {",
        "              storage[name] = value;",
        "        }",
        "    }",
        "    else if (value) {",
        "        sharedState.put("objectAttributes", JSON.parse("{\\""+name+"\\":\\""+value+"\\"}"));",
        "    }",
        "}",
      ],
    },
    "e05e4136-ec87-4bb2-a0a4-9a9566b2f9fe": {
      "_id": "e05e4136-ec87-4bb2-a0a4-9a9566b2f9fe",
      "context": "AUTHENTICATION_TREE_DECISION_NODE",
      "createdBy": "null",
      "creationDate": 0,
      "default": false,
      "description": "null",
      "language": "JAVASCRIPT",
      "lastModifiedBy": "null",
      "lastModifiedDate": 0,
      "name": "Admin_ClearInviteMailVars",
      "script": [
        "/*",
        " * Copyright 2023 ForgeRock AS. All Rights Reserved",
        " *",
        " * Use of this code requires a commercial software license with ForgeRock AS.",
        " * or with one of its affiliates. All use shall be exclusively subject",
        " * to such license between the licensee and ForgeRock AS.",
        " */",
        "",
        "var objAttrs = sharedState.get('objectAttributes');",
        "if (objAttrs) {",
        "  objAttrs.remove('currentYear');",
        "  sharedState.put('objectAttributes', objAttrs);",
        "}",
        "",
        "outcome = 'True';",
        "",
      ],
    },
    "e0666b8b-f625-4047-89d8-e7e91151027f": {
      "_id": "e0666b8b-f625-4047-89d8-e7e91151027f",
      "context": "AUTHENTICATION_TREE_DECISION_NODE",
      "createdBy": "null",
      "creationDate": 0,
      "default": false,
      "description": "Twilio Voice OTP Sender",
      "language": "JAVASCRIPT",
      "lastModifiedBy": "null",
      "lastModifiedDate": 0,
      "name": "Twilio Voice OTP Sender",
      "script": [
        "/* Twilio Voice OTP Sender",
        " *",
        " * Author: volker.scheuber@forgerock.com",
        " * ",
        " * This script will deliver the OTP via voice to the phone number in the user's profile.",
        " * ",
        " * This script needs to be parametrized. It will not work properly as is. ",
        " * It requires the Identify Existing User node and HOTP Generator node before it is being called.",
        " * ",
        " * The Scripted Decision Node needs the following outcomes defined:",
        " * - sent",
        " * - failed",
        " */",
        "logger.warning("Twilio Voice OTP Sender: start");",
        "",
        "if (sharedState.get("_id") && idRepository.getAttribute(sharedState.get("_id"), "telephoneNumber").iterator().hasNext()) {",
        "    var Base64={_keyStr:"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=",encode:function(input){var output="";var chr1,chr2,chr3,enc1,enc2,enc3,enc4;var i=0;input=Base64._utf8_encode(input);while(i<input.length){chr1=input.charCodeAt(i++);chr2=input.charCodeAt(i++);chr3=input.charCodeAt(i++);enc1=chr1>>2;enc2=(chr1&3)<<4|chr2>>4;enc3=(chr2&15)<<2|chr3>>6;enc4=chr3&63;if(isNaN(chr2)){enc3=enc4=64}else if(isNaN(chr3)){enc4=64}output=output+this._keyStr.charAt(enc1)+this._keyStr.charAt(enc2)+this._keyStr.charAt(enc3)+this._keyStr.charAt(enc4)}return output},decode:function(input){var output="";var chr1,chr2,chr3;var enc1,enc2,enc3,enc4;var i=0;input=input.replace(/[^A-Za-z0-9\\+\\/\\=]/g,"");while(i<input.length){enc1=this._keyStr.indexOf(input.charAt(i++));enc2=this._keyStr.indexOf(input.charAt(i++));enc3=this._keyStr.indexOf(input.charAt(i++));enc4=this._keyStr.indexOf(input.charAt(i++));chr1=enc1<<2|enc2>>4;chr2=(enc2&15)<<4|enc3>>2;chr3=(enc3&3)<<6|enc4;output=output+String.fromCharCode(chr1);if(enc3!=64){output=output+String.fromCharCode(chr2)}if(enc4!=64){output=output+String.fromCharCode(chr3)}}output=Base64._utf8_decode(output);return output},_utf8_encode:function(string){string=string.replace(/\\r\\n/g,"\\n");var utftext="";for(var n=0;n<string.length;n++){var c=string.charCodeAt(n);if(c<128){utftext+=String.fromCharCode(c)}else if(c>127&&c<2048){utftext+=String.fromCharCode(c>>6|192);utftext+=String.fromCharCode(c&63|128)}else{utftext+=String.fromCharCode(c>>12|224);utftext+=String.fromCharCode(c>>6&63|128);utftext+=String.fromCharCode(c&63|128)}}return utftext},_utf8_decode:function(utftext){var string="";var i=0;var c=c1=c2=0;while(i<utftext.length){c=utftext.charCodeAt(i);if(c<128){string+=String.fromCharCode(c);i++}else if(c>191&&c<224){c2=utftext.charCodeAt(i+1);string+=String.fromCharCode((c&31)<<6|c2&63);i+=2}else{c2=utftext.charCodeAt(i+1);c3=utftext.charCodeAt(i+2);string+=String.fromCharCode((c&15)<<12|(c2&63)<<6|c3&63);i+=3}}return string}};",
        "",
        "    /* BEGIN SCRIPT CONFIGURATION",
        "     *",
        "     * REPLACE WITH YOUR OWN AZURE AD SETTINGS",
        "     */",
        "    var TWILIO_API_SID = "AC750415e3163a2e57b7aeea7eed82d944";",
        "    var TWILIO_API_TOKEN = "d36a719c94b4be08592d69ec4f80a5bb";",
        "    var TWILIO_API_FROM = "+13176443107";",
        "    /*",
        "     * END SCRIPT CONFIGURATION",
        "     */",
        "  ",
        "    // Twilio SMS Message API Configuration",
        "    var TWILIO_API_URI = "https://api.twilio.com/2010-04-01/Accounts/".concat(TWILIO_API_SID).concat("/Calls.json");    ",
        "    var TWILIO_API_TO = idRepository.getAttribute(sharedState.get("_id"), "telephoneNumber").iterator().next();",
        "      var OTP = sharedState.get("oneTimePassword").split("").join("; ");",
        "    var TWILIO_API_TWIML = "<Response><Pause length='1'/><Say voice='alice'>Your one-time password is ".concat(OTP).concat("</Say><Pause length='1'/><Say>Your one-time password is ").concat(OTP).concat("</Say><Pause length='1'/><Say>Goodbye</Say></Response>");",
        "    //logger.warning("Twilio Voice OTP Sender: To: ".concat(TWILIO_API_TO));",
        "    //logger.warning("Twilio Voice OTP Sender: Twiml: ".concat(TWILIO_API_TWIML));",
        "",
        "    var AUTHZ = "Basic ".concat(Base64.encode(TWILIO_API_SID.concat(':').concat(TWILIO_API_TOKEN)));",
        "    //logger.warning("Twilio SMS OTP Sender: AUTHZ - ".concat(AUTHZ));",
        "",
        "    var request = new org.forgerock.http.protocol.Request();",
        "    request.setMethod('POST');",
        "    request.setUri(TWILIO_API_URI);",
        "    request.getHeaders().add("Content-Type", "application/x-www-form-urlencoded");",
        "    request.getHeaders().add("Authorization", AUTHZ);",
        "    var params = request.getForm();",
        "    params.add("From", TWILIO_API_FROM);",
        "    params.add("Twiml", TWILIO_API_TWIML);",
        "    params.add("To", TWILIO_API_TO);",
        "    request.getEntity().setString(params.toString());",
        "",
        "    var response = httpClient.send(request).get();",
        "    var result = JSON.parse(response.getEntity().getString());",
        "    //logger.warning("Twilio SMS OTP Sender: JSON result: " + JSON.stringify(result));",
        "",
        "    if (result["status"]=="queued") {",
        "        outcome = result["status"];",
        "        logger.error("Twilio Voice OTP Sender: status = ".concat(result["status"]));",
        "        logger.error("Twilio Voice OTP Sender: subresource_uris = ".concat(result["subresource_uris"]));",
        "        logger.error("Twilio Voice OTP Sender: outcome = ".concat(outcome));",
        "    } else {",
        "        outcome = "failed";",
        "        logger.error("Twilio Voice OTP Sender: status = ".concat(result["status"]));",
        "        logger.error("Twilio Voice OTP Sender: code = ".concat(result["code"]));",
        "        logger.error("Twilio Voice OTP Sender: more_info = ".concat(result["more_info"]));",
        "        logger.error("Twilio Voice OTP Sender: message = ".concat(result["message"]));",
        "        logger.error("Twilio Voice OTP Sender: outcome = ".concat(outcome));",
        "    }",
        "} else {",
        "      outcome = "failed";",
        "      logger.error("Twilio Voice OTP Sender: No user or phone number found! Use 'Identify Existing User node before this script to populate the user's _id in shared state!'");",
        "    logger.error("Twilio Voice OTP Sender: outcome = ".concat(outcome));",
        "}",
      ],
    },
    "e0ba741b-c952-4062-9899-0b1c19237ee4": {
      "_id": "e0ba741b-c952-4062-9899-0b1c19237ee4",
      "context": "AUTHENTICATION_TREE_DECISION_NODE",
      "createdBy": "null",
      "creationDate": 0,
      "default": false,
      "description": "FRAAS-7955 Workaround: Copy sharedState to transientState",
      "language": "JAVASCRIPT",
      "lastModifiedBy": "null",
      "lastModifiedDate": 0,
      "name": "FRAAS-7955 Workaround",
      "script": [
        "outcome = "true";",
        "var attrs = sharedState.get("objectAttributes");",
        "if (attrs) {",
        "      setTransientObjectAttribute("givenName", attrs.get("givenName").concat("-workaround"));",
        "      setTransientObjectAttribute("sn", attrs.get("sn").concat("-workaround"));",
        "      setTransientObjectAttribute("mail", attrs.get("mail").concat("-workaround"));",
        "}",
        "",
        "/*",
        " * Store attributes in transient state for use with the Create/Patch Object nodes.",
        " */",
        "function setTransientObjectAttribute(name, value) {",
        "    var transientStorage = transientState.get("objectAttributes");",
        "    if (transientStorage && value) {",
        "          if (transientStorage.put) {",
        "            transientStorage.put(name, value);",
        "        }",
        "          else {",
        "            transientStorage[name] = value;",
        "        }",
        "    }",
        "    else if (value) {",
        "    transientState.put("objectAttributes", JSON.parse("{\\""+name+"\\":\\""+value+"\\"}"));",
        "    }",
        "}",
      ],
    },
    "e15a13ee-9168-40cf-934f-656a5f568a6a": {
      "_id": "e15a13ee-9168-40cf-934f-656a5f568a6a",
      "context": "AUTHENTICATION_TREE_DECISION_NODE",
      "createdBy": "null",
      "creationDate": 0,
      "default": false,
      "description": "null",
      "language": "JAVASCRIPT",
      "lastModifiedBy": "null",
      "lastModifiedDate": 0,
      "name": "hashdeviceProfile",
      "script": [
        "/*",
        "  - Data made available by nodes that have already executed are available in the sharedState variable.",
        "  - The script should set outcome to either "true" or "false".",
        " */",
        "",
        "//<script type="text/javascript" src="http://www.myersdaily.org/joseph/javascript/md5.js" />",
        "",
        "function hashCode(r){var e,h=0;for(e=0;e<r.length;e++)h=(h<<5)-h+r.charCodeAt(e),h|=0;return h>>>0}",
        "",
        "",
        "var hashMe = sharedState.get("forgeRock.device.profile");",
        "var hashMe = sharedState.put("forgeRock.device.profile","deleted in script - hashdeviceProfile");",
        "//var hashMeStr = JSON.stringify(hashMe);",
        "//logger.error("HashMeStr: " + hashMeStr);",
        "",
        "sharedState.put("deviceHash",hashCode(escape(hashMe)).toString());",
        "sharedState.put("frIndexedString1",hashCode(escape(hashMe)).toString());",
        "",
        "outcome = "true";",
      ],
    },
    "e1db8a0a-0329-4962-a5bf-ecffaca376ae": {
      "_id": "e1db8a0a-0329-4962-a5bf-ecffaca376ae",
      "context": "OIDC_CLAIMS",
      "createdBy": "null",
      "creationDate": 0,
      "default": false,
      "description": "Used by endUserUIClient",
      "language": "JAVASCRIPT",
      "lastModifiedBy": "null",
      "lastModifiedDate": 0,
      "name": "Alpha endUserUIClient OIDC Claims Script",
      "script": [
        "/*",
        " * Copyright 2014-2021 ForgeRock AS. All Rights Reserved",
        " *",
        " * Use of this code requires a commercial software license with ForgeRock AS",
        " * or with one of its affiliates. All use shall be exclusively subject",
        " * to such license between the licensee and ForgeRock AS.",
        " */",
        "",
        "/*",
        " * This script computes claim values returned in ID tokens and/or at the UserInfo Endpoint.",
        " * The claim values are computed for:",
        " * the claims derived from the requested scopes,",
        " * the claims provided by the authorization server,",
        " * and the claims requested by the client via the claims parameter.",
        " *",
        " * In the CONFIGURATION AND CUSTOMIZATION section, you can",
        " * define the scope-to-claims mapping, and",
        " * assign to each claim a resolver function that will compute the claim value.",
        " *",
        " * Defined variables (class references are provided below):",
        " * scopes - Set<String> (6).",
        " *          Always present, the requested scopes.",
        " * claims - Map<String, Object> (5).",
        " *          Always present, default server provided claims.",
        " * claimObjects - List<Claim> (7, 2).",
        " *                Always present, the default server provided claims.",
        " * requestedClaims - Map<String, Set<String>> (5).",
        " *                   Always present, not empty if the request contains the claims parameter and the server has enabled",
        " *                   claims_parameter_supported. A map of the requested claims to possible values, otherwise empty;",
        " *                   requested claims with no requested values will have a key but no value in the map. A key with",
        " *                   a single value in its Set (6) indicates that this is the only value that should be returned.",
        " * requestedTypedClaims - List<Claim> (7, 2).",
        " *                        Always present, the requested claims.",
        " *                        Requested claims with no requested values will have a claim with no values.",
        " *                        A claim with a single value indicates this is the only value that should be returned.",
        " * claimsLocales - List<String> (7).",
        " *                 The values from the 'claims_locales' parameter.",
        " *                 See https://openid.net/specs/openid-connect-core-1_0.html#ClaimsLanguagesAndScripts for the OIDC specification details.",
        " * requestProperties - Unmodifiable Map (5).",
        " *                     Always present, contains a map of request properties:",
        " *                     requestUri - The request URI.",
        " *                     realm - The realm that the request relates to.",
        " *                     requestParams - A map of the request params and/or posted data.",
        " *                                     Each value is a list of one or more properties.",
        " *                                     Please note that these should be handled in accordance with OWASP best practices:",
        " *                                     https://owasp.org/www-community/vulnerabilities/Unsafe_use_of_Reflection.",
        " * clientProperties - Unmodifiable Map (5).",
        " *                    Present if the client specified in the request was identified, contains a map of client properties:",
        " *                    clientId - The client's URI for the request locale.",
        " *                    allowedGrantTypes - List of the allowed grant types (org.forgerock.oauth2.core.GrantType) for the client.",
        " *                    allowedResponseTypes - List of the allowed response types for the client.",
        " *                    allowedScopes - List of the allowed scopes for the client.",
        " *                    customProperties - A map of the custom properties of the client.",
        " *                                       Lists or maps will be included as sub-maps; for example:",
        " *                                       customMap[Key1]=Value1 will be returned as customMap -> Key1 -> Value1.",
        " *                                       To add custom properties to a client, update the Custom Properties field",
        " *                                       in AM Console > Realm Name > Applications > OAuth 2.0 > Clients > Client ID > Advanced.",
        " * identity - AMIdentity (3).",
        " *            Always present, the identity of the resource owner.",
        " * session - SSOToken (4).",
        " *           Present if the request contains the session cookie, the user's session object.",
        " * scriptName - String (primitive).",
        " *              Always present, the display name of the script.",
        " * logger - Always present, the "OAuth2Provider" debug logger instance:",
        " *          https://backstage.forgerock.com/docs/am/7/scripting-guide/scripting-api-global-logger.html#scripting-api-global-logger.",
        " *          Corresponding files will be prefixed with: scripts.OIDC_CLAIMS.",
        " * httpClient - HTTP Client (8).",
        " *              Always present, the HTTP Client instance:",
        " *              https://backstage.forgerock.com/docs/am/7/scripting-guide/scripting-api-global-http-client.html#scripting-api-global-http-client.",
        " *              In order to use the client, you may need to add",
        " *              org.forgerock.http.Client,",
        " *              org.forgerock.http.protocol.*,",
        " *              and org.forgerock.util.promise.PromiseImpl",
        " *              to the allowed Java classes in the scripting engine configuration, as described in:",
        " *              https://backstage.forgerock.com/docs/am/7/scripting-guide/script-engine-security.html",
        " *",
        " * Return - a new UserInfoClaims(Map<String, Object> values, Map<String, List<String>> compositeScopes) (1) object.",
        " *          The result of the last statement in the script is returned to the server.",
        " *          Currently, the Immediately Invoked Function Expression (also known as Self-Executing Anonymous Function)",
        " *          is the last (and only) statement in this script, and its return value will become the script result.",
        " *          Do not use "return variable" statement outside of a function definition.",
        " *          See RESULTS section for additional details.",
        " *",
        " * Class reference:",
        " * (1) UserInfoClaims - https://backstage.forgerock.com/docs/am/7/apidocs/org/forgerock/oauth2/core/UserInfoClaims.html.",
        " * (2) Claim - https://backstage.forgerock.com/docs/am/7/apidocs/org/forgerock/openidconnect/Claim.html).",
        " *         An instance of org.forgerock.openidconnect.Claim has methods to access",
        " *         the claim name, requested values, locale, and whether the claim is essential.",
        " * (3) AMIdentity - https://backstage.forgerock.com/docs/am/7/apidocs/com/sun/identity/idm/AMIdentity.html.",
        " * (4) SSOToken - https://backstage.forgerock.com/docs/am/7/apidocs/com/iplanet/sso/SSOToken.html.",
        " * (5) Map - https://docs.oracle.com/en/java/javase/11/docs/api/java.base/java/util/HashMap.html,",
        " *           or https://docs.oracle.com/en/java/javase/11/docs/api/java.base/java/util/LinkedHashMap.html.",
        " * (6) Set - https://docs.oracle.com/en/java/javase/11/docs/api/java.base/java/util/HashSet.html.",
        " * (7) List - https://docs.oracle.com/en/java/javase/11/docs/api/java.base/java/util/ArrayList.html.",
        " * (8) Client - https://backstage.forgerock.com/docs/am/7/apidocs/org/forgerock/http/Client.html.",
        "*/",
        "",
        "(function () {",
        "    // SETUP",
        "",
        "    /**",
        "     * Claim processing utilities.",
        "     * An object that contains reusable functions for processing claims.",
        "     * @see CLAIM PROCESSING UTILITIES section for details.",
        "     */",
        "    var utils = getUtils();",
        "",
        "    // CONFIGURATION AND CUSTOMIZATION",
        "",
        "    /**",
        "     * OAuth 2.0 scope values (scopes) can be used by the Client to request OIDC claims.",
        "     *",
        "     * Call this configuration method, and pass in as the first argument",
        "     * an object that maps a scope value to an array of claim names",
        "     * to specify which claims need to be processed and returned for the requested scopes.",
        "     * @see {@link https://openid.net/specs/openid-connect-core-1_0.html#ScopeClaims}",
        "     * for the scope values that could be used to request claims as defined in the OIDC specification.",
        "     *",
        "     * Below, find a default configuration that is expected to work in the current environment.",
        "     *",
        "     * CUSTOMIZATION",
        "     * You can choose the claim names returned for a scope.",
        "     */",
        "    utils.setScopeClaimsMap({",
        "        profile: [",
        "            'name',",
        "            'family_name',",
        "            'given_name',",
        "            'zoneinfo',",
        "            'locale'",
        "        ],",
        "        email: ['email'],",
        "        address: ['address'],",
        "        phone: ['phone_number']",
        "    });",
        "",
        "    /**",
        "     * In this script, each claim",
        "     * derived from the requested scopes,",
        "     * provided by the authorization server, and",
        "     * requested by the client via the claims parameter",
        "     * will be processed by a function associated with the claim name.",
        "     *",
        "     * Call this configuration method, and pass in as the first argument",
        "     * an object that maps a claim name to a resolver function,",
        "     * which will be automatically executed for each claim processed by the script.",
        "     *",
        "     * The claim resolver function will receive the requested claim information",
        "     * in an instance of org.forgerock.openidconnect.Claim as the first argument.",
        "     * @see {@link https://backstage.forgerock.com/docs/am/7/apidocs/org/forgerock/openidconnect/Claim.html}",
        "     * for details on the Claim class.",
        "     *",
        "     * If the claim resolver function returns a value,",
        "     * other than undefined or null,",
        "     * the claim will be included in the script's results.",
        "     *",
        "     * The Claim instance provides methods to check",
        "     * what the name of the claim is,",
        "     * which values the claim request contains,",
        "     * whether the claim is essential, and",
        "     * which locale the claim is associated with.",
        "     * The resolver function can consider this information when computing and returning the claim value.",
        "     *",
        "     * Below, find a default configuration that is expected to work in the current environment.",
        "     * A reusable function, utils.getUserProfileClaimResolver(String attribute-name),",
        "     * is called to return a claim resolver function based on a user profile attribute.",
        "     * @see CLAIM RESOLVERS section for the implementation details and examples.",
        "     * For the address claim, an example of a claim resolver that uses another claim resolver is provided.",
        "     *",
        "     * CUSTOMIZATION",
        "     * You can reuse the predefined utils methods with your custom arguments.",
        "     * You can also specify a custom resolver function for a claim name,",
        "     * that will compute and return the claim value—as shown in the commented out example below.",
        "     */",
        "    utils.setClaimResolvers({",
        "        /*",
        "        // An example of a simple claim resolver function that is defined for a claim",
        "        // directly in the configuration object:",
        "        custom-claim-name: function (requestedClaim) {",
        "            // In this case, initially, the claim value comes straight from a user profile attribute value:",
        "            var claimValue = identity.getAttribute('custom-attribute-name').toArray()[0]",
        "",
        "            // Optionally, provide additional logic for processing (filtering, formatting, etc.) the claim value.",
        "            // You can use:",
        "            // requestedClaim.getName()",
        "            // requestedClaim.getValues()",
        "            // requestedClaim.getLocale()",
        "            // requestedClaim.isEssential()",
        "",
        "            return claimValue",
        "        },",
        "        */",
        "        /**",
        "         * The use of utils.getUserProfileClaimResolver shows how",
        "         * an argument passed to a function that returns a claim resolver",
        "         * becomes available to the resolver function (via its lexical context).",
        "         */",
        "        name: utils.getUserProfileClaimResolver('cn'),",
        "        family_name: utils.getUserProfileClaimResolver('sn'),",
        "        given_name: utils.getUserProfileClaimResolver('givenname'),",
        "        zoneinfo: utils.getUserProfileClaimResolver('preferredtimezone'),",
        "        locale: utils.getUserProfileClaimResolver('preferredlocale'),",
        "        email: utils.getUserProfileClaimResolver('mail'),",
        "        address: utils.getAddressClaimResolver(",
        "            /**",
        "             * The passed in user profile claim resolver function",
        "             * can be used by the address claim resolver function",
        "             * to obtain the claim value to be formatted as per the OIDC specification:",
        "             * @see https://openid.net/specs/openid-connect-core-1_0.html#AddressClaim.",
        "             */",
        "            utils.getUserProfileClaimResolver('postaladdress')",
        "        ),",
        "        phone_number: utils.getUserProfileClaimResolver('telephonenumber')",
        "    });",
        "",
        "    // CLAIM PROCESSING UTILITIES",
        "",
        "    /**",
        "     * @returns {object} An object that contains reusable claim processing utilities.",
        "     * @see PUBLIC METHODS section and the return statement for the list of exported functions.",
        "     */",
        "    function getUtils () {",
        "        // IMPORT JAVA",
        "",
        "        /**",
        "         * Provides Java scripting functionality.",
        "         * @see {@link https://developer.mozilla.org/en-US/docs/Mozilla/Projects/Rhino/Scripting_Java#javaimporter_constructor}.",
        "         */",
        "        var frJava = JavaImporter(",
        "            org.forgerock.oauth2.core.exceptions.InvalidRequestException,",
        "            org.forgerock.oauth2.core.UserInfoClaims,",
        "            org.forgerock.openidconnect.Claim,",
        "",
        "            java.util.LinkedHashMap,",
        "            java.util.ArrayList",
        "        );",
        "",
        "        // SET UP CONFIGURATION",
        "",
        "        /**",
        "         * Placeholder for a configuration option that contains",
        "         * an object that maps the supported scope values (scopes)",
        "         * and the corresponding claim names for each scope value.",
        "         */",
        "        var scopeClaimsMap;",
        "",
        "        /**",
        "         * Placeholder for a configuration option that contains",
        "         * an object that maps the supported claim names",
        "         * and the resolver functions returning the claim value.",
        "         */",
        "        var claimResolvers;",
        "",
        "        /**",
        "         * A (public) method that accepts an object that maps the supported scopes and the corresponding claim names,",
        "         * and assigns it to a (private) variable that serves as a configuration option.",
        "         * @param {object} params - An object that maps each supported scope value to an array of claim names,",
        "         * in order to specify which claims need to be processed for the requested scopes.",
        "         * @see {@link https://openid.net/specs/openid-connect-core-1_0.html#ScopeClaims} for details.",
        "         * @param {string[]} [params.profile] - An array of claim names to be returned if the profile scope is requested.",
        "         * @param {string[]} [params.email] - An array of claim names to be returned if the email scope is requested.",
        "         * @param {string[]} [params.address] - An array of claim names to be returned if the address scope is requested.",
        "         * @param {string[]} [params.phone] - An array of claim names to be returned if the phone scope is requested.",
        "         * @returns {undefined}",
        "         */",
        "        function setScopeClaimsMap(params) {",
        "            scopeClaimsMap = params;",
        "        }",
        "",
        "        /**",
        "         * A (public) method that accepts an object that maps the supported claim names",
        "         * and the resolver functions returning the claim value,",
        "         * and assigns it to a (private) variable that serves as a configuration option.",
        "         * @param {object} params - An object that maps",
        "         * each supported claim name to a function that computes and returns the claim value.",
        "         */",
        "        function setClaimResolvers(params) {",
        "            claimResolvers = params;",
        "        }",
        "",
        "        // CLAIM RESOLVERS",
        "",
        "        /**",
        "         * Claim resolvers are functions that return a claim value.",
        "         * @param {*}",
        "         * @returns {*}",
        "         */",
        "",
        "        /**",
        "         * Defines a claim resolver based on a user profile attribute.",
        "         * @param {string} attributeName - Name of the user profile attribute.",
        "         * @returns {function} A function that will determine the claim value",
        "         * based on the user profile attribute and the (requested) claim properties.",
        "         */",
        "        function getUserProfileClaimResolver (attributeName) {",
        "            /**",
        "             * Resolves a claim with a user profile attribute value.",
        "             * Returns undefined if the identity attribute is not populated,",
        "             * OR if the claim has requested values that do not contain the identity attribute value.",
        "             * ATTENTION: the aforementioned comparison is case-sensitive.",
        "             * @param {org.forgerock.openidconnect.Claim} claim",
        "             * An object that provides methods to obtain information/requirements associated with a claim.",
        "             * @see {@link https://backstage.forgerock.com/docs/am/7/apidocs/org/forgerock/openidconnect/Claim.html} for details.",
        "             * @returns {string|HashSet|undefined}",
        "             */",
        "            function resolveClaim(claim) {",
        "                var userProfileValue;",
        "",
        "                if (identity) {",
        "                    userProfileValue = getClaimValueFromSet(claim, identity.getAttribute(attributeName));",
        "",
        "                    if (userProfileValue && !userProfileValue.isEmpty()) {",
        "                        if (!claim.getValues() || claim.getValues().isEmpty() || claim.getValues().contains(userProfileValue)) {",
        "                            return userProfileValue;",
        "                        }",
        "                    }",
        "                }",
        "            }",
        "",
        "            return resolveClaim;",
        "        }",
        "",
        "        /**",
        "         * Returns an address claim resolver based on a claim value obtained with another claim resolver.",
        "         * @param {function} resolveClaim - A function that returns a claim value.",
        "         * @returns {function} A function that will accept a claim as an argument,",
        "         * run the claim resolver function for the claim and obtain the claim value,",
        "         * and apply additional formatting to the value before returning it.",
        "         */",
        "        function getAddressClaimResolver (resolveClaim) {",
        "            /**",
        "             * Creates an address claim object from a value returned by a claim resolver,",
        "             * and returns the address claim object as the claim value.",
        "             * @see {@link https://openid.net/specs/openid-connect-core-1_0.html#AddressClaim}.",
        "             * The claim value is obtained with a claim resolving function available from the closure.",
        "             * @param {org.forgerock.openidconnect.Claim} claim",
        "             * An object that provides methods to obtain information/requirements associated with a claim.",
        "             * @see {@link https://backstage.forgerock.com/docs/am/7/apidocs/org/forgerock/openidconnect/Claim.html} for details.",
        "             * @returns {java.util.LinkedHashMap|undefined} The address claim object created from a claim value.",
        "             */",
        "            function resolveAddressClaim(claim) {",
        "                var claimValue = resolveClaim(claim);",
        "                var addressObject;",
        "",
        "                if (isClaimValueValid(claimValue)) {",
        "                    addressObject = new frJava.LinkedHashMap();",
        "",
        "                    addressObject.put('formatted', claimValue);",
        "",
        "                    return addressObject;",
        "                }",
        "            }",
        "",
        "            return resolveAddressClaim;",
        "        }",
        "",
        "        /**",
        "         * Returns an essential claim resolver based on a claim value obtained with another claim resolver.",
        "         * @param {function} resolveClaim - A function that returns a claim value.",
        "         * @returns {function} A function that will accept a claim as an argument,",
        "         * run the claim resolver function for the claim and obtain the claim value,",
        "         * and apply additional logic for essential claims.",
        "         */",
        "        function getEssentialClaimResolver (resolveClaim) {",
        "            /**",
        "             * Returns a claim value or throws an error.",
        "             * The claim value is obtained with a claim resolving function available from the closure.",
        "             * Throws an exception if the claim is essential and no value is returned for the claim.",
        "             *",
        "             * Use of this resolver is optional.",
        "             * @see {@link https://openid.net/specs/openid-connect-core-1_0.html#IndividualClaimsRequests} stating:",
        "             * "Note that even if the Claims are not available because the End-User did not authorize their release or they are not present,",
        "             * the Authorization Server MUST NOT generate an error when Claims are not returned, whether they are Essential or Voluntary,",
        "             * unless otherwise specified in the description of the specific claim."",
        "             *",
        "             * @param {org.forgerock.openidconnect.Claim} claim",
        "             * An object that provides methods to obtain information/requirements associated with a claim.",
        "             * @see {@link https://backstage.forgerock.com/docs/am/7/apidocs/org/forgerock/openidconnect/Claim.html} for details.",
        "             * @returns {*}",
        "             * @throws {org.forgerock.oauth2.core.exceptions.InvalidRequestException}",
        "             */",
        "            function resolveEssentialClaim(claim) {",
        "                var claimValue = resolveClaim(claim);",
        "",
        "                if (claim.isEssential() && !isClaimValueValid(claimValue)) {",
        "                    throw new frJava.InvalidRequestException('Could not provide value for essential claim: ' + claim.getName());",
        "                }",
        "",
        "                return claimValue;",
        "            }",
        "",
        "            return resolveEssentialClaim;",
        "        }",
        "",
        "        /**",
        "         * Provides default resolution for a claim.",
        "         * Use it if a claim-specific resolver is not defined in the configuration.",
        "         * @param {org.forgerock.openidconnect.Claim} claim",
        "         * An object that provides methods to obtain information/requirements associated with a claim.",
        "         * @see {@link https://backstage.forgerock.com/docs/am/7/apidocs/org/forgerock/openidconnect/Claim.html} for details.",
        "         * @returns {*} A single value associated with this claim.",
        "         */",
        "        function resolveAnyClaim (claim) {",
        "            if (claim.getValues().size() === 1) {",
        "                return claim.getValues().toArray()[0];",
        "            }",
        "        }",
        "",
        "        // UTILITIES",
        "",
        "        /**",
        "         * Returns claim value from a set.",
        "         * If the set contains a single value, returns the value.",
        "         * If the set contains multiple values, returns the set.",
        "         * Otherwise, returns undefined.",
        "         *",
        "         * @param {org.forgerock.openidconnect.Claim} claim",
        "         * An object that provides methods to obtain information/requirements associated with a claim.",
        "         * @see {@link https://backstage.forgerock.com/docs/am/7/apidocs/org/forgerock/openidconnect/Claim.html} for details.",
        "         * @param {java.util.HashSet} set The set—for example, a user profile attribute value.",
        "         * @returns {string|java.util.HashSet|undefined}",
        "         */",
        "        function getClaimValueFromSet (claim, set) {",
        "            if (set && set.size()) {",
        "                if (set.size() === 1) {",
        "                    return set.toArray()[0];",
        "                } else {",
        "                    return set;",
        "                }",
        "            } else if (logger.warningEnabled()) {",
        "                logger.warning('OIDC Claims script. Got an empty set for claim: ' + claim.getName());",
        "            }",
        "        }",
        "",
        "        function isClaimValueValid (claimValue) {",
        "            if (typeof claimValue === 'undefined' || claimValue === null) {",
        "                return false;",
        "            }",
        "",
        "            return true;",
        "        }",
        "",
        "        // CLAIM PROCESSING",
        "",
        "        /**",
        "         * Constructs and returns an object populated with the computed claim values",
        "         * and the requested scopes mapped to the claim names.",
        "         * @returns {org.forgerock.oauth2.core.UserInfoClaims} The object to be returned to the authorization server.",
        "         * @see {@link https://backstage.forgerock.com/docs/am/7/apidocs/org/forgerock/oauth2/core/UserInfoClaims.html}.",
        "         * @see RESULTS section for the use of this function.",
        "         */",
        "        function getUserInfoClaims () {",
        "            return new frJava.UserInfoClaims(getComputedClaims(), getCompositeScopes());",
        "        }",
        "",
        "        /**",
        "         * Creates a map of (requested) claim names populated with the computed claim values.",
        "         * @returns {java.util.LinkedHashMap}",
        "         * A map of the requested claim names and the corresponding claim values.",
        "         */",
        "        function getComputedClaims () {",
        "            /**",
        "             * Creates a complete list of claim objects from:",
        "             * the claims derived from the scopes,",
        "             * the claims provided by the authorization server,",
        "             * and the claims requested by the client.",
        "             * @returns {java.util.ArrayList}",
        "             * Returns a complete list of org.forgerock.openidconnect.Claim objects available to the script.",
        "             * @see {@link https://backstage.forgerock.com/docs/am/7/apidocs/org/forgerock/openidconnect/Claim.html} for the claim object details.",
        "             */",
        "            function getClaims() {",
        "                /**",
        "                 * Returns a list of claim objects for the requested scopes.",
        "                 * Uses the scopeClaimsMap configuration option to derive the claim names;",
        "                 * no other properties of a claim derived from a scope are populated.",
        "                 * @returns {java.util.ArrayList}",
        "                 * A list of org.forgerock.openidconnect.Claim objects derived from the requested scopes.",
        "                 * @see {@link https://backstage.forgerock.com/docs/am/7/apidocs/org/forgerock/openidconnect/Claim.html} for the claim object details.",
        "                 */",
        "                function convertScopeToClaims() {",
        "                    var claims = new frJava.ArrayList();",
        "",
        "                    scopes.toArray().forEach(function (scope) {",
        "                        if (String(scope) !== 'openid' && scopeClaimsMap[scope]) {",
        "                            scopeClaimsMap[scope].forEach(function (claimName) {",
        "                                claims.add(new frJava.Claim(claimName));",
        "                            });",
        "                        }",
        "                    });",
        "",
        "                    return claims;",
        "                }",
        "",
        "                var claims = new frJava.ArrayList();",
        "",
        "                claims.addAll(convertScopeToClaims());",
        "                claims.addAll(claimObjects);",
        "                claims.addAll(requestedTypedClaims);",
        "",
        "                return claims;",
        "            }",
        "",
        "            /**",
        "             * Computes and returns a claim value.",
        "             * To obtain the claim value, uses the resolver function specified for the claim in the claimResolvers configuration object.",
        "             * @see claimResolvers",
        "             * If no resolver function is found, uses the default claim resolver function.",
        "             *",
        "             * @param {org.forgerock.openidconnect.Claim} claim",
        "             * An object that provides methods to obtain information/requirements associated with a claim.",
        "             * @see {@link https://backstage.forgerock.com/docs/am/7/apidocs/org/forgerock/openidconnect/Claim.html} for details.",
        "             * @returns {*} Claim value.",
        "             * @throws {org.forgerock.oauth2.core.exceptions.InvalidRequestException}",
        "             * Rethrows this exception if a claim resolver throws it.",
        "             * You can throw org.forgerock.oauth2.core.exceptions.InvalidRequestException from your custom claim resolver",
        "             * if you want to terminate the claim processing.",
        "             */",
        "            function computeClaim(claim) {",
        "                var resolveClaim;",
        "                var message;",
        "",
        "                try {",
        "                    resolveClaim = claimResolvers[claim.getName()] || resolveAnyClaim;",
        "",
        "                    return resolveClaim(claim);",
        "                } catch (e) {",
        "                    message = 'OIDC Claims script exception. Unable to resolve OIDC Claim. ' + e;",
        "",
        "                    if (String(e).indexOf('org.forgerock.oauth2.core.exceptions.InvalidRequestException') !== -1) {",
        "                        throw e;",
        "                    }",
        "",
        "                    if (logger.warningEnabled()) {",
        "                        logger.warning(message);",
        "                    }",
        "                }",
        "            }",
        "",
        "            var computedClaims = new frJava.LinkedHashMap();",
        "",
        "            getClaims().toArray().forEach(function (claim) {",
        "                var claimValue = computeClaim(claim);",
        "",
        "                if (isClaimValueValid(claimValue)) {",
        "                    computedClaims.put(claim.getName(), claimValue);",
        "                } else {",
        "                    /**",
        "                     * If a claim has been processed, but appears in the list again,",
        "                     * and its value cannot be computed under the new conditions,",
        "                     * the claim is removed from the final result.",
        "                     *",
        "                     * For example, a claim could be mapped to a scope and found in the user profile,",
        "                     * but also requested by the client with required values that don't match the computed one.",
        "                     * @see {link https://openid.net/specs/openid-connect-core-1_0.html#IndividualClaimsRequests}.",
        "                     * for the relevant OIDC specification details.",
        "                     */",
        "                    computedClaims.remove(claim.getName());",
        "                }",
        "            });",
        "",
        "            return computedClaims;",
        "        }",
        "",
        "        /**",
        "         * Creates a map of requested scopes and the corresponding claim names.",
        "         * @returns {java.util.LinkedHashMap}",
        "         */",
        "        function getCompositeScopes () {",
        "            var compositeScopes = new frJava.LinkedHashMap();",
        "",
        "            scopes.toArray().forEach(function (scope) {",
        "                var scopeClaims = new frJava.ArrayList();",
        "",
        "                if (scopeClaimsMap[scope]) {",
        "                    scopeClaimsMap[scope].forEach(function (claimName) {",
        "                        scopeClaims.add(claimName);",
        "                    });",
        "                }",
        "",
        "                if (scopeClaims.size()) {",
        "                    compositeScopes.put(scope, scopeClaims);",
        "                }",
        "            });",
        "",
        "            return compositeScopes;",
        "        }",
        "",
        "        // PUBLIC METHODS",
        "",
        "        return {",
        "            setScopeClaimsMap: setScopeClaimsMap,",
        "            setClaimResolvers: setClaimResolvers,",
        "            getUserProfileClaimResolver: getUserProfileClaimResolver,",
        "            getAddressClaimResolver: getAddressClaimResolver,",
        "            getEssentialClaimResolver: getEssentialClaimResolver,",
        "            getUserInfoClaims: getUserInfoClaims",
        "        };",
        "    }",
        "",
        "    // RESULTS",
        "",
        "    /**",
        "     * This script returns an instance of the org.forgerock.oauth2.core.UserInfoClaims class",
        "     * populated with the computed claim values and",
        "     * the requested scopes mapped to the claim names.",
        "     * @see {@link https://backstage.forgerock.com/docs/am/7/apidocs/org/forgerock/oauth2/core/UserInfoClaims.html}.",
        "     *",
        "     * Assigning it to a variable gives you an opportunity",
        "     * to log the content of the returned value during development.",
        "     */",
        "    var userInfoClaims = utils.getUserInfoClaims();",
        "",
        "    /*",
        "    logger.error(scriptName + ' results:')",
        "    logger.error('Values: ' + userInfoClaims.getValues())",
        "    logger.error('Scopes: ' + userInfoClaims.getCompositeScopes())",
        "    */",
        "",
        "    return userInfoClaims;",
        "}());",
      ],
    },
    "e232cff3-2460-47cd-80b2-36c86c0d0f06": {
      "_id": "e232cff3-2460-47cd-80b2-36c86c0d0f06",
      "context": "OAUTH2_ACCESS_TOKEN_MODIFICATION",
      "createdBy": "null",
      "creationDate": 0,
      "default": false,
      "description": "Used by endUserUIClient",
      "language": "JAVASCRIPT",
      "lastModifiedBy": "null",
      "lastModifiedDate": 0,
      "name": "Alpha endUserUIClient OAuth2 Access Token Modification Script",
      "script": [
        "(function () {",
        "  if (scopes.contains('fr:autoaccess:*') || scopes.contains('fr:iga:*')) {",
        "    var fr = JavaImporter(",
        "      com.sun.identity.idm.IdType",
        "    );",
        "    var groups = [];",
        "    identity.getMemberships(fr.IdType.GROUP).toArray().forEach(function (group) {",
        "      groups.push(group.getAttribute('cn').toArray()[0]);",
        "    });",
        "    accessToken.setField('groups', groups);",
        "  }",
        "}());",
        "",
      ],
    },
    "e4417108-4dc9-4ffc-9995-3cd490adf2ed": {
      "_id": "e4417108-4dc9-4ffc-9995-3cd490adf2ed",
      "context": "AUTHENTICATION_TREE_DECISION_NODE",
      "createdBy": "null",
      "creationDate": 0,
      "default": false,
      "description": "Collect PIN",
      "language": "JAVASCRIPT",
      "lastModifiedBy": "null",
      "lastModifiedDate": 0,
      "name": "Collect PIN",
      "script": [
        "/* Collect PIN",
        " * ",
        " * Collect PIN using password callback and store in user profile.",
        " * ",
        " * This script must be parametrized. It may not work properly as is.",
        " * ",
        " * The Scripted Decision Node needs the following outcomes defined:",
        " * - true",
        " *",
        " * Author: volker.scheuber@forgerock.com",
        " */",
        "(function () {",
        "  ",
        "  /*** BEGIN PARAMETRIZATION ***/",
        "  var pinAttrName = 'frUnindexedString3';",
        "  var pinPrompt = 'New PIN';",
        "  /**** END PARAMETRIZATION ****/",
        "  ",
        "  outcome = 'true';",
        "  var fr = JavaImporter(",
        "    org.forgerock.openam.auth.node.api.Action,",
        "      javax.security.auth.callback.PasswordCallback",
        "  )",
        "  if (callbacks.isEmpty()) {",
        "    action = fr.Action.send(",
        "      new fr.PasswordCallback(pinPrompt, false)",
        "    ).build();",
        "  }",
        "  else {",
        "      var pin = new java.lang.String(callbacks.get(0).getPassword());",
        "    setTransientObjectAttribute(pinAttrName, pin);",
        "    action = fr.Action.goTo(outcome).build();",
        "  }",
        "",
        "  /*",
        "   * Store attributes in transient state for use with the Create/Patch Object nodes.",
        "   */",
        "  function setTransientObjectAttribute(name, value) {",
        "    var transientStorage = transientState.get("objectAttributes");",
        "    if (transientStorage && value) {",
        "      if (transientStorage.put) {",
        "        transientStorage.put(name, value);",
        "      }",
        "      else {",
        "        transientStorage[name] = value;",
        "      }",
        "    }",
        "    else if (value) {",
        "      transientState.put("objectAttributes", JSON.parse("{\\""+name+"\\":\\""+value+"\\"}"));",
        "    }",
        "  }",
        "}());",
      ],
    },
    "e49225eb-e7ad-4699-bf2a-d57689f9cd6e": {
      "_id": "e49225eb-e7ad-4699-bf2a-d57689f9cd6e",
      "context": "AUTHENTICATION_TREE_DECISION_NODE",
      "createdBy": "null",
      "creationDate": 0,
      "default": false,
      "description": "Display sharedState and transientState.",
      "language": "JAVASCRIPT",
      "lastModifiedBy": "null",
      "lastModifiedDate": 0,
      "name": "Display States - imported (1)",
      "script": [
        "/* Display States",
        " * ",
        " * Display sharedState and transientState.",
        " * ",
        " * This script does not need to be parametrized. It will work properly as is.",
        " * ",
        " * The Scripted Decision Node needs the following outcomes defined:",
        " * - true",
        " *",
        " * Author: volker.scheuber@forgerock.com",
        " */",
        "(function () {",
        "    outcome = "true";",
        "",
        "    var anchor = "anchor-".concat(generateNumericToken('xxx'));",
        "    var halign = "left";",
        "    var message = "<h4>Current State Values</h4>".concat(",
        "        "<p><b>Shared State</b>:<br/>").concat(",
        "        sharedState.toString()).concat("</p>").concat(",
        "        "<p><b>Transient State</b>:<br/>").concat(",
        "        transientState.toString()).concat("</p>").concat(",
        "        "<p><b>Request Headers</b>:<br/>").concat(",
        "        requestHeaders.toString()).concat("</p>")",
        "    var script = "Array.prototype.slice.call(\\n".concat(",
        "      "document.getElementsByClassName('callback-component')).forEach(\\n").concat(",
        "      "function (e) {\\n").concat(",
        "      "  var message = e.firstElementChild;\\n").concat(",
        "      "  if (message.firstChild && message.firstChild.nodeName == '#text' && message.firstChild.nodeValue.trim() == '").concat(anchor).concat("') {\\n").concat(",
        "      "    message.className = \\"\\";\\n").concat(",
        "      "    message.style = \\"text-align: left; inline-size: 430px; overflow-wrap: break-word;\\";\\n").concat(",
        "      "    message.align = \\"").concat(halign).concat("\\";\\n").concat(",
        "      "    message.innerHTML = '").concat(message).concat("';\\n").concat(",
        "      "  }\\n").concat(",
        "      "})")",
        "    var fr = JavaImporter(",
        "        org.forgerock.openam.auth.node.api.Action,",
        "        javax.security.auth.callback.TextOutputCallback,",
        "        com.sun.identity.authentication.callbacks.ScriptTextOutputCallback",
        "    )",
        "    if (message.length && callbacks.isEmpty()) {",
        "        action = fr.Action.send(",
        "            new fr.TextOutputCallback(",
        "                fr.TextOutputCallback.INFORMATION,",
        "                anchor",
        "            ),",
        "            new fr.ScriptTextOutputCallback(script)",
        "        ).build()",
        "    }",
        "    else {",
        "      action = fr.Action.goTo(outcome).build();",
        "    }",
        "",
        "     /*",
        "      * Generate a token in the desired format. All 'x' characters will be replaced with a random number 0-9.",
        "      * ",
        "      * Example:",
        "      * 'xxxxx' produces '28535'",
        "      * 'xxx-xxx' produces '432-521'",
        "      */",
        "    function generateNumericToken(format) {",
        "        return format.replace(/[x]/g, function(c) {",
        "            var r = Math.random()*10|0;",
        "            var v = r;",
        "            return v.toString(10);",
        "        });",
        "    }",
        "}());",
      ],
    },
    "e78f1f88-d8ad-4ecf-903a-9478072e3997": {
      "_id": "e78f1f88-d8ad-4ecf-903a-9478072e3997",
      "context": "AUTHENTICATION_TREE_DECISION_NODE",
      "createdBy": "null",
      "creationDate": 0,
      "default": false,
      "description": "Display Tenant URL (fqdn)",
      "language": "JAVASCRIPT",
      "lastModifiedBy": "null",
      "lastModifiedDate": 0,
      "name": "Display Tenant URL (fqdn)",
      "script": [
        "/*",
        " * Display Tenant URL (fqdn)",
        " */",
        "",
        "// Specify the message you want to display. You may use HTML for formatting. Avoid line breaks! Use <br> instead.",
        "var message = "<h5>openam-citco-poc.forgeblocks.com</h5>";",
        "",
        "// Choose the horizontal alignment of your message. Use left, center, right.",
        "var halign = "left";",
        "/*",
        " * End configuration",
        " */",
        "",
        "var output = true;",
        "var anchor = "anchor-".concat(generateNumericToken('xxx'));",
        "var script = "Array.prototype.slice.call(\\n".concat(",
        "  "document.getElementsByClassName('callback-component')).forEach(\\n").concat(",
        "  "function (e) {\\n").concat(",
        "  "  var message = e.firstElementChild;\\n").concat(",
        "  "  if (message.firstChild && message.firstChild.nodeName == '#text' && message.firstChild.nodeValue.trim() == '").concat(anchor).concat("') {\\n").concat(",
        "  "    message.align = \\"").concat(halign).concat("\\";\\n").concat(",
        "  "    message.innerHTML = '").concat(message).concat("';\\n").concat(",
        "  "  }\\n").concat(",
        "  "})")",
        "var fr = JavaImporter(",
        "    org.forgerock.openam.auth.node.api.Action,",
        "    javax.security.auth.callback.TextOutputCallback,",
        "    com.sun.identity.authentication.callbacks.ScriptTextOutputCallback",
        ")",
        "if (message.length && callbacks.isEmpty()) {",
        "    action = fr.Action.send(",
        "        new fr.TextOutputCallback(",
        "            fr.TextOutputCallback.INFORMATION,",
        "            anchor",
        "        ),",
        "        new fr.ScriptTextOutputCallback(script)",
        "    ).build()",
        "}",
        "else {",
        "  action = fr.Action.goTo("true").build();",
        "}",
        "",
        " /*",
        "  * Generate a token in the desired format. All 'x' characters will be replaced with a random number 0-9.",
        "  * ",
        "  * Example:",
        "  * 'xxxxx' produces '28535'",
        "  * 'xxx-xxx' produces '432-521'",
        "  */",
        "function generateNumericToken(format) {",
        "    return format.replace(/[x]/g, function(c) {",
        "        var r = Math.random()*10|0;",
        "        var v = r;",
        "        return v.toString(10);",
        "    });",
        "}",
      ],
    },
    "e9c9d940-30d9-4a0c-a834-7de69a0600cf": {
      "_id": "e9c9d940-30d9-4a0c-a834-7de69a0600cf",
      "context": "AUTHENTICATION_TREE_DECISION_NODE",
      "createdBy": "null",
      "creationDate": 0,
      "default": false,
      "description": "null",
      "language": "JAVASCRIPT",
      "lastModifiedBy": "null",
      "lastModifiedDate": 0,
      "name": "Admin_CollectUsernameOrEmail",
      "script": [
        "var fr = JavaImporter(",
        "  org.forgerock.json.JsonValue,",
        "  org.forgerock.openam.auth.node.api.Action,",
        "  javax.security.auth.callback.NameCallback,",
        "  java.util.HashMap",
        ");",
        "",
        "with (fr) {",
        "  try {",
        "    ",
        "    if (callbacks.isEmpty()) {",
        "      ",
        "      action = Action.send(new NameCallback('Username or email address')).build();",
        "      ",
        "    } else {",
        "",
        "      // If a value is provided, store it as username and an object attribute",
        "      var callback = callbacks.iterator().next();",
        "      var name = callback.getName().trim();",
        "      if (name) {",
        "        var objAttrs = sharedState.get('objectAttributes') || new HashMap();",
        "        objAttrs.put('mail', name);",
        "        sharedState.put('username', name);",
        "        sharedState.put('objectAttributes', objAttrs);",
        "",
        "        action = Action.goTo('Collected').build();",
        "      }",
        "      ",
        "    }",
        "    ",
        "  } catch (e) {",
        "    ",
        "    logger.error('Admin_CollectUsernameOrEmail: {}', e);",
        "    action = Action.goTo('Error').build();",
        "    ",
        "  }",
        "}",
      ],
    },
    "ec8b314c-8e11-4364-93b9-a3e82d2a074a": {
      "_id": "ec8b314c-8e11-4364-93b9-a3e82d2a074a",
      "context": "AUTHENTICATION_TREE_DECISION_NODE",
      "createdBy": "null",
      "creationDate": 0,
      "default": false,
      "description": "Display Password from nodeState",
      "language": "JAVASCRIPT",
      "lastModifiedBy": "null",
      "lastModifiedDate": 0,
      "name": "Display Password",
      "script": [
        "/* Display Password",
        " *",
        " * Author: volker.scheuber@forgerock.com",
        " * ",
        " * Display Password collected via Platform Password node.",
        " * ",
        " * This script does not need to be parametrized. It will work properly as is.",
        " * ",
        " * The Scripted Decision Node needs the following outcomes defined:",
        " * - true",
        " */",
        "var password = "unable to retrieve!";",
        "if (nodeState.get("password")) {",
        "  password = nodeState.get("password").asString();",
        "}",
        "var fr = JavaImporter(",
        "    org.forgerock.openam.auth.node.api.Action,",
        "    javax.security.auth.callback.TextOutputCallback",
        ")",
        "if (callbacks.isEmpty()) {",
        "    action = fr.Action.send(",
        "        new fr.TextOutputCallback(",
        "            fr.TextOutputCallback.INFORMATION,",
        "            password",
        "        )",
        "    ).build()",
        "}",
        "else {",
        "  action = fr.Action.goTo("true").build();",
        "}",
      ],
    },
    "ed685f9f-5909-4726-86e8-22bd38b47663": {
      "_id": "ed685f9f-5909-4726-86e8-22bd38b47663",
      "context": "SOCIAL_IDP_PROFILE_TRANSFORMATION",
      "createdBy": "null",
      "creationDate": 0,
      "default": true,
      "description": "Converts a normalized social profile into an Identity",
      "language": "GROOVY",
      "lastModifiedBy": "null",
      "lastModifiedDate": 0,
      "name": "Normalized Profile to Identity",
      "script": [
        "/*",
        " * Copyright 2021 ForgeRock AS. All Rights Reserved",
        " *",
        " * Use of this code requires a commercial software license with ForgeRock AS.",
        " * or with one of its affiliates. All use shall be exclusively subject",
        " * to such license between the licensee and ForgeRock AS.",
        " */",
        "",
        "import static org.forgerock.json.JsonValue.field",
        "import static org.forgerock.json.JsonValue.json",
        "import static org.forgerock.json.JsonValue.object",
        "",
        "import org.forgerock.json.JsonValue",
        "",
        "JsonValue identity = json(object(",
        "        field("givenName", normalizedProfile.givenName),",
        "        field("sn", normalizedProfile.familyName),",
        "        field("mail", normalizedProfile.email),",
        "        field("cn", normalizedProfile.displayName),",
        "        field("userName", normalizedProfile.username),",
        "        field("iplanet-am-user-alias-list", selectedIdp + '-' + normalizedProfile.id.asString())))",
        "",
        "return identity",
      ],
    },
    "eea1e530-8cf4-4875-af75-11396e6a8859": {
      "_id": "eea1e530-8cf4-4875-af75-11396e6a8859",
      "context": "AUTHENTICATION_TREE_DECISION_NODE",
      "createdBy": "null",
      "creationDate": 0,
      "default": false,
      "description": "Embed cookie consent JavaScript snippet.",
      "language": "JAVASCRIPT",
      "lastModifiedBy": "null",
      "lastModifiedDate": 0,
      "name": "Embed Cookie Consent",
      "script": [
        "/* Embed Cookie Consent",
        " *",
        " * Author: volker.scheuber@forgerock.com",
        " * ",
        " * Embed a OneTrust cookie consent JavaScript in a login/registration journey.",
        " * ",
        " * This script needs to be parametrized. It will not work properly as is. It",
        " * requires a valid OneTrust Key.",
        " * ",
        " * The Scripted Decision Node needs the following outcomes defined:",
        " * - true",
        " */",
        "",
        "/*",
        " * BEGIN SCRIPT CONFIGURATION",
        " *",
        " * REPLACE WITH YOUR OWN ONETRUST KEY",
        " */",
        "var ONETRUST_KEY = "8a84e8cb-e3fa-4d7a-b1af-20179caddabb";",
        "/*",
        " * END SCRIPT CONFIGURATION",
        " */",
        "",
        "var script = ''.concat(",
        "      'var js1 = document.createElement("script");\\n').concat(",
        "    'js1.type = "text/javascript";\\n').concat(",
        "      'js1.charset = "UTF-8";\\n').concat(",
        "    'js1.src = "https://cdn.cookielaw.org/scripttemplates/otSDKStub.js";\\n').concat(",
        "    'js1.setAttribute("data-domain-script", "').concat(ONETRUST_KEY).concat('");\\n').concat(",
        "    'document.head.appendChild(js1);\\n').concat(",
        "      'var js2 = document.createElement("script");\\n').concat(",
        "    'js2.type = "text/javascript";\\n').concat(",
        "      'js2.innerHTML = "function OptanonWrapper() { }";\\n').concat(",
        "    'document.head.appendChild(js2);\\n')",
        "",
        "var output = true;",
        "var fr = JavaImporter(",
        "    org.forgerock.openam.auth.node.api.Action,",
        "    com.sun.identity.authentication.callbacks.ScriptTextOutputCallback",
        ")",
        "if (callbacks.isEmpty()) {",
        "    action = fr.Action.send(",
        "        new fr.ScriptTextOutputCallback(script)",
        "    ).build()",
        "}",
        "else {",
        "  action = fr.Action.goTo(output).build();",
        "}",
      ],
    },
    "f1a2764b-d05a-4480-8f5f-78fda7814227": {
      "_id": "f1a2764b-d05a-4480-8f5f-78fda7814227",
      "context": "AUTHENTICATION_TREE_DECISION_NODE",
      "createdBy": "null",
      "creationDate": 0,
      "default": false,
      "description": "APIProtection: Reset State",
      "language": "JAVASCRIPT",
      "lastModifiedBy": "null",
      "lastModifiedDate": 0,
      "name": "APIProtection: Reset States",
      "script": [
        "logger.warning("APIProtection: Reset States: start");",
        "",
        "/*",
        " * BEGIN SCRIPT CONFIGURATION",
        " *",
        " * Outcomes:",
        " * - "true"",
        " */",
        "var KEY_HEADER_NAME = "x-api-key";",
        "var SECRET_HEADER_NAME = "x-api-secret";",
        "/*",
        " * END SCRIPT CONFIGURATION",
        " */",
        "",
        "outcome = "true";",
        "",
        "if (sharedState.get("username") == readValue(KEY_HEADER_NAME)) {",
        "    logger.warning("APIProtection: Reset States: resetting username to:".concat(readValue("username")));",
        "      sharedState.put("username", readValue("username"));",
        "}",
        "",
        "if (transientState.get("password") == readTransientValue(SECRET_HEADER_NAME)) {",
        "    logger.warning("APIProtection: Reset States: resetting password");",
        "      transientState.put("password", readTransientValue("password"));",
        "}",
        "",
        "logger.warning("APIProtection: Reset States: finish [outcome=".concat(outcome).concat("]"));",
        "",
        "/*",
        " * Read value from storage for APIProtection script use",
        " */",
        "function readValue(name) {",
        "      var storage = sharedState.get("APIProtection");",
        "    if (storage) {",
        "          if (storage.get) {",
        "            return sharedState.get("APIProtection").get(name);",
        "        }",
        "          else {",
        "              return storage.name;",
        "        }",
        "    }",
        "      return null;",
        "}",
        "",
        "/*",
        " * Read transient value from storage for APIProtection script use",
        " */",
        "function readTransientValue(name) {",
        "      var transientStorage = transientState.get("APIProtection");",
        "    if (transientStorage) {",
        "          if (transientStorage.get) {",
        "            return transientState.get("APIProtection").get(name);",
        "        }",
        "          else {",
        "              return transientStorage.name;",
        "        }",
        "    }",
        "      return null;",
        "}",
      ],
    },
    "f2107949-22f8-46c4-865d-ae1d1110a9cb": {
      "_id": "f2107949-22f8-46c4-865d-ae1d1110a9cb",
      "context": "AUTHENTICATION_TREE_DECISION_NODE",
      "createdBy": "null",
      "creationDate": 0,
      "default": false,
      "description": "Detect and preserve currently active theme before setting the new theme.",
      "language": "JAVASCRIPT",
      "lastModifiedBy": "null",
      "lastModifiedDate": 0,
      "name": "Set OATH Theme",
      "script": [
        "/* Set OATH Theme",
        " * ",
        " * Detect and preserve currently active theme before setting the new theme.",
        " * ",
        " * This script does not need to be parametrized. It will work properly as is.",
        " * ",
        " * The Scripted Decision Node needs the following outcomes defined:",
        " * - true",
        " *",
        " * Author: volker.scheuber@forgerock.com",
        " */",
        "(function () {",
        "      outcome = "true";",
        "      ",
        "      var theme = "Expanse_OATH";",
        "",
        "    // do not change, must be a random identifier",
        "    var anchor = generateNumericToken('xxx');",
        "  ",
        "      var script = "";",
        "    script += "document.getElementById(\\"theme-id-"+anchor+"\\").value = localStorage.getItem('theme-id');";",
        "    script += "console.log('theme-id='+document.getElementById(\\"theme-id-"+anchor+"\\").value);";",
        "      script += "document.getElementById(\\"loginButton_0\\").click();";",
        "",
        "    var fr = JavaImporter(",
        "        org.forgerock.openam.auth.node.api.Action,",
        "          org.forgerock.openam.authentication.callbacks.PollingWaitCallback,",
        "        com.sun.identity.authentication.callbacks.HiddenValueCallback,",
        "        com.sun.identity.authentication.callbacks.ScriptTextOutputCallback",
        "    )",
        "    // discover active theme from UI",
        "    if (callbacks.isEmpty()) {",
        "        action = fr.Action.send(",
        "            new fr.HiddenValueCallback("theme-id-"+anchor, "false"),",
        "            new fr.ScriptTextOutputCallback(script)",
        "        ).build();",
        "    }",
        "      // get active theme from callback and set new theme",
        "      else if (callbacks.size() === 2) {",
        "        // did we get the id of the currently active theme?",
        "        if (callbacks.get(0).getValue() !== "theme-id-"+anchor) {",
        "              sharedState.put("themeId", callbacks.get(0).getValue());",
        "        }",
        "        // set new theme",
        "        var stage = "themeId="+theme;",
        "        action = fr.Action.send(",
        "              new fr.PollingWaitCallback("0", "Please wait ...")",
        "        ).withStage(stage).build();",
        "    }",
        "      else {",
        "        // continue",
        "        action = fr.Action.goTo(outcome).build();",
        "    }",
        "",
        "     /*",
        "      * Generate a token in the desired format. All 'x' characters will be replaced with a random number 0-9.",
        "      * ",
        "      * Example:",
        "      * 'xxxxx' produces '28535'",
        "      * 'xxx-xxx' produces '432-521'",
        "      */",
        "    function generateNumericToken(format) {",
        "        return format.replace(/[x]/g, function(c) {",
        "            var r = Math.random()*10|0;",
        "            var v = r;",
        "            return v.toString(10);",
        "        });",
        "    }",
        "}());",
      ],
    },
    "f26cc0de-ee31-4114-8a32-27799bb49357": {
      "_id": "f26cc0de-ee31-4114-8a32-27799bb49357",
      "context": "AUTHENTICATION_TREE_DECISION_NODE",
      "createdBy": "null",
      "creationDate": 0,
      "default": false,
      "description": "null",
      "language": "JAVASCRIPT",
      "lastModifiedBy": "null",
      "lastModifiedDate": 0,
      "name": "Setup MFA Choice",
      "script": [
        "/*",
        " * Adapt the configuration values below",
        " */",
        "",
        "// do not change, must be a random identifier",
        "var anchor = generateNumericToken('xxx');",
        "",
        "// specify the horizontal alignment of the message: left, center, right",
        "var halign = "center";",
        "",
        "// specify the style to apply to the button in the message to make it look like a link",
        "var linkButtonStyle = "border: 0; color: #109CF1; text-decoration: none; background-color: transparent;";",
        "",
        "// specify the link button HTML element. only modify the text between the <button> and </button> tags.",
        "var linkButton = "<button id=\\"skip-link-".concat(anchor).concat("\\" type=\\"submit\\" style=\\"").concat(linkButtonStyle).concat("\\">skip for now.</button>");",
        "",
        "// specify the message you want to display and place the linkButton anywhere",
        "var message = "Please select your prefered factor or".concat(linkButton);",
        "",
        "// specify the choices you want to offer the user.",
        "var choices = ["SMS","Fido","Push"];",
        "",
        "// specify the default choice. this setting must be a valid 0-based index of the choices array above.",
        "var defaultChoice = 0;",
        "",
        "/*",
        " * All the configuration values are above this comment.",
        " *",
        " * DO NOT MAKE ANY CHANGES BELOW!",
        " */",
        "",
        "// find the TextOutputCallback with the message_anchor",
        "// and replace the message_anchor with the message",
        "var displayMessageScript = "".concat(",
        "  "Array.prototype.slice.call(\\n").concat(",
        "  "  document.getElementsByClassName('callback-component')\\n").concat(",
        "  ").forEach(\\n").concat(",
        "  "  function (e) {\\n").concat(",
        "  "    var message = e.firstElementChild;\\n").concat(",
        "  "    if (message.firstChild && message.firstChild.nodeName == '#text' && message.firstChild.nodeValue.trim() == 'message-").concat(anchor).concat("') {\\n").concat(",
        "  "      message.align = \\"").concat(halign).concat("\\";\\n").concat(",
        "  "      message.innerHTML = '").concat(message).concat("';\\n").concat(",
        "  "    }\\n").concat(",
        "  "  }\\n").concat(",
        "  ")")",
        "",
        "// hijack the link button in the message and:",
        "// - find the HiddenValueCallback and set its value to "Skip"",
        "// - then simulate a login button click",
        "var skipOptionScript = "".concat(",
        "  "document.getElementById(\\"skip-link-").concat(anchor).concat("\\").onclick = function(){\\n").concat(",
        "  "  document.getElementById(\\"skip-input-").concat(anchor).concat("\\").value = \\"Skip\\";\\n").concat(",
        "  "  document.getElementById(\\"loginButton_0\\").click();\\n").concat(",
        "  "  return false;\\n").concat(",
        "  "}")",
        "",
        "var fr = JavaImporter(",
        "    org.forgerock.openam.auth.node.api.Action,",
        "    javax.security.auth.callback.ConfirmationCallback,",
        "    javax.security.auth.callback.TextOutputCallback,",
        "    com.sun.identity.authentication.callbacks.HiddenValueCallback,",
        "    com.sun.identity.authentication.callbacks.ScriptTextOutputCallback",
        ")",
        "",
        "if (callbacks.isEmpty()) {",
        "    action = fr.Action.send(",
        "        new fr.TextOutputCallback(",
        "            fr.TextOutputCallback.INFORMATION,",
        "            "message-".concat(anchor)",
        "        ),",
        "        new fr.ConfirmationCallback(",
        "            fr.ConfirmationCallback.INFORMATION,",
        "            choices,",
        "            defaultChoice",
        "        ),",
        "        new fr.HiddenValueCallback("skip-input-".concat(anchor), "false"),",
        "        new fr.ScriptTextOutputCallback(displayMessageScript),",
        "        new fr.ScriptTextOutputCallback(skipOptionScript)",
        "    ).build()",
        "}",
        "else {",
        "  // did the user skip?",
        "  if (callbacks.get(2).getValue() == "Skip") {",
        "    action = fr.Action.goTo("Skip").build();",
        "  }",
        "  // user didn't skip, pick the right outcome",
        "  else {",
        "    action = fr.Action.goTo(choices[callbacks.get(1).getSelectedIndex()]).build();",
        "  }",
        "}",
        "",
        " /*",
        "  * Generate a token in the desired format. All 'x' characters will be replaced with a random number 0-9.",
        "  * ",
        "  * Example:",
        "  * 'xxxxx' produces '28535'",
        "  * 'xxx-xxx' produces '432-521'",
        "  */",
        "function generateNumericToken(format) {",
        "    return format.replace(/[x]/g, function(c) {",
        "        var r = Math.random()*10|0;",
        "        var v = r;",
        "        return v.toString(10);",
        "    });",
        "}",
      ],
    },
    "f4a1729d-de9e-40b8-9e3c-33241493e4c8": {
      "_id": "f4a1729d-de9e-40b8-9e3c-33241493e4c8",
      "context": "AUTHENTICATION_TREE_DECISION_NODE",
      "createdBy": "null",
      "creationDate": 0,
      "default": false,
      "description": "null",
      "language": "JAVASCRIPT",
      "lastModifiedBy": "null",
      "lastModifiedDate": 0,
      "name": "Admin_UsernameChangedMessage",
      "script": [
        "/*",
        " * Copyright 2023 ForgeRock AS. All Rights Reserved",
        " *",
        " * Use of this code requires a commercial software license with ForgeRock AS.",
        " * or with one of its affiliates. All use shall be exclusively subject",
        " * to such license between the licensee and ForgeRock AS.",
        " */",
        "",
        "/*",
        "This script creates callbacks to display a confirmation message with a single button. The Message Node always",
        "produces two buttons for separate outcomes.",
        "*/",
        "",
        "var message = "<h2 class='h2'>Success</h2><div style='margin-bottom:1em'>Your username was updated successfully.</div>";",
        "var optionValue = 'Sign In';",
        "",
        "var loadingMessage = 'Loading...';",
        "var token = generateNumericToken('xxx');",
        "var inputId = 'input-'.concat(token);",
        "",
        "var setupPageScript =",
        "  'var setupPage = function() {'.concat(",
        "  '  var inputElem = document.getElementById("').concat(inputId).concat('");').concat(",
        "  '  var messageElem;').concat(",
        "  '  document.getElementsByClassName("callback-component").forEach(').concat(",
        "  '    function (e) {').concat(",
        "  '      var m = e.firstElementChild;').concat(",
        "  '      if (m.firstChild && m.firstChild.nodeName == "#text" && m.firstChild.nodeValue.trim() == "').concat(loadingMessage).concat('") {').concat(",
        "  '        messageElem = m;').concat(",
        "  '      }').concat(",
        "  '    }').concat(",
        "  '  );').concat(",
        "  '  if (!inputElem || !messageElem) {').concat(",
        "  '    return setTimeout(setupPage, 50);').concat(",
        "  '  }').concat(",
        "  '  inputElem.value = "').concat(optionValue).concat('";').concat(",
        "  '  messageElem.align = "center";').concat(",
        "  '  messageElem.innerHTML = "').concat(message).concat('";').concat(",
        "  '};').concat(",
        "  'setupPage();');",
        "",
        "var fr = JavaImporter(",
        "  org.forgerock.openam.auth.node.api.Action,",
        "  javax.security.auth.callback.ConfirmationCallback,",
        "  javax.security.auth.callback.TextOutputCallback,",
        "  com.sun.identity.authentication.callbacks.HiddenValueCallback,",
        "  com.sun.identity.authentication.callbacks.ScriptTextOutputCallback",
        ")",
        "",
        "with (fr) {",
        "  if (callbacks.isEmpty()) {",
        "    action = Action.send(",
        "      new TextOutputCallback(",
        "          TextOutputCallback.INFORMATION,",
        "          loadingMessage",
        "      ),",
        "      new ConfirmationCallback(",
        "          ConfirmationCallback.INFORMATION,",
        "          [optionValue],",
        "          0",
        "      ),",
        "      new HiddenValueCallback(inputId, 'false'),",
        "      new ScriptTextOutputCallback(setupPageScript)",
        "    ).build()",
        "  } else {",
        "    action = Action.goTo(optionValue).build();",
        "  }",
        "}",
        "",
        " /*",
        "  * Generate a token in the desired format. All 'x' characters will be replaced with a random number 0-9.",
        "  * ",
        "  * Example:",
        "  * 'xxxxx' produces '28535'",
        "  * 'xxx-xxx' produces '432-521'",
        "  */",
        "function generateNumericToken(format) {",
        "  return format.replace(/[x]/g, function(c) {",
        "    var r = Math.random()*10|0;",
        "    var v = r;",
        "    return v.toString(10);",
        "  });",
        "}",
      ],
    },
    "fbc563cb-eced-4e1b-9cd4-022680347668": {
      "_id": "fbc563cb-eced-4e1b-9cd4-022680347668",
      "context": "AUTHENTICATION_TREE_DECISION_NODE",
      "createdBy": "null",
      "creationDate": 0,
      "default": false,
      "description": "FRAAS-7955 Show Object Values",
      "language": "JAVASCRIPT",
      "lastModifiedBy": "null",
      "lastModifiedDate": 0,
      "name": "FRAAS-7955 Show Object Values",
      "script": [
        "var outcome = true;",
        "",
        "// Requires Identify Existing User auth node to retrieve real user ID from IDM",
        "var userid = sharedState.get("_id");",
        "",
        "// Retrieve user profile attributes",
        "var userName = idRepository.getAttribute(userid, "uid").iterator().next().toString();",
        "var firstName = idRepository.getAttribute(userid, "givenName").iterator().next().toString();",
        "var lastName = idRepository.getAttribute(userid, "sn").iterator().next().toString();",
        "var email = idRepository.getAttribute(userid, "mail").iterator().next().toString();",
        "",
        "var anchor = "anchor-".concat(generateNumericToken('xxx'));",
        "var halign = "left";",
        "var message = "<h4>Object Values</h4>".concat(",
        "    "<p><b>Username</b>: ").concat(userName).concat("</p>").concat(",
        "    "<p><b>First Name</b>: ").concat(firstName).concat("</p>").concat(",
        "    "<p><b>Last Name</b>: ").concat(lastName).concat("</p>").concat(",
        "    "<p><b>Email</b>: ").concat(email).concat("</p>")",
        "var script = "Array.prototype.slice.call(\\n".concat(",
        "  "document.getElementsByClassName('callback-component')).forEach(\\n").concat(",
        "  "function (e) {\\n").concat(",
        "  "  var message = e.firstElementChild;\\n").concat(",
        "  "  if (message.firstChild && message.firstChild.nodeName == '#text' && message.firstChild.nodeValue.trim() == '").concat(anchor).concat("') {\\n").concat(",
        "  "    message.className = \\"text-left\\";\\n").concat(",
        "  "    message.align = \\"").concat(halign).concat("\\";\\n").concat(",
        "  "    message.innerHTML = '").concat(message).concat("';\\n").concat(",
        "  "  }\\n").concat(",
        "  "})")",
        "var fr = JavaImporter(",
        "    org.forgerock.openam.auth.node.api.Action,",
        "    javax.security.auth.callback.TextOutputCallback,",
        "    com.sun.identity.authentication.callbacks.ScriptTextOutputCallback",
        ")",
        "if (message.length && callbacks.isEmpty()) {",
        "    action = fr.Action.send(",
        "        new fr.TextOutputCallback(",
        "            fr.TextOutputCallback.INFORMATION,",
        "            anchor",
        "        ),",
        "        new fr.ScriptTextOutputCallback(script)",
        "    ).build()",
        "}",
        "else {",
        "  action = fr.Action.goTo(outcome).build();",
        "}",
        "",
        " /*",
        "  * Generate a token in the desired format. All 'x' characters will be replaced with a random number 0-9.",
        "  * ",
        "  * Example:",
        "  * 'xxxxx' produces '28535'",
        "  * 'xxx-xxx' produces '432-521'",
        "  */",
        "function generateNumericToken(format) {",
        "    return format.replace(/[x]/g, function(c) {",
        "        var r = Math.random()*10|0;",
        "        var v = r;",
        "        return v.toString(10);",
        "    });",
        "}",
      ],
    },
    "fd536b1f-6ee4-4505-b148-71160414ddcc": {
      "_id": "fd536b1f-6ee4-4505-b148-71160414ddcc",
      "context": "AUTHENTICATION_TREE_DECISION_NODE",
      "createdBy": "null",
      "creationDate": 0,
      "default": false,
      "description": "null",
      "language": "JAVASCRIPT",
      "lastModifiedBy": "null",
      "lastModifiedDate": 0,
      "name": "Admin_AttributeCollectionWorkaroundCleanup",
      "script": [
        "/*",
        " * Copyright 2023 ForgeRock AS. All Rights Reserved",
        " *",
        " * Use of this code requires a commercial software license with ForgeRock AS.",
        " * or with one of its affiliates. All use shall be exclusively subject",
        " * to such license between the licensee and ForgeRock AS.",
        " */",
        "",
        "/*",
        "This is the second part of a workaround began in Admin_AttributeCollectionWorkaround.",
        "*/",
        "",
        "var objAttrs = sharedState.get('objectAttributes') || new HashMap();",
        "",
        "if (objAttrs.containsKey('groups')) {",
        "  var groups = objAttrs.get('groups');",
        "  if (groups.length == 1 && groups[0] == 'fake') {",
        "    objAttrs.remove('groups');",
        "  }",
        "}",
        "",
        "if (objAttrs.containsKey('inviteDate') && objAttrs.get('inviteDate') == 'fake') {",
        "   objAttrs.remove('inviteDate');",
        "}",
        "",
        "sharedState.put('objectAttributes', objAttrs);",
        "",
        "outcome = 'True';",
      ],
    },
    "fd560219-00ad-4763-9a29-f65aa9ecf776": {
      "_id": "fd560219-00ad-4763-9a29-f65aa9ecf776",
      "context": "AUTHENTICATION_TREE_DECISION_NODE",
      "createdBy": "null",
      "creationDate": 0,
      "default": false,
      "description": "null",
      "language": "JAVASCRIPT",
      "lastModifiedBy": "null",
      "lastModifiedDate": 0,
      "name": "Admin_GetIdPGroupsClaimConfig",
      "script": [
        "/*",
        " * Copyright 2023 ForgeRock AS. All Rights Reserved",
        " *",
        " * Use of this code requires a commercial software license with ForgeRock AS.",
        " * or with one of its affiliates. All use shall be exclusively subject",
        " * to such license between the licensee and ForgeRock AS.",
        " */",
        "",
        "/*",
        " * This script is used to retrieve optional custom IdP configuration from IDM as an admin",
        " * completes a login journey. This needs to happen after an IdP has been selected so that",
        " * the \`selectedIdp\` exists in shared state. The result will be stored in a shared state",
        " * key of \`idpCustomConfig\`. The value will be \`null\` if no config was found in IDM.",
        " */",
        "",
        "var AM_INTERNAL_URL = 'http://am.fr-platform:80/am';",
        "var IDM_INTERNAL_URL = 'http://idm.fr-platform:80/openidm';",
        "var RSFILTER_PROVISIONING_CLIENT_ID = 'idm-provisioning';",
        "var RSFILTER_PROVISIONING_SECRET = 'DKNK5K2m5Q98tBTt0yei';",
        "",
        "var SHARED_STATE_KEY = 'idpCustomConfig';",
        "var TXN_ID_HEADER = 'x-forgerock-transactionid';",
        "",
        "// Helper for returning the request transaction ID",
        "function getTransId() {",
        "  var transIds = requestHeaders.get(TXN_ID_HEADER);",
        "  if (transIds) {",
        "    return java.lang.String(transIds.get(0));",
        "  }",
        "  return null;",
        "}",
        "",
        "// Retrieves an access token using a client credentials grant",
        "function getAccessToken(txnId, clientId, clientSecret, scope) {",
        "  var fr = JavaImporter(",
        "    java.lang.String,",
        "    org.forgerock.http.protocol.Request,",
        "    org.forgerock.http.protocol.Response,",
        "    org.forgerock.util.encode.Base64",
        "  );",
        "",
        "  var basicAuthCreds = fr.Base64.encode(new fr.String(clientId + ':' + clientSecret).getBytes('UTF-8'));",
        "",
        "  var request = new fr.Request();",
        "  request.getHeaders().add('authorization', 'Basic ' + basicAuthCreds);",
        "  request.getHeaders().add('content-type', 'application/x-www-form-urlencoded');",
        "  if (txnId) {",
        "    request.getHeaders().add(TXN_ID_HEADER, txnId);",
        "  }",
        "  request",
        "    .setEntity('grant_type=client_credentials&scope=' + scope)",
        "    .setMethod('POST')",
        "    .setUri(AM_INTERNAL_URL + '/oauth2/access_token');",
        "",
        "  var response = httpClient.send(request).getOrThrow();",
        "  if (response.getStatus() === org.forgerock.http.protocol.Status.OK) {",
        "    var result = JSON.parse(response.getEntity().getString());",
        "    logger.message('got access token for client {}', clientId);",
        "    return result.access_token;",
        "  }",
        "  ",
        "  logger.error('failed to get access token for client {}; received status {}', clientId, response.getStatus());",
        "  throw 'failed to get access token';",
        "}",
        "",
        "// Retrieves the IdP custom configuration from IDM",
        "function getConfigFromIDM(txnId, accessToken, idp) {",
        "  var fr = JavaImporter(",
        "    org.forgerock.http.protocol.Request,",
        "    org.forgerock.http.protocol.Response,",
        "    org.forgerock.json.JsonValue,",
        "    org.forgerock.openam.placeholder.substitution.PlaceholderSubstitution,",
        "    org.forgerock.guice.core.InjectorHolder",
        "  );",
        "",
        "  var request = new fr.Request();",
        "  request.getHeaders().add('authorization', 'Bearer ' + accessToken);",
        "  if (txnId) {",
        "    request.getHeaders().add(TXN_ID_HEADER, txnId);",
        "  }",
        "  request",
        "    .setMethod('GET')",
        "    .setUri(IDM_INTERNAL_URL + '/config/fidc/federation-' + idp);",
        "",
        "  var response = httpClient.send(request).getOrThrow();",
        "  if (response.getStatus() === org.forgerock.http.protocol.Status.OK) {",
        "    var rawConfig = JSON.parse(response.getEntity().getString());",
        "    var placeholder = fr.InjectorHolder.getInstance(fr.PlaceholderSubstitution);",
        "    var finalConfig = JSON.parse(placeholder.substitute(fr.JsonValue.json(rawConfig)));",
        "    return finalConfig;",
        "  } else if (response.getStatus() === org.forgerock.http.protocol.Status.NOT_FOUND) {",
        "    return null;",
        "  }",
        "  ",
        "  logger.error('failed to get groups claim config for IdP {}; received status {}', idp, response.getStatus());",
        "  throw 'failed to get groups claim config';",
        "}",
        "",
        "(function () {",
        "  try {",
        "    var idp = nodeState.get('selectedIdp');",
        "    if (!idp.isString()) {",
        "      throw 'selectedIdp not found in shared state';",
        "    }",
        "",
        "    var txnId = getTransId();",
        "    var accessToken = getAccessToken(txnId, RSFILTER_PROVISIONING_CLIENT_ID, RSFILTER_PROVISIONING_SECRET, 'fr:idm:*');",
        "",
        "    var config = getConfigFromIDM(txnId, accessToken, idp.asString())",
        "    if (config) {",
        "      nodeState.putShared(SHARED_STATE_KEY, config);",
        "      logger.message('found groups claim config for IdP {}', idp.asString());",
        "    } else {",
        "      logger.message('no groups claim config found for IdP {}', idp.asString());",
        "    }",
        " ",
        "    outcome = 'Success';",
        "  } catch (e) {",
        "    logger.error('failed to get federation config from IDM: {}', e);",
        "    outcome = 'Error';",
        "  }",
        "}());",
      ],
    },
    "fe35a8fb-31b1-441c-bb9b-27932565061c": {
      "_id": "fe35a8fb-31b1-441c-bb9b-27932565061c",
      "context": "AUTHENTICATION_TREE_DECISION_NODE",
      "createdBy": "null",
      "creationDate": 0,
      "default": false,
      "description": "null",
      "language": "JAVASCRIPT",
      "lastModifiedBy": "null",
      "lastModifiedDate": 0,
      "name": "Admin_MfaGetApp",
      "script": [
        "/*",
        "This creates the following callbacks:",
        "- TextOutputCallback: Display the step title and description",
        "- ConfirmationCallback: Display the "Next" button",
        "- HiddenValueCallback: Captures the "Get app" option, if selected",
        "- ScriptTextOutputCallback: Creates a "Download the app" link button and positions it below the "Next" button",
        "*/",
        "",
        "var token = generateNumericToken('xxx');",
        "var loadingMessage = 'Loading...';",
        "var linkButton = "<button id='getapp-link-".concat(token).concat("' class='btn btn-block btn-link' type='submit'>Download the app</button>");",
        "var message = "<h2 class='h2'>Set up the ForgeRock Authenticator</h2><div style='margin-bottom:1em'>To get started, you need to register your device using the ForgeRock Authenticator app.</div>";",
        "var choices = ['Next'];",
        "var defaultChoice = 0;",
        "var getAppValue = 'Get app';",
        "var getAppInputId = 'getapp-input-'.concat(token);",
        "",
        "var setupPageScript =",
        "  'var setupPage = function() {'.concat(",
        "  '  var getAppInputElem = document.getElementById("').concat(getAppInputId).concat('");').concat(",
        "  '  var messageElem;').concat(",
        "  '  document.getElementsByClassName("callback-component").forEach(').concat(",
        "  '    function (e) {').concat(",
        "  '      var m = e.firstElementChild;').concat(",
        "  '      if (m.firstChild && m.firstChild.nodeName == "#text" && m.firstChild.nodeValue.trim() == "').concat(loadingMessage).concat('") {').concat(",
        "  '        messageElem = m;').concat(",
        "  '      }').concat(",
        "  '    }').concat(",
        "  '  );').concat(",
        "  '  if (!getAppInputElem || !messageElem) {').concat(",
        "  '    return setTimeout(setupPage, 50);').concat(",
        "  '  }').concat(",
        "  '  var skipContainer = document.createElement("div");').concat(",
        "  '  skipContainer.style = "width:100%";').concat(",
        "  '  skipContainer.innerHTML = "').concat(linkButton).concat('";').concat(",
        "  '  getAppInputElem.parentNode.append(skipContainer);').concat(",
        "  '  messageElem.align = "center";').concat(",
        "  '  messageElem.innerHTML = "').concat(message).concat('";').concat(",
        "  '  var bindGetAppLink = function() {').concat(",
        "  '    document.getElementById("getapp-link-').concat(token).concat('").onclick = function() {').concat(",
        "  '      getAppInputElem.value = "').concat(getAppValue).concat('";').concat(",
        "  '      document.getElementById("loginButton_0").click();').concat(",
        "  '      return false;').concat(",
        "  '    };').concat(",
        "  '  };').concat(",
        "  '  setTimeout(bindGetAppLink, 100);').concat(",
        "  '};').concat(",
        "  'setupPage();');",
        "",
        "var fr = JavaImporter(",
        "  org.forgerock.openam.auth.node.api.Action,",
        "  javax.security.auth.callback.ConfirmationCallback,",
        "  javax.security.auth.callback.TextOutputCallback,",
        "  com.sun.identity.authentication.callbacks.HiddenValueCallback,",
        "  com.sun.identity.authentication.callbacks.ScriptTextOutputCallback",
        ")",
        "",
        "with (fr) {",
        "  if (callbacks.isEmpty()) {",
        "    action = Action.send(",
        "      new TextOutputCallback(",
        "          TextOutputCallback.INFORMATION,",
        "          loadingMessage",
        "      ),",
        "      new ConfirmationCallback(",
        "          ConfirmationCallback.INFORMATION,",
        "          choices,",
        "          defaultChoice",
        "      ),",
        "      new HiddenValueCallback(getAppInputId, 'false'),",
        "      new ScriptTextOutputCallback(setupPageScript)",
        "    ).build()",
        "  } else {",
        "    if (callbacks.get(2).getValue() == getAppValue) {",
        "      action = Action.goTo(getAppValue).build();",
        "    } else {",
        "      action = Action.goTo(choices[callbacks.get(1).getSelectedIndex()]).build();",
        "    }",
        "  }",
        "}",
        "",
        " /*",
        "  * Generate a token in the desired format. All 'x' characters will be replaced with a random number 0-9.",
        "  * ",
        "  * Example:",
        "  * 'xxxxx' produces '28535'",
        "  * 'xxx-xxx' produces '432-521'",
        "  */",
        "function generateNumericToken(format) {",
        "  return format.replace(/[x]/g, function(c) {",
        "    var r = Math.random()*10|0;",
        "    var v = r;",
        "    return v.toString(10);",
        "  });",
        "}",
      ],
    },
    "fe5e303b-9ed7-4853-84fe-0ae43e2254d5": {
      "_id": "fe5e303b-9ed7-4853-84fe-0ae43e2254d5",
      "context": "AUTHENTICATION_TREE_DECISION_NODE",
      "createdBy": "null",
      "creationDate": 0,
      "default": false,
      "description": "Display the username in an HTML dialog.",
      "language": "JAVASCRIPT",
      "lastModifiedBy": "null",
      "lastModifiedDate": 0,
      "name": "Display Username",
      "script": [
        "/* Display Username",
        " *",
        " * Author: volker.scheuber@forgerock.com",
        " * ",
        " * Display the username.",
        " * ",
        " * This script does not need to be parametrized. It will work properly as is.",
        " * ",
        " * The Scripted Decision Node needs the following outcomes defined:",
        " * - true",
        " */",
        "(function () {",
        "  try {",
        "    var outcome = 'true';",
        "    var username = nodeState.get('username').asString();",
        "",
        "    // Specify the message you want to display. You may use HTML for formatting. Avoid line breaks! Use <br> instead.",
        "    var message = '<h5>'+username+'</h5>';",
        "",
        "    var anchor = 'anchor-'+generateNumericToken('xxx');",
        "    var script = "Array.prototype.slice.call(\\n \\",
        "      document.getElementsByClassName('callback-component')).forEach(\\n \\",
        "      function (e) {\\n \\",
        "        var message = e.firstElementChild;\\n \\",
        "        if (message.firstChild && message.firstChild.nodeName == '#text' && message.firstChild.nodeValue.trim() == '"+anchor+"') {\\n \\",
        "          message.innerHTML = '"+message+"';\\n \\",
        "        }\\n \\",
        "      })";",
        "    var fr = JavaImporter(",
        "        org.forgerock.openam.auth.node.api.Action,",
        "        javax.security.auth.callback.TextOutputCallback,",
        "        com.sun.identity.authentication.callbacks.ScriptTextOutputCallback",
        "    )",
        "    if (message.length && callbacks.isEmpty()) {",
        "        action = fr.Action.send(",
        "            new fr.TextOutputCallback(",
        "                fr.TextOutputCallback.INFORMATION,",
        "                anchor",
        "            ),",
        "            new fr.ScriptTextOutputCallback(script)",
        "        ).build()",
        "    }",
        "    else {",
        "      action = fr.Action.goTo(outcome).build();",
        "    }",
        "  } catch (error) {",
        "    logger.error('Error: ' + error);",
        "    nodeState.putShared('error', error.message);",
        "  }",
        "",
        "   /*",
        "    * Generate a token in the desired format. All 'x' characters will be replaced with a random number 0-9.",
        "    * ",
        "    * Example:",
        "    * 'xxxxx' produces '28535'",
        "    * 'xxx-xxx' produces '432-521'",
        "    */",
        "  function generateNumericToken(format) {",
        "      return format.replace(/[x]/g, function(c) {",
        "          var r = Math.random()*10|0;",
        "          var v = r;",
        "          return v.toString(10);",
        "      });",
        "  }",
        "}());",
      ],
    },
    "fff76556-2882-4109-a9a6-c42d546cfe57": {
      "_id": "fff76556-2882-4109-a9a6-c42d546cfe57",
      "context": "OAUTH2_SCRIPTED_JWT_ISSUER",
      "createdBy": "null",
      "creationDate": 0,
      "default": false,
      "description": "null",
      "language": "JAVASCRIPT",
      "lastModifiedBy": "null",
      "lastModifiedDate": 0,
      "name": "Service Account - JWT Issuers",
      "script": [
        "(function () {",
        "  var frJava = JavaImporter(",
        "    org.forgerock.oauth2.core.TrustedJwtIssuerConfig,",
        "    java.util.HashSet",
        "  );",
        "",
        "  with (frJava) {",
        "    var iss = idRepository.getIdentity(issuer);",
        "    if (iss == null) {",
        "      logger.message('No issuer found for: ' + issuer);",
        "      return null;",
        "    }",
        "    logger.message('Found issuer: ' + iss);",
        "",
        "    var accountStatus = iss.getAttributeValues('inetUserStatus');",
        "    if (!accountStatus || accountStatus.length === 0) {",
        "      logger.message('No inetUserStatus attribute in issuer');",
        "      return null;",
        "    } else if (accountStatus[0].toLowerCase() != 'active') {",
        "      logger.message('Issuer is not active');",
        "      return null;",
        "    }",
        "",
        "    var jwksAttrs = iss.getAttributeValues('fr-attr-jwks');",
        "    if (!jwksAttrs || jwksAttrs.length === 0) {",
        "      logger.message('No jwks attributes in issuer');",
        "      return null;",
        "    }",
        "",
        "    var jwkSet = jwksAttrs[0];",
        "    if (!jwkSet) {",
        "      logger.message('No jwk set in issuer');",
        "      return null;",
        "    }",
        "",
        "    var config = new TrustedJwtIssuerConfig(",
        "      issuer,",
        "      'sub',",
        "      'scope',",
        "      new HashSet([issuer]),",
        "      jwkSet,",
        "      null, null, null",
        "    );",
        "",
        "    return config;",
        "  }",
        "}());",
      ],
    },
  },
  "service": {
    "CorsService": {
      "_id": "",
      "_rev": "515901845",
      "_type": {
        "_id": "CorsService",
        "collection": false,
        "name": "CORS Service",
      },
      "enabled": true,
      "nextDescendents": [],
    },
    "dashboard": {
      "_id": "",
      "_rev": "436796111",
      "_type": {
        "_id": "dashboard",
        "collection": false,
        "name": "Dashboard",
      },
      "defaults": {
        "assignedDashboard": [],
      },
      "nextDescendents": [
        {
          "_id": "Google",
          "_type": {
            "_id": "instances",
            "collection": true,
            "name": "instance",
          },
          "className": "SAML2ApplicationClass",
          "displayName": "Google",
          "icfIdentifier": "idm magic 34",
          "icon": "images/logos/googleplus.png",
          "login": "http://www.google.com",
          "name": "Google",
        },
        {
          "_id": "SalesForce",
          "_type": {
            "_id": "instances",
            "collection": true,
            "name": "instance",
          },
          "className": "SAML2ApplicationClass",
          "displayName": "SalesForce",
          "icfIdentifier": "idm magic 12",
          "icon": "images/logos/salesforce.png",
          "login": "http://www.salesforce.com",
          "name": "SalesForce",
        },
        {
          "_id": "ZenDesk",
          "_type": {
            "_id": "instances",
            "collection": true,
            "name": "instance",
          },
          "className": "SAML2ApplicationClass",
          "displayName": "ZenDesk",
          "icfIdentifier": "idm magic 56",
          "icon": "images/logos/zendesk.png",
          "login": "http://www.ZenDesk.com",
          "name": "ZenDesk",
        },
      ],
    },
  },
  "theme": {
    "022ba5cf-a2e4-49a8-ae6d-2ca54abf6573": {
      "_id": "022ba5cf-a2e4-49a8-ae6d-2ca54abf6573",
      "accountFooter": "<div class="d-flex justify-content-center py-4 w-100"><span class="pr-1">© 2021</span>
<a href="#" target="_blank" class="text-body">My Company, Inc</a><a href="#" target="_blank" style="color: #0000ee" class="pl-3 text-body">Privacy Policy</a><a href="#" target="_blank" style="color: #0000ee" class="pl-3 text-body">Terms & Conditions</a></div>",
      "accountFooterEnabled": false,
      "accountPageSections": {
        "accountControls": {
          "enabled": false,
        },
        "accountSecurity": {
          "enabled": true,
          "subsections": {
            "password": {
              "enabled": true,
            },
            "securityQuestions": {
              "enabled": false,
            },
            "twoStepVerification": {
              "enabled": true,
            },
            "username": {
              "enabled": true,
            },
          },
        },
        "consent": {
          "enabled": false,
        },
        "oauthApplications": {
          "enabled": false,
        },
        "personalInformation": {
          "enabled": true,
        },
        "preferences": {
          "enabled": false,
        },
        "social": {
          "enabled": false,
        },
        "trustedDevices": {
          "enabled": true,
        },
      },
      "backgroundColor": "#324054",
      "backgroundImage": "",
      "bodyText": "#23282e",
      "buttonRounded": 5,
      "dangerColor": "#f7685b",
      "favicon": "",
      "isDefault": true,
      "journeyFooter": "<div class="d-flex justify-content-center py-4 w-100"><span class="pr-1">© 2021</span>
<a href="#" target="_blank" class="text-body">My Company, Inc</a><a href="#" target="_blank" style="color: #0000ee" class="pl-3 text-body">Privacy Policy</a><a href="#" target="_blank" style="color: #0000ee" class="pl-3 text-body">Terms & Conditions</a></div>",
      "journeyFooterEnabled": false,
      "journeyHeader": "<div class="d-flex justify-content-center py-4 flex-grow-1">Header Content</div>",
      "journeyHeaderEnabled": false,
      "journeyJustifiedContent": "",
      "journeyJustifiedContentEnabled": false,
      "journeyLayout": "card",
      "journeyTheaterMode": false,
      "linkActiveColor": "#0c85cf",
      "linkColor": "#109cf1",
      "linkedTrees": [],
      "logo": "",
      "logoAltText": "",
      "logoHeight": "40",
      "logoProfile": "",
      "logoProfileAltText": "",
      "logoProfileCollapsed": "",
      "logoProfileCollapsedAltText": "",
      "logoProfileCollapsedHeight": "40",
      "logoProfileHeight": "40",
      "name": "Starter Theme",
      "pageTitle": "#23282e",
      "primaryColor": "#324054",
      "primaryOffColor": "#242E3C",
      "profileBackgroundColor": "#f6f8fa",
      "profileMenuHighlightColor": "#f3f5f8",
      "profileMenuHoverColor": "#324054",
      "profileMenuHoverTextColor": "#ffffff",
      "profileMenuTextHighlightColor": "#455469",
      "secondaryColor": "#69788b",
      "textColor": "#ffffff",
    },
    "05ef90a8-10f2-47fd-a481-c8c52f49e48f": {
      "_id": "05ef90a8-10f2-47fd-a481-c8c52f49e48f",
      "accountFooter": "<footer class="w-100">
            <div class="d-flex flex-column flex-md-row justify-content-center align-items-center py-4">
              <div class="container w-100">
                <div class="mt-5 py-4 border-top border-darkened">
                  <div class="row" style="color: #23282e;">
                    <div class="col-4 col-md-3 col-lg-2">
                      <h5 style="font-weight: 600; font-size: 0.9375rem;">Company</h5>
                      <ul class="nav mb-4 flex-column">
                        <li class="nav-item"><a href="#" class="nav-link px-0 py-1" target="_self">About Us</a></li>
                        <li class="nav-item"><a href="#" class="nav-link px-0 py-1" target="_self">Contact Us</a></li>
                        <li class="nav-item"><a href="#" class="nav-link px-0 py-1" target="_self">Privacy &amp; Terms</a></li>
                      </ul>
                    </div>
                    <div class="col-4 col-md-3 col-lg-2">
                      <h5 style="font-weight: 600; font-size: 0.9375rem;">Support</h5>
                      <ul class="nav mb-4 flex-column">
                        <li class="nav-item"><a href="#" class="nav-link px-0 py-1" target="_self">Help Center</a></li>
                        <li class="nav-item"><a href="#" class="nav-link px-0 py-1" target="_self">Docs</a></li>
                        <li class="nav-item"><a href="#" class="nav-link px-0 py-1" target="_self">Privacy &amp; Terms</a></li>
                      </ul>
                    </div>
                    <div class="col-4 col-md-3 col-lg-2">
                      <h5 style="font-weight: 600; font-size: 0.9375rem;">Community</h5>
                      <ul class="nav mb-4 flex-column">
                        <li class="nav-item"><a href="#" class="nav-link px-0 py-1" target="_self">Facebook</a></li>
                        <li class="nav-item"><a href="#" class="nav-link px-0 py-1" target="_self">Twitter</a></li>
                        <li class="nav-item"><a href="#" class="nav-link px-0 py-1" target="_self">Forum</a></li>
                      </ul>
                    </div>
                    <div class="col-12 col-lg-6" style="color: #5e6d82">
                      <div class="d-flex align-items-center justify-content-lg-end py-4 py-lg-0">
                        <span class="pr-1">&copy; 2021</span>
                        <a href="#" class="text-decoration-none" target="_self" style="color: #5e6d82">Rob Roy Markets, Inc</a>
                      </div>
                    </div>
                  </div>
                </div> 
              </div>
            </div>
          </footer>
",
      "accountFooterEnabled": true,
      "accountPageSections": {
        "accountControls": {
          "enabled": false,
        },
        "accountSecurity": {
          "enabled": true,
          "subsections": {
            "password": {
              "enabled": true,
            },
            "securityQuestions": {
              "enabled": false,
            },
            "twoStepVerification": {
              "enabled": true,
            },
            "username": {
              "enabled": true,
            },
          },
        },
        "consent": {
          "enabled": false,
        },
        "oauthApplications": {
          "enabled": false,
        },
        "personalInformation": {
          "enabled": true,
        },
        "preferences": {
          "enabled": false,
        },
        "social": {
          "enabled": false,
        },
        "trustedDevices": {
          "enabled": true,
        },
      },
      "backgroundColor": "#FFFFFF",
      "backgroundImage": "",
      "bodyText": "#5E6D82",
      "buttonRounded": "50",
      "dangerColor": "#f7685b",
      "favicon": "",
      "isDefault": false,
      "journeyFooter": "<footer class="w-100">
    <div class="d-flex flex-column flex-md-row justify-content-center align-items-center py-4">
        <div class="container w-100">
            <div class="mt-5 py-4 border-top border-darkened">
                <div class="row" style="color: #23282e;">
                    <div class="col-4 col-md-3 col-lg-2">
                        <h5 style="font-weight: 600; font-size: 0.9375rem;">
                            Company
                        </h5>
                        <ul class="nav mb-4 flex-column">
                            <li class="nav-item">
                                <a href="#" class="nav-link px-0 py-1" target="_self">About Us</a>
                            </li>
                            <li class="nav-item">
                                <a href="#" class="nav-link px-0 py-1" target="_self">Contact Us</a>
                            </li>
                            <li class="nav-item">
                                <a href="#" class="nav-link px-0 py-1" target="_self">Privacy &amp; Terms</a>
                            </li>
                        </ul>
                    </div>
                    <div class="col-4 col-md-3 col-lg-2">
                        <h5 style="font-weight: 600; font-size: 0.9375rem;">
                            Support
                        </h5>
                        <ul class="nav mb-4 flex-column">
                            <li class="nav-item">
                                <a href="#" class="nav-link px-0 py-1" target="_self">Help Center</a>
                            </li>
                            <li class="nav-item">
                                <a href="#" class="nav-link px-0 py-1" target="_self">Docs</a>
                            </li>
                            <li class="nav-item">
                                <a href="#" class="nav-link px-0 py-1" target="_self">Privacy &amp; Terms</a>
                            </li>
                        </ul>
                    </div>
                    <div class="col-4 col-md-3 col-lg-2">
                        <h5 style="font-weight: 600; font-size: 0.9375rem;">
                            Community
                        </h5>
                        <ul class="nav mb-4 flex-column">
                            <li class="nav-item">
                                <a href="#" class="nav-link px-0 py-1" target="_self">Facebook</a>
                            </li>
                            <li class="nav-item">
                                <a href="#" class="nav-link px-0 py-1" target="_self">Twitter</a>
                            </li>
                            <li class="nav-item">
                                <a href="#" class="nav-link px-0 py-1" target="_self">Forum</a>
                            </li>
                        </ul>
                    </div>
                    <div class="col-12 col-lg-6">
                        <div class="d-flex align-items-center justify-content-lg-end py-4 py-lg-0">
                            <span class="pr-1">&copy; 2021</span>
                            <a href="#" class="text-decoration-none" target="_self">Highlander, Inc.</a>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</footer>

",
      "journeyFooterEnabled": true,
      "journeyHeader": "<header>
            <nav
              class="navbar shadow-lg navbar-light bg-white navbar-expand-lg"
            >
              <a href="#" target="_self" class="navbar-brand">
                <img
                  src="https://cdn.forgerock.com/platform/themes/highlander/logo-highlander-full.svg"
                  alt="Logo"
                  style="height: 28px"
                />
              </a>
              <div
                class="navbar-collapse d-none d-lg-flex"
                id="navbarSupportedContent"
              >
                <ul class="navbar-nav mr-auto">
                  <li class="nav-item">
                    <a class="nav-link" href="#">Link</a>
                  </li>
                  <li class="nav-item">
                    <a
                      class="nav-link disabled"
                      href="#"
                      tabindex="-1"
                      aria-disabled="true"
                      >Disabled</a
                    >
                  </li>
                </ul>
                <ul class="navbar-nav ml-auto">
                  <li class="nav-item">
                    <a href="#" target="_self" class="nav-link">Link</a>
                  </li>
                </ul>
              </div>
            </nav>
          </header>
",
      "journeyHeaderEnabled": true,
      "journeyJustifiedContent": "",
      "journeyJustifiedContentEnabled": false,
      "journeyLayout": "card",
      "journeyTheaterMode": false,
      "linkActiveColor": "#C60819",
      "linkColor": "#EB0A1E",
      "linkedTrees": [],
      "logo": "",
      "logoAltText": "",
      "logoEnabled": true,
      "logoHeight": "40",
      "logoProfile": "https://cdn.forgerock.com/platform/themes/highlander/logo-highlander-full.svg",
      "logoProfileAltText": "Highlander",
      "logoProfileCollapsed": "https://cdn.forgerock.com/platform/themes/highlander/logo-highlander-icon.svg",
      "logoProfileCollapsedAltText": "Highlander",
      "logoProfileCollapsedHeight": "28",
      "logoProfileHeight": "28",
      "name": "Highlander",
      "pageTitle": "#23282e",
      "primaryColor": "#EB0A1E",
      "primaryOffColor": "#C60819",
      "profileBackgroundColor": "#FFFFFF",
      "profileMenuHighlightColor": "#FFFFFF",
      "profileMenuHoverColor": "#FFFFFF",
      "profileMenuHoverTextColor": "#455469",
      "profileMenuTextHighlightColor": "#EB0A1E",
      "secondaryColor": "#69788b",
      "textColor": "#ffffff",
    },
    "4c7cb08c-7a9f-4cb6-9211-60654548cae9": {
      "_id": "4c7cb08c-7a9f-4cb6-9211-60654548cae9",
      "accountCardBackgroundColor": "#ffffff",
      "accountCardHeaderColor": "#23282e",
      "accountCardInnerBorderColor": "#e7eef4",
      "accountCardInputBackgroundColor": "#ffffff",
      "accountCardInputBorderColor": "#c0c9d5",
      "accountCardInputLabelColor": "#5e6d82",
      "accountCardInputSelectColor": "#e4f4fd",
      "accountCardInputTextColor": "#23282e",
      "accountCardOuterBorderColor": "#e7eef4",
      "accountCardShadow": 3,
      "accountCardTabActiveBorderColor": "#109cf1",
      "accountCardTabActiveColor": "#e4f4fd",
      "accountCardTextColor": "#5e6d82",
      "accountFooter": "<footer>
  <div class="container-md">
    <div class="py-3 d-flex flex-column flex-sm-row flex-md-column flex-lg-row justify-content-between align-items-center w-100">
      <div class="text-nowrap">
        <span class="pr-1">© 2022</span>
        <a href="#" target="_blank" class="notranslate text-body">Zardoz, Inc</a>
      </div>
      <ul class="nav">
        <li class="nav-item">
          <a href="#" class="nav-link">Privacy Policy</a>
        </li>
        <li class="nav-item">
          <a href="#" class="nav-link">Terms of Use</a>
        </li>
      </ul>
    </div>
  </div>
</footer>
",
      "accountFooterEnabled": true,
      "accountNavigationBackgroundColor": "#ffffff",
      "accountNavigationTextColor": "#455469",
      "accountNavigationToggleBorderColor": "#e7eef4",
      "accountPageSections": {
        "accountControls": {
          "enabled": false,
        },
        "accountSecurity": {
          "enabled": true,
          "subsections": {
            "password": {
              "enabled": true,
            },
            "securityQuestions": {
              "enabled": false,
            },
            "twoStepVerification": {
              "enabled": true,
            },
            "username": {
              "enabled": true,
            },
          },
        },
        "consent": {
          "enabled": false,
        },
        "oauthApplications": {
          "enabled": false,
        },
        "personalInformation": {
          "enabled": true,
        },
        "preferences": {
          "enabled": false,
        },
        "social": {
          "enabled": false,
        },
        "trustedDevices": {
          "enabled": true,
        },
      },
      "accountTableRowHoverColor": "#f6f8fa",
      "backgroundColor": "#FFFFFF",
      "backgroundImage": "",
      "bodyText": "#5E6D82",
      "boldLinks": false,
      "buttonRounded": "50",
      "dangerColor": "#f7685b",
      "favicon": "",
      "fontFamily": "Open Sans",
      "isDefault": false,
      "journeyCardBackgroundColor": "#ffffff",
      "journeyCardBorderRadius": 4,
      "journeyCardHeaderBackgroundColor": "#ffffff",
      "journeyCardShadow": 3,
      "journeyCardTextColor": "#5e6d82",
      "journeyCardTitleColor": "#23282e",
      "journeyFloatingLabels": true,
      "journeyFooter": "<footer>
            <div class="container-md">
            <div class="py-3 d-flex flex-column flex-sm-row flex-md-column flex-lg-row justify-content-between align-items-center w-100">
              <div class="text-nowrap">
                <span class="pr-1">© 2022</span>
                <a href="#" target="_blank" class="notranslate text-body">Zardoz, Inc</a>
              </div>
              <ul class="nav">
                <li class="nav-item">
                  <a href="#" class="nav-link">Privacy Policy</a>
                </li>
                <li class="nav-item">
                  <a href="#" class="nav-link">Terms of Use</a>
                </li>
              </ul>
            </div>
            </div>
          </footer>
",
      "journeyFooterEnabled": true,
      "journeyHeader": "<div class="d-flex justify-content-center py-4 flex-grow-1">Header Content</div>",
      "journeyHeaderEnabled": false,
      "journeyInputBackgroundColor": "#ffffff",
      "journeyInputBorderColor": "#c0c9d5",
      "journeyInputLabelColor": "#5e6d82",
      "journeyInputSelectColor": "#e4f4fd",
      "journeyInputTextColor": "#23282e",
      "journeyJustifiedContent": "<div style="display: flex; background-color: black; height: 100vh;">
    <div class="d-none d-md-flex justify-content-center align-items-center p-5" style="background-image: url(https://cdn.forgerock.com/platform/themes/zardoz/background-zardoz.png);
    background-size: cover;"><h1 class="text-center display-3" style="color: rgb(255, 255, 255);">Uptime &amp; Performance Benchmarking Made Easy</h1></div>
</div>

",
      "journeyJustifiedContentEnabled": true,
      "journeyLayout": "justified-right",
      "journeySignInButtonPosition": "flex-column",
      "journeyTheaterMode": true,
      "linkActiveColor": "#007661",
      "linkColor": "#009C80",
      "linkedTrees": [],
      "logo": "https://cdn.forgerock.com/platform/themes/zardoz/logo-zardoz.svg",
      "logoAltText": "Zardoz Logo",
      "logoEnabled": true,
      "logoHeight": "47",
      "logoProfile": "https://cdn.forgerock.com/platform/themes/zardoz/logo-zardoz.svg",
      "logoProfileAltText": "Zardaz Logo",
      "logoProfileCollapsed": "https://cdn.forgerock.com/platform/themes/zardoz/logo-zardoz.svg",
      "logoProfileCollapsedAltText": "Zardaz Logo",
      "logoProfileCollapsedHeight": "28",
      "logoProfileHeight": "40",
      "name": "Zardoz",
      "pageTitle": "#23282e",
      "primaryColor": "#009C80",
      "primaryOffColor": "#007661",
      "profileBackgroundColor": "#FFFFFF",
      "profileMenuHighlightColor": "#FFFFFF",
      "profileMenuHoverColor": "#FFFFFF",
      "profileMenuHoverTextColor": "#455469",
      "profileMenuTextHighlightColor": "#009C80",
      "secondaryColor": "#69788b",
      "switchBackgroundColor": "#c0c9d5",
      "textColor": "#ffffff",
      "topBarBackgroundColor": "#ffffff",
      "topBarBorderColor": "#e7eef4",
      "topBarHeaderColor": "#23282e",
      "topBarTextColor": "#69788b",
    },
    "84bbd22e-6def-459f-91c9-4c9aa4e0bec0": {
      "_id": "84bbd22e-6def-459f-91c9-4c9aa4e0bec0",
      "accountFooter": "<div class="d-flex justify-content-center py-4 w-100"><span class="pr-1">© 2021</span>
<a href="#" target="_blank" class="text-body">My Company, Inc</a><a href="#" target="_blank" style="color: #0000ee" class="pl-3 text-body">Privacy Policy</a><a href="#" target="_blank" style="color: #0000ee" class="pl-3 text-body">Terms & Conditions</a></div>",
      "accountFooterEnabled": false,
      "accountPageSections": {
        "accountControls": {
          "enabled": false,
        },
        "accountSecurity": {
          "enabled": true,
          "subsections": {
            "password": {
              "enabled": true,
            },
            "securityQuestions": {
              "enabled": false,
            },
            "twoStepVerification": {
              "enabled": true,
            },
            "username": {
              "enabled": true,
            },
          },
        },
        "consent": {
          "enabled": false,
        },
        "oauthApplications": {
          "enabled": false,
        },
        "personalInformation": {
          "enabled": true,
        },
        "preferences": {
          "enabled": false,
        },
        "social": {
          "enabled": false,
        },
        "trustedDevices": {
          "enabled": true,
        },
      },
      "backgroundColor": "#FFFFFF",
      "backgroundImage": "",
      "bodyText": "#000000",
      "buttonRounded": "0",
      "dangerColor": "#f7685b",
      "favicon": "",
      "isDefault": false,
      "journeyFooter": "<div class="d-flex justify-content-center py-4 w-100"><span class="pr-1">© 2021</span>
<a href="#" target="_blank" class="text-body">My Company, Inc</a><a href="#" target="_blank" style="color: #0000ee" class="pl-3 text-body">Privacy Policy</a><a href="#" target="_blank" style="color: #0000ee" class="pl-3 text-body">Terms & Conditions</a></div>",
      "journeyFooterEnabled": false,
      "journeyHeader": "<div class="d-flex justify-content-center py-4 flex-grow-1">Header Content</div>",
      "journeyHeaderEnabled": false,
      "journeyJustifiedContent": "",
      "journeyJustifiedContentEnabled": false,
      "journeyLayout": "card",
      "journeyTheaterMode": false,
      "linkActiveColor": "#000000",
      "linkColor": "#000000",
      "linkedTrees": [],
      "logo": "https://cdn.forgerock.com/platform/themes/contrast/logo-contrast.svg",
      "logoAltText": "Contrast",
      "logoEnabled": true,
      "logoHeight": "72",
      "logoProfile": "data:image/svg+xml,%0A%3Csvg width='46' height='46' viewBox='0 0 46 46' fill='none' xmlns='http://www.w3.org/2000/svg'%3E%3Cpath d='M24.3477 13.5664H43.9438C43.5192 12.6317 43.0319 11.734 42.4905 10.8711H24.3477V13.5664Z' fill='black'/%3E%3Cpath d='M24.3477 8.17578H40.5261C39.6996 7.2052 38.7974 6.30182 37.8224 5.48047H24.3477V8.17578Z' fill='black'/%3E%3Cpath d='M24.3477 40.5195H37.8224C38.7975 39.6982 39.6996 38.7948 40.5261 37.8242H24.3477V40.5195Z' fill='black'/%3E%3Cpath d='M24.3477 2.78516H33.8482C31.0136 1.27039 27.7313 0.198195 24.3477 0V2.78516Z' fill='black'/%3E%3Cpath d='M24.3477 18.957H45.6208C45.4566 18.0405 45.2557 17.1372 44.9856 16.2617H24.3477V18.957Z' fill='black'/%3E%3Cpath d='M24.3477 21.6523V24.3477H45.9317C45.958 23.8992 46 23.4549 46 23C46 22.5451 45.958 22.1008 45.9317 21.6523H24.3477Z' fill='black'/%3E%3Cpath d='M0 23C0 35.1781 9.64778 45.2964 21.6523 46V0C9.64778 0.703566 0 10.8219 0 23Z' fill='black'/%3E%3Cpath d='M24.3477 46C27.7313 45.8018 31.0136 44.7296 33.8482 43.2148H24.3477V46Z' fill='black'/%3E%3Cpath d='M45.6208 27.043H24.3477V29.7383H44.9857C45.2557 28.8628 45.4566 27.9595 45.6208 27.043V27.043Z' fill='black'/%3E%3Cpath d='M24.3477 35.1289H42.4905C43.0319 34.266 43.5192 33.3683 43.9438 32.4336H24.3477V35.1289Z' fill='black'/%3E%3C/svg%3E%0A",
      "logoProfileAltText": "Contrast",
      "logoProfileCollapsed": "data:image/svg+xml,%0A%3Csvg width='46' height='46' viewBox='0 0 46 46' fill='none' xmlns='http://www.w3.org/2000/svg'%3E%3Cpath d='M24.3477 13.5664H43.9438C43.5192 12.6317 43.0319 11.734 42.4905 10.8711H24.3477V13.5664Z' fill='black'/%3E%3Cpath d='M24.3477 8.17578H40.5261C39.6996 7.2052 38.7974 6.30182 37.8224 5.48047H24.3477V8.17578Z' fill='black'/%3E%3Cpath d='M24.3477 40.5195H37.8224C38.7975 39.6982 39.6996 38.7948 40.5261 37.8242H24.3477V40.5195Z' fill='black'/%3E%3Cpath d='M24.3477 2.78516H33.8482C31.0136 1.27039 27.7313 0.198195 24.3477 0V2.78516Z' fill='black'/%3E%3Cpath d='M24.3477 18.957H45.6208C45.4566 18.0405 45.2557 17.1372 44.9856 16.2617H24.3477V18.957Z' fill='black'/%3E%3Cpath d='M24.3477 21.6523V24.3477H45.9317C45.958 23.8992 46 23.4549 46 23C46 22.5451 45.958 22.1008 45.9317 21.6523H24.3477Z' fill='black'/%3E%3Cpath d='M0 23C0 35.1781 9.64778 45.2964 21.6523 46V0C9.64778 0.703566 0 10.8219 0 23Z' fill='black'/%3E%3Cpath d='M24.3477 46C27.7313 45.8018 31.0136 44.7296 33.8482 43.2148H24.3477V46Z' fill='black'/%3E%3Cpath d='M45.6208 27.043H24.3477V29.7383H44.9857C45.2557 28.8628 45.4566 27.9595 45.6208 27.043V27.043Z' fill='black'/%3E%3Cpath d='M24.3477 35.1289H42.4905C43.0319 34.266 43.5192 33.3683 43.9438 32.4336H24.3477V35.1289Z' fill='black'/%3E%3C/svg%3E%0A",
      "logoProfileCollapsedAltText": "",
      "logoProfileCollapsedHeight": "22",
      "logoProfileHeight": "22",
      "name": "Contrast",
      "pageTitle": "#23282e",
      "primaryColor": "#000000",
      "primaryOffColor": "#000000",
      "profileBackgroundColor": "#FFFFFF",
      "profileMenuHighlightColor": "#FFFFFF",
      "profileMenuHoverColor": "#FFFFFF",
      "profileMenuHoverTextColor": "#000000",
      "profileMenuTextHighlightColor": "#455469",
      "secondaryColor": "#69788b",
      "textColor": "#ffffff",
    },
    "f19b7f5a-48dc-4c53-bfac-eeed5966511a": {
      "_id": "f19b7f5a-48dc-4c53-bfac-eeed5966511a",
      "accountFooter": "<footer class="w-100">
            <div class="d-flex flex-column flex-md-row justify-content-center align-items-center py-4">
              <div class="container w-100">
                <div class="mt-5 py-4 border-top border-darkened">
                  <div class="row" style="color: #23282e;">
                    <div class="col-4 col-md-3 col-lg-2">
                      <h5 style="font-weight: 600; font-size: 0.9375rem;">Company</h5>
                      <ul class="nav mb-4 flex-column">
                        <li class="nav-item"><a href="#" class="nav-link px-0 py-1" target="_self">About Us</a></li>
                        <li class="nav-item"><a href="#" class="nav-link px-0 py-1" target="_self">Contact Us</a></li>
                        <li class="nav-item"><a href="#" class="nav-link px-0 py-1" target="_self">Privacy &amp; Terms</a></li>
                      </ul>
                    </div>
                    <div class="col-4 col-md-3 col-lg-2">
                      <h5 style="font-weight: 600; font-size: 0.9375rem;">Support</h5>
                      <ul class="nav mb-4 flex-column">
                        <li class="nav-item"><a href="#" class="nav-link px-0 py-1" target="_self">Help Center</a></li>
                        <li class="nav-item"><a href="#" class="nav-link px-0 py-1" target="_self">Docs</a></li>
                        <li class="nav-item"><a href="#" class="nav-link px-0 py-1" target="_self">Privacy &amp; Terms</a></li>
                      </ul>
                    </div>
                    <div class="col-4 col-md-3 col-lg-2">
                      <h5 style="font-weight: 600; font-size: 0.9375rem;">Community</h5>
                      <ul class="nav mb-4 flex-column">
                        <li class="nav-item"><a href="#" class="nav-link px-0 py-1" target="_self">Facebook</a></li>
                        <li class="nav-item"><a href="#" class="nav-link px-0 py-1" target="_self">Twitter</a></li>
                        <li class="nav-item"><a href="#" class="nav-link px-0 py-1" target="_self">Forum</a></li>
                      </ul>
                    </div>
                    <div class="col-12 col-lg-6">
                      <div class="d-flex align-items-center justify-content-lg-end py-4 py-lg-0">
                        <span class="pr-1">&copy; 2021</span>
                        <a href="#" class="text-decoration-none" target="_self">Rob Roy Markets, Inc</a>
                      </div>
                    </div>
                  </div>
                </div> 
              </div>
            </div>
          </footer>
",
      "accountFooterEnabled": true,
      "accountPageSections": {
        "accountControls": {
          "enabled": false,
        },
        "accountSecurity": {
          "enabled": true,
          "subsections": {
            "password": {
              "enabled": true,
            },
            "securityQuestions": {
              "enabled": false,
            },
            "twoStepVerification": {
              "enabled": true,
            },
            "username": {
              "enabled": true,
            },
          },
        },
        "consent": {
          "enabled": false,
        },
        "oauthApplications": {
          "enabled": false,
        },
        "personalInformation": {
          "enabled": true,
        },
        "preferences": {
          "enabled": false,
        },
        "social": {
          "enabled": false,
        },
        "trustedDevices": {
          "enabled": true,
        },
      },
      "backgroundColor": "#FFFFFF",
      "backgroundImage": "",
      "bodyText": "#5E6D82",
      "buttonRounded": "50",
      "dangerColor": "#f7685b",
      "favicon": "",
      "isDefault": false,
      "journeyFooter": "<footer class="w-100">
            <div
              class="
                d-flex
                flex-column flex-md-row
                justify-content-center
                align-items-center
                py-4
              "
            >
              <div class="container w-100">
                <div class="mt-5 py-4 border-top border-darkened">
                  <div class="row" style="color: #23282e">
                    <div class="col-4 col-md-3 col-lg-2">
                      <h5 style="font-weight: 600; font-size: 0.9375rem">
                        Company
                      </h5>
                      <ul class="nav mb-4 flex-column">
                        <li class="nav-item">
                          <a href="#" class="nav-link px-0 py-1" target="_self"
                            >About Us</a
                          >
                        </li>
                        <li class="nav-item">
                          <a href="#" class="nav-link px-0 py-1" target="_self"
                            >Contact Us</a
                          >
                        </li>
                        <li class="nav-item">
                          <a href="#" class="nav-link px-0 py-1" target="_self"
                            >Privacy &amp; Terms</a
                          >
                        </li>
                      </ul>
                    </div>
                    <div class="col-4 col-md-3 col-lg-2">
                      <h5 style="font-weight: 600; font-size: 0.9375rem">
                        Support
                      </h5>
                      <ul class="nav mb-4 flex-column">
                        <li class="nav-item">
                          <a href="#" class="nav-link px-0 py-1" target="_self"
                            >Help Center</a
                          >
                        </li>
                        <li class="nav-item">
                          <a href="#" class="nav-link px-0 py-1" target="_self"
                            >Docs</a
                          >
                        </li>
                        <li class="nav-item">
                          <a href="#" class="nav-link px-0 py-1" target="_self"
                            >Privacy &amp; Terms</a
                          >
                        </li>
                      </ul>
                    </div>
                    <div class="col-4 col-md-3 col-lg-2">
                      <h5 style="font-weight: 600; font-size: 0.9375rem">
                        Community
                      </h5>
                      <ul class="nav mb-4 flex-column">
                        <li class="nav-item">
                          <a href="#" class="nav-link px-0 py-1" target="_self"
                            >Facebook</a
                          >
                        </li>
                        <li class="nav-item">
                          <a href="#" class="nav-link px-0 py-1" target="_self"
                            >Twitter</a
                          >
                        </li>
                        <li class="nav-item">
                          <a href="#" class="nav-link px-0 py-1" target="_self"
                            >Forum</a
                          >
                        </li>
                      </ul>
                    </div>
                    <div class="col-12 col-lg-6">
                      <div
                        class="
                          d-flex
                          align-items-center
                          justify-content-lg-end
                          py-4 py-lg-0
                        "
                      >
                        <span class="pr-1">&copy; 2021</span>
                        <a href="#" class="text-decoration-none" target="_self"
                          >Rob Roy Markets, Inc</a
                        >
                      </div>
                    </div>
                  </div>
                </div>
              </div>
            </div>
          </footer>
",
      "journeyFooterEnabled": true,
      "journeyHeader": "<header>
            <nav
              class="navbar shadow-lg navbar-light bg-white navbar-expand-lg"
            >
              <a href="#" target="_self" class="navbar-brand">
                <img
                  src="https://cdn.forgerock.com/platform/themes/robroy/logo-robroy-full.svg"
                  alt="Logo"
                  style="height: 28px"
                />
              </a>
              <div
                class="navbar-collapse d-none d-lg-flex"
                id="navbarSupportedContent"
              >
                <ul class="navbar-nav mr-auto">
                  <li class="nav-item">
                    <a class="nav-link" href="#">Link</a>
                  </li>
                  <li class="nav-item">
                    <a
                      class="nav-link disabled"
                      href="#"
                      tabindex="-1"
                      aria-disabled="true"
                      >Disabled</a
                    >
                  </li>
                </ul>
                <ul class="navbar-nav ml-auto">
                  <li class="nav-item">
                    <a href="#" target="_self" class="nav-link">Link</a>
                  </li>
                </ul>
              </div>
            </nav>
          </header>
",
      "journeyHeaderEnabled": true,
      "journeyJustifiedContent": "<img src="https://cdn.forgerock.com/platform/themes/robroy/illustration-robroy.svg" class="w-100">",
      "journeyJustifiedContentEnabled": true,
      "journeyLayout": "justified-right",
      "journeyTheaterMode": false,
      "linkActiveColor": "#49871E",
      "linkColor": "#5AA625",
      "linkedTrees": [],
      "logo": "",
      "logoAltText": "",
      "logoEnabled": true,
      "logoHeight": "40",
      "logoProfile": "data:image/svg+xml,%0A%3Csvg width='156' height='34' viewBox='0 0 156 34' fill='none' xmlns='http://www.w3.org/2000/svg'%3E%3Cg clip-path='url(%23clip0)'%3E%3Cpath d='M32.5539 32.5538C32.5539 32.5538 17.0796 35.6024 7.23861 25.7614C-2.60242 15.9204 0.446148 0.446137 0.446148 0.446137C0.446148 0.446137 15.9204 -2.60243 25.7614 7.23866C35.6024 17.0797 32.5539 32.5538 32.5539 32.5538Z' fill='%23C3EA21'/%3E%3Cpath d='M32.5537 32.554C32.5537 32.554 17.0795 35.6026 7.23845 25.7615C-2.60257 15.9205 0.445995 0.446289 0.445995 0.446289L32.5537 32.554Z' fill='%238ADB53'/%3E%3C/g%3E%3Cpath d='M51.053 25.38L53.186 25.11V8.964L51.161 8.586V6.939H55.076C55.418 6.939 55.796 6.93 56.21 6.912C56.624 6.894 56.939 6.876 57.155 6.858C58.091 6.786 58.865 6.75 59.477 6.75C61.331 6.75 62.816 6.939 63.932 7.317C65.048 7.695 65.858 8.271 66.362 9.045C66.866 9.819 67.118 10.836 67.118 12.096C67.118 13.338 66.785 14.49 66.119 15.552C65.453 16.614 64.49 17.343 63.23 17.739C63.95 18.045 64.589 18.603 65.147 19.413C65.705 20.223 66.299 21.276 66.929 22.572C67.379 23.454 67.721 24.093 67.955 24.489C68.207 24.867 68.45 25.083 68.684 25.137L69.575 25.407V27H64.985C64.697 27 64.391 26.712 64.067 26.136C63.761 25.542 63.356 24.615 62.852 23.355C62.258 21.879 61.745 20.727 61.313 19.899C60.881 19.071 60.422 18.558 59.936 18.36H57.155V25.11L59.639 25.38V27H51.053V25.38ZM59.639 16.713C60.665 16.713 61.466 16.344 62.042 15.606C62.618 14.868 62.906 13.761 62.906 12.285C62.906 10.971 62.618 9.999 62.042 9.369C61.484 8.739 60.512 8.424 59.126 8.424C58.622 8.424 58.19 8.451 57.83 8.505C57.488 8.541 57.263 8.559 57.155 8.559V16.659C57.371 16.695 57.893 16.713 58.721 16.713H59.639ZM70.674 19.521C70.674 17.829 71.007 16.389 71.673 15.201C72.357 14.013 73.266 13.122 74.4 12.528C75.534 11.916 76.767 11.61 78.099 11.61C80.367 11.61 82.113 12.312 83.337 13.716C84.579 15.102 85.2 16.992 85.2 19.386C85.2 21.096 84.858 22.554 84.174 23.76C83.508 24.948 82.608 25.839 81.474 26.433C80.358 27.009 79.125 27.297 77.775 27.297C75.525 27.297 73.779 26.604 72.537 25.218C71.295 23.814 70.674 21.915 70.674 19.521ZM77.991 25.542C80.025 25.542 81.042 23.58 81.042 19.656C81.042 17.604 80.799 16.047 80.313 14.985C79.827 13.905 79.035 13.365 77.937 13.365C75.849 13.365 74.805 15.327 74.805 19.251C74.805 21.303 75.057 22.869 75.561 23.949C76.083 25.011 76.893 25.542 77.991 25.542ZM86.4395 5.454L91.3805 4.86H91.4345L92.1905 5.373V13.338C92.6765 12.852 93.2705 12.447 93.9725 12.123C94.6925 11.781 95.4665 11.61 96.2945 11.61C98.0225 11.61 99.4265 12.222 100.506 13.446C101.604 14.652 102.153 16.506 102.153 19.008C102.153 20.556 101.829 21.96 101.181 23.22C100.533 24.48 99.5975 25.479 98.3735 26.217C97.1675 26.937 95.7635 27.297 94.1615 27.297C92.7395 27.297 91.5065 27.18 90.4625 26.946C89.4185 26.694 88.7525 26.469 88.4645 26.271V7.182L86.4395 6.858V5.454ZM94.8635 13.986C94.3235 13.986 93.8105 14.112 93.3245 14.364C92.8565 14.598 92.4785 14.868 92.1905 15.174V25.029C92.2985 25.227 92.5505 25.389 92.9465 25.515C93.3425 25.641 93.7925 25.704 94.2965 25.704C95.4485 25.704 96.3665 25.173 97.0505 24.111C97.7525 23.031 98.1035 21.438 98.1035 19.332C98.1035 17.514 97.8065 16.173 97.2125 15.309C96.6185 14.427 95.8355 13.986 94.8635 13.986Z' fill='black'/%3E%3Cpath d='M104.183 25.38L106.316 25.11V8.964L104.291 8.586V6.939H108.206C108.548 6.939 108.926 6.93 109.34 6.912C109.754 6.894 110.069 6.876 110.285 6.858C111.221 6.786 111.995 6.75 112.607 6.75C114.461 6.75 115.946 6.939 117.062 7.317C118.178 7.695 118.988 8.271 119.492 9.045C119.996 9.819 120.248 10.836 120.248 12.096C120.248 13.338 119.915 14.49 119.249 15.552C118.583 16.614 117.62 17.343 116.36 17.739C117.08 18.045 117.719 18.603 118.277 19.413C118.835 20.223 119.429 21.276 120.059 22.572C120.509 23.454 120.851 24.093 121.085 24.489C121.337 24.867 121.58 25.083 121.814 25.137L122.705 25.407V27H118.115C117.827 27 117.521 26.712 117.197 26.136C116.891 25.542 116.486 24.615 115.982 23.355C115.388 21.879 114.875 20.727 114.443 19.899C114.011 19.071 113.552 18.558 113.066 18.36H110.285V25.11L112.769 25.38V27H104.183V25.38ZM112.769 16.713C113.795 16.713 114.596 16.344 115.172 15.606C115.748 14.868 116.036 13.761 116.036 12.285C116.036 10.971 115.748 9.999 115.172 9.369C114.614 8.739 113.642 8.424 112.256 8.424C111.752 8.424 111.32 8.451 110.96 8.505C110.618 8.541 110.393 8.559 110.285 8.559V16.659C110.501 16.695 111.023 16.713 111.851 16.713H112.769ZM123.804 19.521C123.804 17.829 124.137 16.389 124.803 15.201C125.487 14.013 126.396 13.122 127.53 12.528C128.664 11.916 129.897 11.61 131.229 11.61C133.497 11.61 135.243 12.312 136.467 13.716C137.709 15.102 138.33 16.992 138.33 19.386C138.33 21.096 137.988 22.554 137.304 23.76C136.638 24.948 135.738 25.839 134.604 26.433C133.488 27.009 132.255 27.297 130.905 27.297C128.655 27.297 126.909 26.604 125.667 25.218C124.425 23.814 123.804 21.915 123.804 19.521ZM131.121 25.542C133.155 25.542 134.172 23.58 134.172 19.656C134.172 17.604 133.929 16.047 133.443 14.985C132.957 13.905 132.165 13.365 131.067 13.365C128.979 13.365 127.935 15.327 127.935 19.251C127.935 21.303 128.187 22.869 128.691 23.949C129.213 25.011 130.023 25.542 131.121 25.542ZM143.187 33.723C142.863 33.723 142.512 33.696 142.134 33.642C141.774 33.588 141.513 33.525 141.351 33.453V30.564C141.477 30.636 141.729 30.708 142.107 30.78C142.485 30.852 142.827 30.888 143.133 30.888C144.033 30.888 144.771 30.591 145.347 29.997C145.941 29.403 146.49 28.404 146.994 27H145.536L140.46 13.905L139.245 13.554V11.988H146.67V13.554L144.699 13.878L147.102 21.357L148.074 24.543L148.911 21.357L151.125 13.878L149.424 13.554V11.988H155.283V13.554L153.96 13.878C152.97 16.902 151.989 19.818 151.017 22.626C150.045 25.434 149.478 27.009 149.316 27.351C148.74 28.863 148.191 30.069 147.669 30.969C147.147 31.869 146.526 32.553 145.806 33.021C145.086 33.489 144.213 33.723 143.187 33.723Z' fill='%236CBE34'/%3E%3Cdefs%3E%3CclipPath id='clip0'%3E%3Crect width='33' height='33' fill='white' transform='matrix(-1 0 0 1 33 0)'/%3E%3C/clipPath%3E%3C/defs%3E%3C/svg%3E%0A",
      "logoProfileAltText": "RobRoy",
      "logoProfileCollapsed": "data:image/svg+xml,%0A%3Csvg width='33' height='33' viewBox='0 0 33 33' fill='none' xmlns='http://www.w3.org/2000/svg'%3E%3Cg clip-path='url(%23clip0)'%3E%3Cpath d='M32.5539 32.5538C32.5539 32.5538 17.0796 35.6024 7.23861 25.7614C-2.60242 15.9204 0.446148 0.446137 0.446148 0.446137C0.446148 0.446137 15.9204 -2.60243 25.7614 7.23866C35.6024 17.0797 32.5539 32.5538 32.5539 32.5538Z' fill='%23C3EA21'/%3E%3Cpath d='M32.5537 32.554C32.5537 32.554 17.0795 35.6026 7.23845 25.7615C-2.60257 15.9205 0.445996 0.446289 0.445996 0.446289L32.5537 32.554Z' fill='%238ADB53'/%3E%3C/g%3E%3Cdefs%3E%3CclipPath id='clip0'%3E%3Crect width='33' height='33' fill='white' transform='matrix(-1 0 0 1 33 0)'/%3E%3C/clipPath%3E%3C/defs%3E%3C/svg%3E%0A",
      "logoProfileCollapsedAltText": "RobRoy",
      "logoProfileCollapsedHeight": "28",
      "logoProfileHeight": "28",
      "name": "Robroy",
      "pageTitle": "#23282e",
      "primaryColor": "#5AA625",
      "primaryOffColor": "#49871E",
      "profileBackgroundColor": "#FFFFFF",
      "profileMenuHighlightColor": "#FFFFFF",
      "profileMenuHoverColor": "#FFFFFF",
      "profileMenuHoverTextColor": "#455469",
      "profileMenuTextHighlightColor": "#5AA625",
      "secondaryColor": "#69788b",
      "textColor": "#ffffff",
    },
  },
  "trees": {
    "ADFSOIDC": {
      "circlesOfTrust": {},
      "emailTemplates": {},
      "innerNodes": {
        "76bed53b-1c97-4ec3-9864-d47487318c9f": {
          "_id": "76bed53b-1c97-4ec3-9864-d47487318c9f",
          "_outcomes": [
            {
              "displayName": "Outcome",
              "id": "outcome",
            },
          ],
          "_rev": "654723357",
          "_type": {
            "_id": "DisplayUserNameNode",
            "collection": true,
            "name": "Display Username",
          },
          "identityAttribute": "userName",
          "userName": "userName",
        },
        "8b89fb5f-08de-44b6-b880-c7297bb83186": {
          "_id": "8b89fb5f-08de-44b6-b880-c7297bb83186",
          "_outcomes": [
            {
              "displayName": "Social Authentication",
              "id": "socialAuthentication",
            },
          ],
          "_rev": "-1946401757",
          "_type": {
            "_id": "SelectIdPNode",
            "collection": true,
            "name": "Select Identity Provider",
          },
          "filteredProviders": [
            "adfs",
          ],
          "identityAttribute": "mail",
          "includeLocalAuthentication": false,
          "offerOnlyExisting": false,
          "passwordAttribute": "password",
        },
        "9027c002-3dc1-46ca-8ef7-d3c35a4b76af": {
          "_id": "9027c002-3dc1-46ca-8ef7-d3c35a4b76af",
          "_outcomes": [
            {
              "displayName": "true",
              "id": "true",
            },
          ],
          "_rev": "2108531276",
          "_type": {
            "_id": "ScriptedDecisionNode",
            "collection": true,
            "name": "Scripted Decision",
          },
          "inputs": [
            "*",
          ],
          "outcomes": [
            "true",
          ],
          "outputs": [
            "*",
          ],
          "script": "9535446c-0ff6-4a76-8576-616599119d64",
        },
      },
      "nodes": {
        "016ba557-0947-440a-9856-c047145f05de": {
          "_id": "016ba557-0947-440a-9856-c047145f05de",
          "_outcomes": [
            {
              "displayName": "True",
              "id": "true",
            },
            {
              "displayName": "False",
              "id": "false",
            },
          ],
          "_rev": "-744291912",
          "_type": {
            "_id": "IdentifyExistingUserNode",
            "collection": true,
            "name": "Identify Existing User",
          },
          "identifier": "userName",
          "identityAttribute": "userName",
        },
        "1f35e066-1d39-489e-ad20-92058d32afc3": {
          "_id": "1f35e066-1d39-489e-ad20-92058d32afc3",
          "_outcomes": [
            {
              "displayName": "Created",
              "id": "CREATED",
            },
            {
              "displayName": "Failed",
              "id": "FAILURE",
            },
          ],
          "_rev": "-591131326",
          "_type": {
            "_id": "CreateObjectNode",
            "collection": true,
            "name": "Create Object",
          },
          "identityResource": "managed/alpha_user",
        },
        "34ff5433-60aa-417e-a12c-cec725c6a228": {
          "_id": "34ff5433-60aa-417e-a12c-cec725c6a228",
          "_outcomes": [
            {
              "displayName": "true",
              "id": "true",
            },
          ],
          "_rev": "840241597",
          "_type": {
            "_id": "PageNode",
            "collection": true,
            "name": "Page Node",
          },
          "nodes": [
            {
              "_id": "76bed53b-1c97-4ec3-9864-d47487318c9f",
              "displayName": "Display Username",
              "nodeType": "DisplayUserNameNode",
            },
            {
              "_id": "9027c002-3dc1-46ca-8ef7-d3c35a4b76af",
              "displayName": "Remove Button",
              "nodeType": "ScriptedDecisionNode",
            },
          ],
          "pageDescription": {
            "en": "Your account is inactive. Ask your admin to add you to the fidc-volker-dev-admins group!",
          },
          "pageHeader": {
            "en": "Account Inactive!",
          },
        },
        "7f4dc4de-3dc6-4d50-8278-91dac52e0d6b": {
          "_id": "7f4dc4de-3dc6-4d50-8278-91dac52e0d6b",
          "_outcomes": [
            {
              "displayName": "True",
              "id": "true",
            },
            {
              "displayName": "False",
              "id": "false",
            },
          ],
          "_rev": "1301817298",
          "_type": {
            "_id": "AccountActiveDecisionNode",
            "collection": true,
            "name": "Account Active Decision",
          },
        },
        "800014d7-a79a-47f0-ae55-99bec5e3627f": {
          "_id": "800014d7-a79a-47f0-ae55-99bec5e3627f",
          "_outcomes": [
            {
              "displayName": "Account exists",
              "id": "ACCOUNT_EXISTS",
            },
            {
              "displayName": "No account exists",
              "id": "NO_ACCOUNT",
            },
          ],
          "_rev": "-1419172448",
          "_type": {
            "_id": "SocialProviderHandlerNode",
            "collection": true,
            "name": "Social Provider Handler Node",
          },
          "clientType": "BROWSER",
          "script": "3156d7e9-1589-4ffb-a659-37a1647ee03d",
          "usernameAttribute": "userName",
        },
        "89ffef55-af63-4614-bd35-ff6f764bf37b": {
          "_id": "89ffef55-af63-4614-bd35-ff6f764bf37b",
          "_outcomes": [
            {
              "displayName": "true",
              "id": "true",
            },
          ],
          "_rev": "116530173",
          "_type": {
            "_id": "ScriptedDecisionNode",
            "collection": true,
            "name": "Scripted Decision",
          },
          "inputs": [
            "*",
          ],
          "outcomes": [
            "true",
          ],
          "outputs": [
            "*",
          ],
          "script": "b703581a-e112-42b9-bc24-6db8bced5a13",
        },
        "bad807f5-0421-48af-8740-501f03c82e78": {
          "_id": "bad807f5-0421-48af-8740-501f03c82e78",
          "_outcomes": [
            {
              "displayName": "Social Authentication",
              "id": "socialAuthentication",
            },
          ],
          "_rev": "-1367557702",
          "_type": {
            "_id": "PageNode",
            "collection": true,
            "name": "Page Node",
          },
          "nodes": [
            {
              "_id": "8b89fb5f-08de-44b6-b880-c7297bb83186",
              "displayName": "Select IDP",
              "nodeType": "SelectIdPNode",
            },
          ],
          "pageDescription": {},
          "pageHeader": {},
        },
        "eae93db8-2898-4568-a37c-07ba735e94ae": {
          "_id": "eae93db8-2898-4568-a37c-07ba735e94ae",
          "_outcomes": [
            {
              "displayName": "Patched",
              "id": "PATCHED",
            },
            {
              "displayName": "Failed",
              "id": "FAILURE",
            },
          ],
          "_rev": "-1952500471",
          "_type": {
            "_id": "PatchObjectNode",
            "collection": true,
            "name": "Patch Object",
          },
          "identityAttribute": "userName",
          "identityResource": "managed/alpha_user",
          "ignoredFields": [
            "givenName",
            "sn",
            "mail",
            "userName",
            "roles",
          ],
          "patchAsObject": false,
        },
      },
      "saml2Entities": {},
      "scripts": {},
      "socialIdentityProviders": {},
      "themes": [],
      "tree": {
        "_id": "ADFSOIDC",
        "_rev": "1993528993",
        "description": "ADFS OIDC",
        "enabled": true,
        "entryNodeId": "bad807f5-0421-48af-8740-501f03c82e78",
        "identityResource": "managed/alpha_user",
        "nodes": {
          "016ba557-0947-440a-9856-c047145f05de": {
            "connections": {
              "false": "1f35e066-1d39-489e-ad20-92058d32afc3",
              "true": "eae93db8-2898-4568-a37c-07ba735e94ae",
            },
            "displayName": "Find Unlinked Account",
            "nodeType": "IdentifyExistingUserNode",
            "x": 533,
            "y": 221.015625,
          },
          "1f35e066-1d39-489e-ad20-92058d32afc3": {
            "connections": {
              "CREATED": "7f4dc4de-3dc6-4d50-8278-91dac52e0d6b",
              "FAILURE": "e301438c-0bd0-429c-ab0c-66126501069a",
            },
            "displayName": "Create Account",
            "nodeType": "CreateObjectNode",
            "x": 770,
            "y": 297.015625,
          },
          "34ff5433-60aa-417e-a12c-cec725c6a228": {
            "connections": {
              "true": "e301438c-0bd0-429c-ab0c-66126501069a",
            },
            "displayName": "Account Inactive",
            "nodeType": "PageNode",
            "x": 1201,
            "y": 167.015625,
          },
          "7f4dc4de-3dc6-4d50-8278-91dac52e0d6b": {
            "connections": {
              "false": "34ff5433-60aa-417e-a12c-cec725c6a228",
              "true": "70e691a5-1e33-4ac3-a356-e7b6d60d92e0",
            },
            "displayName": "Account Active",
            "nodeType": "AccountActiveDecisionNode",
            "x": 994,
            "y": 70.015625,
          },
          "800014d7-a79a-47f0-ae55-99bec5e3627f": {
            "connections": {
              "ACCOUNT_EXISTS": "eae93db8-2898-4568-a37c-07ba735e94ae",
              "NO_ACCOUNT": "016ba557-0947-440a-9856-c047145f05de",
            },
            "displayName": "OIDC Login",
            "nodeType": "SocialProviderHandlerNode",
            "x": 323.95001220703125,
            "y": 131.76666259765625,
          },
          "89ffef55-af63-4614-bd35-ff6f764bf37b": {
            "connections": {
              "true": "7f4dc4de-3dc6-4d50-8278-91dac52e0d6b",
            },
            "displayName": "Debug",
            "nodeType": "ScriptedDecisionNode",
            "x": 777,
            "y": 69.015625,
          },
          "bad807f5-0421-48af-8740-501f03c82e78": {
            "connections": {
              "socialAuthentication": "800014d7-a79a-47f0-ae55-99bec5e3627f",
            },
            "displayName": "Silent",
            "nodeType": "PageNode",
            "x": 117,
            "y": 128,
          },
          "eae93db8-2898-4568-a37c-07ba735e94ae": {
            "connections": {
              "FAILURE": "e301438c-0bd0-429c-ab0c-66126501069a",
              "PATCHED": "7f4dc4de-3dc6-4d50-8278-91dac52e0d6b",
            },
            "displayName": "Link Account",
            "nodeType": "PatchObjectNode",
            "x": 770,
            "y": 152.015625,
          },
        },
        "staticNodes": {
          "70e691a5-1e33-4ac3-a356-e7b6d60d92e0": {
            "x": 1434,
            "y": 59,
          },
          "e301438c-0bd0-429c-ab0c-66126501069a": {
            "x": 1434,
            "y": 347,
          },
          "startNode": {
            "x": 20,
            "y": 148,
          },
        },
        "uiConfig": {
          "categories": "["Federation","ADFS"]",
        },
      },
    },
    "APIProtection": {
      "circlesOfTrust": {},
      "emailTemplates": {},
      "innerNodes": {},
      "nodes": {
        "84cdf418-9f33-419a-b22f-885d06585230": {
          "_id": "84cdf418-9f33-419a-b22f-885d06585230",
          "_outcomes": [
            {
              "displayName": "true",
              "id": "true",
            },
            {
              "displayName": "false",
              "id": "false",
            },
          ],
          "_rev": "-2137485608",
          "_type": {
            "_id": "ScriptedDecisionNode",
            "collection": true,
            "name": "Scripted Decision",
          },
          "inputs": [
            "*",
          ],
          "outcomes": [
            "true",
            "false",
          ],
          "outputs": [
            "*",
          ],
          "script": "9399ac8b-3a6e-423b-95a2-6e0fd07262b1",
        },
        "8af80afb-b456-4c11-9523-98dfc9f1502d": {
          "_id": "8af80afb-b456-4c11-9523-98dfc9f1502d",
          "_outcomes": [
            {
              "displayName": "True",
              "id": "true",
            },
            {
              "displayName": "False",
              "id": "false",
            },
          ],
          "_rev": "1089857893",
          "_type": {
            "_id": "AgentDataStoreDecisionNode",
            "collection": true,
            "name": "Agent Data Store Decision",
          },
        },
        "9892f202-d9d5-45ac-b609-fef83d5a87f8": {
          "_id": "9892f202-d9d5-45ac-b609-fef83d5a87f8",
          "_outcomes": [
            {
              "displayName": "true",
              "id": "true",
            },
          ],
          "_rev": "-968607465",
          "_type": {
            "_id": "ScriptedDecisionNode",
            "collection": true,
            "name": "Scripted Decision",
          },
          "inputs": [
            "*",
          ],
          "outcomes": [
            "true",
          ],
          "outputs": [
            "*",
          ],
          "script": "f1a2764b-d05a-4480-8f5f-78fda7814227",
        },
      },
      "saml2Entities": {},
      "scripts": {},
      "socialIdentityProviders": {},
      "themes": [],
      "tree": {
        "_id": "APIProtection",
        "_rev": "1992869372",
        "description": "Protect your journeys by requiring an API key and secret when calling the journey.",
        "enabled": true,
        "entryNodeId": "84cdf418-9f33-419a-b22f-885d06585230",
        "identityResource": "managed/alpha_user",
        "nodes": {
          "84cdf418-9f33-419a-b22f-885d06585230": {
            "connections": {
              "false": "e301438c-0bd0-429c-ab0c-66126501069a",
              "true": "8af80afb-b456-4c11-9523-98dfc9f1502d",
            },
            "displayName": "Get API key and secret",
            "nodeType": "ScriptedDecisionNode",
            "x": 192,
            "y": 232.015625,
          },
          "8af80afb-b456-4c11-9523-98dfc9f1502d": {
            "connections": {
              "false": "e301438c-0bd0-429c-ab0c-66126501069a",
              "true": "9892f202-d9d5-45ac-b609-fef83d5a87f8",
            },
            "displayName": "Verify API Credentials",
            "nodeType": "AgentDataStoreDecisionNode",
            "x": 449,
            "y": 152.015625,
          },
          "9892f202-d9d5-45ac-b609-fef83d5a87f8": {
            "connections": {
              "true": "70e691a5-1e33-4ac3-a356-e7b6d60d92e0",
            },
            "displayName": "Reset Shared State",
            "nodeType": "ScriptedDecisionNode",
            "x": 710,
            "y": 107.015625,
          },
        },
        "staticNodes": {
          "70e691a5-1e33-4ac3-a356-e7b6d60d92e0": {
            "x": 956,
            "y": 43,
          },
          "e301438c-0bd0-429c-ab0c-66126501069a": {
            "x": 962,
            "y": 375,
          },
          "startNode": {
            "x": 50,
            "y": 250,
          },
        },
        "uiConfig": {
          "categories": "["API Protection"]",
        },
      },
    },
    "AccessRestrictions": {
      "circlesOfTrust": {},
      "emailTemplates": {},
      "innerNodes": {
        "d69decd4-bc01-49df-bcbc-0add4dfccb10": {
          "_id": "d69decd4-bc01-49df-bcbc-0add4dfccb10",
          "_outcomes": [
            {
              "displayName": "true",
              "id": "true",
            },
          ],
          "_rev": "517980843",
          "_type": {
            "_id": "ScriptedDecisionNode",
            "collection": true,
            "name": "Scripted Decision",
          },
          "inputs": [
            "*",
          ],
          "outcomes": [
            "true",
          ],
          "outputs": [
            "*",
          ],
          "script": "9535446c-0ff6-4a76-8576-616599119d64",
        },
      },
      "nodes": {
        "07dbb4c0-6e7a-47a0-bd08-2916314c00ef": {
          "_id": "07dbb4c0-6e7a-47a0-bd08-2916314c00ef",
          "_outcomes": [
            {
              "displayName": "allow",
              "id": "allow",
            },
            {
              "displayName": "deny",
              "id": "deny",
            },
          ],
          "_rev": "676941793",
          "_type": {
            "_id": "ScriptedDecisionNode",
            "collection": true,
            "name": "Scripted Decision",
          },
          "inputs": [
            "*",
          ],
          "outcomes": [
            "allow",
            "deny",
          ],
          "outputs": [
            "*",
          ],
          "script": "7fb962a5-9f20-41d3-a077-b424a29c1198",
        },
        "429264a5-6af4-4e6c-9098-9d4e095e65a9": {
          "_id": "429264a5-6af4-4e6c-9098-9d4e095e65a9",
          "_outcomes": [
            {
              "displayName": "true",
              "id": "true",
            },
          ],
          "_rev": "1296813269",
          "_type": {
            "_id": "PageNode",
            "collection": true,
            "name": "Page Node",
          },
          "nodes": [
            {
              "_id": "d69decd4-bc01-49df-bcbc-0add4dfccb10",
              "displayName": "Remove Button",
              "nodeType": "ScriptedDecisionNode",
            },
          ],
          "pageDescription": {},
          "pageHeader": {
            "en": "No Access",
          },
          "stage": "{"themeId":"63e19668-909f-479e-83d7-be7a01cd8187"}",
        },
      },
      "saml2Entities": {},
      "scripts": {},
      "socialIdentityProviders": {},
      "themes": [],
      "tree": {
        "_id": "AccessRestrictions",
        "_rev": "-925160647",
        "description": "Apply access restrictions.",
        "enabled": true,
        "entryNodeId": "07dbb4c0-6e7a-47a0-bd08-2916314c00ef",
        "identityResource": "managed/alpha_user",
        "nodes": {
          "07dbb4c0-6e7a-47a0-bd08-2916314c00ef": {
            "connections": {
              "allow": "70e691a5-1e33-4ac3-a356-e7b6d60d92e0",
              "deny": "429264a5-6af4-4e6c-9098-9d4e095e65a9",
            },
            "displayName": "IPv4 CIDR Rules",
            "nodeType": "ScriptedDecisionNode",
            "x": 169,
            "y": 232.015625,
          },
          "429264a5-6af4-4e6c-9098-9d4e095e65a9": {
            "connections": {
              "true": "e301438c-0bd0-429c-ab0c-66126501069a",
            },
            "displayName": "Access Denied",
            "nodeType": "PageNode",
            "x": 396,
            "y": 320.015625,
          },
        },
        "staticNodes": {
          "70e691a5-1e33-4ac3-a356-e7b6d60d92e0": {
            "x": 397,
            "y": 209,
          },
          "e301438c-0bd0-429c-ab0c-66126501069a": {
            "x": 617,
            "y": 346,
          },
          "startNode": {
            "x": 50,
            "y": 250,
          },
        },
        "uiConfig": {
          "categories": "[]",
        },
      },
    },
    "Anonymous": {
      "circlesOfTrust": {},
      "emailTemplates": {},
      "innerNodes": {
        "4910be16-e484-49cd-8534-58d20eafceca": {
          "_id": "4910be16-e484-49cd-8534-58d20eafceca",
          "_outcomes": [
            {
              "displayName": "Outcome",
              "id": "outcome",
            },
          ],
          "_rev": "1303786220",
          "_type": {
            "_id": "ValidatedUsernameNode",
            "collection": true,
            "name": "Platform Username",
          },
          "usernameAttribute": "userName",
          "validateInput": true,
        },
        "570ebb02-faca-438f-a270-5c2dab2996d5": {
          "_id": "570ebb02-faca-438f-a270-5c2dab2996d5",
          "_outcomes": [
            {
              "displayName": "Outcome",
              "id": "outcome",
            },
          ],
          "_rev": "-28147843",
          "_type": {
            "_id": "AttributeCollectorNode",
            "collection": true,
            "name": "Attribute Collector",
          },
          "attributesToCollect": [
            "givenName",
            "sn",
            "mail",
            "preferences/marketing",
            "preferences/updates",
          ],
          "identityAttribute": "userName",
          "required": true,
          "validateInputs": true,
        },
        "6d6d8a3f-1fe4-4411-bd55-c9485f30ae34": {
          "_id": "6d6d8a3f-1fe4-4411-bd55-c9485f30ae34",
          "_outcomes": [
            {
              "displayName": "Social Authentication",
              "id": "socialAuthentication",
            },
            {
              "displayName": "Local Authentication",
              "id": "localAuthentication",
            },
          ],
          "_rev": "-756365489",
          "_type": {
            "_id": "SelectIdPNode",
            "collection": true,
            "name": "Select Identity Provider",
          },
          "filteredProviders": [],
          "identityAttribute": "mail",
          "includeLocalAuthentication": true,
          "offerOnlyExisting": false,
          "passwordAttribute": "password",
        },
        "ed040abd-e52c-490a-ba8a-14a4c07b2b3c": {
          "_id": "ed040abd-e52c-490a-ba8a-14a4c07b2b3c",
          "_outcomes": [
            {
              "displayName": "Outcome",
              "id": "outcome",
            },
          ],
          "_rev": "-461652769",
          "_type": {
            "_id": "AttributeCollectorNode",
            "collection": true,
            "name": "Attribute Collector",
          },
          "attributesToCollect": [
            "givenName",
            "sn",
            "mail",
            "preferences/marketing",
            "preferences/updates",
          ],
          "identityAttribute": "userName",
          "required": false,
          "validateInputs": true,
        },
        "ff209207-29be-4918-982f-0308ea9d129f": {
          "_id": "ff209207-29be-4918-982f-0308ea9d129f",
          "_outcomes": [
            {
              "displayName": "Outcome",
              "id": "outcome",
            },
          ],
          "_rev": "-1816843935",
          "_type": {
            "_id": "ValidatedPasswordNode",
            "collection": true,
            "name": "Platform Password",
          },
          "passwordAttribute": "password",
          "validateInput": true,
        },
      },
      "nodes": {
        "009ec219-95f5-4be7-8d4e-a0cf37e29cb2": {
          "_id": "009ec219-95f5-4be7-8d4e-a0cf37e29cb2",
          "_outcomes": [
            {
              "displayName": "True",
              "id": "true",
            },
            {
              "displayName": "False",
              "id": "false",
            },
          ],
          "_rev": "1806729566",
          "_type": {
            "_id": "MessageNode",
            "collection": true,
            "name": "Message Node",
          },
          "message": {
            "EN": "We've seen you around a few times, would you like to register for an account?",
          },
          "messageNo": {
            "EN": "Not Right Now",
          },
          "messageYes": {
            "EN": "Register",
          },
        },
        "05d68c82-e4b4-44f1-8d46-979dd228674d": {
          "_id": "05d68c82-e4b4-44f1-8d46-979dd228674d",
          "_outcomes": [
            {
              "displayName": "true",
              "id": "true",
            },
          ],
          "_rev": "788246530",
          "_type": {
            "_id": "ScriptedDecisionNode",
            "collection": true,
            "name": "Scripted Decision",
          },
          "inputs": [
            "*",
          ],
          "outcomes": [
            "true",
          ],
          "outputs": [
            "*",
          ],
          "script": "c253a7ac-ebc9-4268-9e62-89f38f98e4ab",
        },
        "16b901b0-95d8-4f86-a8e1-8a16fdec5df5": {
          "_id": "16b901b0-95d8-4f86-a8e1-8a16fdec5df5",
          "_outcomes": [
            {
              "displayName": "True",
              "id": "true",
            },
            {
              "displayName": "False",
              "id": "false",
            },
          ],
          "_rev": "1412026226",
          "_type": {
            "_id": "InnerTreeEvaluatorNode",
            "collection": true,
            "name": "Inner Tree Evaluator",
          },
          "tree": "FraudRisk",
        },
        "174400f8-4998-47d7-87d2-684da6ea5a19": {
          "_id": "174400f8-4998-47d7-87d2-684da6ea5a19",
          "_outcomes": [
            {
              "displayName": "Outcome",
              "id": "outcome",
            },
          ],
          "_rev": "1648722795",
          "_type": {
            "_id": "IncrementLoginCountNode",
            "collection": true,
            "name": "Increment Login Count",
          },
          "identityAttribute": "userName",
        },
        "17844b5c-9cb9-4d9f-ae07-b6293498c275": {
          "_id": "17844b5c-9cb9-4d9f-ae07-b6293498c275",
          "_outcomes": [
            {
              "displayName": "true",
              "id": "true",
            },
          ],
          "_rev": "-2133323155",
          "_type": {
            "_id": "ScriptedDecisionNode",
            "collection": true,
            "name": "Scripted Decision",
          },
          "inputs": [
            "*",
          ],
          "outcomes": [
            "true",
          ],
          "outputs": [
            "*",
          ],
          "script": "021e434f-89b6-45fb-9d67-5147bc1650c3",
        },
        "182198e5-6e3d-4efb-acec-83e91ba57e1b": {
          "_id": "182198e5-6e3d-4efb-acec-83e91ba57e1b",
          "_outcomes": [
            {
              "displayName": "known",
              "id": "known",
            },
            {
              "displayName": "anonymous",
              "id": "anonymous",
            },
          ],
          "_rev": "216709180",
          "_type": {
            "_id": "ScriptedDecisionNode",
            "collection": true,
            "name": "Scripted Decision",
          },
          "inputs": [
            "*",
          ],
          "outcomes": [
            "known",
            "anonymous",
          ],
          "outputs": [
            "*",
          ],
          "script": "23e88721-ea4a-4da2-bfba-33d82fd0317d",
        },
        "3273522b-801e-4991-87a4-b6e148a5317d": {
          "_id": "3273522b-801e-4991-87a4-b6e148a5317d",
          "_outcomes": [
            {
              "displayName": "True",
              "id": "true",
            },
            {
              "displayName": "False",
              "id": "false",
            },
          ],
          "_rev": "1978687497",
          "_type": {
            "_id": "RequiredAttributesDecisionNode",
            "collection": true,
            "name": "Required Attributes Present",
          },
          "identityResource": "managed/alpha_user",
        },
        "39bec584-214d-4126-8950-63b0d3673256": {
          "_id": "39bec584-214d-4126-8950-63b0d3673256",
          "_outcomes": [
            {
              "displayName": "Patched",
              "id": "PATCHED",
            },
            {
              "displayName": "Failed",
              "id": "FAILURE",
            },
          ],
          "_rev": "567466158",
          "_type": {
            "_id": "PatchObjectNode",
            "collection": true,
            "name": "Patch Object",
          },
          "identityAttribute": "_id",
          "identityResource": "managed/alpha_user",
          "ignoredFields": [],
          "patchAsObject": false,
        },
        "4c8e0f9d-903f-484a-a951-e57812f2bdc6": {
          "_id": "4c8e0f9d-903f-484a-a951-e57812f2bdc6",
          "_outcomes": [
            {
              "displayName": "true",
              "id": "true",
            },
          ],
          "_rev": "923854463",
          "_type": {
            "_id": "ScriptedDecisionNode",
            "collection": true,
            "name": "Scripted Decision",
          },
          "inputs": [
            "*",
          ],
          "outcomes": [
            "true",
          ],
          "outputs": [
            "*",
          ],
          "script": "a064f7b7-29c5-480b-ac09-d3d122829278",
        },
        "5defc836-0716-4582-88ba-7aae6d886675": {
          "_id": "5defc836-0716-4582-88ba-7aae6d886675",
          "_outcomes": [
            {
              "displayName": "true",
              "id": "true",
            },
          ],
          "_rev": "1098645606",
          "_type": {
            "_id": "ScriptedDecisionNode",
            "collection": true,
            "name": "Scripted Decision",
          },
          "inputs": [
            "*",
          ],
          "outcomes": [
            "true",
          ],
          "outputs": [
            "*",
          ],
          "script": "123725a9-2119-4efd-a6b0-456f3ccd34b7",
        },
        "7d278427-8902-47bf-970c-86aabbff7834": {
          "_id": "7d278427-8902-47bf-970c-86aabbff7834",
          "_outcomes": [
            {
              "displayName": "true",
              "id": "true",
            },
          ],
          "_rev": "1888921839",
          "_type": {
            "_id": "ScriptedDecisionNode",
            "collection": true,
            "name": "Scripted Decision",
          },
          "inputs": [
            "*",
          ],
          "outcomes": [
            "true",
          ],
          "outputs": [
            "*",
          ],
          "script": "b6fce769-cf21-4963-a8dc-7c5370a4d15b",
        },
        "83d4d0c7-8e8e-4462-a6c1-7e6c24fa6af9": {
          "_id": "83d4d0c7-8e8e-4462-a6c1-7e6c24fa6af9",
          "_outcomes": [
            {
              "displayName": "True",
              "id": "true",
            },
            {
              "displayName": "False",
              "id": "false",
            },
          ],
          "_rev": "1183777228",
          "_type": {
            "_id": "InnerTreeEvaluatorNode",
            "collection": true,
            "name": "Inner Tree Evaluator",
          },
          "tree": "Login",
        },
        "854f1dc7-5e31-4e06-9c9b-fc6d5775dce8": {
          "_id": "854f1dc7-5e31-4e06-9c9b-fc6d5775dce8",
          "_outcomes": [
            {
              "displayName": "true",
              "id": "true",
            },
          ],
          "_rev": "1471855491",
          "_type": {
            "_id": "ScriptedDecisionNode",
            "collection": true,
            "name": "Scripted Decision",
          },
          "inputs": [
            "*",
          ],
          "outcomes": [
            "true",
          ],
          "outputs": [
            "*",
          ],
          "script": "e15a13ee-9168-40cf-934f-656a5f568a6a",
        },
        "8e79f92e-7e3f-47ff-8037-3441603ae793": {
          "_id": "8e79f92e-7e3f-47ff-8037-3441603ae793",
          "_outcomes": [
            {
              "displayName": "Outcome",
              "id": "outcome",
            },
          ],
          "_rev": "-1035802887",
          "_type": {
            "_id": "DeviceProfileCollectorNode",
            "collection": true,
            "name": "Device Profile Collector",
          },
          "deviceLocation": false,
          "deviceMetadata": true,
          "maximumSize": "3",
          "message": {},
        },
        "9519ba64-04e5-4fa5-9768-9069389b70d0": {
          "_id": "9519ba64-04e5-4fa5-9768-9069389b70d0",
          "_outcomes": [
            {
              "displayName": "Email Sent",
              "id": "EMAIL_SENT",
            },
            {
              "displayName": "Email Not Sent",
              "id": "EMAIL_NOT_SENT",
            },
          ],
          "_rev": "1813121664",
          "_type": {
            "_id": "EmailTemplateNode",
            "collection": true,
            "name": "Email Template Node",
          },
          "emailAttribute": "mail",
          "emailTemplateName": "welcome",
          "identityAttribute": "userName",
        },
        "9895ebc3-39a7-4408-af58-55bfa8f3c66f": {
          "_id": "9895ebc3-39a7-4408-af58-55bfa8f3c66f",
          "_outcomes": [
            {
              "displayName": "True",
              "id": "true",
            },
            {
              "displayName": "False",
              "id": "false",
            },
          ],
          "_rev": "2074159309",
          "_type": {
            "_id": "IdentifyExistingUserNode",
            "collection": true,
            "name": "Identify Existing User",
          },
          "identifier": "frIndexedString1",
          "identityAttribute": "frIndexedString1",
        },
        "a412312c-78b1-4862-8412-650d3d59dd16": {
          "_id": "a412312c-78b1-4862-8412-650d3d59dd16",
          "_outcomes": [
            {
              "displayName": "Account exists",
              "id": "ACCOUNT_EXISTS",
            },
            {
              "displayName": "No account exists",
              "id": "NO_ACCOUNT",
            },
          ],
          "_rev": "-1115066427",
          "_type": {
            "_id": "SocialProviderHandlerNode",
            "collection": true,
            "name": "Social Provider Handler Node",
          },
          "clientType": "BROWSER",
          "script": "58c824ae-84ed-4724-82cd-db128fc3f6c",
          "usernameAttribute": "userName",
        },
        "b35a5306-a5b5-40eb-8b44-c3311368dafd": {
          "_id": "b35a5306-a5b5-40eb-8b44-c3311368dafd",
          "_outcomes": [
            {
              "displayName": "True",
              "id": "true",
            },
            {
              "displayName": "False",
              "id": "false",
            },
          ],
          "_rev": "1917875301",
          "_type": {
            "_id": "RequiredAttributesDecisionNode",
            "collection": true,
            "name": "Required Attributes Present",
          },
          "identityResource": "managed/alpha_user",
        },
        "ba204b5c-ae29-4f4f-8d96-f1b5ac184e1b": {
          "_id": "ba204b5c-ae29-4f4f-8d96-f1b5ac184e1b",
          "_outcomes": [
            {
              "displayName": "True",
              "id": "true",
            },
            {
              "displayName": "False",
              "id": "false",
            },
          ],
          "_rev": "-548760756",
          "_type": {
            "_id": "InnerTreeEvaluatorNode",
            "collection": true,
            "name": "Inner Tree Evaluator",
          },
          "tree": "DevicePrint",
        },
        "c3b38c93-4c7f-4a00-bfe1-b7b7b4398416": {
          "_id": "c3b38c93-4c7f-4a00-bfe1-b7b7b4398416",
          "_outcomes": [
            {
              "displayName": "Patched",
              "id": "PATCHED",
            },
            {
              "displayName": "Failed",
              "id": "FAILURE",
            },
          ],
          "_rev": "1782761582",
          "_type": {
            "_id": "PatchObjectNode",
            "collection": true,
            "name": "Patch Object",
          },
          "identityAttribute": "_id",
          "identityResource": "managed/alpha_user",
          "ignoredFields": [],
          "patchAsObject": false,
        },
        "cea33fcb-7566-4d76-9e65-6842bcafe74d": {
          "_id": "cea33fcb-7566-4d76-9e65-6842bcafe74d",
          "_outcomes": [
            {
              "displayName": "Created",
              "id": "CREATED",
            },
            {
              "displayName": "Failed",
              "id": "FAILURE",
            },
          ],
          "_rev": "506030468",
          "_type": {
            "_id": "CreateObjectNode",
            "collection": true,
            "name": "Create Object",
          },
          "identityResource": "managed/alpha_user",
        },
        "d4e3739d-b72a-4b27-b90e-e4ad4da3881e": {
          "_id": "d4e3739d-b72a-4b27-b90e-e4ad4da3881e",
          "_outcomes": [
            {
              "displayName": "True",
              "id": "true",
            },
            {
              "displayName": "False",
              "id": "false",
            },
          ],
          "_rev": "1350602611",
          "_type": {
            "_id": "LoginCountDecisionNode",
            "collection": true,
            "name": "Login Count Decision",
          },
          "amount": 2,
          "identityAttribute": "userName",
          "interval": "EVERY",
        },
        "db7fbc17-9e03-4ef6-8be5-bfe63c1359fa": {
          "_id": "db7fbc17-9e03-4ef6-8be5-bfe63c1359fa",
          "_outcomes": [
            {
              "displayName": "Social Authentication",
              "id": "socialAuthentication",
            },
            {
              "displayName": "Local Authentication",
              "id": "localAuthentication",
            },
          ],
          "_rev": "527833929",
          "_type": {
            "_id": "PageNode",
            "collection": true,
            "name": "Page Node",
          },
          "nodes": [
            {
              "_id": "4910be16-e484-49cd-8534-58d20eafceca",
              "displayName": "Username",
              "nodeType": "ValidatedUsernameNode",
            },
            {
              "_id": "ed040abd-e52c-490a-ba8a-14a4c07b2b3c",
              "displayName": "Attributes",
              "nodeType": "AttributeCollectorNode",
            },
            {
              "_id": "ff209207-29be-4918-982f-0308ea9d129f",
              "displayName": "Password",
              "nodeType": "ValidatedPasswordNode",
            },
            {
              "_id": "6d6d8a3f-1fe4-4411-bd55-c9485f30ae34",
              "displayName": "Select IDP",
              "nodeType": "SelectIdPNode",
            },
          ],
          "pageDescription": {},
          "pageHeader": {},
        },
        "dc9116dd-1bca-406d-8411-fd4ecb61f57e": {
          "_id": "dc9116dd-1bca-406d-8411-fd4ecb61f57e",
          "_outcomes": [
            {
              "displayName": "True",
              "id": "true",
            },
            {
              "displayName": "False",
              "id": "false",
            },
          ],
          "_rev": "639485505",
          "_type": {
            "_id": "InnerTreeEvaluatorNode",
            "collection": true,
            "name": "Inner Tree Evaluator",
          },
          "tree": "EmailValidation",
        },
        "e0ef63e5-f79b-482d-a784-9c66e122c163": {
          "_id": "e0ef63e5-f79b-482d-a784-9c66e122c163",
          "_outcomes": [
            {
              "displayName": "true",
              "id": "true",
            },
          ],
          "_rev": "1981280452",
          "_type": {
            "_id": "ScriptedDecisionNode",
            "collection": true,
            "name": "Scripted Decision",
          },
          "inputs": [
            "*",
          ],
          "outcomes": [
            "true",
          ],
          "outputs": [
            "*",
          ],
          "script": "a064f7b7-29c5-480b-ac09-d3d122829278",
        },
        "f143013f-91cb-44b3-ab50-5e407b29dc95": {
          "_id": "f143013f-91cb-44b3-ab50-5e407b29dc95",
          "_outcomes": [
            {
              "displayName": "Outcome",
              "id": "outcome",
            },
          ],
          "_rev": "979886197",
          "_type": {
            "_id": "PageNode",
            "collection": true,
            "name": "Page Node",
          },
          "nodes": [
            {
              "_id": "570ebb02-faca-438f-a270-5c2dab2996d5",
              "displayName": "Attributes",
              "nodeType": "AttributeCollectorNode",
            },
          ],
          "pageDescription": {},
          "pageHeader": {},
        },
        "f2dad41b-ce5a-4a60-83e0-3efb9122ba37": {
          "_id": "f2dad41b-ce5a-4a60-83e0-3efb9122ba37",
          "_outcomes": [
            {
              "displayName": "True",
              "id": "true",
            },
            {
              "displayName": "False",
              "id": "false",
            },
          ],
          "_rev": "-1097783379",
          "_type": {
            "_id": "InnerTreeEvaluatorNode",
            "collection": true,
            "name": "Inner Tree Evaluator",
          },
          "tree": "TermsAndConditions",
        },
        "f3d776cb-2c59-4ebb-9de9-acedefdadb87": {
          "_id": "f3d776cb-2c59-4ebb-9de9-acedefdadb87",
          "_outcomes": [
            {
              "displayName": "True",
              "id": "true",
            },
            {
              "displayName": "False",
              "id": "false",
            },
          ],
          "_rev": "161383690",
          "_type": {
            "_id": "InnerTreeEvaluatorNode",
            "collection": true,
            "name": "Inner Tree Evaluator",
          },
          "tree": "IdentityProofing",
        },
        "f5608994-2e7d-4224-a9c6-3b3134699eb5": {
          "_id": "f5608994-2e7d-4224-a9c6-3b3134699eb5",
          "_outcomes": [
            {
              "displayName": "true",
              "id": "true",
            },
          ],
          "_rev": "734554829",
          "_type": {
            "_id": "ScriptedDecisionNode",
            "collection": true,
            "name": "Scripted Decision",
          },
          "inputs": [
            "*",
          ],
          "outcomes": [
            "true",
          ],
          "outputs": [
            "*",
          ],
          "script": "b3824c66-2dff-4613-9e54-4a7577fdb765",
        },
        "f58905b7-d8a8-4d8d-a773-ba57495a1517": {
          "_id": "f58905b7-d8a8-4d8d-a773-ba57495a1517",
          "_outcomes": [
            {
              "displayName": "True",
              "id": "true",
            },
            {
              "displayName": "False",
              "id": "false",
            },
          ],
          "_rev": "-119872345",
          "_type": {
            "_id": "MessageNode",
            "collection": true,
            "name": "Message Node",
          },
          "message": {
            "EN": "Should we skip Identity Proofing?",
          },
          "messageNo": {
            "EN": "No",
          },
          "messageYes": {
            "EN": "Yes",
          },
        },
      },
      "saml2Entities": {},
      "scripts": {},
      "socialIdentityProviders": {},
      "themes": [],
      "tree": {
        "_id": "Anonymous",
        "_rev": "1604204457",
        "description": "Anonymous to known user.",
        "enabled": true,
        "entryNodeId": "8e79f92e-7e3f-47ff-8037-3441603ae793",
        "identityResource": "managed/alpha_user",
        "nodes": {
          "009ec219-95f5-4be7-8d4e-a0cf37e29cb2": {
            "connections": {
              "false": "f5608994-2e7d-4224-a9c6-3b3134699eb5",
              "true": "16b901b0-95d8-4f86-a8e1-8a16fdec5df5",
            },
            "displayName": "Register?",
            "nodeType": "MessageNode",
            "x": 636,
            "y": 427.3333282470703,
          },
          "05d68c82-e4b4-44f1-8d46-979dd228674d": {
            "connections": {
              "true": "182198e5-6e3d-4efb-acec-83e91ba57e1b",
            },
            "displayName": "Copy Id to Object Attributes",
            "nodeType": "ScriptedDecisionNode",
            "x": 577,
            "y": 0.015625,
          },
          "16b901b0-95d8-4f86-a8e1-8a16fdec5df5": {
            "connections": {
              "false": "e301438c-0bd0-429c-ab0c-66126501069a",
              "true": "db7fbc17-9e03-4ef6-8be5-bfe63c1359fa",
            },
            "displayName": "Benign Visitor?",
            "nodeType": "InnerTreeEvaluatorNode",
            "x": 833,
            "y": 491.76666259765625,
          },
          "174400f8-4998-47d7-87d2-684da6ea5a19": {
            "connections": {
              "outcome": "d4e3739d-b72a-4b27-b90e-e4ad4da3881e",
            },
            "displayName": "Increment Login Count",
            "nodeType": "IncrementLoginCountNode",
            "x": 596,
            "y": 226,
          },
          "17844b5c-9cb9-4d9f-ae07-b6293498c275": {
            "connections": {
              "true": "3273522b-801e-4991-87a4-b6e148a5317d",
            },
            "displayName": "Show Policy",
            "nodeType": "ScriptedDecisionNode",
            "x": 1251,
            "y": 853.7666625976562,
          },
          "182198e5-6e3d-4efb-acec-83e91ba57e1b": {
            "connections": {
              "anonymous": "174400f8-4998-47d7-87d2-684da6ea5a19",
              "known": "83d4d0c7-8e8e-4462-a6c1-7e6c24fa6af9",
            },
            "displayName": "Inspect Username",
            "nodeType": "ScriptedDecisionNode",
            "x": 583,
            "y": 68.015625,
          },
          "3273522b-801e-4991-87a4-b6e148a5317d": {
            "connections": {
              "false": "db7fbc17-9e03-4ef6-8be5-bfe63c1359fa",
              "true": "dc9116dd-1bca-406d-8411-fd4ecb61f57e",
            },
            "displayName": "Required Attributes?",
            "nodeType": "RequiredAttributesDecisionNode",
            "x": 1477,
            "y": 776.7666625976562,
          },
          "39bec584-214d-4126-8950-63b0d3673256": {
            "connections": {
              "FAILURE": "70e691a5-1e33-4ac3-a356-e7b6d60d92e0",
              "PATCHED": "70e691a5-1e33-4ac3-a356-e7b6d60d92e0",
            },
            "displayName": "Patch Object",
            "nodeType": "PatchObjectNode",
            "x": 2268.3333740234375,
            "y": 382.3333282470703,
          },
          "4c8e0f9d-903f-484a-a951-e57812f2bdc6": {
            "connections": {
              "true": "dc9116dd-1bca-406d-8411-fd4ecb61f57e",
            },
            "displayName": "Sanitize Data",
            "nodeType": "ScriptedDecisionNode",
            "x": 1727,
            "y": 617.7666625976562,
          },
          "5defc836-0716-4582-88ba-7aae6d886675": {
            "connections": {
              "true": "9895ebc3-39a7-4408-af58-55bfa8f3c66f",
            },
            "displayName": "Copy to shared state",
            "nodeType": "ScriptedDecisionNode",
            "x": 14,
            "y": 297.015625,
          },
          "7d278427-8902-47bf-970c-86aabbff7834": {
            "connections": {
              "true": "e301438c-0bd0-429c-ab0c-66126501069a",
            },
            "displayName": "debug - remove me",
            "nodeType": "ScriptedDecisionNode",
            "x": 2543,
            "y": 763.3333282470703,
          },
          "83d4d0c7-8e8e-4462-a6c1-7e6c24fa6af9": {
            "connections": {
              "false": "e301438c-0bd0-429c-ab0c-66126501069a",
              "true": "70e691a5-1e33-4ac3-a356-e7b6d60d92e0",
            },
            "displayName": "Login",
            "nodeType": "InnerTreeEvaluatorNode",
            "x": 1034,
            "y": 72.015625,
          },
          "854f1dc7-5e31-4e06-9c9b-fc6d5775dce8": {
            "connections": {
              "true": "5defc836-0716-4582-88ba-7aae6d886675",
            },
            "displayName": "hashDeviceProfile",
            "nodeType": "ScriptedDecisionNode",
            "x": 31,
            "y": 207,
          },
          "8e79f92e-7e3f-47ff-8037-3441603ae793": {
            "connections": {
              "outcome": "854f1dc7-5e31-4e06-9c9b-fc6d5775dce8",
            },
            "displayName": "Device Profile Collector",
            "nodeType": "DeviceProfileCollectorNode",
            "x": 0,
            "y": 139,
          },
          "9519ba64-04e5-4fa5-9768-9069389b70d0": {
            "connections": {
              "EMAIL_NOT_SENT": "ba204b5c-ae29-4f4f-8d96-f1b5ac184e1b",
              "EMAIL_SENT": "ba204b5c-ae29-4f4f-8d96-f1b5ac184e1b",
            },
            "displayName": "Welcome Email",
            "nodeType": "EmailTemplateNode",
            "x": 2546,
            "y": 539.7666625976562,
          },
          "9895ebc3-39a7-4408-af58-55bfa8f3c66f": {
            "connections": {
              "false": "cea33fcb-7566-4d76-9e65-6842bcafe74d",
              "true": "05d68c82-e4b4-44f1-8d46-979dd228674d",
            },
            "displayName": "Identify Existing User",
            "nodeType": "IdentifyExistingUserNode",
            "x": 273,
            "y": 246,
          },
          "a412312c-78b1-4862-8412-650d3d59dd16": {
            "connections": {
              "ACCOUNT_EXISTS": "e301438c-0bd0-429c-ab0c-66126501069a",
              "NO_ACCOUNT": "b35a5306-a5b5-40eb-8b44-c3311368dafd",
            },
            "displayName": "Social Login",
            "nodeType": "SocialProviderHandlerNode",
            "x": 1272,
            "y": 480.76666259765625,
          },
          "b35a5306-a5b5-40eb-8b44-c3311368dafd": {
            "connections": {
              "false": "f143013f-91cb-44b3-ab50-5e407b29dc95",
              "true": "f143013f-91cb-44b3-ab50-5e407b29dc95",
            },
            "displayName": "Required Attributes?",
            "nodeType": "RequiredAttributesDecisionNode",
            "x": 1475,
            "y": 480.76666259765625,
          },
          "ba204b5c-ae29-4f4f-8d96-f1b5ac184e1b": {
            "connections": {
              "false": "f58905b7-d8a8-4d8d-a773-ba57495a1517",
              "true": "f58905b7-d8a8-4d8d-a773-ba57495a1517",
            },
            "displayName": "Device Print",
            "nodeType": "InnerTreeEvaluatorNode",
            "x": 2757,
            "y": 540.7666625976562,
          },
          "c3b38c93-4c7f-4a00-bfe1-b7b7b4398416": {
            "connections": {
              "FAILURE": "7d278427-8902-47bf-970c-86aabbff7834",
              "PATCHED": "9519ba64-04e5-4fa5-9768-9069389b70d0",
            },
            "displayName": "Patch Object",
            "nodeType": "PatchObjectNode",
            "x": 2301,
            "y": 623,
          },
          "cea33fcb-7566-4d76-9e65-6842bcafe74d": {
            "connections": {
              "CREATED": "9895ebc3-39a7-4408-af58-55bfa8f3c66f",
              "FAILURE": "e301438c-0bd0-429c-ab0c-66126501069a",
            },
            "displayName": "Create User",
            "nodeType": "CreateObjectNode",
            "x": 294,
            "y": 447,
          },
          "d4e3739d-b72a-4b27-b90e-e4ad4da3881e": {
            "connections": {
              "false": "f5608994-2e7d-4224-a9c6-3b3134699eb5",
              "true": "009ec219-95f5-4be7-8d4e-a0cf37e29cb2",
            },
            "displayName": "Login Count Decision",
            "nodeType": "LoginCountDecisionNode",
            "x": 600,
            "y": 299,
          },
          "db7fbc17-9e03-4ef6-8be5-bfe63c1359fa": {
            "connections": {
              "localAuthentication": "e0ef63e5-f79b-482d-a784-9c66e122c163",
              "socialAuthentication": "a412312c-78b1-4862-8412-650d3d59dd16",
            },
            "displayName": "Registration Page",
            "nodeType": "PageNode",
            "x": 1030,
            "y": 357,
          },
          "dc9116dd-1bca-406d-8411-fd4ecb61f57e": {
            "connections": {
              "false": "e301438c-0bd0-429c-ab0c-66126501069a",
              "true": "f2dad41b-ce5a-4a60-83e0-3efb9122ba37",
            },
            "displayName": "Validate Email",
            "nodeType": "InnerTreeEvaluatorNode",
            "x": 1824,
            "y": 754.7666625976562,
          },
          "e0ef63e5-f79b-482d-a784-9c66e122c163": {
            "connections": {
              "true": "3273522b-801e-4991-87a4-b6e148a5317d",
            },
            "displayName": "Sanitize Data",
            "nodeType": "ScriptedDecisionNode",
            "x": 1038,
            "y": 740.7666625976562,
          },
          "f143013f-91cb-44b3-ab50-5e407b29dc95": {
            "connections": {
              "outcome": "4c8e0f9d-903f-484a-a951-e57812f2bdc6",
            },
            "displayName": "Page Node",
            "nodeType": "PageNode",
            "x": 1713,
            "y": 481.76666259765625,
          },
          "f2dad41b-ce5a-4a60-83e0-3efb9122ba37": {
            "connections": {
              "false": "e301438c-0bd0-429c-ab0c-66126501069a",
              "true": "c3b38c93-4c7f-4a00-bfe1-b7b7b4398416",
            },
            "displayName": "Terms of use",
            "nodeType": "InnerTreeEvaluatorNode",
            "x": 2008,
            "y": 655.7666625976562,
          },
          "f3d776cb-2c59-4ebb-9de9-acedefdadb87": {
            "connections": {
              "false": "e301438c-0bd0-429c-ab0c-66126501069a",
              "true": "70e691a5-1e33-4ac3-a356-e7b6d60d92e0",
            },
            "displayName": "Identity Proofing",
            "nodeType": "InnerTreeEvaluatorNode",
            "x": 2971,
            "y": 537.7666625976562,
          },
          "f5608994-2e7d-4224-a9c6-3b3134699eb5": {
            "connections": {
              "true": "39bec584-214d-4126-8950-63b0d3673256",
            },
            "displayName": "Add Login Stamp",
            "nodeType": "ScriptedDecisionNode",
            "x": 1745,
            "y": 302,
          },
          "f58905b7-d8a8-4d8d-a773-ba57495a1517": {
            "connections": {
              "false": "f3d776cb-2c59-4ebb-9de9-acedefdadb87",
              "true": "70e691a5-1e33-4ac3-a356-e7b6d60d92e0",
            },
            "displayName": "Message Node",
            "nodeType": "MessageNode",
            "x": 2831.6666259765625,
            "y": 242.3333282470703,
          },
        },
        "staticNodes": {
          "70e691a5-1e33-4ac3-a356-e7b6d60d92e0": {
            "x": 3183,
            "y": 423,
          },
          "e301438c-0bd0-429c-ab0c-66126501069a": {
            "x": 3194,
            "y": 701,
          },
          "startNode": {
            "x": 50,
            "y": 25,
          },
        },
        "uiConfig": {
          "categories": "["Tracking"]",
        },
      },
    },
    "Azure": {
      "circlesOfTrust": {},
      "emailTemplates": {},
      "innerNodes": {
        "313597f3-2e86-4476-b899-17a0209f0386": {
          "_id": "313597f3-2e86-4476-b899-17a0209f0386",
          "_outcomes": [
            {
              "displayName": "Outcome",
              "id": "outcome",
            },
          ],
          "_rev": "-647535485",
          "_type": {
            "_id": "AttributeCollectorNode",
            "collection": true,
            "name": "Attribute Collector",
          },
          "attributesToCollect": [
            "userName",
            "givenName",
            "sn",
            "telephoneNumber",
            "mail",
          ],
          "identityAttribute": "userName",
          "required": true,
          "validateInputs": true,
        },
      },
      "nodes": {
        "31ef44e5-6db0-4ace-a899-10d12b8fcba0": {
          "_id": "31ef44e5-6db0-4ace-a899-10d12b8fcba0",
          "_outcomes": [
            {
              "displayName": "Created",
              "id": "CREATED",
            },
            {
              "displayName": "Failed",
              "id": "FAILURE",
            },
          ],
          "_rev": "-5396369",
          "_type": {
            "_id": "CreateObjectNode",
            "collection": true,
            "name": "Create Object",
          },
          "identityResource": "managed/alpha_user",
        },
        "64ee95cc-b577-4840-9732-bcab4d567ca5": {
          "_id": "64ee95cc-b577-4840-9732-bcab4d567ca5",
          "_outcomes": [
            {
              "displayName": "true",
              "id": "true",
            },
          ],
          "_rev": "174534216",
          "_type": {
            "_id": "ScriptedDecisionNode",
            "collection": true,
            "name": "Scripted Decision",
          },
          "inputs": [
            "*",
          ],
          "outcomes": [
            "true",
          ],
          "outputs": [
            "*",
          ],
          "script": "8e03eb43-ed5d-4c12-9e15-2051cc9be578",
        },
        "b8f1f3f6-1a30-46dd-9391-e5f949994009": {
          "_id": "b8f1f3f6-1a30-46dd-9391-e5f949994009",
          "_outcomes": [
            {
              "displayName": "true",
              "id": "true",
            },
          ],
          "_rev": "-667631995",
          "_type": {
            "_id": "ScriptedDecisionNode",
            "collection": true,
            "name": "Scripted Decision",
          },
          "inputs": [
            "*",
          ],
          "outcomes": [
            "true",
          ],
          "outputs": [
            "*",
          ],
          "script": "b703581a-e112-42b9-bc24-6db8bced5a13",
        },
        "bd0b305e-fcf3-4640-928c-3307f7a02b85": {
          "_id": "bd0b305e-fcf3-4640-928c-3307f7a02b85",
          "_outcomes": [
            {
              "displayName": "True",
              "id": "true",
            },
            {
              "displayName": "False",
              "id": "false",
            },
          ],
          "_rev": "-1130228360",
          "_type": {
            "_id": "RequiredAttributesDecisionNode",
            "collection": true,
            "name": "Required Attributes Present",
          },
          "identityResource": "managed/alpha_user",
        },
        "d1d5df85-0d9b-411b-8f87-c814b49be4f3": {
          "_id": "d1d5df85-0d9b-411b-8f87-c814b49be4f3",
          "_outcomes": [
            {
              "displayName": "True",
              "id": "true",
            },
            {
              "displayName": "False",
              "id": "false",
            },
          ],
          "_rev": "2067959706",
          "_type": {
            "_id": "IdentifyExistingUserNode",
            "collection": true,
            "name": "Identify Existing User",
          },
          "identifier": "userName",
          "identityAttribute": "userName",
        },
        "d370d408-1f9d-4ef3-a3eb-6cba31335abb": {
          "_id": "d370d408-1f9d-4ef3-a3eb-6cba31335abb",
          "_outcomes": [
            {
              "displayName": "Account exists",
              "id": "ACCOUNT_EXISTS",
            },
            {
              "displayName": "No account exists",
              "id": "NO_ACCOUNT",
            },
          ],
          "_rev": "697412380",
          "_type": {
            "_id": "product-Saml2Node",
            "collection": true,
            "name": "SAML2 Authentication",
          },
          "allowCreate": false,
          "authComparison": "EXACT",
          "authnContextClassRef": [],
          "authnContextDeclRef": [],
          "binding": "HTTP_POST",
          "forceAuthn": false,
          "idpEntityId": "https://sts.windows.net/711ffa9c-5972-4713-ace3-688c9732614a/",
          "isPassive": false,
          "metaAlias": "/alpha/iSPAzure",
          "nameIdFormat": "urn:oasis:names:tc:SAML:1.1:nameid-format:unspecified",
          "requestBinding": "HTTP_REDIRECT",
        },
        "dba99938-c8b3-4a3b-8148-2daea535b76b": {
          "_id": "dba99938-c8b3-4a3b-8148-2daea535b76b",
          "_outcomes": [
            {
              "displayName": "Outcome",
              "id": "outcome",
            },
          ],
          "_rev": "1432747774",
          "_type": {
            "_id": "PageNode",
            "collection": true,
            "name": "Page Node",
          },
          "nodes": [
            {
              "_id": "313597f3-2e86-4476-b899-17a0209f0386",
              "displayName": "Attributes",
              "nodeType": "AttributeCollectorNode",
            },
          ],
          "pageDescription": {},
          "pageHeader": {},
        },
      },
      "saml2Entities": {},
      "scripts": {},
      "socialIdentityProviders": {},
      "themes": [],
      "tree": {
        "_id": "Azure",
        "_rev": "-1040590830",
        "description": "SP-initiated SAML login to Volker's Azure tenant (IDP)",
        "enabled": true,
        "entryNodeId": "d370d408-1f9d-4ef3-a3eb-6cba31335abb",
        "identityResource": "managed/alpha_user",
        "nodes": {
          "31ef44e5-6db0-4ace-a899-10d12b8fcba0": {
            "connections": {
              "CREATED": "d1d5df85-0d9b-411b-8f87-c814b49be4f3",
              "FAILURE": "e301438c-0bd0-429c-ab0c-66126501069a",
            },
            "displayName": "Create Account",
            "nodeType": "CreateObjectNode",
            "x": 815,
            "y": 311.76666259765625,
          },
          "64ee95cc-b577-4840-9732-bcab4d567ca5": {
            "connections": {
              "true": "d1d5df85-0d9b-411b-8f87-c814b49be4f3",
            },
            "displayName": "Process SAML Data",
            "nodeType": "ScriptedDecisionNode",
            "x": 388,
            "y": 135.76666259765625,
          },
          "b8f1f3f6-1a30-46dd-9391-e5f949994009": {
            "connections": {
              "true": "64ee95cc-b577-4840-9732-bcab4d567ca5",
            },
            "displayName": "Display States",
            "nodeType": "ScriptedDecisionNode",
            "x": 286,
            "y": 20.015625,
          },
          "bd0b305e-fcf3-4640-928c-3307f7a02b85": {
            "connections": {
              "false": "dba99938-c8b3-4a3b-8148-2daea535b76b",
              "true": "31ef44e5-6db0-4ace-a899-10d12b8fcba0",
            },
            "displayName": "Required Attributes?",
            "nodeType": "RequiredAttributesDecisionNode",
            "x": 421,
            "y": 305.76666259765625,
          },
          "d1d5df85-0d9b-411b-8f87-c814b49be4f3": {
            "connections": {
              "false": "bd0b305e-fcf3-4640-928c-3307f7a02b85",
              "true": "70e691a5-1e33-4ac3-a356-e7b6d60d92e0",
            },
            "displayName": "Identify Existing User",
            "nodeType": "IdentifyExistingUserNode",
            "x": 611,
            "y": 91.76666259765625,
          },
          "d370d408-1f9d-4ef3-a3eb-6cba31335abb": {
            "connections": {
              "ACCOUNT_EXISTS": "64ee95cc-b577-4840-9732-bcab4d567ca5",
              "NO_ACCOUNT": "64ee95cc-b577-4840-9732-bcab4d567ca5",
            },
            "displayName": "Azure Login",
            "nodeType": "product-Saml2Node",
            "x": 165,
            "y": 91.76666259765625,
          },
          "dba99938-c8b3-4a3b-8148-2daea535b76b": {
            "connections": {
              "outcome": "31ef44e5-6db0-4ace-a899-10d12b8fcba0",
            },
            "displayName": "Register",
            "nodeType": "PageNode",
            "x": 616,
            "y": 447.76666259765625,
          },
        },
        "staticNodes": {
          "70e691a5-1e33-4ac3-a356-e7b6d60d92e0": {
            "x": 1085,
            "y": 59,
          },
          "e301438c-0bd0-429c-ab0c-66126501069a": {
            "x": 1074,
            "y": 424,
          },
          "startNode": {
            "x": 25,
            "y": 115,
          },
        },
        "uiConfig": {
          "categories": "["Authentication","SAML","Azure"]",
        },
      },
    },
    "AzureADPassthru": {
      "circlesOfTrust": {},
      "emailTemplates": {},
      "innerNodes": {
        "9a30af4f-a0bd-4a3d-8014-57219b8621ff": {
          "_id": "9a30af4f-a0bd-4a3d-8014-57219b8621ff",
          "_outcomes": [
            {
              "displayName": "Outcome",
              "id": "outcome",
            },
          ],
          "_rev": "-1101278957",
          "_type": {
            "_id": "ValidatedUsernameNode",
            "collection": true,
            "name": "Platform Username",
          },
          "usernameAttribute": "userName",
          "validateInput": false,
        },
        "a9c80c85-68ed-4356-8437-e064c471f838": {
          "_id": "a9c80c85-68ed-4356-8437-e064c471f838",
          "_outcomes": [
            {
              "displayName": "Outcome",
              "id": "outcome",
            },
          ],
          "_rev": "469733933",
          "_type": {
            "_id": "ValidatedPasswordNode",
            "collection": true,
            "name": "Platform Password",
          },
          "passwordAttribute": "password",
          "validateInput": false,
        },
      },
      "nodes": {
        "05138a5b-210f-45e3-b8e9-b7839469f699": {
          "_id": "05138a5b-210f-45e3-b8e9-b7839469f699",
          "_outcomes": [
            {
              "displayName": "True",
              "id": "true",
            },
            {
              "displayName": "False",
              "id": "false",
            },
          ],
          "_rev": "1347304458",
          "_type": {
            "_id": "RequiredAttributesDecisionNode",
            "collection": true,
            "name": "Required Attributes Present",
          },
          "identityResource": "managed/alpha_user",
        },
        "20e402eb-e0f8-4efc-b633-9bbfc303843f": {
          "_id": "20e402eb-e0f8-4efc-b633-9bbfc303843f",
          "_outcomes": [
            {
              "displayName": "Valid",
              "id": "Valid",
            },
            {
              "displayName": "Invalid",
              "id": "Invalid",
            },
            {
              "displayName": "Expired",
              "id": "Expired",
            },
            {
              "displayName": "Disabled",
              "id": "Disabled",
            },
            {
              "displayName": "Error",
              "id": "Error",
            },
          ],
          "_rev": "1357723968",
          "_type": {
            "_id": "ScriptedDecisionNode",
            "collection": true,
            "name": "Scripted Decision",
          },
          "inputs": [
            "*",
          ],
          "outcomes": [
            "Valid",
            "Invalid",
            "Expired",
            "Disabled",
            "Error",
          ],
          "outputs": [
            "*",
          ],
          "script": "13cd3c60-a04b-4455-b028-fbfd01ed88b1",
        },
        "231116f0-4b93-4455-a7fe-aefe941881ae": {
          "_id": "231116f0-4b93-4455-a7fe-aefe941881ae",
          "_outcomes": [
            {
              "displayName": "True",
              "id": "true",
            },
            {
              "displayName": "False",
              "id": "false",
            },
          ],
          "_rev": "-2005077505",
          "_type": {
            "_id": "IdentifyExistingUserNode",
            "collection": true,
            "name": "Identify Existing User",
          },
          "identifier": "userName",
          "identityAttribute": "userName",
        },
        "888eb7aa-9202-4db7-b17d-406a4aaf47e6": {
          "_id": "888eb7aa-9202-4db7-b17d-406a4aaf47e6",
          "_outcomes": [
            {
              "displayName": "True",
              "id": "true",
            },
            {
              "displayName": "False",
              "id": "false",
            },
          ],
          "_rev": "1664098780",
          "_type": {
            "_id": "DataStoreDecisionNode",
            "collection": true,
            "name": "Data Store Decision",
          },
        },
        "d05a48d3-92fe-4996-955a-ff3c77cf15d3": {
          "_id": "d05a48d3-92fe-4996-955a-ff3c77cf15d3",
          "_outcomes": [
            {
              "displayName": "true",
              "id": "true",
            },
            {
              "displayName": "false",
              "id": "false",
            },
          ],
          "_rev": "1298237898",
          "_type": {
            "_id": "ScriptedDecisionNode",
            "collection": true,
            "name": "Scripted Decision",
          },
          "inputs": [
            "*",
          ],
          "outcomes": [
            "true",
            "false",
          ],
          "outputs": [
            "*",
          ],
          "script": "ae04e1a0-c662-43aa-9d80-21af78528b45",
        },
        "da698844-321f-43c1-97b4-80cdd89954ee": {
          "_id": "da698844-321f-43c1-97b4-80cdd89954ee",
          "_outcomes": [
            {
              "displayName": "Created",
              "id": "CREATED",
            },
            {
              "displayName": "Failed",
              "id": "FAILURE",
            },
          ],
          "_rev": "143434117",
          "_type": {
            "_id": "CreateObjectNode",
            "collection": true,
            "name": "Create Object",
          },
          "identityResource": "managed/alpha_user",
        },
        "fa41e09e-c09b-466e-b6b6-3763d3c1b509": {
          "_id": "fa41e09e-c09b-466e-b6b6-3763d3c1b509",
          "_outcomes": [
            {
              "displayName": "Outcome",
              "id": "outcome",
            },
          ],
          "_rev": "2135846376",
          "_type": {
            "_id": "PageNode",
            "collection": true,
            "name": "Page Node",
          },
          "nodes": [
            {
              "_id": "9a30af4f-a0bd-4a3d-8014-57219b8621ff",
              "displayName": "Username",
              "nodeType": "ValidatedUsernameNode",
            },
            {
              "_id": "a9c80c85-68ed-4356-8437-e064c471f838",
              "displayName": "Password",
              "nodeType": "ValidatedPasswordNode",
            },
          ],
          "pageDescription": {},
          "pageHeader": {},
        },
      },
      "saml2Entities": {},
      "scripts": {},
      "socialIdentityProviders": {},
      "themes": [],
      "tree": {
        "_id": "AzureADPassthru",
        "_rev": "-556169423",
        "description": "Use Azure AD pass through authentication.",
        "enabled": true,
        "entryNodeId": "fa41e09e-c09b-466e-b6b6-3763d3c1b509",
        "identityResource": "managed/alpha_user",
        "nodes": {
          "05138a5b-210f-45e3-b8e9-b7839469f699": {
            "connections": {
              "false": "e301438c-0bd0-429c-ab0c-66126501069a",
              "true": "da698844-321f-43c1-97b4-80cdd89954ee",
            },
            "displayName": "Required Attributes?",
            "nodeType": "RequiredAttributesDecisionNode",
            "x": 1084,
            "y": 266.015625,
          },
          "20e402eb-e0f8-4efc-b633-9bbfc303843f": {
            "connections": {
              "Disabled": "e301438c-0bd0-429c-ab0c-66126501069a",
              "Error": "e301438c-0bd0-429c-ab0c-66126501069a",
              "Expired": "e301438c-0bd0-429c-ab0c-66126501069a",
              "Invalid": "e301438c-0bd0-429c-ab0c-66126501069a",
              "Valid": "d05a48d3-92fe-4996-955a-ff3c77cf15d3",
            },
            "displayName": "Authenticate Remotely",
            "nodeType": "ScriptedDecisionNode",
            "x": 614,
            "y": 319.015625,
          },
          "231116f0-4b93-4455-a7fe-aefe941881ae": {
            "connections": {
              "false": "20e402eb-e0f8-4efc-b633-9bbfc303843f",
              "true": "888eb7aa-9202-4db7-b17d-406a4aaf47e6",
            },
            "displayName": "Identify Existing User",
            "nodeType": "IdentifyExistingUserNode",
            "x": 385,
            "y": 233.015625,
          },
          "888eb7aa-9202-4db7-b17d-406a4aaf47e6": {
            "connections": {
              "false": "e301438c-0bd0-429c-ab0c-66126501069a",
              "true": "70e691a5-1e33-4ac3-a356-e7b6d60d92e0",
            },
            "displayName": "Authenticate Locally",
            "nodeType": "DataStoreDecisionNode",
            "x": 619,
            "y": 115.015625,
          },
          "d05a48d3-92fe-4996-955a-ff3c77cf15d3": {
            "connections": {
              "false": "e301438c-0bd0-429c-ab0c-66126501069a",
              "true": "05138a5b-210f-45e3-b8e9-b7839469f699",
            },
            "displayName": "Parse Access Token",
            "nodeType": "ScriptedDecisionNode",
            "x": 858,
            "y": 327.015625,
          },
          "da698844-321f-43c1-97b4-80cdd89954ee": {
            "connections": {
              "CREATED": "70e691a5-1e33-4ac3-a356-e7b6d60d92e0",
              "FAILURE": "e301438c-0bd0-429c-ab0c-66126501069a",
            },
            "displayName": "Migrate Account",
            "nodeType": "CreateObjectNode",
            "x": 1317,
            "y": 215.015625,
          },
          "fa41e09e-c09b-466e-b6b6-3763d3c1b509": {
            "connections": {
              "outcome": "231116f0-4b93-4455-a7fe-aefe941881ae",
            },
            "displayName": "Login Page",
            "nodeType": "PageNode",
            "x": 168,
            "y": 201.015625,
          },
        },
        "staticNodes": {
          "70e691a5-1e33-4ac3-a356-e7b6d60d92e0": {
            "x": 1597,
            "y": 138,
          },
          "e301438c-0bd0-429c-ab0c-66126501069a": {
            "x": 1593,
            "y": 450,
          },
          "startNode": {
            "x": 50,
            "y": 250,
          },
        },
        "uiConfig": {
          "categories": "["Authentication","Azure","Trickle Migration"]",
        },
      },
    },
    "AzureOIDC": {
      "circlesOfTrust": {},
      "emailTemplates": {},
      "innerNodes": {
        "fa7d88d5-1d0e-4e86-bb62-2a37eea6d7fa": {
          "_id": "fa7d88d5-1d0e-4e86-bb62-2a37eea6d7fa",
          "_outcomes": [
            {
              "displayName": "Social Authentication",
              "id": "socialAuthentication",
            },
          ],
          "_rev": "2008475469",
          "_type": {
            "_id": "SelectIdPNode",
            "collection": true,
            "name": "Select Identity Provider",
          },
          "filteredProviders": [
            "azure",
          ],
          "identityAttribute": "mail",
          "includeLocalAuthentication": false,
          "offerOnlyExisting": false,
          "passwordAttribute": "password",
        },
      },
      "nodes": {
        "19f508a5-0399-463c-9b7b-53293222f75e": {
          "_id": "19f508a5-0399-463c-9b7b-53293222f75e",
          "_outcomes": [
            {
              "displayName": "Created",
              "id": "CREATED",
            },
            {
              "displayName": "Failed",
              "id": "FAILURE",
            },
          ],
          "_rev": "-1803646081",
          "_type": {
            "_id": "CreateObjectNode",
            "collection": true,
            "name": "Create Object",
          },
          "identityResource": "managed/alpha_user",
        },
        "314dec77-6c1b-4aa2-a8a5-81db225ced31": {
          "_id": "314dec77-6c1b-4aa2-a8a5-81db225ced31",
          "_outcomes": [
            {
              "displayName": "Account exists",
              "id": "ACCOUNT_EXISTS",
            },
            {
              "displayName": "No account exists",
              "id": "NO_ACCOUNT",
            },
          ],
          "_rev": "-478425755",
          "_type": {
            "_id": "SocialProviderHandlerNode",
            "collection": true,
            "name": "Social Provider Handler Node",
          },
          "clientType": "BROWSER",
          "script": "58c824ae-84ed-4724-82cd-db128fc3f6c",
          "usernameAttribute": "userName",
        },
        "439f498e-ba76-47c8-a71e-46a19ab77ffa": {
          "_id": "439f498e-ba76-47c8-a71e-46a19ab77ffa",
          "_outcomes": [
            {
              "displayName": "true",
              "id": "true",
            },
          ],
          "_rev": "1475671740",
          "_type": {
            "_id": "ScriptedDecisionNode",
            "collection": true,
            "name": "Scripted Decision",
          },
          "inputs": [
            "*",
          ],
          "outcomes": [
            "true",
          ],
          "outputs": [
            "*",
          ],
          "script": "3981c0d3-0e3a-4c1d-be6b-5442e8acd3a1",
        },
        "7c21e1c6-cd0b-4b1a-96df-c9011b9efe14": {
          "_id": "7c21e1c6-cd0b-4b1a-96df-c9011b9efe14",
          "_outcomes": [
            {
              "displayName": "true",
              "id": "true",
            },
            {
              "displayName": "false",
              "id": "false",
            },
          ],
          "_rev": "-817545089",
          "_type": {
            "_id": "ScriptedDecisionNode",
            "collection": true,
            "name": "Scripted Decision",
          },
          "inputs": [
            "*",
          ],
          "outcomes": [
            "true",
            "false",
          ],
          "outputs": [
            "*",
          ],
          "script": "988c10fa-98da-4bf7-8ac9-a558d2fef1fd",
        },
        "9357d472-9839-44ea-b79a-0f7dd9dce623": {
          "_id": "9357d472-9839-44ea-b79a-0f7dd9dce623",
          "_outcomes": [
            {
              "displayName": "Social Authentication",
              "id": "socialAuthentication",
            },
          ],
          "_rev": "-692158261",
          "_type": {
            "_id": "PageNode",
            "collection": true,
            "name": "Page Node",
          },
          "nodes": [
            {
              "_id": "fa7d88d5-1d0e-4e86-bb62-2a37eea6d7fa",
              "displayName": "Select IDP",
              "nodeType": "SelectIdPNode",
            },
          ],
          "pageDescription": {},
          "pageHeader": {},
        },
        "cde6cfbc-c388-4213-a3f6-18da584c1562": {
          "_id": "cde6cfbc-c388-4213-a3f6-18da584c1562",
          "_outcomes": [
            {
              "displayName": "true",
              "id": "true",
            },
          ],
          "_rev": "224751921",
          "_type": {
            "_id": "ScriptedDecisionNode",
            "collection": true,
            "name": "Scripted Decision",
          },
          "inputs": [
            "*",
          ],
          "outcomes": [
            "true",
          ],
          "outputs": [
            "*",
          ],
          "script": "b703581a-e112-42b9-bc24-6db8bced5a13",
        },
      },
      "saml2Entities": {},
      "scripts": {},
      "socialIdentityProviders": {},
      "themes": [],
      "tree": {
        "_id": "AzureOIDC",
        "_rev": "-1434631171",
        "description": "Azure OIDC",
        "enabled": true,
        "entryNodeId": "9357d472-9839-44ea-b79a-0f7dd9dce623",
        "identityResource": "managed/alpha_user",
        "nodes": {
          "19f508a5-0399-463c-9b7b-53293222f75e": {
            "connections": {
              "CREATED": "439f498e-ba76-47c8-a71e-46a19ab77ffa",
              "FAILURE": "e301438c-0bd0-429c-ab0c-66126501069a",
            },
            "displayName": "Provision User",
            "nodeType": "CreateObjectNode",
            "x": 753,
            "y": 233.015625,
          },
          "314dec77-6c1b-4aa2-a8a5-81db225ced31": {
            "connections": {
              "ACCOUNT_EXISTS": "439f498e-ba76-47c8-a71e-46a19ab77ffa",
              "NO_ACCOUNT": "7c21e1c6-cd0b-4b1a-96df-c9011b9efe14",
            },
            "displayName": "OIDC Login",
            "nodeType": "SocialProviderHandlerNode",
            "x": 342.95001220703125,
            "y": 108.76666259765625,
          },
          "439f498e-ba76-47c8-a71e-46a19ab77ffa": {
            "connections": {
              "true": "70e691a5-1e33-4ac3-a356-e7b6d60d92e0",
            },
            "displayName": "Store Profile In Session",
            "nodeType": "ScriptedDecisionNode",
            "x": 972,
            "y": 140.015625,
          },
          "7c21e1c6-cd0b-4b1a-96df-c9011b9efe14": {
            "connections": {
              "false": "e301438c-0bd0-429c-ab0c-66126501069a",
              "true": "19f508a5-0399-463c-9b7b-53293222f75e",
            },
            "displayName": "IDP Integrity Check",
            "nodeType": "ScriptedDecisionNode",
            "x": 540,
            "y": 232.015625,
          },
          "9357d472-9839-44ea-b79a-0f7dd9dce623": {
            "connections": {
              "socialAuthentication": "314dec77-6c1b-4aa2-a8a5-81db225ced31",
            },
            "displayName": "Silent",
            "nodeType": "PageNode",
            "x": 123,
            "y": 107,
          },
          "cde6cfbc-c388-4213-a3f6-18da584c1562": {
            "connections": {
              "true": "70e691a5-1e33-4ac3-a356-e7b6d60d92e0",
            },
            "displayName": "Display States",
            "nodeType": "ScriptedDecisionNode",
            "x": 1001,
            "y": 38.015625,
          },
        },
        "staticNodes": {
          "70e691a5-1e33-4ac3-a356-e7b6d60d92e0": {
            "x": 1216,
            "y": 70,
          },
          "e301438c-0bd0-429c-ab0c-66126501069a": {
            "x": 981,
            "y": 404,
          },
          "startNode": {
            "x": 21,
            "y": 134,
          },
        },
        "uiConfig": {
          "categories": "["Authentication","Azure"]",
        },
      },
    },
    "ClearLockout": {
      "circlesOfTrust": {},
      "emailTemplates": {},
      "innerNodes": {},
      "nodes": {
        "1dbe739a-1662-4051-8989-1fa01a7cbf86": {
          "_id": "1dbe739a-1662-4051-8989-1fa01a7cbf86",
          "_outcomes": [
            {
              "displayName": "Outcome",
              "id": "outcome",
            },
          ],
          "_rev": "-401436241",
          "_type": {
            "_id": "ValidatedUsernameNode",
            "collection": true,
            "name": "Platform Username",
          },
          "usernameAttribute": "userName",
          "validateInput": false,
        },
        "42e36768-f354-43bf-9e49-e1df6f04dae5": {
          "_id": "42e36768-f354-43bf-9e49-e1df6f04dae5",
          "_outcomes": [
            {
              "displayName": "Outcome",
              "id": "outcome",
            },
          ],
          "_rev": "-1164007500",
          "_type": {
            "_id": "AccountLockoutNode",
            "collection": true,
            "name": "Account Lockout",
          },
          "lockAction": "UNLOCK",
        },
        "46ee14de-812b-4907-be22-256510d464fc": {
          "_id": "46ee14de-812b-4907-be22-256510d464fc",
          "_outcomes": [
            {
              "displayName": "true",
              "id": "true",
            },
            {
              "displayName": "false",
              "id": "false",
            },
          ],
          "_rev": "-1133979439",
          "_type": {
            "_id": "ScriptedDecisionNode",
            "collection": true,
            "name": "Scripted Decision",
          },
          "inputs": [
            "*",
          ],
          "outcomes": [
            "true",
            "false",
          ],
          "outputs": [
            "*",
          ],
          "script": "3cb43516-ae69-433a-8787-501d45db14e9",
        },
        "a6246c5f-721f-4cad-9e46-53100951dee6": {
          "_id": "a6246c5f-721f-4cad-9e46-53100951dee6",
          "_outcomes": [
            {
              "displayName": "true",
              "id": "true",
            },
            {
              "displayName": "false",
              "id": "false",
            },
          ],
          "_rev": "-908574806",
          "_type": {
            "_id": "ScriptedDecisionNode",
            "collection": true,
            "name": "Scripted Decision",
          },
          "inputs": [
            "*",
          ],
          "outcomes": [
            "true",
            "false",
          ],
          "outputs": [
            "*",
          ],
          "script": "cdea92a1-d2bf-4364-a525-fde8b7a95792",
        },
        "e84e2522-c875-4bb4-b363-1452cab18251": {
          "_id": "e84e2522-c875-4bb4-b363-1452cab18251",
          "_outcomes": [
            {
              "displayName": "True",
              "id": "true",
            },
            {
              "displayName": "False",
              "id": "false",
            },
          ],
          "_rev": "876739875",
          "_type": {
            "_id": "IdentifyExistingUserNode",
            "collection": true,
            "name": "Identify Existing User",
          },
          "identifier": "userName",
          "identityAttribute": "userName",
        },
        "ef4b492e-b558-48fd-b77a-78a80a9f9408": {
          "_id": "ef4b492e-b558-48fd-b77a-78a80a9f9408",
          "_outcomes": [
            {
              "displayName": "true",
              "id": "true",
            },
          ],
          "_rev": "-70667011",
          "_type": {
            "_id": "ScriptedDecisionNode",
            "collection": true,
            "name": "Scripted Decision",
          },
          "inputs": [
            "*",
          ],
          "outcomes": [
            "true",
          ],
          "outputs": [
            "*",
          ],
          "script": "3cb43516-ae69-433a-8787-501d45db14e9",
        },
      },
      "saml2Entities": {},
      "scripts": {},
      "socialIdentityProviders": {},
      "themes": [],
      "tree": {
        "_id": "ClearLockout",
        "_rev": "1014881013",
        "enabled": true,
        "entryNodeId": "1dbe739a-1662-4051-8989-1fa01a7cbf86",
        "identityResource": "managed/alpha_user",
        "nodes": {
          "1dbe739a-1662-4051-8989-1fa01a7cbf86": {
            "connections": {
              "outcome": "e84e2522-c875-4bb4-b363-1452cab18251",
            },
            "displayName": "Username",
            "nodeType": "ValidatedUsernameNode",
            "x": 167,
            "y": 256.015625,
          },
          "42e36768-f354-43bf-9e49-e1df6f04dae5": {
            "connections": {
              "outcome": "70e691a5-1e33-4ac3-a356-e7b6d60d92e0",
            },
            "displayName": "Unlock Account",
            "nodeType": "AccountLockoutNode",
            "x": 1016,
            "y": 55.015625,
          },
          "46ee14de-812b-4907-be22-256510d464fc": {
            "connections": {
              "false": "e301438c-0bd0-429c-ab0c-66126501069a",
              "true": "42e36768-f354-43bf-9e49-e1df6f04dae5",
            },
            "displayName": "Clear Lockout",
            "nodeType": "ScriptedDecisionNode",
            "x": 805,
            "y": 23.015625,
          },
          "a6246c5f-721f-4cad-9e46-53100951dee6": {
            "connections": {
              "false": "e301438c-0bd0-429c-ab0c-66126501069a",
              "true": "46ee14de-812b-4907-be22-256510d464fc",
            },
            "displayName": "Is locked-out?",
            "nodeType": "ScriptedDecisionNode",
            "x": 592,
            "y": 87.015625,
          },
          "e84e2522-c875-4bb4-b363-1452cab18251": {
            "connections": {
              "false": "e301438c-0bd0-429c-ab0c-66126501069a",
              "true": "a6246c5f-721f-4cad-9e46-53100951dee6",
            },
            "displayName": "Find User",
            "nodeType": "IdentifyExistingUserNode",
            "x": 373,
            "y": 172.015625,
          },
          "ef4b492e-b558-48fd-b77a-78a80a9f9408": {
            "connections": {
              "true": "46ee14de-812b-4907-be22-256510d464fc",
            },
            "displayName": "debug",
            "nodeType": "ScriptedDecisionNode",
            "x": 369,
            "y": 33.015625,
          },
        },
        "staticNodes": {
          "70e691a5-1e33-4ac3-a356-e7b6d60d92e0": {
            "x": 1236,
            "y": 47,
          },
          "e301438c-0bd0-429c-ab0c-66126501069a": {
            "x": 915,
            "y": 452,
          },
          "startNode": {
            "x": 50,
            "y": 250,
          },
        },
        "uiConfig": {
          "categories": "["Self-Service","Proof Of Concept","Prototype"]",
        },
      },
    },
    "CollectReplayCredentials": {
      "circlesOfTrust": {},
      "emailTemplates": {},
      "innerNodes": {
        "68775a23-a7ab-4c03-8219-7fd8351ec52e": {
          "_id": "68775a23-a7ab-4c03-8219-7fd8351ec52e",
          "_outcomes": [
            {
              "displayName": "true",
              "id": "true",
            },
          ],
          "_rev": "-1152743225",
          "_type": {
            "_id": "ScriptedDecisionNode",
            "collection": true,
            "name": "Scripted Decision",
          },
          "inputs": [
            "*",
          ],
          "outcomes": [
            "true",
          ],
          "outputs": [
            "*",
          ],
          "script": "d82a4ad6-cd8a-437b-af55-7373e50d685b",
        },
        "bd3198ac-f8c4-4f8d-a177-c8c39e32fe72": {
          "_id": "bd3198ac-f8c4-4f8d-a177-c8c39e32fe72",
          "_outcomes": [
            {
              "displayName": "Outcome",
              "id": "outcome",
            },
          ],
          "_rev": "-1494041242",
          "_type": {
            "_id": "AttributeCollectorNode",
            "collection": true,
            "name": "Attribute Collector",
          },
          "attributesToCollect": [
            "frUnindexedString1",
          ],
          "identityAttribute": "userName",
          "required": false,
          "validateInputs": false,
        },
      },
      "nodes": {
        "156766ad-2f7f-47bc-8d20-12cb040b5de0": {
          "_id": "156766ad-2f7f-47bc-8d20-12cb040b5de0",
          "_outcomes": [
            {
              "displayName": "Patched",
              "id": "PATCHED",
            },
            {
              "displayName": "Failed",
              "id": "FAILURE",
            },
          ],
          "_rev": "-1113154775",
          "_type": {
            "_id": "PatchObjectNode",
            "collection": true,
            "name": "Patch Object",
          },
          "identityAttribute": "userName",
          "identityResource": "managed/alpha_user",
          "ignoredFields": [
            "userName",
          ],
          "patchAsObject": false,
        },
        "41e8a10d-a915-4856-9191-ef134ae389dc": {
          "_id": "41e8a10d-a915-4856-9191-ef134ae389dc",
          "_outcomes": [
            {
              "displayName": "Outcome",
              "id": "outcome",
            },
          ],
          "_rev": "758171770",
          "_type": {
            "_id": "SessionDataNode",
            "collection": true,
            "name": "Get Session Data",
          },
          "sessionDataKey": "UserToken",
          "sharedStateKey": "userName",
        },
        "598356ae-b579-4a68-b91d-d672bdb48331": {
          "_id": "598356ae-b579-4a68-b91d-d672bdb48331",
          "_outcomes": [
            {
              "displayName": "True",
              "id": "true",
            },
            {
              "displayName": "False",
              "id": "false",
            },
          ],
          "_rev": "-663666524",
          "_type": {
            "_id": "IdentifyExistingUserNode",
            "collection": true,
            "name": "Identify Existing User",
          },
          "identifier": "userName",
          "identityAttribute": "userName",
        },
        "d49cee4b-9f6f-4229-9b4a-fa75dab465d4": {
          "_id": "d49cee4b-9f6f-4229-9b4a-fa75dab465d4",
          "_outcomes": [
            {
              "displayName": "true",
              "id": "true",
            },
          ],
          "_rev": "1243515592",
          "_type": {
            "_id": "PageNode",
            "collection": true,
            "name": "Page Node",
          },
          "nodes": [
            {
              "_id": "bd3198ac-f8c4-4f8d-a177-c8c39e32fe72",
              "displayName": "Username",
              "nodeType": "AttributeCollectorNode",
            },
            {
              "_id": "68775a23-a7ab-4c03-8219-7fd8351ec52e",
              "displayName": "Password",
              "nodeType": "ScriptedDecisionNode",
            },
          ],
          "pageDescription": {
            "en": "<h4>ig-sample-app</h4>",
          },
          "pageHeader": {
            "en": "Enter Replay Credentials",
          },
        },
        "de0c280a-732f-4885-adc9-812212c6a023": {
          "_id": "de0c280a-732f-4885-adc9-812212c6a023",
          "_outcomes": [
            {
              "displayName": "true",
              "id": "true",
            },
          ],
          "_rev": "344334027",
          "_type": {
            "_id": "ScriptedDecisionNode",
            "collection": true,
            "name": "Scripted Decision",
          },
          "inputs": [
            "*",
          ],
          "outcomes": [
            "true",
          ],
          "outputs": [
            "*",
          ],
          "script": "b703581a-e112-42b9-bc24-6db8bced5a13",
        },
      },
      "saml2Entities": {},
      "scripts": {},
      "socialIdentityProviders": {},
      "themes": [],
      "tree": {
        "_id": "CollectReplayCredentials",
        "_rev": "935969398",
        "description": "Journey for IG Password Replay Use Case",
        "enabled": true,
        "entryNodeId": "41e8a10d-a915-4856-9191-ef134ae389dc",
        "identityResource": "managed/alpha_user",
        "nodes": {
          "156766ad-2f7f-47bc-8d20-12cb040b5de0": {
            "connections": {
              "FAILURE": "e301438c-0bd0-429c-ab0c-66126501069a",
              "PATCHED": "70e691a5-1e33-4ac3-a356-e7b6d60d92e0",
            },
            "displayName": "Store Credentials",
            "nodeType": "PatchObjectNode",
            "x": 818,
            "y": 143.015625,
          },
          "41e8a10d-a915-4856-9191-ef134ae389dc": {
            "connections": {
              "outcome": "598356ae-b579-4a68-b91d-d672bdb48331",
            },
            "displayName": "Get Session Data",
            "nodeType": "SessionDataNode",
            "x": 158,
            "y": 257.015625,
          },
          "598356ae-b579-4a68-b91d-d672bdb48331": {
            "connections": {
              "false": "e301438c-0bd0-429c-ab0c-66126501069a",
              "true": "d49cee4b-9f6f-4229-9b4a-fa75dab465d4",
            },
            "displayName": "Lookup User",
            "nodeType": "IdentifyExistingUserNode",
            "x": 364,
            "y": 231.015625,
          },
          "d49cee4b-9f6f-4229-9b4a-fa75dab465d4": {
            "connections": {
              "true": "156766ad-2f7f-47bc-8d20-12cb040b5de0",
            },
            "displayName": "Collect Credentials",
            "nodeType": "PageNode",
            "x": 588,
            "y": 110.015625,
          },
          "de0c280a-732f-4885-adc9-812212c6a023": {
            "connections": {
              "true": "156766ad-2f7f-47bc-8d20-12cb040b5de0",
            },
            "displayName": "Debug",
            "nodeType": "ScriptedDecisionNode",
            "x": 731,
            "y": 21.015625,
          },
        },
        "staticNodes": {
          "70e691a5-1e33-4ac3-a356-e7b6d60d92e0": {
            "x": 1094,
            "y": 115,
          },
          "e301438c-0bd0-429c-ab0c-66126501069a": {
            "x": 1095,
            "y": 348,
          },
          "startNode": {
            "x": 50,
            "y": 250,
          },
        },
        "uiConfig": {
          "categories": "["Proof Of Concept","Prototype","Helper"]",
        },
      },
    },
    "ConnectSocial": {
      "circlesOfTrust": {},
      "emailTemplates": {},
      "innerNodes": {
        "cd66f7c0-980d-42ad-b80a-31a993bb569d": {
          "_id": "cd66f7c0-980d-42ad-b80a-31a993bb569d",
          "_outcomes": [
            {
              "displayName": "Social Authentication",
              "id": "socialAuthentication",
            },
            {
              "displayName": "Local Authentication",
              "id": "localAuthentication",
            },
          ],
          "_rev": "-534303742",
          "_type": {
            "_id": "SelectIdPNode",
            "collection": true,
            "name": "Select Identity Provider",
          },
          "filteredProviders": [],
          "identityAttribute": "mail",
          "includeLocalAuthentication": true,
          "offerOnlyExisting": false,
          "passwordAttribute": "password",
        },
      },
      "nodes": {
        "255386e3-945b-4a01-911e-9bacb5660c32": {
          "_id": "255386e3-945b-4a01-911e-9bacb5660c32",
          "_outcomes": [
            {
              "displayName": "Patched",
              "id": "PATCHED",
            },
            {
              "displayName": "Failed",
              "id": "FAILURE",
            },
          ],
          "_rev": "559119437",
          "_type": {
            "_id": "PatchObjectNode",
            "collection": true,
            "name": "Patch Object",
          },
          "identityAttribute": "userName",
          "identityResource": "managed/alpha_user",
          "ignoredFields": [],
          "patchAsObject": false,
        },
        "4befd239-9bf0-4e35-8702-0d9709dca076": {
          "_id": "4befd239-9bf0-4e35-8702-0d9709dca076",
          "_outcomes": [
            {
              "displayName": "Account exists",
              "id": "ACCOUNT_EXISTS",
            },
            {
              "displayName": "No account exists",
              "id": "NO_ACCOUNT",
            },
          ],
          "_rev": "315483036",
          "_type": {
            "_id": "SocialProviderHandlerNode",
            "collection": true,
            "name": "Social Provider Handler Node",
          },
          "clientType": "BROWSER",
          "script": "58c824ae-84ed-4724-82cd-db128fc3f6c",
          "usernameAttribute": "userName",
        },
        "539dfd7f-89fe-4d94-bcc0-6e98302192bf": {
          "_id": "539dfd7f-89fe-4d94-bcc0-6e98302192bf",
          "_outcomes": [
            {
              "displayName": "Outcome",
              "id": "outcome",
            },
          ],
          "_rev": "327073021",
          "_type": {
            "_id": "IncrementLoginCountNode",
            "collection": true,
            "name": "Increment Login Count",
          },
          "identityAttribute": "userName",
        },
        "70f10655-df28-4f93-ac69-60133f6d9662": {
          "_id": "70f10655-df28-4f93-ac69-60133f6d9662",
          "_outcomes": [
            {
              "displayName": "Outcome",
              "id": "outcome",
            },
          ],
          "_rev": "-799540402",
          "_type": {
            "_id": "SessionDataNode",
            "collection": true,
            "name": "Get Session Data",
          },
          "sessionDataKey": "UserToken",
          "sharedStateKey": "userName",
        },
        "837f8c63-5ca1-4227-9809-2699a45d77fc": {
          "_id": "837f8c63-5ca1-4227-9809-2699a45d77fc",
          "_outcomes": [
            {
              "displayName": "Social Authentication",
              "id": "socialAuthentication",
            },
            {
              "displayName": "Local Authentication",
              "id": "localAuthentication",
            },
          ],
          "_rev": "1514278117",
          "_type": {
            "_id": "PageNode",
            "collection": true,
            "name": "Page Node",
          },
          "nodes": [
            {
              "_id": "cd66f7c0-980d-42ad-b80a-31a993bb569d",
              "displayName": "Select IDP",
              "nodeType": "SelectIdPNode",
            },
          ],
          "pageDescription": {
            "en": "New here? <a href="#/service/Registration">Create an account</a><br><a href="#/service/ForgottenUsername">Forgot username?</a><a href="#/service/ResetPassword"> Forgot password?</a>",
          },
          "pageHeader": {
            "en": "Sign In",
          },
        },
        "b0c3ce9e-21ae-4845-adb7-6626a2093cb4": {
          "_id": "b0c3ce9e-21ae-4845-adb7-6626a2093cb4",
          "_outcomes": [
            {
              "displayName": "True",
              "id": "true",
            },
            {
              "displayName": "False",
              "id": "false",
            },
          ],
          "_rev": "-112611139",
          "_type": {
            "_id": "IdentifyExistingUserNode",
            "collection": true,
            "name": "Identify Existing User",
          },
          "identifier": "userName",
          "identityAttribute": "mail",
        },
      },
      "saml2Entities": {},
      "scripts": {},
      "socialIdentityProviders": {},
      "themes": [],
      "tree": {
        "_id": "ConnectSocial",
        "_rev": "702765164",
        "description": "Connect Social IDP Tree",
        "enabled": true,
        "entryNodeId": "70f10655-df28-4f93-ac69-60133f6d9662",
        "identityResource": "managed/alpha_user",
        "nodes": {
          "255386e3-945b-4a01-911e-9bacb5660c32": {
            "connections": {
              "FAILURE": "e301438c-0bd0-429c-ab0c-66126501069a",
              "PATCHED": "539dfd7f-89fe-4d94-bcc0-6e98302192bf",
            },
            "displayName": "Patch Object",
            "nodeType": "PatchObjectNode",
            "x": 821,
            "y": 336.76666259765625,
          },
          "4befd239-9bf0-4e35-8702-0d9709dca076": {
            "connections": {
              "ACCOUNT_EXISTS": "539dfd7f-89fe-4d94-bcc0-6e98302192bf",
              "NO_ACCOUNT": "b0c3ce9e-21ae-4845-adb7-6626a2093cb4",
            },
            "displayName": "Social Login",
            "nodeType": "SocialProviderHandlerNode",
            "x": 458,
            "y": 75,
          },
          "539dfd7f-89fe-4d94-bcc0-6e98302192bf": {
            "connections": {
              "outcome": "70e691a5-1e33-4ac3-a356-e7b6d60d92e0",
            },
            "displayName": "Increment Login Count",
            "nodeType": "IncrementLoginCountNode",
            "x": 987,
            "y": 106,
          },
          "70f10655-df28-4f93-ac69-60133f6d9662": {
            "connections": {
              "outcome": "837f8c63-5ca1-4227-9809-2699a45d77fc",
            },
            "displayName": "Get Session Data",
            "nodeType": "SessionDataNode",
            "x": 97,
            "y": 110.76666259765625,
          },
          "837f8c63-5ca1-4227-9809-2699a45d77fc": {
            "connections": {
              "socialAuthentication": "4befd239-9bf0-4e35-8702-0d9709dca076",
            },
            "displayName": "Page Node",
            "nodeType": "PageNode",
            "x": 267,
            "y": 213,
          },
          "b0c3ce9e-21ae-4845-adb7-6626a2093cb4": {
            "connections": {
              "false": "e301438c-0bd0-429c-ab0c-66126501069a",
              "true": "255386e3-945b-4a01-911e-9bacb5660c32",
            },
            "displayName": "Find User",
            "nodeType": "IdentifyExistingUserNode",
            "x": 621,
            "y": 205.76666259765625,
          },
        },
        "staticNodes": {
          "70e691a5-1e33-4ac3-a356-e7b6d60d92e0": {
            "x": 1238,
            "y": 98,
          },
          "e301438c-0bd0-429c-ab0c-66126501069a": {
            "x": 1238,
            "y": 256,
          },
          "startNode": {
            "x": 50,
            "y": 25,
          },
        },
        "uiConfig": {
          "categories": "["Self-Service"]",
        },
      },
    },
    "CookieConsent": {
      "circlesOfTrust": {},
      "emailTemplates": {},
      "innerNodes": {
        "3769c1e9-0e40-4cf2-a129-bdc9b2606524": {
          "_id": "3769c1e9-0e40-4cf2-a129-bdc9b2606524",
          "_outcomes": [
            {
              "displayName": "Outcome",
              "id": "outcome",
            },
          ],
          "_rev": "-1646711799",
          "_type": {
            "_id": "ValidatedUsernameNode",
            "collection": true,
            "name": "Platform Username",
          },
          "usernameAttribute": "userName",
          "validateInput": false,
        },
        "96d4d266-49f6-4868-b62c-9aa404404f9e": {
          "_id": "96d4d266-49f6-4868-b62c-9aa404404f9e",
          "_outcomes": [
            {
              "displayName": "true",
              "id": "true",
            },
          ],
          "_rev": "-460817170",
          "_type": {
            "_id": "ScriptedDecisionNode",
            "collection": true,
            "name": "Scripted Decision",
          },
          "inputs": [
            "*",
          ],
          "outcomes": [
            "true",
          ],
          "outputs": [
            "*",
          ],
          "script": "eea1e530-8cf4-4875-af75-11396e6a8859",
        },
        "aaa57ee1-7fbb-40e9-910d-2b7e775ac5b8": {
          "_id": "aaa57ee1-7fbb-40e9-910d-2b7e775ac5b8",
          "_outcomes": [
            {
              "displayName": "Outcome",
              "id": "outcome",
            },
          ],
          "_rev": "1223398335",
          "_type": {
            "_id": "ValidatedPasswordNode",
            "collection": true,
            "name": "Platform Password",
          },
          "passwordAttribute": "password",
          "validateInput": false,
        },
      },
      "nodes": {
        "00c79c9c-5be8-4daa-b26b-a0f289df32b0": {
          "_id": "00c79c9c-5be8-4daa-b26b-a0f289df32b0",
          "_outcomes": [
            {
              "displayName": "true",
              "id": "true",
            },
          ],
          "_rev": "783577416",
          "_type": {
            "_id": "PageNode",
            "collection": true,
            "name": "Page Node",
          },
          "nodes": [
            {
              "_id": "3769c1e9-0e40-4cf2-a129-bdc9b2606524",
              "displayName": "Username",
              "nodeType": "ValidatedUsernameNode",
            },
            {
              "_id": "aaa57ee1-7fbb-40e9-910d-2b7e775ac5b8",
              "displayName": "Password",
              "nodeType": "ValidatedPasswordNode",
            },
            {
              "_id": "96d4d266-49f6-4868-b62c-9aa404404f9e",
              "displayName": "Cookie Consent",
              "nodeType": "ScriptedDecisionNode",
            },
          ],
          "pageDescription": {},
          "pageHeader": {},
        },
        "6d2a5372-d0ed-4499-9753-f9ee6684f48b": {
          "_id": "6d2a5372-d0ed-4499-9753-f9ee6684f48b",
          "_outcomes": [
            {
              "displayName": "True",
              "id": "true",
            },
            {
              "displayName": "False",
              "id": "false",
            },
          ],
          "_rev": "527967553",
          "_type": {
            "_id": "DataStoreDecisionNode",
            "collection": true,
            "name": "Data Store Decision",
          },
        },
      },
      "saml2Entities": {},
      "scripts": {},
      "socialIdentityProviders": {},
      "themes": [],
      "tree": {
        "_id": "CookieConsent",
        "_rev": "-1669432777",
        "description": "Cookie consent JavaScript snippet.",
        "enabled": true,
        "entryNodeId": "00c79c9c-5be8-4daa-b26b-a0f289df32b0",
        "identityResource": "managed/alpha_user",
        "nodes": {
          "00c79c9c-5be8-4daa-b26b-a0f289df32b0": {
            "connections": {
              "true": "6d2a5372-d0ed-4499-9753-f9ee6684f48b",
            },
            "displayName": "Login Page",
            "nodeType": "PageNode",
            "x": 194,
            "y": 228.015625,
          },
          "6d2a5372-d0ed-4499-9753-f9ee6684f48b": {
            "connections": {
              "false": "e301438c-0bd0-429c-ab0c-66126501069a",
              "true": "70e691a5-1e33-4ac3-a356-e7b6d60d92e0",
            },
            "displayName": "Data Store Decision",
            "nodeType": "DataStoreDecisionNode",
            "x": 455,
            "y": 231.015625,
          },
        },
        "staticNodes": {
          "70e691a5-1e33-4ac3-a356-e7b6d60d92e0": {
            "x": 707,
            "y": 103,
          },
          "e301438c-0bd0-429c-ab0c-66126501069a": {
            "x": 728,
            "y": 405,
          },
          "startNode": {
            "x": 50,
            "y": 250,
          },
        },
        "uiConfig": {
          "categories": "["Authentication","Proof Of Concept","Prototype"]",
        },
      },
    },
    "Country": {
      "circlesOfTrust": {},
      "emailTemplates": {},
      "innerNodes": {},
      "nodes": {
        "a2e7b9c8-cb0d-467b-a9f1-213dcf309be7": {
          "_id": "a2e7b9c8-cb0d-467b-a9f1-213dcf309be7",
          "_outcomes": [
            {
              "displayName": "US",
              "id": "US",
            },
            {
              "displayName": "CA",
              "id": "CA",
            },
            {
              "displayName": "other",
              "id": "other",
            },
            {
              "displayName": "unknown",
              "id": "unknown",
            },
          ],
          "_rev": "-495582102",
          "_type": {
            "_id": "ScriptedDecisionNode",
            "collection": true,
            "name": "Scripted Decision",
          },
          "inputs": [
            "*",
          ],
          "outcomes": [
            "US",
            "CA",
            "other",
            "unknown",
          ],
          "outputs": [
            "*",
          ],
          "script": "87497360-d89c-412a-a99e-c8a9bec465cc",
        },
        "dcb6f570-f8c1-4f18-83d3-ec9137369276": {
          "_id": "dcb6f570-f8c1-4f18-83d3-ec9137369276",
          "_outcomes": [
            {
              "displayName": "true",
              "id": "true",
            },
          ],
          "_rev": "-1939781940",
          "_type": {
            "_id": "ScriptedDecisionNode",
            "collection": true,
            "name": "Scripted Decision",
          },
          "inputs": [
            "*",
          ],
          "outcomes": [
            "true",
          ],
          "outputs": [
            "*",
          ],
          "script": "8bccfdd0-5556-4562-a1ca-6d725a449556",
        },
      },
      "saml2Entities": {},
      "scripts": {},
      "socialIdentityProviders": {},
      "themes": [],
      "tree": {
        "_id": "Country",
        "_rev": "333541426",
        "description": "Demonstrate decisioning based on country by IP address resolution.",
        "enabled": true,
        "entryNodeId": "a2e7b9c8-cb0d-467b-a9f1-213dcf309be7",
        "identityResource": "managed/alpha_user",
        "nodes": {
          "a2e7b9c8-cb0d-467b-a9f1-213dcf309be7": {
            "connections": {
              "CA": "dcb6f570-f8c1-4f18-83d3-ec9137369276",
              "US": "dcb6f570-f8c1-4f18-83d3-ec9137369276",
              "other": "dcb6f570-f8c1-4f18-83d3-ec9137369276",
              "unknown": "dcb6f570-f8c1-4f18-83d3-ec9137369276",
            },
            "displayName": "determine country",
            "nodeType": "ScriptedDecisionNode",
            "x": 210,
            "y": 80,
          },
          "dcb6f570-f8c1-4f18-83d3-ec9137369276": {
            "connections": {
              "true": "e301438c-0bd0-429c-ab0c-66126501069a",
            },
            "displayName": "display country",
            "nodeType": "ScriptedDecisionNode",
            "x": 464,
            "y": 138.5,
          },
        },
        "staticNodes": {
          "70e691a5-1e33-4ac3-a356-e7b6d60d92e0": {
            "x": 73,
            "y": 286,
          },
          "e301438c-0bd0-429c-ab0c-66126501069a": {
            "x": 688,
            "y": 111,
          },
          "startNode": {
            "x": 70,
            "y": 111,
          },
        },
        "uiConfig": {
          "categories": "["Proof Of Concept","Adaptive","Prototype"]",
        },
      },
    },
    "Crypto": {
      "circlesOfTrust": {},
      "emailTemplates": {},
      "innerNodes": {
        "87af103d-bc6b-421f-aa46-86a81e9344dc": {
          "_id": "87af103d-bc6b-421f-aa46-86a81e9344dc",
          "_outcomes": [
            {
              "displayName": "true",
              "id": "true",
            },
          ],
          "_rev": "392809003",
          "_type": {
            "_id": "ScriptedDecisionNode",
            "collection": true,
            "name": "Scripted Decision",
          },
          "inputs": [
            "*",
          ],
          "outcomes": [
            "true",
          ],
          "outputs": [
            "*",
          ],
          "script": "d82a4ad6-cd8a-437b-af55-7373e50d685b",
        },
        "ded2548f-4443-42f0-8e69-9d7f60246bd3": {
          "_id": "ded2548f-4443-42f0-8e69-9d7f60246bd3",
          "_outcomes": [
            {
              "displayName": "Outcome",
              "id": "outcome",
            },
          ],
          "_rev": "-421335242",
          "_type": {
            "_id": "AttributeCollectorNode",
            "collection": true,
            "name": "Attribute Collector",
          },
          "attributesToCollect": [
            "frUnindexedString1",
          ],
          "identityAttribute": "userName",
          "required": false,
          "validateInputs": false,
        },
      },
      "nodes": {
        "3f2168b1-9421-4381-b54e-1a738426a8a1": {
          "_id": "3f2168b1-9421-4381-b54e-1a738426a8a1",
          "_outcomes": [
            {
              "displayName": "true",
              "id": "true",
            },
          ],
          "_rev": "1123306800",
          "_type": {
            "_id": "ScriptedDecisionNode",
            "collection": true,
            "name": "Scripted Decision",
          },
          "inputs": [
            "*",
          ],
          "outcomes": [
            "true",
          ],
          "outputs": [
            "*",
          ],
          "script": "3cb43516-ae69-433a-8787-501d45db14e9",
        },
        "bb33d92c-4c86-4dbf-be38-174b264fa10e": {
          "_id": "bb33d92c-4c86-4dbf-be38-174b264fa10e",
          "_outcomes": [
            {
              "displayName": "true",
              "id": "true",
            },
          ],
          "_rev": "1916620606",
          "_type": {
            "_id": "PageNode",
            "collection": true,
            "name": "Page Node",
          },
          "nodes": [
            {
              "_id": "ded2548f-4443-42f0-8e69-9d7f60246bd3",
              "displayName": "Username",
              "nodeType": "AttributeCollectorNode",
            },
            {
              "_id": "87af103d-bc6b-421f-aa46-86a81e9344dc",
              "displayName": "Password",
              "nodeType": "ScriptedDecisionNode",
            },
          ],
          "pageDescription": {},
          "pageHeader": {},
        },
      },
      "saml2Entities": {},
      "scripts": {},
      "socialIdentityProviders": {},
      "themes": [],
      "tree": {
        "_id": "Crypto",
        "_rev": "1961456286",
        "description": "Encrypt and decrypt a string.",
        "enabled": true,
        "entryNodeId": "bb33d92c-4c86-4dbf-be38-174b264fa10e",
        "identityResource": "managed/alpha_user",
        "nodes": {
          "3f2168b1-9421-4381-b54e-1a738426a8a1": {
            "connections": {
              "true": "e301438c-0bd0-429c-ab0c-66126501069a",
            },
            "displayName": "Debug",
            "nodeType": "ScriptedDecisionNode",
            "x": 191,
            "y": 196.015625,
          },
          "bb33d92c-4c86-4dbf-be38-174b264fa10e": {
            "connections": {
              "true": "3f2168b1-9421-4381-b54e-1a738426a8a1",
            },
            "displayName": "Page Node",
            "nodeType": "PageNode",
            "x": 185,
            "y": 16.015625,
          },
        },
        "staticNodes": {
          "70e691a5-1e33-4ac3-a356-e7b6d60d92e0": {
            "x": 503,
            "y": 50,
          },
          "e301438c-0bd0-429c-ab0c-66126501069a": {
            "x": 437,
            "y": 192,
          },
          "startNode": {
            "x": 47,
            "y": 61,
          },
        },
        "uiConfig": {
          "categories": "["Proof Of Concept"]",
        },
      },
    },
    "CustomHostedUILogin": {
      "circlesOfTrust": {},
      "emailTemplates": {},
      "innerNodes": {
        "2826a87a-0460-422b-8035-c912bb8ba9a9": {
          "_id": "2826a87a-0460-422b-8035-c912bb8ba9a9",
          "_outcomes": [
            {
              "displayName": "Outcome",
              "id": "outcome",
            },
          ],
          "_rev": "-108446260",
          "_type": {
            "_id": "ValidatedUsernameNode",
            "collection": true,
            "name": "Platform Username",
          },
          "usernameAttribute": "userName",
          "validateInput": false,
        },
        "9d9b2de5-e37f-42d3-b16d-3174848cef11": {
          "_id": "9d9b2de5-e37f-42d3-b16d-3174848cef11",
          "_outcomes": [
            {
              "displayName": "Outcome",
              "id": "outcome",
            },
          ],
          "_rev": "-766989946",
          "_type": {
            "_id": "ValidatedPasswordNode",
            "collection": true,
            "name": "Platform Password",
          },
          "passwordAttribute": "password",
          "validateInput": false,
        },
      },
      "nodes": {
        "94542fe9-08d4-4373-ac64-8ed7b43100c7": {
          "_id": "94542fe9-08d4-4373-ac64-8ed7b43100c7",
          "_outcomes": [
            {
              "displayName": "Outcome",
              "id": "outcome",
            },
          ],
          "_rev": "1707774488",
          "_type": {
            "_id": "PageNode",
            "collection": true,
            "name": "Page Node",
          },
          "nodes": [
            {
              "_id": "2826a87a-0460-422b-8035-c912bb8ba9a9",
              "displayName": "Username",
              "nodeType": "ValidatedUsernameNode",
            },
            {
              "_id": "9d9b2de5-e37f-42d3-b16d-3174848cef11",
              "displayName": "Password",
              "nodeType": "ValidatedPasswordNode",
            },
          ],
          "pageDescription": {},
          "pageHeader": {},
          "stage": "{"submitButtonText":{"en":"Login"}}",
        },
        "d79a43e0-1a2e-45fb-b8e6-84d8db2006f8": {
          "_id": "d79a43e0-1a2e-45fb-b8e6-84d8db2006f8",
          "_outcomes": [
            {
              "displayName": "True",
              "id": "TRUE",
            },
            {
              "displayName": "False",
              "id": "FALSE",
            },
            {
              "displayName": "Locked",
              "id": "LOCKED",
            },
            {
              "displayName": "Cancelled",
              "id": "CANCELLED",
            },
            {
              "displayName": "Expired",
              "id": "EXPIRED",
            },
          ],
          "_rev": "-441007589",
          "_type": {
            "_id": "IdentityStoreDecisionNode",
            "collection": true,
            "name": "Identity Store Decision",
          },
          "minimumPasswordLength": 8,
          "mixedCaseForPasswordChangeMessages": false,
          "useUniversalIdForUsername": true,
        },
      },
      "saml2Entities": {},
      "scripts": {},
      "socialIdentityProviders": {},
      "themes": [],
      "tree": {
        "_id": "CustomHostedUILogin",
        "_rev": "-1625331798",
        "description": "Self-hosted Login UI",
        "enabled": true,
        "entryNodeId": "94542fe9-08d4-4373-ac64-8ed7b43100c7",
        "identityResource": "managed/alpha_user",
        "nodes": {
          "94542fe9-08d4-4373-ac64-8ed7b43100c7": {
            "connections": {
              "outcome": "d79a43e0-1a2e-45fb-b8e6-84d8db2006f8",
            },
            "displayName": "Login Page",
            "nodeType": "PageNode",
            "x": 222,
            "y": 186.015625,
          },
          "d79a43e0-1a2e-45fb-b8e6-84d8db2006f8": {
            "connections": {
              "CANCELLED": "70e691a5-1e33-4ac3-a356-e7b6d60d92e0",
              "EXPIRED": "70e691a5-1e33-4ac3-a356-e7b6d60d92e0",
              "FALSE": "e301438c-0bd0-429c-ab0c-66126501069a",
              "LOCKED": "e301438c-0bd0-429c-ab0c-66126501069a",
              "TRUE": "70e691a5-1e33-4ac3-a356-e7b6d60d92e0",
            },
            "displayName": "Identity Store Decision",
            "nodeType": "IdentityStoreDecisionNode",
            "x": 456,
            "y": 174.015625,
          },
        },
        "staticNodes": {
          "70e691a5-1e33-4ac3-a356-e7b6d60d92e0": {
            "x": 723,
            "y": 94,
          },
          "e301438c-0bd0-429c-ab0c-66126501069a": {
            "x": 731,
            "y": 378,
          },
          "startNode": {
            "x": 50,
            "y": 250,
          },
        },
        "uiConfig": {
          "categories": "["Prototype"]",
        },
      },
    },
    "CustomerIdentityUpdateUsername": {
      "circlesOfTrust": {},
      "emailTemplates": {},
      "innerNodes": {
        "5996394a-23aa-4195-86c2-76506eec6540": {
          "_id": "5996394a-23aa-4195-86c2-76506eec6540",
          "_outcomes": [
            {
              "displayName": "Outcome",
              "id": "outcome",
            },
          ],
          "_rev": "728213503",
          "_type": {
            "_id": "ValidatedUsernameNode",
            "collection": true,
            "name": "Platform Username",
          },
          "usernameAttribute": "userName",
          "validateInput": false,
        },
        "820b6067-857a-4f80-a5e3-7f2093e6ce1b": {
          "_id": "820b6067-857a-4f80-a5e3-7f2093e6ce1b",
          "_outcomes": [
            {
              "displayName": "Outcome",
              "id": "outcome",
            },
          ],
          "_rev": "1660927385",
          "_type": {
            "_id": "ValidatedPasswordNode",
            "collection": true,
            "name": "Platform Password",
          },
          "passwordAttribute": "password",
          "validateInput": false,
        },
      },
      "nodes": {
        "0af8179b-1148-4ac0-a282-2ae253075c51": {
          "_id": "0af8179b-1148-4ac0-a282-2ae253075c51",
          "_outcomes": [
            {
              "displayName": "true",
              "id": "true",
            },
          ],
          "_rev": "316103256",
          "_type": {
            "_id": "ScriptedDecisionNode",
            "collection": true,
            "name": "Scripted Decision",
          },
          "inputs": [
            "*",
          ],
          "outcomes": [
            "true",
          ],
          "outputs": [
            "*",
          ],
          "script": "c253a7ac-ebc9-4268-9e62-89f38f98e4ab",
        },
        "0c100ef8-20ce-4afa-9ef4-adda4c3c8e57": {
          "_id": "0c100ef8-20ce-4afa-9ef4-adda4c3c8e57",
          "_outcomes": [
            {
              "displayName": "True",
              "id": "true",
            },
            {
              "displayName": "False",
              "id": "false",
            },
          ],
          "_rev": "-1393760220",
          "_type": {
            "_id": "DataStoreDecisionNode",
            "collection": true,
            "name": "Data Store Decision",
          },
        },
        "829232ed-06b0-4ce2-8dcf-667df6b0dad4": {
          "_id": "829232ed-06b0-4ce2-8dcf-667df6b0dad4",
          "_outcomes": [
            {
              "displayName": "Outcome",
              "id": "outcome",
            },
          ],
          "_rev": "-1312708319",
          "_type": {
            "_id": "SessionDataNode",
            "collection": true,
            "name": "Get Session Data",
          },
          "sessionDataKey": "UserToken",
          "sharedStateKey": "userName",
        },
        "8a8cf1c1-b426-4ce0-84e0-659693246717": {
          "_id": "8a8cf1c1-b426-4ce0-84e0-659693246717",
          "_outcomes": [
            {
              "displayName": "Outcome",
              "id": "outcome",
            },
          ],
          "_rev": "882031046",
          "_type": {
            "_id": "PageNode",
            "collection": true,
            "name": "Page Node",
          },
          "nodes": [
            {
              "_id": "5996394a-23aa-4195-86c2-76506eec6540",
              "displayName": "Username",
              "nodeType": "ValidatedUsernameNode",
            },
          ],
          "pageDescription": {
            "en": "Enter new UserName",
          },
          "pageHeader": {
            "en": "Update Username",
          },
        },
        "a79cc2e9-578a-4b08-bd86-0f0887084011": {
          "_id": "a79cc2e9-578a-4b08-bd86-0f0887084011",
          "_outcomes": [
            {
              "displayName": "Patched",
              "id": "PATCHED",
            },
            {
              "displayName": "Failed",
              "id": "FAILURE",
            },
          ],
          "_rev": "-1366727336",
          "_type": {
            "_id": "PatchObjectNode",
            "collection": true,
            "name": "Patch Object",
          },
          "identityAttribute": "_id",
          "identityResource": "managed/alpha_user",
          "ignoredFields": [
            "password",
          ],
          "patchAsObject": false,
        },
        "e9674e62-ebba-4a1d-92f2-9ceca57bf230": {
          "_id": "e9674e62-ebba-4a1d-92f2-9ceca57bf230",
          "_outcomes": [
            {
              "displayName": "True",
              "id": "true",
            },
            {
              "displayName": "False",
              "id": "false",
            },
          ],
          "_rev": "-1470851589",
          "_type": {
            "_id": "IdentifyExistingUserNode",
            "collection": true,
            "name": "Identify Existing User",
          },
          "identifier": "userName",
          "identityAttribute": "userName",
        },
        "eaa7803d-1e71-4946-966b-ff890d164c6d": {
          "_id": "eaa7803d-1e71-4946-966b-ff890d164c6d",
          "_outcomes": [
            {
              "displayName": "Outcome",
              "id": "outcome",
            },
          ],
          "_rev": "1266709748",
          "_type": {
            "_id": "PageNode",
            "collection": true,
            "name": "Page Node",
          },
          "nodes": [
            {
              "_id": "820b6067-857a-4f80-a5e3-7f2093e6ce1b",
              "displayName": "Password",
              "nodeType": "ValidatedPasswordNode",
            },
          ],
          "pageDescription": {
            "en_us": "Please provide your password to change your username.",
          },
          "pageHeader": {
            "en": "Validate Access",
          },
        },
      },
      "saml2Entities": {},
      "scripts": {},
      "socialIdentityProviders": {},
      "themes": [],
      "tree": {
        "_id": "CustomerIdentityUpdateUsername",
        "_rev": "1263530374",
        "enabled": true,
        "entryNodeId": "829232ed-06b0-4ce2-8dcf-667df6b0dad4",
        "identityResource": "managed/alpha_user",
        "nodes": {
          "0af8179b-1148-4ac0-a282-2ae253075c51": {
            "connections": {
              "true": "eaa7803d-1e71-4946-966b-ff890d164c6d",
            },
            "displayName": "Copy _id",
            "nodeType": "ScriptedDecisionNode",
            "x": 577,
            "y": 146,
          },
          "0c100ef8-20ce-4afa-9ef4-adda4c3c8e57": {
            "connections": {
              "false": "e301438c-0bd0-429c-ab0c-66126501069a",
              "true": "8a8cf1c1-b426-4ce0-84e0-659693246717",
            },
            "displayName": "Data Store Decision",
            "nodeType": "DataStoreDecisionNode",
            "x": 1015,
            "y": 122,
          },
          "829232ed-06b0-4ce2-8dcf-667df6b0dad4": {
            "connections": {
              "outcome": "e9674e62-ebba-4a1d-92f2-9ceca57bf230",
            },
            "displayName": "Get Session Data",
            "nodeType": "SessionDataNode",
            "x": 146,
            "y": 217,
          },
          "8a8cf1c1-b426-4ce0-84e0-659693246717": {
            "connections": {
              "outcome": "a79cc2e9-578a-4b08-bd86-0f0887084011",
            },
            "displayName": "Page Node",
            "nodeType": "PageNode",
            "x": 1255,
            "y": 64,
          },
          "a79cc2e9-578a-4b08-bd86-0f0887084011": {
            "connections": {
              "FAILURE": "e301438c-0bd0-429c-ab0c-66126501069a",
              "PATCHED": "70e691a5-1e33-4ac3-a356-e7b6d60d92e0",
            },
            "displayName": "Change Username",
            "nodeType": "PatchObjectNode",
            "x": 1470,
            "y": 66,
          },
          "e9674e62-ebba-4a1d-92f2-9ceca57bf230": {
            "connections": {
              "false": "e301438c-0bd0-429c-ab0c-66126501069a",
              "true": "0af8179b-1148-4ac0-a282-2ae253075c51",
            },
            "displayName": "Identify Existing User",
            "nodeType": "IdentifyExistingUserNode",
            "x": 347,
            "y": 191,
          },
          "eaa7803d-1e71-4946-966b-ff890d164c6d": {
            "connections": {
              "outcome": "0c100ef8-20ce-4afa-9ef4-adda4c3c8e57",
            },
            "displayName": "Page Node",
            "nodeType": "PageNode",
            "x": 784,
            "y": 119,
          },
        },
        "staticNodes": {
          "70e691a5-1e33-4ac3-a356-e7b6d60d92e0": {
            "x": 1681,
            "y": 91,
          },
          "e301438c-0bd0-429c-ab0c-66126501069a": {
            "x": 1684,
            "y": 242,
          },
          "startNode": {
            "x": 35,
            "y": 210,
          },
        },
        "uiConfig": {
          "categories": "["Proof Of Concept","Self-Service"]",
        },
      },
    },
    "DefaultSuccessURL": {
      "circlesOfTrust": {},
      "emailTemplates": {},
      "innerNodes": {},
      "nodes": {
        "af18043a-38ea-49e0-83f2-1abe0bb7ba8e": {
          "_id": "af18043a-38ea-49e0-83f2-1abe0bb7ba8e",
          "_outcomes": [
            {
              "displayName": "Outcome",
              "id": "outcome",
            },
          ],
          "_rev": "392397262",
          "_type": {
            "_id": "SetSuccessUrlNode",
            "collection": true,
            "name": "Success URL",
          },
          "successUrl": "/am/XUI/?realm=/alpha&authIndexType=service&authIndexValue=SessionInfo&ForceAuth=true#/",
        },
        "c5870cb0-e3da-44c2-a28f-ee6cdca40825": {
          "_id": "c5870cb0-e3da-44c2-a28f-ee6cdca40825",
          "_outcomes": [
            {
              "displayName": "true",
              "id": "true",
            },
            {
              "displayName": "false",
              "id": "false",
            },
          ],
          "_rev": "2100923295",
          "_type": {
            "_id": "ScriptedDecisionNode",
            "collection": true,
            "name": "Scripted Decision",
          },
          "inputs": [
            "*",
          ],
          "outcomes": [
            "true",
            "false",
          ],
          "outputs": [
            "*",
          ],
          "script": "2a076e9e-75a9-46b5-b971-10ffafbdf652",
        },
      },
      "saml2Entities": {},
      "scripts": {},
      "socialIdentityProviders": {},
      "themes": [],
      "tree": {
        "_id": "DefaultSuccessURL",
        "_rev": "-1029514878",
        "description": "Set a default success URL if no "goto" query param is specified.",
        "enabled": true,
        "entryNodeId": "c5870cb0-e3da-44c2-a28f-ee6cdca40825",
        "identityResource": "managed/alpha_user",
        "nodes": {
          "af18043a-38ea-49e0-83f2-1abe0bb7ba8e": {
            "connections": {
              "outcome": "70e691a5-1e33-4ac3-a356-e7b6d60d92e0",
            },
            "displayName": "Success URL",
            "nodeType": "SetSuccessUrlNode",
            "x": 382,
            "y": 331.015625,
          },
          "c5870cb0-e3da-44c2-a28f-ee6cdca40825": {
            "connections": {
              "false": "af18043a-38ea-49e0-83f2-1abe0bb7ba8e",
              "true": "70e691a5-1e33-4ac3-a356-e7b6d60d92e0",
            },
            "displayName": "Goto Specified?",
            "nodeType": "ScriptedDecisionNode",
            "x": 162,
            "y": 233.015625,
          },
        },
        "staticNodes": {
          "70e691a5-1e33-4ac3-a356-e7b6d60d92e0": {
            "x": 614,
            "y": 259,
          },
          "e301438c-0bd0-429c-ab0c-66126501069a": {
            "x": 52,
            "y": 126,
          },
          "startNode": {
            "x": 50,
            "y": 250,
          },
        },
        "uiConfig": {
          "categories": "["Proof Of Concept","Prototype","Helper"]",
        },
      },
    },
    "DelegatedProfileUpdate": {
      "circlesOfTrust": {},
      "emailTemplates": {},
      "innerNodes": {
        "3605a0bc-67be-424d-9a75-e376fd6150b5": {
          "_id": "3605a0bc-67be-424d-9a75-e376fd6150b5",
          "_outcomes": [
            {
              "displayName": "Outcome",
              "id": "outcome",
            },
          ],
          "_rev": "973125939",
          "_type": {
            "_id": "AttributeCollectorNode",
            "collection": true,
            "name": "Attribute Collector",
          },
          "attributesToCollect": [
            "userName",
            "mail",
          ],
          "identityAttribute": "userName",
          "required": false,
          "validateInputs": false,
        },
        "4fd7a098-b3c9-40cc-9617-9b0cc905a584": {
          "_id": "4fd7a098-b3c9-40cc-9617-9b0cc905a584",
          "_outcomes": [
            {
              "displayName": "True",
              "id": "true",
            },
            {
              "displayName": "False",
              "id": "false",
            },
          ],
          "_rev": "2023420832",
          "_type": {
            "_id": "MessageNode",
            "collection": true,
            "name": "Message Node",
          },
          "message": {
            "en": "Is this the profile you want to update?",
          },
          "messageNo": {
            "en": "Find another user",
          },
          "messageYes": {
            "en": "Update this profile",
          },
        },
        "9d29cb8a-0ac3-4133-bc23-090b38c63073": {
          "_id": "9d29cb8a-0ac3-4133-bc23-090b38c63073",
          "_outcomes": [
            {
              "displayName": "True",
              "id": "true",
            },
            {
              "displayName": "False",
              "id": "false",
            },
          ],
          "_rev": "629133669",
          "_type": {
            "_id": "MessageNode",
            "collection": true,
            "name": "Message Node",
          },
          "message": {
            "en": "Update another user?",
          },
          "messageNo": {
            "en": "I'm done",
          },
          "messageYes": {
            "en": "Find another user",
          },
        },
        "b51eea80-38fc-45a5-a99c-267b1a00c0a3": {
          "_id": "b51eea80-38fc-45a5-a99c-267b1a00c0a3",
          "_outcomes": [
            {
              "displayName": "True",
              "id": "true",
            },
            {
              "displayName": "False",
              "id": "false",
            },
          ],
          "_rev": "-361038509",
          "_type": {
            "_id": "MessageNode",
            "collection": true,
            "name": "Message Node",
          },
          "message": {
            "en": "Unable to find a user matching the search criteria!",
          },
          "messageNo": {
            "en": "Abort",
          },
          "messageYes": {
            "en": "Try again",
          },
        },
        "b9023614-b2c0-4401-83e2-ea79a08b54a8": {
          "_id": "b9023614-b2c0-4401-83e2-ea79a08b54a8",
          "_outcomes": [
            {
              "displayName": "True",
              "id": "true",
            },
            {
              "displayName": "False",
              "id": "false",
            },
          ],
          "_rev": "-279009274",
          "_type": {
            "_id": "MessageNode",
            "collection": true,
            "name": "Message Node",
          },
          "message": {},
          "messageNo": {},
          "messageYes": {},
        },
        "c5cd1b53-5214-4bcc-8d21-f54365db7f18": {
          "_id": "c5cd1b53-5214-4bcc-8d21-f54365db7f18",
          "_outcomes": [
            {
              "displayName": "Outcome",
              "id": "outcome",
            },
          ],
          "_rev": "-1685076157",
          "_type": {
            "_id": "AttributeCollectorNode",
            "collection": true,
            "name": "Attribute Collector",
          },
          "attributesToCollect": [
            "givenName",
            "sn",
            "mail",
            "telephoneNumber",
          ],
          "identityAttribute": "userName",
          "required": false,
          "validateInputs": true,
        },
        "f5b205ba-52da-41c0-a089-aaf3814a5ac8": {
          "_id": "f5b205ba-52da-41c0-a089-aaf3814a5ac8",
          "_outcomes": [
            {
              "displayName": "True",
              "id": "true",
            },
            {
              "displayName": "False",
              "id": "false",
            },
          ],
          "_rev": "-437365767",
          "_type": {
            "_id": "MessageNode",
            "collection": true,
            "name": "Message Node",
          },
          "message": {
            "en": "The update of the user profile failed.",
          },
          "messageNo": {
            "en": "Abort",
          },
          "messageYes": {
            "en": "Start over",
          },
        },
      },
      "nodes": {
        "0b941cdc-400d-47d3-ae37-d3542168f44f": {
          "_id": "0b941cdc-400d-47d3-ae37-d3542168f44f",
          "_outcomes": [
            {
              "displayName": "true",
              "id": "true",
            },
          ],
          "_rev": "-892600617",
          "_type": {
            "_id": "ScriptedDecisionNode",
            "collection": true,
            "name": "Scripted Decision",
          },
          "inputs": [
            "*",
          ],
          "outcomes": [
            "true",
          ],
          "outputs": [
            "*",
          ],
          "script": "5b3b2c47-0248-46f4-8a1c-8a495d249037",
        },
        "147dd08a-fbf0-4cec-89f4-b92e06a879e4": {
          "_id": "147dd08a-fbf0-4cec-89f4-b92e06a879e4",
          "_outcomes": [
            {
              "displayName": "True",
              "id": "true",
            },
            {
              "displayName": "False",
              "id": "false",
            },
          ],
          "_rev": "2134682832",
          "_type": {
            "_id": "PageNode",
            "collection": true,
            "name": "Page Node",
          },
          "nodes": [
            {
              "_id": "f5b205ba-52da-41c0-a089-aaf3814a5ac8",
              "displayName": "User Choice",
              "nodeType": "MessageNode",
            },
          ],
          "pageDescription": {},
          "pageHeader": {},
        },
        "243c8ecb-26a5-4a5e-ab05-596b8c0fe26a": {
          "_id": "243c8ecb-26a5-4a5e-ab05-596b8c0fe26a",
          "_outcomes": [
            {
              "displayName": "True",
              "id": "true",
            },
            {
              "displayName": "False",
              "id": "false",
            },
          ],
          "_rev": "103856430",
          "_type": {
            "_id": "PageNode",
            "collection": true,
            "name": "Page Node",
          },
          "nodes": [
            {
              "_id": "c5cd1b53-5214-4bcc-8d21-f54365db7f18",
              "displayName": "Attributes",
              "nodeType": "AttributeCollectorNode",
            },
            {
              "_id": "4fd7a098-b3c9-40cc-9617-9b0cc905a584",
              "displayName": "User Choice",
              "nodeType": "MessageNode",
            },
          ],
          "pageDescription": {},
          "pageHeader": {
            "en": "Update Profile",
          },
        },
        "264403c8-e000-448a-ad2c-fba0ebb48bd1": {
          "_id": "264403c8-e000-448a-ad2c-fba0ebb48bd1",
          "_outcomes": [
            {
              "displayName": "true",
              "id": "true",
            },
          ],
          "_rev": "460829733",
          "_type": {
            "_id": "ScriptedDecisionNode",
            "collection": true,
            "name": "Scripted Decision",
          },
          "inputs": [
            "*",
          ],
          "outcomes": [
            "true",
          ],
          "outputs": [
            "*",
          ],
          "script": "d6469639-249f-4df1-9e03-335cd3e37b3d",
        },
        "589bdad6-4de4-4dc3-b7d8-10fe18102b1c": {
          "_id": "589bdad6-4de4-4dc3-b7d8-10fe18102b1c",
          "_outcomes": [
            {
              "displayName": "true",
              "id": "true",
            },
          ],
          "_rev": "165061885",
          "_type": {
            "_id": "ScriptedDecisionNode",
            "collection": true,
            "name": "Scripted Decision",
          },
          "inputs": [
            "*",
          ],
          "outcomes": [
            "true",
          ],
          "outputs": [
            "*",
          ],
          "script": "5b3b2c47-0248-46f4-8a1c-8a495d249037",
        },
        "7cb0e0f7-9435-4ade-a755-dd9a1fa4f0a8": {
          "_id": "7cb0e0f7-9435-4ade-a755-dd9a1fa4f0a8",
          "_outcomes": [
            {
              "displayName": "True",
              "id": "true",
            },
            {
              "displayName": "False",
              "id": "false",
            },
          ],
          "_rev": "1215017393",
          "_type": {
            "_id": "RequiredAttributesDecisionNode",
            "collection": true,
            "name": "Required Attributes Present",
          },
          "identityResource": "managed/alpha_user",
        },
        "85efe712-5367-437b-a6bc-1667fcc0b395": {
          "_id": "85efe712-5367-437b-a6bc-1667fcc0b395",
          "_outcomes": [
            {
              "displayName": "True",
              "id": "true",
            },
            {
              "displayName": "False",
              "id": "false",
            },
          ],
          "_rev": "1554417098",
          "_type": {
            "_id": "IdentifyExistingUserNode",
            "collection": true,
            "name": "Identify Existing User",
          },
          "identifier": "userName",
          "identityAttribute": "mail",
        },
        "87263af7-f53e-4c93-b200-f4186b6b45f5": {
          "_id": "87263af7-f53e-4c93-b200-f4186b6b45f5",
          "_outcomes": [
            {
              "displayName": "True",
              "id": "true",
            },
            {
              "displayName": "False",
              "id": "false",
            },
          ],
          "_rev": "566417755",
          "_type": {
            "_id": "PageNode",
            "collection": true,
            "name": "Page Node",
          },
          "nodes": [
            {
              "_id": "9d29cb8a-0ac3-4133-bc23-090b38c63073",
              "displayName": "User Choice",
              "nodeType": "MessageNode",
            },
          ],
          "pageDescription": {},
          "pageHeader": {
            "en": "Successfully Updated Profile",
          },
        },
        "8787902b-82ec-4295-aedb-6816f08f4464": {
          "_id": "8787902b-82ec-4295-aedb-6816f08f4464",
          "_outcomes": [
            {
              "displayName": "Email Sent",
              "id": "EMAIL_SENT",
            },
            {
              "displayName": "Email Not Sent",
              "id": "EMAIL_NOT_SENT",
            },
          ],
          "_rev": "-483015945",
          "_type": {
            "_id": "EmailTemplateNode",
            "collection": true,
            "name": "Email Template Node",
          },
          "emailAttribute": "mail",
          "emailTemplateName": "profileUpdateNotification",
          "identityAttribute": "userName",
        },
        "9c04cf8f-d7e3-4a71-b81f-c8d150dc4280": {
          "_id": "9c04cf8f-d7e3-4a71-b81f-c8d150dc4280",
          "_outcomes": [
            {
              "displayName": "True",
              "id": "true",
            },
            {
              "displayName": "False",
              "id": "false",
            },
          ],
          "_rev": "-1903071216",
          "_type": {
            "_id": "PageNode",
            "collection": true,
            "name": "Page Node",
          },
          "nodes": [
            {
              "_id": "b51eea80-38fc-45a5-a99c-267b1a00c0a3",
              "displayName": "User Choice",
              "nodeType": "MessageNode",
            },
          ],
          "pageDescription": {},
          "pageHeader": {
            "en": "User not found!",
          },
        },
        "9fc7011e-a894-4385-bc82-375c601756c8": {
          "_id": "9fc7011e-a894-4385-bc82-375c601756c8",
          "_outcomes": [
            {
              "displayName": "Outcome",
              "id": "outcome",
            },
          ],
          "_rev": "-1546111881",
          "_type": {
            "_id": "PageNode",
            "collection": true,
            "name": "Page Node",
          },
          "nodes": [
            {
              "_id": "3605a0bc-67be-424d-9a75-e376fd6150b5",
              "displayName": "Search Fields",
              "nodeType": "AttributeCollectorNode",
            },
          ],
          "pageDescription": {
            "en": "Find the user whose profile you'd like to update by username or email address:",
          },
          "pageHeader": {
            "en": "Find User",
          },
        },
        "b5e0e8b9-79bd-4c2b-9f93-971d9ca0f203": {
          "_id": "b5e0e8b9-79bd-4c2b-9f93-971d9ca0f203",
          "_outcomes": [
            {
              "displayName": "hasSession",
              "id": "hasSession",
            },
            {
              "displayName": "noSession",
              "id": "noSession",
            },
          ],
          "_rev": "-306331172",
          "_type": {
            "_id": "ScriptedDecisionNode",
            "collection": true,
            "name": "Scripted Decision",
          },
          "inputs": [
            "*",
          ],
          "outcomes": [
            "hasSession",
            "noSession",
          ],
          "outputs": [
            "*",
          ],
          "script": "0ab1dd57-eafd-4063-8e60-65bfac8108b7",
        },
        "bcbffe7a-770f-40ac-8909-64999fdbe71c": {
          "_id": "bcbffe7a-770f-40ac-8909-64999fdbe71c",
          "_outcomes": [
            {
              "displayName": "changed",
              "id": "changed",
            },
            {
              "displayName": "unchanged",
              "id": "unchanged",
            },
          ],
          "_rev": "331138140",
          "_type": {
            "_id": "ScriptedDecisionNode",
            "collection": true,
            "name": "Scripted Decision",
          },
          "inputs": [
            "*",
          ],
          "outcomes": [
            "changed",
            "unchanged",
          ],
          "outputs": [
            "*",
          ],
          "script": "2ada53cd-5d37-4592-9c7f-5711271229c2",
        },
        "c445a3a1-d32a-4294-ad18-83301ac75806": {
          "_id": "c445a3a1-d32a-4294-ad18-83301ac75806",
          "_outcomes": [
            {
              "displayName": "Patched",
              "id": "PATCHED",
            },
            {
              "displayName": "Failed",
              "id": "FAILURE",
            },
          ],
          "_rev": "-1948019476",
          "_type": {
            "_id": "PatchObjectNode",
            "collection": true,
            "name": "Patch Object",
          },
          "identityAttribute": "userName",
          "identityResource": "managed/alpha_user",
          "ignoredFields": [
            "old_telephoneNumber",
            "old_givenName",
            "old_sn",
          ],
          "patchAsObject": true,
        },
        "cdd92a6c-9ddc-422d-b906-723ed96178cd": {
          "_id": "cdd92a6c-9ddc-422d-b906-723ed96178cd",
          "_outcomes": [
            {
              "displayName": "changed",
              "id": "changed",
            },
            {
              "displayName": "unchanged",
              "id": "unchanged",
            },
          ],
          "_rev": "-1551391781",
          "_type": {
            "_id": "ScriptedDecisionNode",
            "collection": true,
            "name": "Scripted Decision",
          },
          "inputs": [
            "*",
          ],
          "outcomes": [
            "changed",
            "unchanged",
          ],
          "outputs": [
            "*",
          ],
          "script": "d3102a25-056d-4e34-973b-577ced8cc9b7",
        },
        "d53a4337-4a28-4008-99e6-34cc38d4b3ec": {
          "_id": "d53a4337-4a28-4008-99e6-34cc38d4b3ec",
          "_outcomes": [
            {
              "displayName": "True",
              "id": "true",
            },
            {
              "displayName": "False",
              "id": "false",
            },
          ],
          "_rev": "-726469791",
          "_type": {
            "_id": "PageNode",
            "collection": true,
            "name": "Page Node",
          },
          "nodes": [
            {
              "_id": "b9023614-b2c0-4401-83e2-ea79a08b54a8",
              "displayName": "User Choice",
              "nodeType": "MessageNode",
            },
          ],
          "pageDescription": {},
          "pageHeader": {},
        },
        "dc4191c3-fd4f-4c50-a996-bd48570741a7": {
          "_id": "dc4191c3-fd4f-4c50-a996-bd48570741a7",
          "_outcomes": [
            {
              "displayName": "true",
              "id": "true",
            },
          ],
          "_rev": "1969447863",
          "_type": {
            "_id": "ScriptedDecisionNode",
            "collection": true,
            "name": "Scripted Decision",
          },
          "inputs": [
            "*",
          ],
          "outcomes": [
            "true",
          ],
          "outputs": [
            "*",
          ],
          "script": "12bdbce4-268b-4b95-bfdf-640de9bddead",
        },
        "e409a8d9-4fd1-4831-8bee-da69082f5f3c": {
          "_id": "e409a8d9-4fd1-4831-8bee-da69082f5f3c",
          "_outcomes": [
            {
              "displayName": "true",
              "id": "true",
            },
          ],
          "_rev": "-550889702",
          "_type": {
            "_id": "ScriptedDecisionNode",
            "collection": true,
            "name": "Scripted Decision",
          },
          "inputs": [
            "*",
          ],
          "outcomes": [
            "true",
          ],
          "outputs": [
            "*",
          ],
          "script": "5b3b2c47-0248-46f4-8a1c-8a495d249037",
        },
        "f2dd266d-1d38-4d5a-9598-302b2811e880": {
          "_id": "f2dd266d-1d38-4d5a-9598-302b2811e880",
          "_outcomes": [
            {
              "displayName": "True",
              "id": "true",
            },
            {
              "displayName": "False",
              "id": "false",
            },
          ],
          "_rev": "945282191",
          "_type": {
            "_id": "IdentifyExistingUserNode",
            "collection": true,
            "name": "Identify Existing User",
          },
          "identifier": "userName",
          "identityAttribute": "userName",
        },
        "f6ee9342-45fa-4a4d-ae62-7547d41b3a42": {
          "_id": "f6ee9342-45fa-4a4d-ae62-7547d41b3a42",
          "_outcomes": [
            {
              "displayName": "True",
              "id": "true",
            },
            {
              "displayName": "False",
              "id": "false",
            },
          ],
          "_rev": "1748497951",
          "_type": {
            "_id": "InnerTreeEvaluatorNode",
            "collection": true,
            "name": "Inner Tree Evaluator",
          },
          "tree": "Login",
        },
        "f7ba1d99-fbaa-4be3-823d-8f9aabae9005": {
          "_id": "f7ba1d99-fbaa-4be3-823d-8f9aabae9005",
          "_outcomes": [
            {
              "displayName": "Email Sent",
              "id": "EMAIL_SENT",
            },
            {
              "displayName": "Email Not Sent",
              "id": "EMAIL_NOT_SENT",
            },
          ],
          "_rev": "1296617511",
          "_type": {
            "_id": "EmailTemplateNode",
            "collection": true,
            "name": "Email Template Node",
          },
          "emailAttribute": "frUnindexedString5",
          "emailTemplateName": "profileUpdateNotificationEmailChange",
          "identityAttribute": "userName",
        },
      },
      "saml2Entities": {},
      "scripts": {},
      "socialIdentityProviders": {},
      "themes": [],
      "tree": {
        "_id": "DelegatedProfileUpdate",
        "_rev": "-735276374",
        "description": "Allow help desk staff to update user profiles.",
        "enabled": true,
        "entryNodeId": "b5e0e8b9-79bd-4c2b-9f93-971d9ca0f203",
        "identityResource": "managed/alpha_user",
        "nodes": {
          "0b941cdc-400d-47d3-ae37-d3542168f44f": {
            "connections": {
              "true": "9fc7011e-a894-4385-bc82-375c601756c8",
            },
            "displayName": "Switch To User Context",
            "nodeType": "ScriptedDecisionNode",
            "x": 384,
            "y": 242.76666259765625,
          },
          "147dd08a-fbf0-4cec-89f4-b92e06a879e4": {
            "connections": {
              "false": "589bdad6-4de4-4dc3-b7d8-10fe18102b1c",
              "true": "e409a8d9-4fd1-4831-8bee-da69082f5f3c",
            },
            "displayName": "Error Dialog",
            "nodeType": "PageNode",
            "x": 2095,
            "y": 460.76666259765625,
          },
          "243c8ecb-26a5-4a5e-ab05-596b8c0fe26a": {
            "connections": {
              "false": "e409a8d9-4fd1-4831-8bee-da69082f5f3c",
              "true": "7cb0e0f7-9435-4ade-a755-dd9a1fa4f0a8",
            },
            "displayName": "Update Profile Page",
            "nodeType": "PageNode",
            "x": 1252,
            "y": 177.76666259765625,
          },
          "264403c8-e000-448a-ad2c-fba0ebb48bd1": {
            "connections": {
              "true": "243c8ecb-26a5-4a5e-ab05-596b8c0fe26a",
            },
            "displayName": "Get email",
            "nodeType": "ScriptedDecisionNode",
            "x": 1062,
            "y": 270.76666259765625,
          },
          "589bdad6-4de4-4dc3-b7d8-10fe18102b1c": {
            "connections": {
              "true": "70e691a5-1e33-4ac3-a356-e7b6d60d92e0",
            },
            "displayName": "Restore Admin Context",
            "nodeType": "ScriptedDecisionNode",
            "x": 3247,
            "y": 295.76666259765625,
          },
          "7cb0e0f7-9435-4ade-a755-dd9a1fa4f0a8": {
            "connections": {
              "false": "d53a4337-4a28-4008-99e6-34cc38d4b3ec",
              "true": "dc4191c3-fd4f-4c50-a996-bd48570741a7",
            },
            "displayName": "Required Attributes?",
            "nodeType": "RequiredAttributesDecisionNode",
            "x": 1474,
            "y": 270.76666259765625,
          },
          "85efe712-5367-437b-a6bc-1667fcc0b395": {
            "connections": {
              "false": "9c04cf8f-d7e3-4a71-b81f-c8d150dc4280",
              "true": "264403c8-e000-448a-ad2c-fba0ebb48bd1",
            },
            "displayName": "Find by Email",
            "nodeType": "IdentifyExistingUserNode",
            "x": 878,
            "y": 346.76666259765625,
          },
          "87263af7-f53e-4c93-b200-f4186b6b45f5": {
            "connections": {
              "false": "589bdad6-4de4-4dc3-b7d8-10fe18102b1c",
              "true": "e409a8d9-4fd1-4831-8bee-da69082f5f3c",
            },
            "displayName": "Success Dialog",
            "nodeType": "PageNode",
            "x": 3010,
            "y": 78.76666259765625,
          },
          "8787902b-82ec-4295-aedb-6816f08f4464": {
            "connections": {
              "EMAIL_NOT_SENT": "87263af7-f53e-4c93-b200-f4186b6b45f5",
              "EMAIL_SENT": "87263af7-f53e-4c93-b200-f4186b6b45f5",
            },
            "displayName": "Notify profile updated",
            "nodeType": "EmailTemplateNode",
            "x": 2777,
            "y": 285.76666259765625,
          },
          "9c04cf8f-d7e3-4a71-b81f-c8d150dc4280": {
            "connections": {
              "false": "589bdad6-4de4-4dc3-b7d8-10fe18102b1c",
              "true": "e409a8d9-4fd1-4831-8bee-da69082f5f3c",
            },
            "displayName": "Not Found Dialog",
            "nodeType": "PageNode",
            "x": 1048,
            "y": 462.76666259765625,
          },
          "9fc7011e-a894-4385-bc82-375c601756c8": {
            "connections": {
              "outcome": "f2dd266d-1d38-4d5a-9598-302b2811e880",
            },
            "displayName": "Find User Page",
            "nodeType": "PageNode",
            "x": 645,
            "y": 231.76666259765625,
          },
          "b5e0e8b9-79bd-4c2b-9f93-971d9ca0f203": {
            "connections": {
              "hasSession": "0b941cdc-400d-47d3-ae37-d3542168f44f",
              "noSession": "f6ee9342-45fa-4a4d-ae62-7547d41b3a42",
            },
            "displayName": "Has Session?",
            "nodeType": "ScriptedDecisionNode",
            "x": 150,
            "y": 151.76666259765625,
          },
          "bcbffe7a-770f-40ac-8909-64999fdbe71c": {
            "connections": {
              "changed": "8787902b-82ec-4295-aedb-6816f08f4464",
              "unchanged": "87263af7-f53e-4c93-b200-f4186b6b45f5",
            },
            "displayName": "Profile changed?",
            "nodeType": "ScriptedDecisionNode",
            "x": 2571,
            "y": 283.76666259765625,
          },
          "c445a3a1-d32a-4294-ad18-83301ac75806": {
            "connections": {
              "FAILURE": "147dd08a-fbf0-4cec-89f4-b92e06a879e4",
              "PATCHED": "cdd92a6c-9ddc-422d-b906-723ed96178cd",
            },
            "displayName": "Patch User",
            "nodeType": "PatchObjectNode",
            "x": 1937,
            "y": 276.76666259765625,
          },
          "cdd92a6c-9ddc-422d-b906-723ed96178cd": {
            "connections": {
              "changed": "f7ba1d99-fbaa-4be3-823d-8f9aabae9005",
              "unchanged": "bcbffe7a-770f-40ac-8909-64999fdbe71c",
            },
            "displayName": "Email changed?",
            "nodeType": "ScriptedDecisionNode",
            "x": 2145,
            "y": 274.76666259765625,
          },
          "d53a4337-4a28-4008-99e6-34cc38d4b3ec": {
            "connections": {
              "false": "589bdad6-4de4-4dc3-b7d8-10fe18102b1c",
              "true": "243c8ecb-26a5-4a5e-ab05-596b8c0fe26a",
            },
            "displayName": "Req Attrs Dialog",
            "nodeType": "PageNode",
            "x": 1655,
            "y": 461.76666259765625,
          },
          "dc4191c3-fd4f-4c50-a996-bd48570741a7": {
            "connections": {
              "true": "c445a3a1-d32a-4294-ad18-83301ac75806",
            },
            "displayName": "Record Changes",
            "nodeType": "ScriptedDecisionNode",
            "x": 1716,
            "y": 295.76666259765625,
          },
          "e409a8d9-4fd1-4831-8bee-da69082f5f3c": {
            "connections": {
              "true": "0b941cdc-400d-47d3-ae37-d3542168f44f",
            },
            "displayName": "Restore Admin Context",
            "nodeType": "ScriptedDecisionNode",
            "x": 2305,
            "y": 516.7666625976562,
          },
          "f2dd266d-1d38-4d5a-9598-302b2811e880": {
            "connections": {
              "false": "85efe712-5367-437b-a6bc-1667fcc0b395",
              "true": "264403c8-e000-448a-ad2c-fba0ebb48bd1",
            },
            "displayName": "Find by Username",
            "nodeType": "IdentifyExistingUserNode",
            "x": 863,
            "y": 166.76666259765625,
          },
          "f6ee9342-45fa-4a4d-ae62-7547d41b3a42": {
            "connections": {
              "false": "e301438c-0bd0-429c-ab0c-66126501069a",
              "true": "0b941cdc-400d-47d3-ae37-d3542168f44f",
            },
            "displayName": "Login",
            "nodeType": "InnerTreeEvaluatorNode",
            "x": 180,
            "y": 314.76666259765625,
          },
          "f7ba1d99-fbaa-4be3-823d-8f9aabae9005": {
            "connections": {
              "EMAIL_NOT_SENT": "bcbffe7a-770f-40ac-8909-64999fdbe71c",
              "EMAIL_SENT": "bcbffe7a-770f-40ac-8909-64999fdbe71c",
            },
            "displayName": "Notify email changed",
            "nodeType": "EmailTemplateNode",
            "x": 2341,
            "y": 185.76666259765625,
          },
        },
        "staticNodes": {
          "70e691a5-1e33-4ac3-a356-e7b6d60d92e0": {
            "x": 3535,
            "y": 263,
          },
          "e301438c-0bd0-429c-ab0c-66126501069a": {
            "x": 435,
            "y": 370,
          },
          "startNode": {
            "x": 50,
            "y": 250,
          },
        },
        "uiConfig": {},
      },
    },
    "DevicePrint": {
      "circlesOfTrust": {},
      "emailTemplates": {},
      "innerNodes": {},
      "nodes": {
        "6000a32d-809c-468f-98fe-64344410dc34": {
          "_id": "6000a32d-809c-468f-98fe-64344410dc34",
          "_outcomes": [
            {
              "displayName": "known",
              "id": "known",
            },
            {
              "displayName": "unknown",
              "id": "unknown",
            },
          ],
          "_rev": "-2101388881",
          "_type": {
            "_id": "ScriptedDecisionNode",
            "collection": true,
            "name": "Scripted Decision",
          },
          "inputs": [
            "*",
          ],
          "outcomes": [
            "known",
            "unknown",
          ],
          "outputs": [
            "*",
          ],
          "script": "739bdc48-fd24-4c52-b353-88706d75558a",
        },
        "69c6af38-12c1-4e78-8f3d-b51643a9d14d": {
          "_id": "69c6af38-12c1-4e78-8f3d-b51643a9d14d",
          "_outcomes": [
            {
              "displayName": "Outcome",
              "id": "outcome",
            },
          ],
          "_rev": "-871113783",
          "_type": {
            "_id": "DeviceSaveNode",
            "collection": true,
            "name": "Device Profile Save",
          },
          "maxSavedProfiles": 5,
          "saveDeviceLocation": true,
          "saveDeviceMetadata": true,
        },
        "9374f74b-ea35-44b4-ae8c-398c1bde57cb": {
          "_id": "9374f74b-ea35-44b4-ae8c-398c1bde57cb",
          "_outcomes": [
            {
              "displayName": "True",
              "id": "true",
            },
            {
              "displayName": "False",
              "id": "false",
            },
            {
              "displayName": "Unknown Device",
              "id": "unknownDevice",
            },
          ],
          "_rev": "1362273079",
          "_type": {
            "_id": "DeviceMatchNode",
            "collection": true,
            "name": "Device Match",
          },
          "acceptableVariance": 0,
          "expiration": 30,
          "script": "01e1a3c0-038b-4c16-956a-6c9d89328cff",
          "useScript": false,
        },
        "c50823f3-a1fa-4f63-b512-75076c11fabb": {
          "_id": "c50823f3-a1fa-4f63-b512-75076c11fabb",
          "_outcomes": [
            {
              "displayName": "True",
              "id": "true",
            },
            {
              "displayName": "False",
              "id": "false",
            },
          ],
          "_rev": "-755602036",
          "_type": {
            "_id": "MessageNode",
            "collection": true,
            "name": "Message Node",
          },
          "message": {
            "en": "Is this a personal or a shared device?",
          },
          "messageNo": {
            "en": "Shared",
          },
          "messageYes": {
            "en": "Personal",
          },
        },
        "d8c7e7c2-f51e-495a-b51a-e8fac7fa1aaf": {
          "_id": "d8c7e7c2-f51e-495a-b51a-e8fac7fa1aaf",
          "_outcomes": [
            {
              "displayName": "Email Sent",
              "id": "EMAIL_SENT",
            },
            {
              "displayName": "Email Not Sent",
              "id": "EMAIL_NOT_SENT",
            },
          ],
          "_rev": "1215574281",
          "_type": {
            "_id": "EmailTemplateNode",
            "collection": true,
            "name": "Email Template Node",
          },
          "emailAttribute": "mail",
          "emailTemplateName": "UnknownDeviceNotification",
          "identityAttribute": "userName",
        },
        "e76a0717-9d51-48b9-ac8b-94881d9a6b68": {
          "_id": "e76a0717-9d51-48b9-ac8b-94881d9a6b68",
          "_outcomes": [
            {
              "displayName": "Outcome",
              "id": "outcome",
            },
          ],
          "_rev": "-1049332370",
          "_type": {
            "_id": "DeviceProfileCollectorNode",
            "collection": true,
            "name": "Device Profile Collector",
          },
          "deviceLocation": false,
          "deviceMetadata": true,
          "maximumSize": "3",
          "message": {},
        },
        "ec34fdbc-f2b9-4c14-87d1-4d487b33bd10": {
          "_id": "ec34fdbc-f2b9-4c14-87d1-4d487b33bd10",
          "_outcomes": [
            {
              "displayName": "True",
              "id": "true",
            },
            {
              "displayName": "False",
              "id": "false",
            },
          ],
          "_rev": "232086139",
          "_type": {
            "_id": "LoginCountDecisionNode",
            "collection": true,
            "name": "Login Count Decision",
          },
          "amount": 1,
          "identityAttribute": "userName",
          "interval": "AT",
        },
      },
      "saml2Entities": {},
      "scripts": {},
      "socialIdentityProviders": {},
      "themes": [],
      "tree": {
        "_id": "DevicePrint",
        "_rev": "-1107542358",
        "enabled": true,
        "entryNodeId": "6000a32d-809c-468f-98fe-64344410dc34",
        "identityResource": "managed/alpha_user",
        "nodes": {
          "6000a32d-809c-468f-98fe-64344410dc34": {
            "connections": {
              "known": "e76a0717-9d51-48b9-ac8b-94881d9a6b68",
              "unknown": "e301438c-0bd0-429c-ab0c-66126501069a",
            },
            "displayName": "Check Username",
            "nodeType": "ScriptedDecisionNode",
            "x": 122,
            "y": 281.76666259765625,
          },
          "69c6af38-12c1-4e78-8f3d-b51643a9d14d": {
            "connections": {
              "outcome": "e301438c-0bd0-429c-ab0c-66126501069a",
            },
            "displayName": "Save Device Profile",
            "nodeType": "DeviceSaveNode",
            "x": 1413,
            "y": 248,
          },
          "9374f74b-ea35-44b4-ae8c-398c1bde57cb": {
            "connections": {
              "false": "ec34fdbc-f2b9-4c14-87d1-4d487b33bd10",
              "true": "70e691a5-1e33-4ac3-a356-e7b6d60d92e0",
              "unknownDevice": "ec34fdbc-f2b9-4c14-87d1-4d487b33bd10",
            },
            "displayName": "Match Device Profile",
            "nodeType": "DeviceMatchNode",
            "x": 511,
            "y": 50.5,
          },
          "c50823f3-a1fa-4f63-b512-75076c11fabb": {
            "connections": {
              "false": "e301438c-0bd0-429c-ab0c-66126501069a",
              "true": "69c6af38-12c1-4e78-8f3d-b51643a9d14d",
            },
            "displayName": "New Device Prompt",
            "nodeType": "MessageNode",
            "x": 1169,
            "y": 216.76666259765625,
          },
          "d8c7e7c2-f51e-495a-b51a-e8fac7fa1aaf": {
            "connections": {
              "EMAIL_NOT_SENT": "c50823f3-a1fa-4f63-b512-75076c11fabb",
              "EMAIL_SENT": "c50823f3-a1fa-4f63-b512-75076c11fabb",
            },
            "displayName": "Notify User",
            "nodeType": "EmailTemplateNode",
            "x": 952,
            "y": 141.76666259765625,
          },
          "e76a0717-9d51-48b9-ac8b-94881d9a6b68": {
            "connections": {
              "outcome": "9374f74b-ea35-44b4-ae8c-398c1bde57cb",
            },
            "displayName": "Collect Device Profile",
            "nodeType": "DeviceProfileCollectorNode",
            "x": 287,
            "y": 202,
          },
          "ec34fdbc-f2b9-4c14-87d1-4d487b33bd10": {
            "connections": {
              "false": "d8c7e7c2-f51e-495a-b51a-e8fac7fa1aaf",
              "true": "c50823f3-a1fa-4f63-b512-75076c11fabb",
            },
            "displayName": "New Account?",
            "nodeType": "LoginCountDecisionNode",
            "x": 738,
            "y": 216.76666259765625,
          },
        },
        "staticNodes": {
          "70e691a5-1e33-4ac3-a356-e7b6d60d92e0": {
            "x": 1648,
            "y": 75.5,
          },
          "e301438c-0bd0-429c-ab0c-66126501069a": {
            "x": 1657,
            "y": 328,
          },
          "startNode": {
            "x": 70,
            "y": 147.5,
          },
        },
        "uiConfig": {
          "categories": "["Adaptive","Helper"]",
        },
      },
    },
    "Disabled": {
      "circlesOfTrust": {},
      "emailTemplates": {},
      "innerNodes": {
        "6fc675ac-230b-4c69-bf6c-3dc716a6f2bb": {
          "_id": "6fc675ac-230b-4c69-bf6c-3dc716a6f2bb",
          "_outcomes": [
            {
              "displayName": "Outcome",
              "id": "outcome",
            },
          ],
          "_rev": "1661966666",
          "_type": {
            "_id": "ValidatedUsernameNode",
            "collection": true,
            "name": "Platform Username",
          },
          "usernameAttribute": "userName",
          "validateInput": false,
        },
      },
      "nodes": {
        "44476aaa-8c6b-4060-bd8b-df074b8c5c23": {
          "_id": "44476aaa-8c6b-4060-bd8b-df074b8c5c23",
          "_outcomes": [
            {
              "displayName": "Outcome",
              "id": "outcome",
            },
          ],
          "_rev": "-377232476",
          "_type": {
            "_id": "PageNode",
            "collection": true,
            "name": "Page Node",
          },
          "nodes": [
            {
              "_id": "6fc675ac-230b-4c69-bf6c-3dc716a6f2bb",
              "displayName": "Platform Username",
              "nodeType": "ValidatedUsernameNode",
            },
          ],
          "pageDescription": {},
          "pageHeader": {
            "en": "DISABLED!",
          },
        },
      },
      "saml2Entities": {},
      "scripts": {},
      "socialIdentityProviders": {},
      "themes": [],
      "tree": {
        "_id": "Disabled",
        "_rev": "950735116",
        "description": "Test the new status flag for journeys.",
        "enabled": false,
        "entryNodeId": "44476aaa-8c6b-4060-bd8b-df074b8c5c23",
        "identityResource": "managed/alpha_user",
        "nodes": {
          "44476aaa-8c6b-4060-bd8b-df074b8c5c23": {
            "connections": {
              "outcome": "e301438c-0bd0-429c-ab0c-66126501069a",
            },
            "displayName": "Page Node",
            "nodeType": "PageNode",
            "x": 212,
            "y": 236.015625,
          },
        },
        "staticNodes": {
          "70e691a5-1e33-4ac3-a356-e7b6d60d92e0": {
            "x": 500,
            "y": 50,
          },
          "e301438c-0bd0-429c-ab0c-66126501069a": {
            "x": 500,
            "y": 350,
          },
          "startNode": {
            "x": 50,
            "y": 250,
          },
        },
        "uiConfig": {
          "categories": "["Prototype"]",
        },
      },
    },
    "Dropdown": {
      "circlesOfTrust": {},
      "emailTemplates": {},
      "innerNodes": {
        "1f58474b-9b7a-4c2e-8910-1d386bd31e39": {
          "_id": "1f58474b-9b7a-4c2e-8910-1d386bd31e39",
          "_outcomes": [
            {
              "displayName": "true",
              "id": "true",
            },
          ],
          "_rev": "-427971792",
          "_type": {
            "_id": "ScriptedDecisionNode",
            "collection": true,
            "name": "Scripted Decision",
          },
          "inputs": [
            "*",
          ],
          "outcomes": [
            "true",
          ],
          "outputs": [
            "*",
          ],
          "script": "71b3c70b-920c-464b-a918-4c86eaaddccd",
        },
      },
      "nodes": {
        "fb897051-382a-410c-a2fc-0511dcdc36f6": {
          "_id": "fb897051-382a-410c-a2fc-0511dcdc36f6",
          "_outcomes": [
            {
              "displayName": "true",
              "id": "true",
            },
          ],
          "_rev": "-486190457",
          "_type": {
            "_id": "PageNode",
            "collection": true,
            "name": "Page Node",
          },
          "nodes": [
            {
              "_id": "1f58474b-9b7a-4c2e-8910-1d386bd31e39",
              "displayName": "Dropdown",
              "nodeType": "ScriptedDecisionNode",
            },
          ],
          "pageDescription": {},
          "pageHeader": {},
        },
      },
      "saml2Entities": {},
      "scripts": {},
      "socialIdentityProviders": {},
      "themes": [],
      "tree": {
        "_id": "Dropdown",
        "_rev": "-290188968",
        "description": "Render a dropdown for input selection.",
        "enabled": true,
        "entryNodeId": "fb897051-382a-410c-a2fc-0511dcdc36f6",
        "identityResource": "managed/alpha_user",
        "nodes": {
          "fb897051-382a-410c-a2fc-0511dcdc36f6": {
            "connections": {
              "true": "e301438c-0bd0-429c-ab0c-66126501069a",
            },
            "displayName": "Page Node",
            "nodeType": "PageNode",
            "x": 174,
            "y": 175.015625,
          },
        },
        "staticNodes": {
          "70e691a5-1e33-4ac3-a356-e7b6d60d92e0": {
            "x": 500,
            "y": 50,
          },
          "e301438c-0bd0-429c-ab0c-66126501069a": {
            "x": 500,
            "y": 350,
          },
          "startNode": {
            "x": 50,
            "y": 197,
          },
        },
        "uiConfig": {
          "categories": "["Prototype"]",
        },
      },
    },
    "DynamicConfiguration": {
      "circlesOfTrust": {},
      "emailTemplates": {},
      "innerNodes": {
        "149a4797-8f0f-4dc0-876f-8e1780c97f1c": {
          "_id": "149a4797-8f0f-4dc0-876f-8e1780c97f1c",
          "_outcomes": [
            {
              "displayName": "true",
              "id": "true",
            },
          ],
          "_rev": "782080783",
          "_type": {
            "_id": "ScriptedDecisionNode",
            "collection": true,
            "name": "Scripted Decision",
          },
          "inputs": [
            "*",
          ],
          "outcomes": [
            "true",
          ],
          "outputs": [
            "*",
          ],
          "script": "d70df7a8-6390-409d-b821-166272a9a9c8",
        },
        "180b3e21-c32e-4611-85ff-94f59bd80755": {
          "_id": "180b3e21-c32e-4611-85ff-94f59bd80755",
          "_outcomes": [
            {
              "displayName": "true",
              "id": "true",
            },
          ],
          "_rev": "944190231",
          "_type": {
            "_id": "ScriptedDecisionNode",
            "collection": true,
            "name": "Scripted Decision",
          },
          "inputs": [
            "*",
          ],
          "outcomes": [
            "true",
          ],
          "outputs": [
            "*",
          ],
          "script": "3814d347-a2f2-4be9-a810-ab41a1e374bd",
        },
        "2f4f5438-a343-49fb-8cd4-cafccc2d3ee9": {
          "_id": "2f4f5438-a343-49fb-8cd4-cafccc2d3ee9",
          "_outcomes": [
            {
              "displayName": "true",
              "id": "true",
            },
          ],
          "_rev": "156596623",
          "_type": {
            "_id": "ScriptedDecisionNode",
            "collection": true,
            "name": "Scripted Decision",
          },
          "inputs": [
            "*",
          ],
          "outcomes": [
            "true",
          ],
          "outputs": [
            "*",
          ],
          "script": "48f17202-039f-4d40-b7fc-4ce380f1b929",
        },
        "369d8794-1e43-4f8c-92d6-94e5ed295e0d": {
          "_id": "369d8794-1e43-4f8c-92d6-94e5ed295e0d",
          "_outcomes": [
            {
              "displayName": "true",
              "id": "true",
            },
          ],
          "_rev": "-2114724323",
          "_type": {
            "_id": "ScriptedDecisionNode",
            "collection": true,
            "name": "Scripted Decision",
          },
          "inputs": [
            "*",
          ],
          "outcomes": [
            "true",
          ],
          "outputs": [
            "*",
          ],
          "script": "a31a1796-8410-46b8-82ca-eb0c6e901775",
        },
        "41d53024-e2cb-4594-9539-845bc393c728": {
          "_id": "41d53024-e2cb-4594-9539-845bc393c728",
          "_outcomes": [
            {
              "displayName": "true",
              "id": "true",
            },
          ],
          "_rev": "94096151",
          "_type": {
            "_id": "ScriptedDecisionNode",
            "collection": true,
            "name": "Scripted Decision",
          },
          "inputs": [
            "*",
          ],
          "outcomes": [
            "true",
          ],
          "outputs": [
            "*",
          ],
          "script": "e49225eb-e7ad-4699-bf2a-d57689f9cd6e",
        },
        "431cf085-c449-465b-bd84-6e391e0df804": {
          "_id": "431cf085-c449-465b-bd84-6e391e0df804",
          "_outcomes": [
            {
              "displayName": "true",
              "id": "true",
            },
          ],
          "_rev": "-1122815703",
          "_type": {
            "_id": "ScriptedDecisionNode",
            "collection": true,
            "name": "Scripted Decision",
          },
          "inputs": [
            "*",
          ],
          "outcomes": [
            "true",
          ],
          "outputs": [
            "*",
          ],
          "script": "169150da-0bd1-4866-8095-eae0bbc269e4",
        },
        "4cd8636a-2ebe-4190-a6a2-7fdf43274ae2": {
          "_id": "4cd8636a-2ebe-4190-a6a2-7fdf43274ae2",
          "_outcomes": [
            {
              "displayName": "true",
              "id": "true",
            },
          ],
          "_rev": "977838093",
          "_type": {
            "_id": "ScriptedDecisionNode",
            "collection": true,
            "name": "Scripted Decision",
          },
          "inputs": [
            "*",
          ],
          "outcomes": [
            "true",
          ],
          "outputs": [
            "*",
          ],
          "script": "e49225eb-e7ad-4699-bf2a-d57689f9cd6e",
        },
        "a0d49552-eccf-40be-b67a-cdf911afdfcd": {
          "_id": "a0d49552-eccf-40be-b67a-cdf911afdfcd",
          "_outcomes": [
            {
              "displayName": "true",
              "id": "true",
            },
          ],
          "_rev": "1137908069",
          "_type": {
            "_id": "ScriptedDecisionNode",
            "collection": true,
            "name": "Scripted Decision",
          },
          "inputs": [
            "*",
          ],
          "outcomes": [
            "true",
          ],
          "outputs": [
            "*",
          ],
          "script": "3814d347-a2f2-4be9-a810-ab41a1e374bd",
        },
      },
      "nodes": {
        "0b837a16-ffb4-453d-a53d-21138e4ee63d": {
          "_id": "0b837a16-ffb4-453d-a53d-21138e4ee63d",
          "_outcomes": [
            {
              "displayName": "true",
              "id": "true",
            },
          ],
          "_rev": "-1525920942",
          "_type": {
            "_id": "PageNode",
            "collection": true,
            "name": "Page Node",
          },
          "nodes": [
            {
              "_id": "41d53024-e2cb-4594-9539-845bc393c728",
              "displayName": "Display States",
              "nodeType": "ScriptedDecisionNode",
            },
            {
              "_id": "180b3e21-c32e-4611-85ff-94f59bd80755",
              "displayName": "Remove Button",
              "nodeType": "ScriptedDecisionNode",
            },
          ],
          "pageDescription": {},
          "pageHeader": {},
        },
        "1911c911-0bf3-407e-b1cc-2ce57cdefcad": {
          "_id": "1911c911-0bf3-407e-b1cc-2ce57cdefcad",
          "_outcomes": [
            {
              "displayName": "true",
              "id": "true",
            },
          ],
          "_rev": "1102039629",
          "_type": {
            "_id": "PageNode",
            "collection": true,
            "name": "Page Node",
          },
          "nodes": [
            {
              "_id": "2f4f5438-a343-49fb-8cd4-cafccc2d3ee9",
              "displayName": "Node Config",
              "nodeType": "ScriptedDecisionNode",
            },
          ],
          "pageDescription": {},
          "pageHeader": {
            "en": "Configure SAML2 Node",
          },
        },
        "26dd984a-3f8d-4d31-a57e-3a30d678c682": {
          "_id": "26dd984a-3f8d-4d31-a57e-3a30d678c682",
          "_outcomes": [
            {
              "displayName": "True",
              "id": "true",
            },
            {
              "displayName": "False",
              "id": "false",
            },
            {
              "displayName": "Configuration failure",
              "id": "CONFIGURATION_FAILED",
            },
          ],
          "_rev": "1523422099",
          "_type": {
            "_id": "ConfigProviderNode",
            "collection": true,
            "name": "Configuration Provider",
          },
          "nodeType": "InnerTreeEvaluatorNode",
          "script": "5e854779-6ec1-4c39-aeba-0477e0986646",
          "scriptInputs": [
            "*",
          ],
        },
        "4e4bbd8a-8fcd-4db8-9ac0-0832c2a5c967": {
          "_id": "4e4bbd8a-8fcd-4db8-9ac0-0832c2a5c967",
          "_outcomes": [
            {
              "displayName": "true",
              "id": "true",
            },
          ],
          "_rev": "1973598862",
          "_type": {
            "_id": "PageNode",
            "collection": true,
            "name": "Page Node",
          },
          "nodes": [
            {
              "_id": "149a4797-8f0f-4dc0-876f-8e1780c97f1c",
              "displayName": "Node Config",
              "nodeType": "ScriptedDecisionNode",
            },
          ],
          "pageDescription": {},
          "pageHeader": {
            "en": "Configure Inner Tree Evaluator",
          },
        },
        "5142a4e5-68f6-452a-af56-bb534fa26400": {
          "_id": "5142a4e5-68f6-452a-af56-bb534fa26400",
          "_outcomes": [
            {
              "displayName": "true",
              "id": "true",
            },
          ],
          "_rev": "419387195",
          "_type": {
            "_id": "PageNode",
            "collection": true,
            "name": "Page Node",
          },
          "nodes": [
            {
              "_id": "431cf085-c449-465b-bd84-6e391e0df804",
              "displayName": "Node Config",
              "nodeType": "ScriptedDecisionNode",
            },
          ],
          "pageDescription": {},
          "pageHeader": {
            "en": "Configure Message Node",
          },
        },
        "5e098acb-7fa5-46fd-912f-9f4d0d48cce6": {
          "_id": "5e098acb-7fa5-46fd-912f-9f4d0d48cce6",
          "_outcomes": [
            {
              "displayName": "true",
              "id": "true",
            },
          ],
          "_rev": "-1955031132",
          "_type": {
            "_id": "PageNode",
            "collection": true,
            "name": "Page Node",
          },
          "nodes": [
            {
              "_id": "4cd8636a-2ebe-4190-a6a2-7fdf43274ae2",
              "displayName": "Display States",
              "nodeType": "ScriptedDecisionNode",
            },
            {
              "_id": "a0d49552-eccf-40be-b67a-cdf911afdfcd",
              "displayName": "Remove Button",
              "nodeType": "ScriptedDecisionNode",
            },
          ],
          "pageDescription": {},
          "pageHeader": {
            "en": "Configuration Error!",
          },
        },
        "6958fb2d-aad3-4eef-abb7-04525de55e80": {
          "_id": "6958fb2d-aad3-4eef-abb7-04525de55e80",
          "_outcomes": [
            {
              "displayName": "Message Node",
              "id": "Message Node",
            },
            {
              "displayName": "SAML2 Node",
              "id": "SAML2 Node",
            },
            {
              "displayName": "Inner Tree Evaluator",
              "id": "Inner Tree Evaluator",
            },
            {
              "displayName": "Set Custom Cookie",
              "id": "Set Custom Cookie",
            },
          ],
          "_rev": "80060415",
          "_type": {
            "_id": "ChoiceCollectorNode",
            "collection": true,
            "name": "Choice Collector",
          },
          "choices": [
            "Message Node",
            "SAML2 Node",
            "Inner Tree Evaluator",
            "Set Custom Cookie",
          ],
          "defaultChoice": "Set Custom Cookie",
          "prompt": "Pick your node!",
        },
        "8dd7a7b0-6ce2-47d1-9225-fed27113cef3": {
          "_id": "8dd7a7b0-6ce2-47d1-9225-fed27113cef3",
          "_outcomes": [
            {
              "displayName": "true",
              "id": "true",
            },
          ],
          "_rev": "1973660898",
          "_type": {
            "_id": "PageNode",
            "collection": true,
            "name": "Page Node",
          },
          "nodes": [
            {
              "_id": "369d8794-1e43-4f8c-92d6-94e5ed295e0d",
              "displayName": "Node Config",
              "nodeType": "ScriptedDecisionNode",
            },
          ],
          "pageDescription": {},
          "pageHeader": {},
        },
        "980b82c5-4c44-42c3-a7e9-a1201da885d0": {
          "_id": "980b82c5-4c44-42c3-a7e9-a1201da885d0",
          "_outcomes": [
            {
              "displayName": "Outcome",
              "id": "outcome",
            },
            {
              "displayName": "Configuration failure",
              "id": "CONFIGURATION_FAILED",
            },
          ],
          "_rev": "1883975414",
          "_type": {
            "_id": "ConfigProviderNode",
            "collection": true,
            "name": "Configuration Provider",
          },
          "nodeType": "SetCustomCookieNode",
          "script": "5e854779-6ec1-4c39-aeba-0477e0986646",
          "scriptInputs": [
            "*",
          ],
        },
        "d4ab5309-9508-4bef-a95b-7bf8024a7ddf": {
          "_id": "d4ab5309-9508-4bef-a95b-7bf8024a7ddf",
          "_outcomes": [
            {
              "displayName": "Account exists",
              "id": "ACCOUNT_EXISTS",
            },
            {
              "displayName": "No account exists",
              "id": "NO_ACCOUNT",
            },
            {
              "displayName": "Configuration failure",
              "id": "CONFIGURATION_FAILED",
            },
          ],
          "_rev": "778694790",
          "_type": {
            "_id": "ConfigProviderNode",
            "collection": true,
            "name": "Configuration Provider",
          },
          "nodeType": "product-Saml2Node",
          "script": "5e854779-6ec1-4c39-aeba-0477e0986646",
          "scriptInputs": [
            "*",
          ],
        },
        "eda4c1c7-938b-4c96-8819-467af09c7200": {
          "_id": "eda4c1c7-938b-4c96-8819-467af09c7200",
          "_outcomes": [
            {
              "displayName": "True",
              "id": "true",
            },
            {
              "displayName": "False",
              "id": "false",
            },
            {
              "displayName": "Configuration failure",
              "id": "CONFIGURATION_FAILED",
            },
          ],
          "_rev": "1613419786",
          "_type": {
            "_id": "ConfigProviderNode",
            "collection": true,
            "name": "Configuration Provider",
          },
          "nodeType": "MessageNode",
          "script": "5e854779-6ec1-4c39-aeba-0477e0986646",
          "scriptInputs": [
            "*",
          ],
        },
      },
      "saml2Entities": {},
      "scripts": {},
      "socialIdentityProviders": {},
      "themes": [],
      "tree": {
        "_id": "DynamicConfiguration",
        "_rev": "-1123554712",
        "description": "Dynamic Node Configuration",
        "enabled": true,
        "entryNodeId": "6958fb2d-aad3-4eef-abb7-04525de55e80",
        "identityResource": "managed/alpha_user",
        "nodes": {
          "0b837a16-ffb4-453d-a53d-21138e4ee63d": {
            "connections": {
              "true": "e301438c-0bd0-429c-ab0c-66126501069a",
            },
            "displayName": "Success",
            "nodeType": "PageNode",
            "x": 1000,
            "y": 140.76666259765625,
          },
          "1911c911-0bf3-407e-b1cc-2ce57cdefcad": {
            "connections": {
              "true": "d4ab5309-9508-4bef-a95b-7bf8024a7ddf",
            },
            "displayName": "SAML2 Node",
            "nodeType": "PageNode",
            "x": 444,
            "y": 243.76666259765625,
          },
          "26dd984a-3f8d-4d31-a57e-3a30d678c682": {
            "connections": {
              "CONFIGURATION_FAILED": "5e098acb-7fa5-46fd-912f-9f4d0d48cce6",
              "false": "0b837a16-ffb4-453d-a53d-21138e4ee63d",
              "true": "0b837a16-ffb4-453d-a53d-21138e4ee63d",
            },
            "displayName": "Dynamic Inner Tree Evaluator",
            "nodeType": "ConfigProviderNode",
            "x": 691,
            "y": 388.76666259765625,
          },
          "4e4bbd8a-8fcd-4db8-9ac0-0832c2a5c967": {
            "connections": {
              "true": "26dd984a-3f8d-4d31-a57e-3a30d678c682",
            },
            "displayName": "Inner Tree Evaluator",
            "nodeType": "PageNode",
            "x": 447,
            "y": 395.76666259765625,
          },
          "5142a4e5-68f6-452a-af56-bb534fa26400": {
            "connections": {
              "true": "eda4c1c7-938b-4c96-8819-467af09c7200",
            },
            "displayName": "Message Node",
            "nodeType": "PageNode",
            "x": 447,
            "y": 88.76666259765625,
          },
          "5e098acb-7fa5-46fd-912f-9f4d0d48cce6": {
            "connections": {
              "true": "e301438c-0bd0-429c-ab0c-66126501069a",
            },
            "displayName": "Configuration Error",
            "nodeType": "PageNode",
            "x": 1002,
            "y": 310.76666259765625,
          },
          "6958fb2d-aad3-4eef-abb7-04525de55e80": {
            "connections": {
              "Inner Tree Evaluator": "4e4bbd8a-8fcd-4db8-9ac0-0832c2a5c967",
              "Message Node": "5142a4e5-68f6-452a-af56-bb534fa26400",
              "SAML2 Node": "1911c911-0bf3-407e-b1cc-2ce57cdefcad",
              "Set Custom Cookie": "8dd7a7b0-6ce2-47d1-9225-fed27113cef3",
            },
            "displayName": "Choice Collector",
            "nodeType": "ChoiceCollectorNode",
            "x": 198,
            "y": 213.76666259765625,
          },
          "8dd7a7b0-6ce2-47d1-9225-fed27113cef3": {
            "connections": {
              "true": "980b82c5-4c44-42c3-a7e9-a1201da885d0",
            },
            "displayName": "Set Custom Cookie",
            "nodeType": "PageNode",
            "x": 446,
            "y": 547.7666625976562,
          },
          "980b82c5-4c44-42c3-a7e9-a1201da885d0": {
            "connections": {
              "CONFIGURATION_FAILED": "5e098acb-7fa5-46fd-912f-9f4d0d48cce6",
              "outcome": "0b837a16-ffb4-453d-a53d-21138e4ee63d",
            },
            "displayName": "Dynamic Set Custom Cookie",
            "nodeType": "ConfigProviderNode",
            "x": 692,
            "y": 553.7666625976562,
          },
          "d4ab5309-9508-4bef-a95b-7bf8024a7ddf": {
            "connections": {
              "ACCOUNT_EXISTS": "0b837a16-ffb4-453d-a53d-21138e4ee63d",
              "CONFIGURATION_FAILED": "5e098acb-7fa5-46fd-912f-9f4d0d48cce6",
              "NO_ACCOUNT": "0b837a16-ffb4-453d-a53d-21138e4ee63d",
            },
            "displayName": "Dynamic SAML2 Node",
            "nodeType": "ConfigProviderNode",
            "x": 697,
            "y": 237.76666259765625,
          },
          "eda4c1c7-938b-4c96-8819-467af09c7200": {
            "connections": {
              "CONFIGURATION_FAILED": "5e098acb-7fa5-46fd-912f-9f4d0d48cce6",
              "false": "0b837a16-ffb4-453d-a53d-21138e4ee63d",
              "true": "0b837a16-ffb4-453d-a53d-21138e4ee63d",
            },
            "displayName": "Dynamic Message Node",
            "nodeType": "ConfigProviderNode",
            "x": 696,
            "y": 82.76666259765625,
          },
        },
        "staticNodes": {
          "70e691a5-1e33-4ac3-a356-e7b6d60d92e0": {
            "x": 53,
            "y": 126,
          },
          "e301438c-0bd0-429c-ab0c-66126501069a": {
            "x": 1250,
            "y": 272,
          },
          "startNode": {
            "x": 50,
            "y": 250,
          },
        },
        "uiConfig": {
          "categories": "[]",
        },
      },
    },
    "EmailValidation": {
      "circlesOfTrust": {},
      "emailTemplates": {},
      "innerNodes": {
        "19ace509-0f0e-411b-9e68-9602e1a3fb34": {
          "_id": "19ace509-0f0e-411b-9e68-9602e1a3fb34",
          "_outcomes": [
            {
              "displayName": "Outcome",
              "id": "outcome",
            },
          ],
          "_rev": "-280319247",
          "_type": {
            "_id": "AttributeCollectorNode",
            "collection": true,
            "name": "Attribute Collector",
          },
          "attributesToCollect": [
            "mail",
          ],
          "identityAttribute": "userName",
          "required": true,
          "validateInputs": true,
        },
        "1b908a0d-b571-4349-8f7d-24eaf3f1f467": {
          "_id": "1b908a0d-b571-4349-8f7d-24eaf3f1f467",
          "_outcomes": [
            {
              "displayName": "True",
              "id": "true",
            },
            {
              "displayName": "False",
              "id": "false",
            },
          ],
          "_rev": "-103084991",
          "_type": {
            "_id": "MessageNode",
            "collection": true,
            "name": "Message Node",
          },
          "message": {
            "en": "Please enter a new email address",
          },
          "messageNo": {
            "en": "Abort",
          },
          "messageYes": {
            "en": "Try again",
          },
        },
        "25814150-52d0-4ce2-bb44-23387c3b134a": {
          "_id": "25814150-52d0-4ce2-bb44-23387c3b134a",
          "_outcomes": [
            {
              "displayName": "True",
              "id": "true",
            },
            {
              "displayName": "False",
              "id": "false",
            },
          ],
          "_rev": "-1066603144",
          "_type": {
            "_id": "MessageNode",
            "collection": true,
            "name": "Message Node",
          },
          "message": {
            "en": "Please choose a different email address or login to the existing account.",
          },
          "messageNo": {
            "en": "Abort",
          },
          "messageYes": {
            "en": "Try again",
          },
        },
        "32017ecf-9671-462a-b57c-9e163b09c5d6": {
          "_id": "32017ecf-9671-462a-b57c-9e163b09c5d6",
          "_outcomes": [
            {
              "displayName": "Outcome",
              "id": "outcome",
            },
          ],
          "_rev": "305661068",
          "_type": {
            "_id": "AttributeCollectorNode",
            "collection": true,
            "name": "Attribute Collector",
          },
          "attributesToCollect": [
            "mail",
          ],
          "identityAttribute": "userName",
          "required": true,
          "validateInputs": true,
        },
        "92401631-e2ea-4aa1-96b2-c2372cc37c97": {
          "_id": "92401631-e2ea-4aa1-96b2-c2372cc37c97",
          "_outcomes": [
            {
              "displayName": "True",
              "id": "true",
            },
            {
              "displayName": "False",
              "id": "false",
            },
          ],
          "_rev": "-216874676",
          "_type": {
            "_id": "MessageNode",
            "collection": true,
            "name": "Message Node",
          },
          "message": {
            "en": "Please enter a new email address",
          },
          "messageNo": {
            "en": "Abort",
          },
          "messageYes": {
            "en": "Try again",
          },
        },
        "b0bab825-7ce4-4bdc-8fce-187c3badf6c6": {
          "_id": "b0bab825-7ce4-4bdc-8fce-187c3badf6c6",
          "_outcomes": [
            {
              "displayName": "Outcome",
              "id": "outcome",
            },
          ],
          "_rev": "-1013207373",
          "_type": {
            "_id": "AttributeCollectorNode",
            "collection": true,
            "name": "Attribute Collector",
          },
          "attributesToCollect": [
            "mail",
          ],
          "identityAttribute": "userName",
          "required": true,
          "validateInputs": true,
        },
      },
      "nodes": {
        "0d073c27-ff3f-4d5a-99a9-503cd98a25fe": {
          "_id": "0d073c27-ff3f-4d5a-99a9-503cd98a25fe",
          "_outcomes": [
            {
              "displayName": "True",
              "id": "true",
            },
            {
              "displayName": "False",
              "id": "false",
            },
          ],
          "_rev": "2085922058",
          "_type": {
            "_id": "PageNode",
            "collection": true,
            "name": "Page Node",
          },
          "nodes": [
            {
              "_id": "32017ecf-9671-462a-b57c-9e163b09c5d6",
              "displayName": "Email",
              "nodeType": "AttributeCollectorNode",
            },
            {
              "_id": "25814150-52d0-4ce2-bb44-23387c3b134a",
              "displayName": "User Choice",
              "nodeType": "MessageNode",
            },
          ],
          "pageDescription": {
            "en": "The email address you entered already exists in our system. Please choose a different email address or <a href="#/service/Registration">login</a> to the existing account.<br><a href="#/service/Login">Forgot username?</a><a href="#/service/ResetPassword"> Forgot password?</a>",
          },
          "pageHeader": {
            "en": "Duplicate Email Address!",
          },
        },
        "d6adf314-21d4-44ad-a2a2-3063de2ffd51": {
          "_id": "d6adf314-21d4-44ad-a2a2-3063de2ffd51",
          "_outcomes": [
            {
              "displayName": "True",
              "id": "true",
            },
            {
              "displayName": "False",
              "id": "false",
            },
          ],
          "_rev": "1697173652",
          "_type": {
            "_id": "PageNode",
            "collection": true,
            "name": "Page Node",
          },
          "nodes": [
            {
              "_id": "b0bab825-7ce4-4bdc-8fce-187c3badf6c6",
              "displayName": "Email",
              "nodeType": "AttributeCollectorNode",
            },
            {
              "_id": "92401631-e2ea-4aa1-96b2-c2372cc37c97",
              "displayName": "User Choice",
              "nodeType": "MessageNode",
            },
          ],
          "pageDescription": {
            "en": "The email address you entered is either invalid or temporarily out-of-order. Please choose a different email address to insure we can communicate with you.",
          },
          "pageHeader": {
            "en": "Invalid email address!",
          },
        },
        "ecd2f35b-8d4d-4116-b5cb-4be8f6a76b57": {
          "_id": "ecd2f35b-8d4d-4116-b5cb-4be8f6a76b57",
          "_outcomes": [
            {
              "displayName": "unknown",
              "id": "unknown",
            },
            {
              "displayName": "timed_out",
              "id": "timed_out",
            },
            {
              "displayName": "invalid",
              "id": "invalid",
            },
            {
              "displayName": "valid_unreachable",
              "id": "valid_unreachable",
            },
            {
              "displayName": "valid_temporary_error",
              "id": "valid_temporary_error",
            },
            {
              "displayName": "valid_accepts_all",
              "id": "valid_accepts_all",
            },
            {
              "displayName": "valid_verified",
              "id": "valid_verified",
            },
            {
              "displayName": "suspicious",
              "id": "suspicious",
            },
            {
              "displayName": "fraudulent",
              "id": "fraudulent",
            },
          ],
          "_rev": "1626747226",
          "_type": {
            "_id": "ScriptedDecisionNode",
            "collection": true,
            "name": "Scripted Decision",
          },
          "inputs": [
            "*",
          ],
          "outcomes": [
            "unknown",
            "timed_out",
            "invalid",
            "valid_unreachable",
            "valid_temporary_error",
            "valid_accepts_all",
            "valid_verified",
            "suspicious",
            "fraudulent",
          ],
          "outputs": [
            "*",
          ],
          "script": "70e8aa07-aa8f-4ec3-b9fb-6f6f8aa14e3c",
        },
        "ef18b405-a852-4373-9af0-de193ba0d8d9": {
          "_id": "ef18b405-a852-4373-9af0-de193ba0d8d9",
          "_outcomes": [
            {
              "displayName": "True",
              "id": "true",
            },
            {
              "displayName": "False",
              "id": "false",
            },
          ],
          "_rev": "-785152913",
          "_type": {
            "_id": "IdentifyExistingUserNode",
            "collection": true,
            "name": "Identify Existing User",
          },
          "identifier": "userName",
          "identityAttribute": "mail",
        },
        "f025a518-c4f6-4410-94e6-00ac72308571": {
          "_id": "f025a518-c4f6-4410-94e6-00ac72308571",
          "_outcomes": [
            {
              "displayName": "True",
              "id": "true",
            },
            {
              "displayName": "False",
              "id": "false",
            },
          ],
          "_rev": "1649217086",
          "_type": {
            "_id": "PageNode",
            "collection": true,
            "name": "Page Node",
          },
          "nodes": [
            {
              "_id": "19ace509-0f0e-411b-9e68-9602e1a3fb34",
              "displayName": "Email",
              "nodeType": "AttributeCollectorNode",
            },
            {
              "_id": "1b908a0d-b571-4349-8f7d-24eaf3f1f467",
              "displayName": "User Choice",
              "nodeType": "MessageNode",
            },
          ],
          "pageDescription": {
            "en": "The email address you entered was flagged as potentially fraudulent. Please use a different email address to insure we can safely communicate with you.",
          },
          "pageHeader": {
            "en": "Potentially fraudulent email address!",
          },
        },
      },
      "saml2Entities": {},
      "scripts": {},
      "socialIdentityProviders": {},
      "themes": [],
      "tree": {
        "_id": "EmailValidation",
        "_rev": "1317172227",
        "enabled": true,
        "entryNodeId": "ef18b405-a852-4373-9af0-de193ba0d8d9",
        "identityResource": "managed/alpha_user",
        "nodes": {
          "0d073c27-ff3f-4d5a-99a9-503cd98a25fe": {
            "connections": {
              "false": "e301438c-0bd0-429c-ab0c-66126501069a",
              "true": "ef18b405-a852-4373-9af0-de193ba0d8d9",
            },
            "displayName": "Duplicate Email Dialog",
            "nodeType": "PageNode",
            "x": 760,
            "y": 13.76666259765625,
          },
          "d6adf314-21d4-44ad-a2a2-3063de2ffd51": {
            "connections": {
              "false": "e301438c-0bd0-429c-ab0c-66126501069a",
              "true": "ef18b405-a852-4373-9af0-de193ba0d8d9",
            },
            "displayName": "Invalid Email Dialog",
            "nodeType": "PageNode",
            "x": 761,
            "y": 270.76666259765625,
          },
          "ecd2f35b-8d4d-4116-b5cb-4be8f6a76b57": {
            "connections": {
              "fraudulent": "f025a518-c4f6-4410-94e6-00ac72308571",
              "invalid": "d6adf314-21d4-44ad-a2a2-3063de2ffd51",
              "suspicious": "70e691a5-1e33-4ac3-a356-e7b6d60d92e0",
              "timed_out": "70e691a5-1e33-4ac3-a356-e7b6d60d92e0",
              "unknown": "70e691a5-1e33-4ac3-a356-e7b6d60d92e0",
              "valid_accepts_all": "70e691a5-1e33-4ac3-a356-e7b6d60d92e0",
              "valid_temporary_error": "d6adf314-21d4-44ad-a2a2-3063de2ffd51",
              "valid_unreachable": "d6adf314-21d4-44ad-a2a2-3063de2ffd51",
              "valid_verified": "70e691a5-1e33-4ac3-a356-e7b6d60d92e0",
            },
            "displayName": "IPQS Email Address",
            "nodeType": "ScriptedDecisionNode",
            "x": 470,
            "y": 237,
          },
          "ef18b405-a852-4373-9af0-de193ba0d8d9": {
            "connections": {
              "false": "ecd2f35b-8d4d-4116-b5cb-4be8f6a76b57",
              "true": "0d073c27-ff3f-4d5a-99a9-503cd98a25fe",
            },
            "displayName": "Find Duplicates",
            "nodeType": "IdentifyExistingUserNode",
            "x": 219,
            "y": 226.76666259765625,
          },
          "f025a518-c4f6-4410-94e6-00ac72308571": {
            "connections": {
              "false": "e301438c-0bd0-429c-ab0c-66126501069a",
              "true": "ef18b405-a852-4373-9af0-de193ba0d8d9",
            },
            "displayName": "Fraud Alert Dialog",
            "nodeType": "PageNode",
            "x": 761,
            "y": 529.7666625976562,
          },
        },
        "staticNodes": {
          "70e691a5-1e33-4ac3-a356-e7b6d60d92e0": {
            "x": 1049,
            "y": 182.33333333333337,
          },
          "e301438c-0bd0-429c-ab0c-66126501069a": {
            "x": 1055,
            "y": 424.6666666666667,
          },
          "startNode": {
            "x": 70,
            "y": 162,
          },
        },
        "uiConfig": {
          "categories": "["Adaptive","Helper"]",
        },
      },
    },
    "FRAAS-7955": {
      "circlesOfTrust": {},
      "emailTemplates": {},
      "innerNodes": {
        "02afbb43-33f6-47af-9aa0-88075b3e13a8": {
          "_id": "02afbb43-33f6-47af-9aa0-88075b3e13a8",
          "_outcomes": [
            {
              "displayName": "true",
              "id": "true",
            },
          ],
          "_rev": "1713848456",
          "_type": {
            "_id": "ScriptedDecisionNode",
            "collection": true,
            "name": "Scripted Decision",
          },
          "inputs": [
            "*",
          ],
          "outcomes": [
            "true",
          ],
          "outputs": [
            "*",
          ],
          "script": "164fe425-01e7-4b0b-9f60-fb41f6bf362b",
        },
        "18441eef-67ff-4b39-bffa-b281e01024da": {
          "_id": "18441eef-67ff-4b39-bffa-b281e01024da",
          "_outcomes": [
            {
              "displayName": "Social Login",
              "id": "Social Login",
            },
            {
              "displayName": "Shared State Only",
              "id": "Shared State Only",
            },
            {
              "displayName": "Transient State Only",
              "id": "Transient State Only",
            },
            {
              "displayName": "Both States",
              "id": "Both States",
            },
          ],
          "_rev": "-1777400212",
          "_type": {
            "_id": "ChoiceCollectorNode",
            "collection": true,
            "name": "Choice Collector",
          },
          "choices": [
            "Social Login",
            "Shared State Only",
            "Transient State Only",
            "Both States",
          ],
          "defaultChoice": "Social Login",
          "prompt": "Which flow do you want to use?",
        },
        "349618ae-1e1e-482c-8956-fe094bb88a00": {
          "_id": "349618ae-1e1e-482c-8956-fe094bb88a00",
          "_outcomes": [
            {
              "displayName": "true",
              "id": "true",
            },
          ],
          "_rev": "-281202337",
          "_type": {
            "_id": "ScriptedDecisionNode",
            "collection": true,
            "name": "Scripted Decision",
          },
          "inputs": [
            "*",
          ],
          "outcomes": [
            "true",
          ],
          "outputs": [
            "*",
          ],
          "script": "164fe425-01e7-4b0b-9f60-fb41f6bf362b",
        },
        "3efa1b43-5b48-4632-beef-fbdd4c41dce7": {
          "_id": "3efa1b43-5b48-4632-beef-fbdd4c41dce7",
          "_outcomes": [
            {
              "displayName": "true",
              "id": "true",
            },
          ],
          "_rev": "823955652",
          "_type": {
            "_id": "ScriptedDecisionNode",
            "collection": true,
            "name": "Scripted Decision",
          },
          "inputs": [
            "*",
          ],
          "outcomes": [
            "true",
          ],
          "outputs": [
            "*",
          ],
          "script": "164fe425-01e7-4b0b-9f60-fb41f6bf362b",
        },
        "48c5202d-3a43-441b-8ef8-e1f4fb9b4adb": {
          "_id": "48c5202d-3a43-441b-8ef8-e1f4fb9b4adb",
          "_outcomes": [
            {
              "displayName": "Outcome",
              "id": "outcome",
            },
          ],
          "_rev": "1088514949",
          "_type": {
            "_id": "AttributeCollectorNode",
            "collection": true,
            "name": "Attribute Collector",
          },
          "attributesToCollect": [
            "givenName",
            "sn",
            "mail",
          ],
          "identityAttribute": "userName",
          "required": true,
          "validateInputs": true,
        },
        "b2329b9c-c812-4c0a-98a0-83cf265f8e39": {
          "_id": "b2329b9c-c812-4c0a-98a0-83cf265f8e39",
          "_outcomes": [
            {
              "displayName": "true",
              "id": "true",
            },
          ],
          "_rev": "1520763082",
          "_type": {
            "_id": "ScriptedDecisionNode",
            "collection": true,
            "name": "Scripted Decision",
          },
          "inputs": [
            "*",
          ],
          "outcomes": [
            "true",
          ],
          "outputs": [
            "*",
          ],
          "script": "164fe425-01e7-4b0b-9f60-fb41f6bf362b",
        },
        "b424b66b-2d86-447a-862d-c4dae0ee5883": {
          "_id": "b424b66b-2d86-447a-862d-c4dae0ee5883",
          "_outcomes": [
            {
              "displayName": "true",
              "id": "true",
            },
          ],
          "_rev": "-688393451",
          "_type": {
            "_id": "ScriptedDecisionNode",
            "collection": true,
            "name": "Scripted Decision",
          },
          "inputs": [
            "*",
          ],
          "outcomes": [
            "true",
          ],
          "outputs": [
            "*",
          ],
          "script": "fbc563cb-eced-4e1b-9cd4-022680347668",
        },
        "cca3c057-5366-4f7c-a77b-cbfab7a27767": {
          "_id": "cca3c057-5366-4f7c-a77b-cbfab7a27767",
          "_outcomes": [
            {
              "displayName": "Social Authentication",
              "id": "socialAuthentication",
            },
          ],
          "_rev": "-1123028851",
          "_type": {
            "_id": "SelectIdPNode",
            "collection": true,
            "name": "Select Identity Provider",
          },
          "filteredProviders": [],
          "identityAttribute": "mail",
          "includeLocalAuthentication": false,
          "offerOnlyExisting": false,
          "passwordAttribute": "password",
        },
        "e9087af5-c395-4184-b971-346f2aaa45c3": {
          "_id": "e9087af5-c395-4184-b971-346f2aaa45c3",
          "_outcomes": [
            {
              "displayName": "true",
              "id": "true",
            },
          ],
          "_rev": "519798803",
          "_type": {
            "_id": "ScriptedDecisionNode",
            "collection": true,
            "name": "Scripted Decision",
          },
          "inputs": [
            "*",
          ],
          "outcomes": [
            "true",
          ],
          "outputs": [
            "*",
          ],
          "script": "9535446c-0ff6-4a76-8576-616599119d64",
        },
      },
      "nodes": {
        "3a87190e-83f6-4163-a948-72b6d45c508c": {
          "_id": "3a87190e-83f6-4163-a948-72b6d45c508c",
          "_outcomes": [
            {
              "displayName": "True",
              "id": "true",
            },
            {
              "displayName": "False",
              "id": "false",
            },
          ],
          "_rev": "-1413971846",
          "_type": {
            "_id": "IdentifyExistingUserNode",
            "collection": true,
            "name": "Identify Existing User",
          },
          "identifier": "userName",
          "identityAttribute": "userName",
        },
        "48a1a6f8-5dda-4aa0-92e2-e24a6e96f4d3": {
          "_id": "48a1a6f8-5dda-4aa0-92e2-e24a6e96f4d3",
          "_outcomes": [
            {
              "displayName": "Account exists",
              "id": "ACCOUNT_EXISTS",
            },
            {
              "displayName": "No account exists",
              "id": "NO_ACCOUNT",
            },
          ],
          "_rev": "1864159806",
          "_type": {
            "_id": "SocialProviderHandlerNode",
            "collection": true,
            "name": "Social Provider Handler Node",
          },
          "clientType": "BROWSER",
          "script": "58c824ae-84ed-4724-82cd-db128fc3f6c",
          "usernameAttribute": "userName",
        },
        "4d04321c-20f9-4784-be65-8b40edef8835": {
          "_id": "4d04321c-20f9-4784-be65-8b40edef8835",
          "_outcomes": [
            {
              "displayName": "true",
              "id": "true",
            },
          ],
          "_rev": "81440346",
          "_type": {
            "_id": "PageNode",
            "collection": true,
            "name": "Page Node",
          },
          "nodes": [
            {
              "_id": "b424b66b-2d86-447a-862d-c4dae0ee5883",
              "displayName": "Show Object Values",
              "nodeType": "ScriptedDecisionNode",
            },
            {
              "_id": "349618ae-1e1e-482c-8956-fe094bb88a00",
              "displayName": "Display States",
              "nodeType": "ScriptedDecisionNode",
            },
            {
              "_id": "e9087af5-c395-4184-b971-346f2aaa45c3",
              "displayName": "Remove Button",
              "nodeType": "ScriptedDecisionNode",
            },
          ],
          "pageDescription": {
            "en": "These values were actually written by either the Create Object Node or the Patch Object Node and right below are the current shared and transient state values.<br/><br/><h5><a href="https://idc.scheuber.io/am/XUI/?authIndexType=service&authIndexValue=FRAAS-7955">Start Over</a>.</h5>",
          },
          "pageHeader": {
            "en": "Review Values",
          },
        },
        "4f3b6b7d-42ba-43b3-9e77-43d52b8c90a8": {
          "_id": "4f3b6b7d-42ba-43b3-9e77-43d52b8c90a8",
          "_outcomes": [
            {
              "displayName": "Outcome",
              "id": "outcome",
            },
          ],
          "_rev": "1540381501",
          "_type": {
            "_id": "PageNode",
            "collection": true,
            "name": "Page Node",
          },
          "nodes": [
            {
              "_id": "48c5202d-3a43-441b-8ef8-e1f4fb9b4adb",
              "displayName": "Attributes",
              "nodeType": "AttributeCollectorNode",
            },
          ],
          "pageDescription": {
            "en": "The Attribute Collector Node reads in the following order: transient > shared > secure > object.<br/><br/>In order to visualize the problem described in FRAAS-7955, <h5>change the values in all the fields!</h5>",
          },
          "pageHeader": {
            "en": "Read State Values",
          },
        },
        "508fe7da-5dd5-453b-bb9f-62f0e5430b9d": {
          "_id": "508fe7da-5dd5-453b-bb9f-62f0e5430b9d",
          "_outcomes": [
            {
              "displayName": "true",
              "id": "true",
            },
          ],
          "_rev": "-1949547833",
          "_type": {
            "_id": "PageNode",
            "collection": true,
            "name": "Page Node",
          },
          "nodes": [
            {
              "_id": "3efa1b43-5b48-4632-beef-fbdd4c41dce7",
              "displayName": "Display States",
              "nodeType": "ScriptedDecisionNode",
            },
          ],
          "pageDescription": {
            "en": "This error is presumably a manifestation of FRAAS-7955 in that the Create Object Node uses the original values from the Social Provider Handler Node and not the values from shared state. If you selected Apple as your social IDP, this behavior is explained by the fact that Apple does NOT deliver any user profile data except email if the user consents. You probably saw empty fields in the first form and entered your first name, last name, and email address but the Create Object Node ignored those values you entered, resulting in this error condition.<p/>Select <b>Next</b> to apply the workaround and finish the operation.",
          },
          "pageHeader": {
            "en": "Create Object Error",
          },
        },
        "64210c6e-a23d-4d25-9bf4-c2499acb6b69": {
          "_id": "64210c6e-a23d-4d25-9bf4-c2499acb6b69",
          "_outcomes": [
            {
              "displayName": "true",
              "id": "true",
            },
          ],
          "_rev": "1373520716",
          "_type": {
            "_id": "PageNode",
            "collection": true,
            "name": "Page Node",
          },
          "nodes": [
            {
              "_id": "02afbb43-33f6-47af-9aa0-88075b3e13a8",
              "displayName": "Display States",
              "nodeType": "ScriptedDecisionNode",
            },
          ],
          "pageDescription": {
            "en": "These are the current shared and transient states.<br/><br/>If you see the same data in both shared and transient state, then that indicates a problem. The Social Provider Handler Node seems to be doing that when you selected "Social Login" (that's an issue) and if you selected "Both States" then you will see this as well (that's just simulated, so expected in that case).",
          },
          "pageHeader": {
            "en": "Display States",
          },
        },
        "6886d507-23a3-4038-a197-042bc1a4973a": {
          "_id": "6886d507-23a3-4038-a197-042bc1a4973a",
          "_outcomes": [
            {
              "displayName": "Created",
              "id": "CREATED",
            },
            {
              "displayName": "Failed",
              "id": "FAILURE",
            },
          ],
          "_rev": "-526560455",
          "_type": {
            "_id": "CreateObjectNode",
            "collection": true,
            "name": "Create Object",
          },
          "identityResource": "managed/alpha_user",
        },
        "7c7f26d9-3a11-4936-b714-27a0bb1ba868": {
          "_id": "7c7f26d9-3a11-4936-b714-27a0bb1ba868",
          "_outcomes": [
            {
              "displayName": "true",
              "id": "true",
            },
          ],
          "_rev": "-2125476485",
          "_type": {
            "_id": "PageNode",
            "collection": true,
            "name": "Page Node",
          },
          "nodes": [
            {
              "_id": "b2329b9c-c812-4c0a-98a0-83cf265f8e39",
              "displayName": "Display States",
              "nodeType": "ScriptedDecisionNode",
            },
          ],
          "pageDescription": {
            "en": "This error is presumably a manifestation of FRAAS-7955 in that the Patch Object Node uses the original values from the Social Provider Handler Node and not the values from shared state. If you selected Apple as your social IDP, this behavior is explained by the fact that Apple does NOT deliver any user profile data except email if the user consents. You probably saw empty fields in the first form and entered your first name, last name, and email address but the Patch Object Node ignored those values you entered, resulting in this error condition.<p/>Select <b>Next</b> to apply the workaround and retry the operation.",
          },
          "pageHeader": {
            "en": "Patch Object Error",
          },
        },
        "7ca2ac47-572f-444a-8446-ad17a0a59171": {
          "_id": "7ca2ac47-572f-444a-8446-ad17a0a59171",
          "_outcomes": [
            {
              "displayName": "Patched",
              "id": "PATCHED",
            },
            {
              "displayName": "Failed",
              "id": "FAILURE",
            },
          ],
          "_rev": "942151331",
          "_type": {
            "_id": "PatchObjectNode",
            "collection": true,
            "name": "Patch Object",
          },
          "identityAttribute": "userName",
          "identityResource": "managed/alpha_user",
          "ignoredFields": [],
          "patchAsObject": false,
        },
        "94c253f9-cfdd-4305-9c19-93ed9c53cfd5": {
          "_id": "94c253f9-cfdd-4305-9c19-93ed9c53cfd5",
          "_outcomes": [
            {
              "displayName": "true",
              "id": "true",
            },
          ],
          "_rev": "-866903792",
          "_type": {
            "_id": "ScriptedDecisionNode",
            "collection": true,
            "name": "Scripted Decision",
          },
          "inputs": [
            "*",
          ],
          "outcomes": [
            "true",
          ],
          "outputs": [
            "*",
          ],
          "script": "e0ba741b-c952-4062-9899-0b1c19237ee4",
        },
        "a5da6711-9da3-47e4-80b9-bd4f7417cc3e": {
          "_id": "a5da6711-9da3-47e4-80b9-bd4f7417cc3e",
          "_outcomes": [
            {
              "displayName": "Social Login",
              "id": "Social Login",
            },
            {
              "displayName": "Shared State Only",
              "id": "Shared State Only",
            },
            {
              "displayName": "Transient State Only",
              "id": "Transient State Only",
            },
            {
              "displayName": "Both States",
              "id": "Both States",
            },
          ],
          "_rev": "657857192",
          "_type": {
            "_id": "PageNode",
            "collection": true,
            "name": "Page Node",
          },
          "nodes": [
            {
              "_id": "18441eef-67ff-4b39-bffa-b281e01024da",
              "displayName": "Flow Prompt",
              "nodeType": "ChoiceCollectorNode",
            },
          ],
          "pageDescription": {
            "en": "This journey demonstrates the confusing issue with shared/transient/secure state values.<p>If you want to see the original issue as reported in FRAAS-7955, select <b>Social Login</b><p>If you want to simulate specific behavior rather than doing social login, select any of the other options.",
          },
          "pageHeader": {
            "en": "Select Flow",
          },
          "stage": "themeId=Expanse",
        },
        "a758f47a-03c7-48f7-891e-c2ce2b9ccbc4": {
          "_id": "a758f47a-03c7-48f7-891e-c2ce2b9ccbc4",
          "_outcomes": [
            {
              "displayName": "true",
              "id": "true",
            },
          ],
          "_rev": "1907228126",
          "_type": {
            "_id": "ScriptedDecisionNode",
            "collection": true,
            "name": "Scripted Decision",
          },
          "inputs": [
            "*",
          ],
          "outcomes": [
            "true",
          ],
          "outputs": [
            "*",
          ],
          "script": "dedbc9f6-7fc9-4332-a330-55f7aeb95e78",
        },
        "ac343c90-0781-45aa-b697-d18647d7290a": {
          "_id": "ac343c90-0781-45aa-b697-d18647d7290a",
          "_outcomes": [
            {
              "displayName": "true",
              "id": "true",
            },
          ],
          "_rev": "-379414876",
          "_type": {
            "_id": "ScriptedDecisionNode",
            "collection": true,
            "name": "Scripted Decision",
          },
          "inputs": [
            "*",
          ],
          "outcomes": [
            "true",
          ],
          "outputs": [
            "*",
          ],
          "script": "38f698de-fe11-43d2-8480-44e1312d121d",
        },
        "e26cf4b4-a15e-4b43-b2ce-db5f757aa4e0": {
          "_id": "e26cf4b4-a15e-4b43-b2ce-db5f757aa4e0",
          "_outcomes": [
            {
              "displayName": "true",
              "id": "true",
            },
          ],
          "_rev": "-1450455589",
          "_type": {
            "_id": "ScriptedDecisionNode",
            "collection": true,
            "name": "Scripted Decision",
          },
          "inputs": [
            "*",
          ],
          "outcomes": [
            "true",
          ],
          "outputs": [
            "*",
          ],
          "script": "e0ba741b-c952-4062-9899-0b1c19237ee4",
        },
        "e31ee016-1a31-47bd-bd9e-02f4feba8dec": {
          "_id": "e31ee016-1a31-47bd-bd9e-02f4feba8dec",
          "_outcomes": [
            {
              "displayName": "Social Authentication",
              "id": "socialAuthentication",
            },
          ],
          "_rev": "-66409923",
          "_type": {
            "_id": "PageNode",
            "collection": true,
            "name": "Page Node",
          },
          "nodes": [
            {
              "_id": "cca3c057-5366-4f7c-a77b-cbfab7a27767",
              "displayName": "Select IDP",
              "nodeType": "SelectIdPNode",
            },
          ],
          "pageDescription": {},
          "pageHeader": {},
        },
        "fc5a2f53-8046-4e63-8d45-ef106a91aba5": {
          "_id": "fc5a2f53-8046-4e63-8d45-ef106a91aba5",
          "_outcomes": [
            {
              "displayName": "true",
              "id": "true",
            },
          ],
          "_rev": "-1885334889",
          "_type": {
            "_id": "ScriptedDecisionNode",
            "collection": true,
            "name": "Scripted Decision",
          },
          "inputs": [
            "*",
          ],
          "outcomes": [
            "true",
          ],
          "outputs": [
            "*",
          ],
          "script": "073a64d4-37c9-486d-8c59-6583494644b9",
        },
      },
      "saml2Entities": {},
      "scripts": {},
      "socialIdentityProviders": {},
      "themes": [],
      "tree": {
        "_id": "FRAAS-7955",
        "_rev": "-147295756",
        "description": "Showcase the issue documented in FRAAS-7955",
        "enabled": true,
        "entryNodeId": "a5da6711-9da3-47e4-80b9-bd4f7417cc3e",
        "identityResource": "managed/alpha_user",
        "nodes": {
          "3a87190e-83f6-4163-a948-72b6d45c508c": {
            "connections": {
              "false": "6886d507-23a3-4038-a197-042bc1a4973a",
              "true": "7ca2ac47-572f-444a-8446-ad17a0a59171",
            },
            "displayName": "Find by userName",
            "nodeType": "IdentifyExistingUserNode",
            "x": 1370,
            "y": 206.015625,
          },
          "48a1a6f8-5dda-4aa0-92e2-e24a6e96f4d3": {
            "connections": {
              "ACCOUNT_EXISTS": "64210c6e-a23d-4d25-9bf4-c2499acb6b69",
              "NO_ACCOUNT": "64210c6e-a23d-4d25-9bf4-c2499acb6b69",
            },
            "displayName": "Social Login",
            "nodeType": "SocialProviderHandlerNode",
            "x": 630,
            "y": 70.015625,
          },
          "4d04321c-20f9-4784-be65-8b40edef8835": {
            "connections": {
              "true": "e301438c-0bd0-429c-ab0c-66126501069a",
            },
            "displayName": "Review Values",
            "nodeType": "PageNode",
            "x": 2032,
            "y": 173.015625,
          },
          "4f3b6b7d-42ba-43b3-9e77-43d52b8c90a8": {
            "connections": {
              "outcome": "3a87190e-83f6-4163-a948-72b6d45c508c",
            },
            "displayName": "Display Form",
            "nodeType": "PageNode",
            "x": 1142,
            "y": 205.015625,
          },
          "508fe7da-5dd5-453b-bb9f-62f0e5430b9d": {
            "connections": {
              "true": "e26cf4b4-a15e-4b43-b2ce-db5f757aa4e0",
            },
            "displayName": "Create Error Dialog",
            "nodeType": "PageNode",
            "x": 2034,
            "y": 445.015625,
          },
          "64210c6e-a23d-4d25-9bf4-c2499acb6b69": {
            "connections": {
              "true": "4f3b6b7d-42ba-43b3-9e77-43d52b8c90a8",
            },
            "displayName": "Display States",
            "nodeType": "PageNode",
            "x": 908,
            "y": 204.015625,
          },
          "6886d507-23a3-4038-a197-042bc1a4973a": {
            "connections": {
              "CREATED": "4d04321c-20f9-4784-be65-8b40edef8835",
              "FAILURE": "508fe7da-5dd5-453b-bb9f-62f0e5430b9d",
            },
            "displayName": "Create Object",
            "nodeType": "CreateObjectNode",
            "x": 1788,
            "y": 324.015625,
          },
          "7c7f26d9-3a11-4936-b714-27a0bb1ba868": {
            "connections": {
              "true": "94c253f9-cfdd-4305-9c19-93ed9c53cfd5",
            },
            "displayName": "Patch Error Dialog",
            "nodeType": "PageNode",
            "x": 2032,
            "y": 3.015625,
          },
          "7ca2ac47-572f-444a-8446-ad17a0a59171": {
            "connections": {
              "FAILURE": "7c7f26d9-3a11-4936-b714-27a0bb1ba868",
              "PATCHED": "4d04321c-20f9-4784-be65-8b40edef8835",
            },
            "displayName": "Patch Object",
            "nodeType": "PatchObjectNode",
            "x": 1789,
            "y": 136.015625,
          },
          "94c253f9-cfdd-4305-9c19-93ed9c53cfd5": {
            "connections": {
              "true": "7ca2ac47-572f-444a-8446-ad17a0a59171",
            },
            "displayName": "Apply Workaround",
            "nodeType": "ScriptedDecisionNode",
            "x": 2266,
            "y": 36.015625,
          },
          "a5da6711-9da3-47e4-80b9-bd4f7417cc3e": {
            "connections": {
              "Both States": "ac343c90-0781-45aa-b697-d18647d7290a",
              "Shared State Only": "a758f47a-03c7-48f7-891e-c2ce2b9ccbc4",
              "Social Login": "e31ee016-1a31-47bd-bd9e-02f4feba8dec",
              "Transient State Only": "fc5a2f53-8046-4e63-8d45-ef106a91aba5",
            },
            "displayName": "Select Flow",
            "nodeType": "PageNode",
            "x": 158,
            "y": 181.015625,
          },
          "a758f47a-03c7-48f7-891e-c2ce2b9ccbc4": {
            "connections": {
              "true": "64210c6e-a23d-4d25-9bf4-c2499acb6b69",
            },
            "displayName": "Shared State Only",
            "nodeType": "ScriptedDecisionNode",
            "x": 631,
            "y": 204.015625,
          },
          "ac343c90-0781-45aa-b697-d18647d7290a": {
            "connections": {
              "true": "64210c6e-a23d-4d25-9bf4-c2499acb6b69",
            },
            "displayName": "Both States",
            "nodeType": "ScriptedDecisionNode",
            "x": 632,
            "y": 365.015625,
          },
          "e26cf4b4-a15e-4b43-b2ce-db5f757aa4e0": {
            "connections": {
              "true": "6886d507-23a3-4038-a197-042bc1a4973a",
            },
            "displayName": "Apply Workaround",
            "nodeType": "ScriptedDecisionNode",
            "x": 2263,
            "y": 478.015625,
          },
          "e31ee016-1a31-47bd-bd9e-02f4feba8dec": {
            "connections": {
              "socialAuthentication": "48a1a6f8-5dda-4aa0-92e2-e24a6e96f4d3",
            },
            "displayName": "Page Node",
            "nodeType": "PageNode",
            "x": 398,
            "y": 68.015625,
          },
          "fc5a2f53-8046-4e63-8d45-ef106a91aba5": {
            "connections": {
              "true": "64210c6e-a23d-4d25-9bf4-c2499acb6b69",
            },
            "displayName": "Transient State Only",
            "nodeType": "ScriptedDecisionNode",
            "x": 633,
            "y": 283.015625,
          },
        },
        "staticNodes": {
          "70e691a5-1e33-4ac3-a356-e7b6d60d92e0": {
            "x": 51,
            "y": 59,
          },
          "e301438c-0bd0-429c-ab0c-66126501069a": {
            "x": 2367,
            "y": 250,
          },
          "startNode": {
            "x": 50,
            "y": 250,
          },
        },
        "uiConfig": {
          "categories": "["Prototype","Jira"]",
        },
      },
    },
    "FindUser": {
      "circlesOfTrust": {},
      "emailTemplates": {},
      "innerNodes": {},
      "nodes": {
        "1052ff5b-377c-41b6-86e1-9bb69133d8e9": {
          "_id": "1052ff5b-377c-41b6-86e1-9bb69133d8e9",
          "_outcomes": [
            {
              "displayName": "Outcome",
              "id": "outcome",
            },
          ],
          "_rev": "1021378251",
          "_type": {
            "_id": "ValidatedUsernameNode",
            "collection": true,
            "name": "Platform Username",
          },
          "usernameAttribute": "userName",
          "validateInput": false,
        },
        "24db2507-d404-494a-8599-7b47193b2fee": {
          "_id": "24db2507-d404-494a-8599-7b47193b2fee",
          "_outcomes": [
            {
              "displayName": "True",
              "id": "true",
            },
            {
              "displayName": "False",
              "id": "false",
            },
          ],
          "_rev": "-1841795812",
          "_type": {
            "_id": "MessageNode",
            "collection": true,
            "name": "Message Node",
          },
          "message": {
            "en": "Found!",
          },
          "messageNo": {},
          "messageYes": {},
        },
        "2c8e1732-b891-4fee-ba46-c8605625e1a7": {
          "_id": "2c8e1732-b891-4fee-ba46-c8605625e1a7",
          "_outcomes": [
            {
              "displayName": "True",
              "id": "true",
            },
            {
              "displayName": "False",
              "id": "false",
            },
          ],
          "_rev": "951964560",
          "_type": {
            "_id": "MessageNode",
            "collection": true,
            "name": "Message Node",
          },
          "message": {
            "en": "Not Found!",
          },
          "messageNo": {},
          "messageYes": {},
        },
        "7a31d486-d4ef-4390-ab59-47b11f959fb3": {
          "_id": "7a31d486-d4ef-4390-ab59-47b11f959fb3",
          "_outcomes": [
            {
              "displayName": "Outcome",
              "id": "outcome",
            },
          ],
          "_rev": "-2027326084",
          "_type": {
            "_id": "TimerStartNode",
            "collection": true,
            "name": "Timer Start",
          },
          "startTimeProperty": "TimerNodeStartTime",
        },
        "f61d9892-6aee-45b5-a376-5b9210552a3c": {
          "_id": "f61d9892-6aee-45b5-a376-5b9210552a3c",
          "_outcomes": [
            {
              "displayName": "Outcome",
              "id": "outcome",
            },
          ],
          "_rev": "1406073910",
          "_type": {
            "_id": "TimerStopNode",
            "collection": true,
            "name": "Timer Stop",
          },
          "metricKey": "IdentifyExistingUserTime",
          "startTimeProperty": "TimerNodeStartTime",
        },
        "faff755b-91cb-4da8-8d14-de63982ba350": {
          "_id": "faff755b-91cb-4da8-8d14-de63982ba350",
          "_outcomes": [
            {
              "displayName": "True",
              "id": "true",
            },
            {
              "displayName": "False",
              "id": "false",
            },
          ],
          "_rev": "2086530230",
          "_type": {
            "_id": "IdentifyExistingUserNode",
            "collection": true,
            "name": "Identify Existing User",
          },
          "identifier": "userName",
          "identityAttribute": "telephoneNumber",
        },
      },
      "saml2Entities": {},
      "scripts": {},
      "socialIdentityProviders": {},
      "themes": [],
      "tree": {
        "_id": "FindUser",
        "_rev": "2023160307",
        "enabled": true,
        "entryNodeId": "1052ff5b-377c-41b6-86e1-9bb69133d8e9",
        "identityResource": "managed/alpha_user",
        "nodes": {
          "1052ff5b-377c-41b6-86e1-9bb69133d8e9": {
            "connections": {
              "outcome": "7a31d486-d4ef-4390-ab59-47b11f959fb3",
            },
            "displayName": "Platform Username",
            "nodeType": "ValidatedUsernameNode",
            "x": 172,
            "y": 257.015625,
          },
          "24db2507-d404-494a-8599-7b47193b2fee": {
            "connections": {
              "false": "e301438c-0bd0-429c-ab0c-66126501069a",
              "true": "70e691a5-1e33-4ac3-a356-e7b6d60d92e0",
            },
            "displayName": "Found",
            "nodeType": "MessageNode",
            "x": 607,
            "y": 176.015625,
          },
          "2c8e1732-b891-4fee-ba46-c8605625e1a7": {
            "connections": {
              "false": "e301438c-0bd0-429c-ab0c-66126501069a",
              "true": "70e691a5-1e33-4ac3-a356-e7b6d60d92e0",
            },
            "displayName": "Not Found",
            "nodeType": "MessageNode",
            "x": 613,
            "y": 314.015625,
          },
          "7a31d486-d4ef-4390-ab59-47b11f959fb3": {
            "connections": {
              "outcome": "faff755b-91cb-4da8-8d14-de63982ba350",
            },
            "displayName": "Timer Start",
            "nodeType": "TimerStartNode",
            "x": 280,
            "y": 141.015625,
          },
          "f61d9892-6aee-45b5-a376-5b9210552a3c": {
            "connections": {
              "outcome": "24db2507-d404-494a-8599-7b47193b2fee",
            },
            "displayName": "Timer Stop",
            "nodeType": "TimerStopNode",
            "x": 511,
            "y": 91.015625,
          },
          "faff755b-91cb-4da8-8d14-de63982ba350": {
            "connections": {
              "false": "2c8e1732-b891-4fee-ba46-c8605625e1a7",
              "true": "f61d9892-6aee-45b5-a376-5b9210552a3c",
            },
            "displayName": "Identify Existing User",
            "nodeType": "IdentifyExistingUserNode",
            "x": 389,
            "y": 235.015625,
          },
        },
        "staticNodes": {
          "70e691a5-1e33-4ac3-a356-e7b6d60d92e0": {
            "x": 823,
            "y": 116,
          },
          "e301438c-0bd0-429c-ab0c-66126501069a": {
            "x": 833,
            "y": 462,
          },
          "startNode": {
            "x": 50,
            "y": 250,
          },
        },
        "uiConfig": {
          "categories": "["Prototype"]",
        },
      },
    },
    "FindUserFromSession": {
      "circlesOfTrust": {},
      "emailTemplates": {},
      "innerNodes": {},
      "nodes": {
        "0a44afd5-467f-4a88-bd7a-a72abd6a0f8a": {
          "_id": "0a44afd5-467f-4a88-bd7a-a72abd6a0f8a",
          "_outcomes": [
            {
              "displayName": "true",
              "id": "true",
            },
            {
              "displayName": "false",
              "id": "false",
            },
          ],
          "_rev": "-802780812",
          "_type": {
            "_id": "ScriptedDecisionNode",
            "collection": true,
            "name": "Scripted Decision",
          },
          "inputs": [
            "*",
          ],
          "outcomes": [
            "true",
            "false",
          ],
          "outputs": [
            "*",
          ],
          "script": "616d3541-14d6-4a54-94dd-46a146ef2423",
        },
        "16b25ad2-b944-4aac-8ba0-f1275f20955f": {
          "_id": "16b25ad2-b944-4aac-8ba0-f1275f20955f",
          "_outcomes": [
            {
              "displayName": "True",
              "id": "true",
            },
            {
              "displayName": "False",
              "id": "false",
            },
          ],
          "_rev": "-1584144112",
          "_type": {
            "_id": "IdentifyExistingUserNode",
            "collection": true,
            "name": "Identify Existing User",
          },
          "identifier": "userName",
          "identityAttribute": "userName",
        },
        "52d26d7c-6bf4-473a-8b7c-9b4f3b01f02a": {
          "_id": "52d26d7c-6bf4-473a-8b7c-9b4f3b01f02a",
          "_outcomes": [
            {
              "displayName": "Outcome",
              "id": "outcome",
            },
          ],
          "_rev": "-1762901915",
          "_type": {
            "_id": "SessionDataNode",
            "collection": true,
            "name": "Get Session Data",
          },
          "sessionDataKey": "UserId",
          "sharedStateKey": "_id",
        },
        "5c776037-a86f-4217-880a-545c10a82d7a": {
          "_id": "5c776037-a86f-4217-880a-545c10a82d7a",
          "_outcomes": [
            {
              "displayName": "true",
              "id": "true",
            },
          ],
          "_rev": "1299695511",
          "_type": {
            "_id": "ScriptedDecisionNode",
            "collection": true,
            "name": "Scripted Decision",
          },
          "inputs": [
            "*",
          ],
          "outcomes": [
            "true",
          ],
          "outputs": [
            "*",
          ],
          "script": "50cde102-d4b6-44c4-9ba7-8564af05ae08",
        },
      },
      "saml2Entities": {},
      "scripts": {},
      "socialIdentityProviders": {},
      "themes": [],
      "tree": {
        "_id": "FindUserFromSession",
        "_rev": "2060398341",
        "description": "Find the logged in user from session.",
        "enabled": true,
        "entryNodeId": "5c776037-a86f-4217-880a-545c10a82d7a",
        "identityResource": "managed/alpha_user",
        "nodes": {
          "0a44afd5-467f-4a88-bd7a-a72abd6a0f8a": {
            "connections": {
              "false": "e301438c-0bd0-429c-ab0c-66126501069a",
              "true": "52d26d7c-6bf4-473a-8b7c-9b4f3b01f02a",
            },
            "displayName": "Existing Session?",
            "nodeType": "ScriptedDecisionNode",
            "x": 170,
            "y": 217.015625,
          },
          "16b25ad2-b944-4aac-8ba0-f1275f20955f": {
            "connections": {
              "false": "e301438c-0bd0-429c-ab0c-66126501069a",
              "true": "70e691a5-1e33-4ac3-a356-e7b6d60d92e0",
            },
            "displayName": "Lookup Profile",
            "nodeType": "IdentifyExistingUserNode",
            "x": 378,
            "y": 216.015625,
          },
          "52d26d7c-6bf4-473a-8b7c-9b4f3b01f02a": {
            "connections": {
              "outcome": "16b25ad2-b944-4aac-8ba0-f1275f20955f",
            },
            "displayName": "Get Session Data",
            "nodeType": "SessionDataNode",
            "x": 171,
            "y": 334.015625,
          },
          "5c776037-a86f-4217-880a-545c10a82d7a": {
            "connections": {
              "true": "0a44afd5-467f-4a88-bd7a-a72abd6a0f8a",
            },
            "displayName": "Select Theme",
            "nodeType": "ScriptedDecisionNode",
            "x": 170,
            "y": 150.015625,
          },
        },
        "staticNodes": {
          "70e691a5-1e33-4ac3-a356-e7b6d60d92e0": {
            "x": 632,
            "y": 147,
          },
          "e301438c-0bd0-429c-ab0c-66126501069a": {
            "x": 635,
            "y": 353,
          },
          "startNode": {
            "x": 50,
            "y": 250,
          },
        },
        "uiConfig": {
          "categories": "["Helper","Proof Of Concept","Prototype"]",
        },
      },
    },
    "ForgottenUsername": {
      "circlesOfTrust": {},
      "emailTemplates": {},
      "innerNodes": {
        "86b37aad-8ea0-4d42-ad05-e394e8e22124": {
          "_id": "86b37aad-8ea0-4d42-ad05-e394e8e22124",
          "_outcomes": [
            {
              "displayName": "Outcome",
              "id": "outcome",
            },
          ],
          "_rev": "-985783122",
          "_type": {
            "_id": "AttributeCollectorNode",
            "collection": true,
            "name": "Attribute Collector",
          },
          "attributesToCollect": [
            "mail",
          ],
          "identityAttribute": "mail",
          "required": true,
          "validateInputs": false,
        },
      },
      "nodes": {
        "154bbf72-7928-4541-9e81-e6a42b7cd5ce": {
          "_id": "154bbf72-7928-4541-9e81-e6a42b7cd5ce",
          "_outcomes": [
            {
              "displayName": "Outcome",
              "id": "outcome",
            },
          ],
          "_rev": "1662466496",
          "_type": {
            "_id": "PageNode",
            "collection": true,
            "name": "Page Node",
          },
          "nodes": [
            {
              "_id": "86b37aad-8ea0-4d42-ad05-e394e8e22124",
              "displayName": "Attribute Collector",
              "nodeType": "AttributeCollectorNode",
            },
          ],
          "pageDescription": {
            "en": "Enter your email address or <a href="#/service/Login">Sign in</a>",
          },
          "pageHeader": {
            "en": "Forgotten Username",
          },
        },
        "40e67f58-e027-4588-80dc-72c728ca1646": {
          "_id": "40e67f58-e027-4588-80dc-72c728ca1646",
          "_outcomes": [
            {
              "displayName": "Outcome",
              "id": "outcome",
            },
          ],
          "_rev": "-1698538060",
          "_type": {
            "_id": "EmailSuspendNode",
            "collection": true,
            "name": "Email Suspend Node",
          },
          "emailAttribute": "mail",
          "emailSuspendMessage": {
            "en": "An email has been sent to the address you entered. Click the link in that email to proceed.",
          },
          "emailTemplateName": "forgottenUsername",
          "identityAttribute": "mail",
          "objectLookup": true,
        },
        "c06aa309-4a0b-49e2-a3a9-bc13de0f87d1": {
          "_id": "c06aa309-4a0b-49e2-a3a9-bc13de0f87d1",
          "_outcomes": [
            {
              "displayName": "True",
              "id": "true",
            },
            {
              "displayName": "False",
              "id": "false",
            },
          ],
          "_rev": "1482233929",
          "_type": {
            "_id": "IdentifyExistingUserNode",
            "collection": true,
            "name": "Identify Existing User",
          },
          "identifier": "userName",
          "identityAttribute": "mail",
        },
        "d50c645e-e980-407e-b79e-870cb099f123": {
          "_id": "d50c645e-e980-407e-b79e-870cb099f123",
          "_outcomes": [
            {
              "displayName": "True",
              "id": "true",
            },
            {
              "displayName": "False",
              "id": "false",
            },
          ],
          "_rev": "1697956051",
          "_type": {
            "_id": "InnerTreeEvaluatorNode",
            "collection": true,
            "name": "Inner Tree Evaluator",
          },
          "tree": "Login",
        },
      },
      "saml2Entities": {},
      "scripts": {},
      "socialIdentityProviders": {},
      "themes": [],
      "tree": {
        "_id": "ForgottenUsername",
        "_rev": "906006051",
        "description": "Forgotten Username Tree",
        "enabled": true,
        "entryNodeId": "154bbf72-7928-4541-9e81-e6a42b7cd5ce",
        "identityResource": "managed/alpha_user",
        "nodes": {
          "154bbf72-7928-4541-9e81-e6a42b7cd5ce": {
            "connections": {
              "outcome": "c06aa309-4a0b-49e2-a3a9-bc13de0f87d1",
            },
            "displayName": "Page Node",
            "nodeType": "PageNode",
            "x": 139,
            "y": 146,
          },
          "40e67f58-e027-4588-80dc-72c728ca1646": {
            "connections": {
              "outcome": "d50c645e-e980-407e-b79e-870cb099f123",
            },
            "displayName": "Email Suspend Node",
            "nodeType": "EmailSuspendNode",
            "x": 563,
            "y": 193,
          },
          "c06aa309-4a0b-49e2-a3a9-bc13de0f87d1": {
            "connections": {
              "false": "40e67f58-e027-4588-80dc-72c728ca1646",
              "true": "40e67f58-e027-4588-80dc-72c728ca1646",
            },
            "displayName": "Identify Existing User",
            "nodeType": "IdentifyExistingUserNode",
            "x": 324,
            "y": 152,
          },
          "d50c645e-e980-407e-b79e-870cb099f123": {
            "connections": {
              "false": "e301438c-0bd0-429c-ab0c-66126501069a",
              "true": "70e691a5-1e33-4ac3-a356-e7b6d60d92e0",
            },
            "displayName": "Inner Tree Evaluator",
            "nodeType": "InnerTreeEvaluatorNode",
            "x": 767,
            "y": 188,
          },
        },
        "staticNodes": {
          "70e691a5-1e33-4ac3-a356-e7b6d60d92e0": {
            "x": 970,
            "y": 149,
          },
          "e301438c-0bd0-429c-ab0c-66126501069a": {
            "x": 982,
            "y": 252,
          },
          "startNode": {
            "x": 50,
            "y": 25,
          },
        },
        "uiConfig": {
          "categories": "["Self-Service"]",
        },
      },
    },
    "FraudRisk": {
      "circlesOfTrust": {},
      "emailTemplates": {},
      "innerNodes": {
        "3fbec2c9-5c91-4f37-939e-07c34b65d506": {
          "_id": "3fbec2c9-5c91-4f37-939e-07c34b65d506",
          "_outcomes": [
            {
              "displayName": "true",
              "id": "true",
            },
          ],
          "_rev": "-2059166571",
          "_type": {
            "_id": "ScriptedDecisionNode",
            "collection": true,
            "name": "Scripted Decision",
          },
          "inputs": [
            "*",
          ],
          "outcomes": [
            "true",
          ],
          "outputs": [
            "*",
          ],
          "script": "9535446c-0ff6-4a76-8576-616599119d64",
        },
      },
      "nodes": {
        "479d0a12-bed6-43c0-a719-261e78e801d6": {
          "_id": "479d0a12-bed6-43c0-a719-261e78e801d6",
          "_outcomes": [
            {
              "displayName": "low",
              "id": "low",
            },
            {
              "displayName": "suspicious",
              "id": "suspicious",
            },
            {
              "displayName": "high",
              "id": "high",
            },
            {
              "displayName": "unknown",
              "id": "unknown",
            },
          ],
          "_rev": "-105276745",
          "_type": {
            "_id": "ScriptedDecisionNode",
            "collection": true,
            "name": "Scripted Decision",
          },
          "inputs": [
            "*",
          ],
          "outcomes": [
            "low",
            "suspicious",
            "high",
            "unknown",
          ],
          "outputs": [
            "*",
          ],
          "script": "a186232a-683d-48ce-8893-d6f92652ec82",
        },
        "4e38f6f2-0f90-484b-8293-8893f0cda920": {
          "_id": "4e38f6f2-0f90-484b-8293-8893f0cda920",
          "_outcomes": [
            {
              "displayName": "true",
              "id": "true",
            },
          ],
          "_rev": "1345784157",
          "_type": {
            "_id": "PageNode",
            "collection": true,
            "name": "Page Node",
          },
          "nodes": [
            {
              "_id": "3fbec2c9-5c91-4f37-939e-07c34b65d506",
              "displayName": "Remove Button",
              "nodeType": "ScriptedDecisionNode",
            },
          ],
          "pageDescription": {
            "en": "Your session has been flagged as potentially fraudulent. Please use a different device from a different location to access our services. Thank you!",
          },
          "pageHeader": {
            "en": "Fraud Alert! Access Blocked.",
          },
        },
        "601c9bf9-3ce1-4b33-941f-cf91ab9b077d": {
          "_id": "601c9bf9-3ce1-4b33-941f-cf91ab9b077d",
          "_outcomes": [
            {
              "displayName": "Email Sent",
              "id": "EMAIL_SENT",
            },
            {
              "displayName": "Email Not Sent",
              "id": "EMAIL_NOT_SENT",
            },
          ],
          "_rev": "599003434",
          "_type": {
            "_id": "EmailTemplateNode",
            "collection": true,
            "name": "Email Template Node",
          },
          "emailAttribute": "mail",
          "emailTemplateName": "FraudNotification",
          "identityAttribute": "userName",
        },
        "7e930b1f-3ba0-4b6c-afbe-3f648c719200": {
          "_id": "7e930b1f-3ba0-4b6c-afbe-3f648c719200",
          "_outcomes": [
            {
              "displayName": "True",
              "id": "true",
            },
            {
              "displayName": "False",
              "id": "false",
            },
          ],
          "_rev": "1682697977",
          "_type": {
            "_id": "IdentifyExistingUserNode",
            "collection": true,
            "name": "Identify Existing User",
          },
          "identifier": "userName",
          "identityAttribute": "userName",
        },
        "a534a7fc-a337-45c3-a8a1-faed6414c07c": {
          "_id": "a534a7fc-a337-45c3-a8a1-faed6414c07c",
          "_outcomes": [
            {
              "displayName": "True",
              "id": "true",
            },
            {
              "displayName": "False",
              "id": "false",
            },
          ],
          "_rev": "1875920954",
          "_type": {
            "_id": "IdentifyExistingUserNode",
            "collection": true,
            "name": "Identify Existing User",
          },
          "identifier": "userName",
          "identityAttribute": "userName",
        },
        "f283ba5c-31a0-4f1e-bd45-1d3c0087aa11": {
          "_id": "f283ba5c-31a0-4f1e-bd45-1d3c0087aa11",
          "_outcomes": [
            {
              "displayName": "Email Sent",
              "id": "EMAIL_SENT",
            },
            {
              "displayName": "Email Not Sent",
              "id": "EMAIL_NOT_SENT",
            },
          ],
          "_rev": "-1249548281",
          "_type": {
            "_id": "EmailTemplateNode",
            "collection": true,
            "name": "Email Template Node",
          },
          "emailAttribute": "mail",
          "emailTemplateName": "FraudNotification",
          "identityAttribute": "userName",
        },
      },
      "saml2Entities": {},
      "scripts": {},
      "socialIdentityProviders": {},
      "themes": [],
      "tree": {
        "_id": "FraudRisk",
        "_rev": "-1017117628",
        "enabled": true,
        "entryNodeId": "479d0a12-bed6-43c0-a719-261e78e801d6",
        "identityResource": "managed/alpha_user",
        "nodes": {
          "479d0a12-bed6-43c0-a719-261e78e801d6": {
            "connections": {
              "high": "a534a7fc-a337-45c3-a8a1-faed6414c07c",
              "low": "70e691a5-1e33-4ac3-a356-e7b6d60d92e0",
              "suspicious": "7e930b1f-3ba0-4b6c-afbe-3f648c719200",
              "unknown": "70e691a5-1e33-4ac3-a356-e7b6d60d92e0",
            },
            "displayName": "Get Fraud Risk",
            "nodeType": "ScriptedDecisionNode",
            "x": 163,
            "y": 204.76666259765625,
          },
          "4e38f6f2-0f90-484b-8293-8893f0cda920": {
            "connections": {
              "true": "e301438c-0bd0-429c-ab0c-66126501069a",
            },
            "displayName": "Fraud Dialog",
            "nodeType": "PageNode",
            "x": 778,
            "y": 501.76666259765625,
          },
          "601c9bf9-3ce1-4b33-941f-cf91ab9b077d": {
            "connections": {
              "EMAIL_NOT_SENT": "4e38f6f2-0f90-484b-8293-8893f0cda920",
              "EMAIL_SENT": "4e38f6f2-0f90-484b-8293-8893f0cda920",
            },
            "displayName": "Notify User",
            "nodeType": "EmailTemplateNode",
            "x": 565,
            "y": 508.76666259765625,
          },
          "7e930b1f-3ba0-4b6c-afbe-3f648c719200": {
            "connections": {
              "false": "70e691a5-1e33-4ac3-a356-e7b6d60d92e0",
              "true": "f283ba5c-31a0-4f1e-bd45-1d3c0087aa11",
            },
            "displayName": "Known User?",
            "nodeType": "IdentifyExistingUserNode",
            "x": 357,
            "y": 343.76666259765625,
          },
          "a534a7fc-a337-45c3-a8a1-faed6414c07c": {
            "connections": {
              "false": "4e38f6f2-0f90-484b-8293-8893f0cda920",
              "true": "601c9bf9-3ce1-4b33-941f-cf91ab9b077d",
            },
            "displayName": "Known User?",
            "nodeType": "IdentifyExistingUserNode",
            "x": 355,
            "y": 507.76666259765625,
          },
          "f283ba5c-31a0-4f1e-bd45-1d3c0087aa11": {
            "connections": {
              "EMAIL_NOT_SENT": "70e691a5-1e33-4ac3-a356-e7b6d60d92e0",
              "EMAIL_SENT": "70e691a5-1e33-4ac3-a356-e7b6d60d92e0",
            },
            "displayName": "Notify User",
            "nodeType": "EmailTemplateNode",
            "x": 563,
            "y": 343.76666259765625,
          },
        },
        "staticNodes": {
          "70e691a5-1e33-4ac3-a356-e7b6d60d92e0": {
            "x": 996,
            "y": 141,
          },
          "e301438c-0bd0-429c-ab0c-66126501069a": {
            "x": 988,
            "y": 535,
          },
          "startNode": {
            "x": 50,
            "y": 250,
          },
        },
        "uiConfig": {
          "categories": "["Adaptive","Helper","Proof Of Concept"]",
        },
      },
    },
    "Hash": {
      "circlesOfTrust": {},
      "emailTemplates": {},
      "innerNodes": {
        "33a91744-0e78-4353-838d-4459c66bc462": {
          "_id": "33a91744-0e78-4353-838d-4459c66bc462",
          "_outcomes": [
            {
              "displayName": "True",
              "id": "true",
            },
            {
              "displayName": "False",
              "id": "false",
            },
          ],
          "_rev": "-430790982",
          "_type": {
            "_id": "MessageNode",
            "collection": true,
            "name": "Message Node",
          },
          "message": {
            "en": "Hash another value?",
          },
          "messageNo": {
            "en": "No",
          },
          "messageYes": {
            "en": "Yes",
          },
        },
        "8c61fb06-630e-413f-82ac-098111096f2c": {
          "_id": "8c61fb06-630e-413f-82ac-098111096f2c",
          "_outcomes": [
            {
              "displayName": "Outcome",
              "id": "outcome",
            },
          ],
          "_rev": "-1077158040",
          "_type": {
            "_id": "DisplayUserNameNode",
            "collection": true,
            "name": "Display Username",
          },
          "identityAttribute": "mail",
          "userName": "userName",
        },
        "b95e668b-898b-45d9-ae77-09b4fcbb9bd0": {
          "_id": "b95e668b-898b-45d9-ae77-09b4fcbb9bd0",
          "_outcomes": [
            {
              "displayName": "Outcome",
              "id": "outcome",
            },
          ],
          "_rev": "-308087965",
          "_type": {
            "_id": "ValidatedUsernameNode",
            "collection": true,
            "name": "Platform Username",
          },
          "usernameAttribute": "userName",
          "validateInput": false,
        },
      },
      "nodes": {
        "39eae734-a518-459b-9a67-a9f968bff9a0": {
          "_id": "39eae734-a518-459b-9a67-a9f968bff9a0",
          "_outcomes": [
            {
              "displayName": "True",
              "id": "true",
            },
            {
              "displayName": "False",
              "id": "false",
            },
          ],
          "_rev": "1042234572",
          "_type": {
            "_id": "PageNode",
            "collection": true,
            "name": "Page Node",
          },
          "nodes": [
            {
              "_id": "8c61fb06-630e-413f-82ac-098111096f2c",
              "displayName": "Display Username",
              "nodeType": "DisplayUserNameNode",
            },
            {
              "_id": "33a91744-0e78-4353-838d-4459c66bc462",
              "displayName": "Again?",
              "nodeType": "MessageNode",
            },
          ],
          "pageDescription": {},
          "pageHeader": {
            "en": "Hashed Values",
          },
        },
        "a9d801c7-bc97-4b55-80ea-fd5d650a7218": {
          "_id": "a9d801c7-bc97-4b55-80ea-fd5d650a7218",
          "_outcomes": [
            {
              "displayName": "true",
              "id": "true",
            },
          ],
          "_rev": "2027136334",
          "_type": {
            "_id": "ScriptedDecisionNode",
            "collection": true,
            "name": "Scripted Decision",
          },
          "inputs": [
            "*",
          ],
          "outcomes": [
            "true",
          ],
          "outputs": [
            "*",
          ],
          "script": "a2c639ac-7ccd-4906-bb31-f6e69632c93b",
        },
        "c488b60c-56f4-44f5-8c91-36e5dc816823": {
          "_id": "c488b60c-56f4-44f5-8c91-36e5dc816823",
          "_outcomes": [
            {
              "displayName": "Outcome",
              "id": "outcome",
            },
          ],
          "_rev": "657780860",
          "_type": {
            "_id": "PageNode",
            "collection": true,
            "name": "Page Node",
          },
          "nodes": [
            {
              "_id": "b95e668b-898b-45d9-ae77-09b4fcbb9bd0",
              "displayName": "Username",
              "nodeType": "ValidatedUsernameNode",
            },
          ],
          "pageDescription": {},
          "pageHeader": {
            "en": "Value to hash",
          },
        },
      },
      "saml2Entities": {},
      "scripts": {},
      "socialIdentityProviders": {},
      "themes": [],
      "tree": {
        "_id": "Hash",
        "_rev": "-898855037",
        "description": "Hash shared state variables.",
        "enabled": true,
        "entryNodeId": "c488b60c-56f4-44f5-8c91-36e5dc816823",
        "identityResource": "managed/alpha_user",
        "nodes": {
          "39eae734-a518-459b-9a67-a9f968bff9a0": {
            "connections": {
              "false": "e301438c-0bd0-429c-ab0c-66126501069a",
              "true": "c488b60c-56f4-44f5-8c91-36e5dc816823",
            },
            "displayName": "Hashed Values",
            "nodeType": "PageNode",
            "x": 623,
            "y": 90.015625,
          },
          "a9d801c7-bc97-4b55-80ea-fd5d650a7218": {
            "connections": {
              "true": "39eae734-a518-459b-9a67-a9f968bff9a0",
            },
            "displayName": "Hash",
            "nodeType": "ScriptedDecisionNode",
            "x": 403,
            "y": 211.4722137451172,
          },
          "c488b60c-56f4-44f5-8c91-36e5dc816823": {
            "connections": {
              "outcome": "a9d801c7-bc97-4b55-80ea-fd5d650a7218",
            },
            "displayName": "Collect Data",
            "nodeType": "PageNode",
            "x": 170,
            "y": 241.015625,
          },
        },
        "staticNodes": {
          "70e691a5-1e33-4ac3-a356-e7b6d60d92e0": {
            "x": 49,
            "y": 154,
          },
          "e301438c-0bd0-429c-ab0c-66126501069a": {
            "x": 832,
            "y": 360,
          },
          "startNode": {
            "x": 50,
            "y": 250,
          },
        },
        "uiConfig": {
          "categories": "["Proof Of Concept","Prototype"]",
        },
      },
    },
    "IDV-AuthenticId": {
      "circlesOfTrust": {},
      "emailTemplates": {},
      "innerNodes": {},
      "nodes": {
        "46d8af6b-f66b-406f-82ff-e42e39ddd102": {
          "_id": "46d8af6b-f66b-406f-82ff-e42e39ddd102",
          "_outcomes": [
            {
              "displayName": "True",
              "id": "true",
            },
            {
              "displayName": "False",
              "id": "false",
            },
          ],
          "_rev": "-218878165",
          "_type": {
            "_id": "InnerTreeEvaluatorNode",
            "collection": true,
            "name": "Inner Tree Evaluator",
          },
          "tree": "AA-Login",
        },
        "cdbb50ec-94c8-41e6-8dab-ca5969b33cb5": {
          "_id": "cdbb50ec-94c8-41e6-8dab-ca5969b33cb5",
          "_outcomes": [
            {
              "displayName": "AuthenticId",
              "id": "AuthenticId",
            },
            {
              "displayName": "Onfido",
              "id": "Onfido",
            },
            {
              "displayName": "Socure",
              "id": "Socure",
            },
          ],
          "_rev": "1606534179",
          "_type": {
            "_id": "ScriptedDecisionNode",
            "collection": true,
            "name": "Scripted Decision",
          },
          "inputs": [
            "*",
          ],
          "outcomes": [
            "AuthenticId",
            "Onfido",
            "Socure",
          ],
          "outputs": [
            "*",
          ],
          "script": "9e9c6c4d-5d9d-4990-9f05-d8b2b25ad52b",
        },
        "e7984d9a-6b0d-4ed0-ae01-a02cf05a4846": {
          "_id": "e7984d9a-6b0d-4ed0-ae01-a02cf05a4846",
          "_outcomes": [
            {
              "displayName": "True",
              "id": "true",
            },
            {
              "displayName": "False",
              "id": "false",
            },
          ],
          "_rev": "1817157508",
          "_type": {
            "_id": "InnerTreeEvaluatorNode",
            "collection": true,
            "name": "Inner Tree Evaluator",
          },
          "tree": "AA-Login",
        },
        "e8d68c52-d62d-44a0-b833-dd847402c50b": {
          "_id": "e8d68c52-d62d-44a0-b833-dd847402c50b",
          "_outcomes": [
            {
              "displayName": "True",
              "id": "true",
            },
            {
              "displayName": "False",
              "id": "false",
            },
          ],
          "_rev": "2062706712",
          "_type": {
            "_id": "InnerTreeEvaluatorNode",
            "collection": true,
            "name": "Inner Tree Evaluator",
          },
          "tree": "AA-Login",
        },
      },
      "saml2Entities": {},
      "scripts": {},
      "socialIdentityProviders": {},
      "themes": [],
      "tree": {
        "_id": "IDV-AuthenticId",
        "_rev": "474080309",
        "description": "Identity verification orchestration",
        "enabled": true,
        "entryNodeId": "cdbb50ec-94c8-41e6-8dab-ca5969b33cb5",
        "identityResource": "managed/alpha_user",
        "nodes": {
          "46d8af6b-f66b-406f-82ff-e42e39ddd102": {
            "connections": {
              "false": "e301438c-0bd0-429c-ab0c-66126501069a",
              "true": "70e691a5-1e33-4ac3-a356-e7b6d60d92e0",
            },
            "displayName": "Onfido",
            "nodeType": "InnerTreeEvaluatorNode",
            "x": 454,
            "y": 227.015625,
          },
          "cdbb50ec-94c8-41e6-8dab-ca5969b33cb5": {
            "connections": {
              "AuthenticId": "e7984d9a-6b0d-4ed0-ae01-a02cf05a4846",
              "Onfido": "46d8af6b-f66b-406f-82ff-e42e39ddd102",
              "Socure": "e8d68c52-d62d-44a0-b833-dd847402c50b",
            },
            "displayName": "Select Provider",
            "nodeType": "ScriptedDecisionNode",
            "x": 192,
            "y": 214.015625,
          },
          "e7984d9a-6b0d-4ed0-ae01-a02cf05a4846": {
            "connections": {
              "false": "e301438c-0bd0-429c-ab0c-66126501069a",
              "true": "70e691a5-1e33-4ac3-a356-e7b6d60d92e0",
            },
            "displayName": "AuthenticId",
            "nodeType": "InnerTreeEvaluatorNode",
            "x": 454,
            "y": 94.015625,
          },
          "e8d68c52-d62d-44a0-b833-dd847402c50b": {
            "connections": {
              "false": "e301438c-0bd0-429c-ab0c-66126501069a",
              "true": "70e691a5-1e33-4ac3-a356-e7b6d60d92e0",
            },
            "displayName": "Socure",
            "nodeType": "InnerTreeEvaluatorNode",
            "x": 455,
            "y": 363.015625,
          },
        },
        "staticNodes": {
          "70e691a5-1e33-4ac3-a356-e7b6d60d92e0": {
            "x": 741,
            "y": 159,
          },
          "e301438c-0bd0-429c-ab0c-66126501069a": {
            "x": 744,
            "y": 328,
          },
          "startNode": {
            "x": 44,
            "y": 244,
          },
        },
        "uiConfig": {
          "categories": "["Prototype","IDV"]",
        },
      },
    },
    "IDV-Onfido": {
      "circlesOfTrust": {},
      "emailTemplates": {},
      "innerNodes": {},
      "nodes": {
        "41f0e889-c2f3-4a96-b4b6-e8e6797d6e01": {
          "_id": "41f0e889-c2f3-4a96-b4b6-e8e6797d6e01",
          "_outcomes": [
            {
              "displayName": "True",
              "id": "true",
            },
            {
              "displayName": "False",
              "id": "false",
            },
          ],
          "_rev": "-156853767",
          "_type": {
            "_id": "InnerTreeEvaluatorNode",
            "collection": true,
            "name": "Inner Tree Evaluator",
          },
          "tree": "AA-Login",
        },
        "6a05b76b-ddec-488e-9a8d-98e487e89e50": {
          "_id": "6a05b76b-ddec-488e-9a8d-98e487e89e50",
          "_outcomes": [
            {
              "displayName": "AuthenticId",
              "id": "AuthenticId",
            },
            {
              "displayName": "Onfido",
              "id": "Onfido",
            },
            {
              "displayName": "Socure",
              "id": "Socure",
            },
          ],
          "_rev": "-479772622",
          "_type": {
            "_id": "ScriptedDecisionNode",
            "collection": true,
            "name": "Scripted Decision",
          },
          "inputs": [
            "*",
          ],
          "outcomes": [
            "AuthenticId",
            "Onfido",
            "Socure",
          ],
          "outputs": [
            "*",
          ],
          "script": "9e9c6c4d-5d9d-4990-9f05-d8b2b25ad52b",
        },
        "9903750f-b262-406c-b0b9-0e4fc63c7097": {
          "_id": "9903750f-b262-406c-b0b9-0e4fc63c7097",
          "_outcomes": [
            {
              "displayName": "True",
              "id": "true",
            },
            {
              "displayName": "False",
              "id": "false",
            },
          ],
          "_rev": "-1983670169",
          "_type": {
            "_id": "InnerTreeEvaluatorNode",
            "collection": true,
            "name": "Inner Tree Evaluator",
          },
          "tree": "AA-Login",
        },
        "a565f909-a241-4df0-b909-a2cca803936b": {
          "_id": "a565f909-a241-4df0-b909-a2cca803936b",
          "_outcomes": [
            {
              "displayName": "True",
              "id": "true",
            },
            {
              "displayName": "False",
              "id": "false",
            },
          ],
          "_rev": "983102867",
          "_type": {
            "_id": "InnerTreeEvaluatorNode",
            "collection": true,
            "name": "Inner Tree Evaluator",
          },
          "tree": "AA-Login",
        },
      },
      "saml2Entities": {},
      "scripts": {},
      "socialIdentityProviders": {},
      "themes": [],
      "tree": {
        "_id": "IDV-Onfido",
        "_rev": "-1389781022",
        "description": "Identity verification orchestration",
        "enabled": true,
        "entryNodeId": "6a05b76b-ddec-488e-9a8d-98e487e89e50",
        "identityResource": "managed/alpha_user",
        "nodes": {
          "41f0e889-c2f3-4a96-b4b6-e8e6797d6e01": {
            "connections": {
              "false": "e301438c-0bd0-429c-ab0c-66126501069a",
              "true": "70e691a5-1e33-4ac3-a356-e7b6d60d92e0",
            },
            "displayName": "Socure",
            "nodeType": "InnerTreeEvaluatorNode",
            "x": 455,
            "y": 363.015625,
          },
          "6a05b76b-ddec-488e-9a8d-98e487e89e50": {
            "connections": {
              "AuthenticId": "a565f909-a241-4df0-b909-a2cca803936b",
              "Onfido": "9903750f-b262-406c-b0b9-0e4fc63c7097",
              "Socure": "41f0e889-c2f3-4a96-b4b6-e8e6797d6e01",
            },
            "displayName": "Select Provider",
            "nodeType": "ScriptedDecisionNode",
            "x": 192,
            "y": 214.015625,
          },
          "9903750f-b262-406c-b0b9-0e4fc63c7097": {
            "connections": {
              "false": "e301438c-0bd0-429c-ab0c-66126501069a",
              "true": "70e691a5-1e33-4ac3-a356-e7b6d60d92e0",
            },
            "displayName": "Onfido",
            "nodeType": "InnerTreeEvaluatorNode",
            "x": 454,
            "y": 227.015625,
          },
          "a565f909-a241-4df0-b909-a2cca803936b": {
            "connections": {
              "false": "e301438c-0bd0-429c-ab0c-66126501069a",
              "true": "70e691a5-1e33-4ac3-a356-e7b6d60d92e0",
            },
            "displayName": "AuthenticId",
            "nodeType": "InnerTreeEvaluatorNode",
            "x": 454,
            "y": 94.015625,
          },
        },
        "staticNodes": {
          "70e691a5-1e33-4ac3-a356-e7b6d60d92e0": {
            "x": 741,
            "y": 159,
          },
          "e301438c-0bd0-429c-ab0c-66126501069a": {
            "x": 744,
            "y": 328,
          },
          "startNode": {
            "x": 44,
            "y": 244,
          },
        },
        "uiConfig": {
          "categories": "["Prototype","IDV"]",
        },
      },
    },
    "IDV-Socure": {
      "circlesOfTrust": {},
      "emailTemplates": {},
      "innerNodes": {},
      "nodes": {
        "3fdb341f-7cf7-402c-818d-627d460b8833": {
          "_id": "3fdb341f-7cf7-402c-818d-627d460b8833",
          "_outcomes": [
            {
              "displayName": "True",
              "id": "true",
            },
            {
              "displayName": "False",
              "id": "false",
            },
          ],
          "_rev": "-27418478",
          "_type": {
            "_id": "InnerTreeEvaluatorNode",
            "collection": true,
            "name": "Inner Tree Evaluator",
          },
          "tree": "AA-Login",
        },
        "75ef5d9c-4c58-479f-87ce-a43fe6a88069": {
          "_id": "75ef5d9c-4c58-479f-87ce-a43fe6a88069",
          "_outcomes": [
            {
              "displayName": "AuthenticId",
              "id": "AuthenticId",
            },
            {
              "displayName": "Onfido",
              "id": "Onfido",
            },
            {
              "displayName": "Socure",
              "id": "Socure",
            },
          ],
          "_rev": "-409919383",
          "_type": {
            "_id": "ScriptedDecisionNode",
            "collection": true,
            "name": "Scripted Decision",
          },
          "inputs": [
            "*",
          ],
          "outcomes": [
            "AuthenticId",
            "Onfido",
            "Socure",
          ],
          "outputs": [
            "*",
          ],
          "script": "9e9c6c4d-5d9d-4990-9f05-d8b2b25ad52b",
        },
        "7a944916-ae4b-4bbc-9b68-05ddabcd84de": {
          "_id": "7a944916-ae4b-4bbc-9b68-05ddabcd84de",
          "_outcomes": [
            {
              "displayName": "True",
              "id": "true",
            },
            {
              "displayName": "False",
              "id": "false",
            },
          ],
          "_rev": "441127324",
          "_type": {
            "_id": "InnerTreeEvaluatorNode",
            "collection": true,
            "name": "Inner Tree Evaluator",
          },
          "tree": "AA-Login",
        },
        "dd572999-fadb-45fa-a545-743b02317fed": {
          "_id": "dd572999-fadb-45fa-a545-743b02317fed",
          "_outcomes": [
            {
              "displayName": "True",
              "id": "true",
            },
            {
              "displayName": "False",
              "id": "false",
            },
          ],
          "_rev": "-1888009976",
          "_type": {
            "_id": "InnerTreeEvaluatorNode",
            "collection": true,
            "name": "Inner Tree Evaluator",
          },
          "tree": "AA-Login",
        },
      },
      "saml2Entities": {},
      "scripts": {},
      "socialIdentityProviders": {},
      "themes": [],
      "tree": {
        "_id": "IDV-Socure",
        "_rev": "2047709268",
        "description": "Identity verification orchestration",
        "enabled": true,
        "entryNodeId": "75ef5d9c-4c58-479f-87ce-a43fe6a88069",
        "identityResource": "managed/alpha_user",
        "nodes": {
          "3fdb341f-7cf7-402c-818d-627d460b8833": {
            "connections": {
              "false": "e301438c-0bd0-429c-ab0c-66126501069a",
              "true": "70e691a5-1e33-4ac3-a356-e7b6d60d92e0",
            },
            "displayName": "AuthenticId",
            "nodeType": "InnerTreeEvaluatorNode",
            "x": 454,
            "y": 94.015625,
          },
          "75ef5d9c-4c58-479f-87ce-a43fe6a88069": {
            "connections": {
              "AuthenticId": "3fdb341f-7cf7-402c-818d-627d460b8833",
              "Onfido": "7a944916-ae4b-4bbc-9b68-05ddabcd84de",
              "Socure": "dd572999-fadb-45fa-a545-743b02317fed",
            },
            "displayName": "Select Provider",
            "nodeType": "ScriptedDecisionNode",
            "x": 192,
            "y": 214.015625,
          },
          "7a944916-ae4b-4bbc-9b68-05ddabcd84de": {
            "connections": {
              "false": "e301438c-0bd0-429c-ab0c-66126501069a",
              "true": "70e691a5-1e33-4ac3-a356-e7b6d60d92e0",
            },
            "displayName": "Onfido",
            "nodeType": "InnerTreeEvaluatorNode",
            "x": 454,
            "y": 227.015625,
          },
          "dd572999-fadb-45fa-a545-743b02317fed": {
            "connections": {
              "false": "e301438c-0bd0-429c-ab0c-66126501069a",
              "true": "70e691a5-1e33-4ac3-a356-e7b6d60d92e0",
            },
            "displayName": "Socure",
            "nodeType": "InnerTreeEvaluatorNode",
            "x": 455,
            "y": 363.015625,
          },
        },
        "staticNodes": {
          "70e691a5-1e33-4ac3-a356-e7b6d60d92e0": {
            "x": 741,
            "y": 159,
          },
          "e301438c-0bd0-429c-ab0c-66126501069a": {
            "x": 744,
            "y": 328,
          },
          "startNode": {
            "x": 44,
            "y": 244,
          },
        },
        "uiConfig": {
          "categories": "["Prototype","IDV"]",
        },
      },
    },
    "IDVMulti": {
      "circlesOfTrust": {},
      "emailTemplates": {},
      "innerNodes": {},
      "nodes": {
        "15a956df-8b26-44d2-a242-01ce7ed6f81d": {
          "_id": "15a956df-8b26-44d2-a242-01ce7ed6f81d",
          "_outcomes": [
            {
              "displayName": "AuthenticId",
              "id": "AuthenticId",
            },
            {
              "displayName": "Onfido",
              "id": "Onfido",
            },
            {
              "displayName": "Socure",
              "id": "Socure",
            },
          ],
          "_rev": "1677725287",
          "_type": {
            "_id": "ScriptedDecisionNode",
            "collection": true,
            "name": "Scripted Decision",
          },
          "inputs": [
            "*",
          ],
          "outcomes": [
            "AuthenticId",
            "Onfido",
            "Socure",
          ],
          "outputs": [
            "*",
          ],
          "script": "9e9c6c4d-5d9d-4990-9f05-d8b2b25ad52b",
        },
        "925738ca-287e-4164-8671-8c36780224d1": {
          "_id": "925738ca-287e-4164-8671-8c36780224d1",
          "_outcomes": [
            {
              "displayName": "True",
              "id": "true",
            },
            {
              "displayName": "False",
              "id": "false",
            },
          ],
          "_rev": "1678422996",
          "_type": {
            "_id": "InnerTreeEvaluatorNode",
            "collection": true,
            "name": "Inner Tree Evaluator",
          },
          "tree": "AA-Login",
        },
        "a2c45886-fe81-4f2c-b5e4-ee4023a392a1": {
          "_id": "a2c45886-fe81-4f2c-b5e4-ee4023a392a1",
          "_outcomes": [
            {
              "displayName": "True",
              "id": "true",
            },
            {
              "displayName": "False",
              "id": "false",
            },
          ],
          "_rev": "-2049774629",
          "_type": {
            "_id": "InnerTreeEvaluatorNode",
            "collection": true,
            "name": "Inner Tree Evaluator",
          },
          "tree": "AA-Login",
        },
        "f1331f3d-4797-4a77-806c-19950dbaf8d7": {
          "_id": "f1331f3d-4797-4a77-806c-19950dbaf8d7",
          "_outcomes": [
            {
              "displayName": "True",
              "id": "true",
            },
            {
              "displayName": "False",
              "id": "false",
            },
          ],
          "_rev": "2053957163",
          "_type": {
            "_id": "InnerTreeEvaluatorNode",
            "collection": true,
            "name": "Inner Tree Evaluator",
          },
          "tree": "AA-Login",
        },
      },
      "saml2Entities": {},
      "scripts": {},
      "socialIdentityProviders": {},
      "themes": [],
      "tree": {
        "_id": "IDVMulti",
        "_rev": "-173954813",
        "description": "Identity verification orchestration",
        "enabled": true,
        "entryNodeId": "15a956df-8b26-44d2-a242-01ce7ed6f81d",
        "identityResource": "managed/alpha_user",
        "nodes": {
          "15a956df-8b26-44d2-a242-01ce7ed6f81d": {
            "connections": {
              "AuthenticId": "a2c45886-fe81-4f2c-b5e4-ee4023a392a1",
              "Onfido": "f1331f3d-4797-4a77-806c-19950dbaf8d7",
              "Socure": "925738ca-287e-4164-8671-8c36780224d1",
            },
            "displayName": "Select Provider",
            "nodeType": "ScriptedDecisionNode",
            "x": 192,
            "y": 214.015625,
          },
          "925738ca-287e-4164-8671-8c36780224d1": {
            "connections": {
              "false": "e301438c-0bd0-429c-ab0c-66126501069a",
              "true": "70e691a5-1e33-4ac3-a356-e7b6d60d92e0",
            },
            "displayName": "Socure",
            "nodeType": "InnerTreeEvaluatorNode",
            "x": 455,
            "y": 363.015625,
          },
          "a2c45886-fe81-4f2c-b5e4-ee4023a392a1": {
            "connections": {
              "false": "e301438c-0bd0-429c-ab0c-66126501069a",
              "true": "70e691a5-1e33-4ac3-a356-e7b6d60d92e0",
            },
            "displayName": "AuthenticId",
            "nodeType": "InnerTreeEvaluatorNode",
            "x": 454,
            "y": 94.015625,
          },
          "f1331f3d-4797-4a77-806c-19950dbaf8d7": {
            "connections": {
              "false": "e301438c-0bd0-429c-ab0c-66126501069a",
              "true": "70e691a5-1e33-4ac3-a356-e7b6d60d92e0",
            },
            "displayName": "Onfido",
            "nodeType": "InnerTreeEvaluatorNode",
            "x": 454,
            "y": 227.015625,
          },
        },
        "staticNodes": {
          "70e691a5-1e33-4ac3-a356-e7b6d60d92e0": {
            "x": 741,
            "y": 159,
          },
          "e301438c-0bd0-429c-ab0c-66126501069a": {
            "x": 744,
            "y": 328,
          },
          "startNode": {
            "x": 44,
            "y": 244,
          },
        },
        "uiConfig": {
          "categories": "["Prototype","IDV"]",
        },
      },
    },
    "IDVSingle": {
      "circlesOfTrust": {},
      "emailTemplates": {},
      "innerNodes": {},
      "nodes": {
        "46f05f53-bf33-44d7-9ec8-9b09549ca504": {
          "_id": "46f05f53-bf33-44d7-9ec8-9b09549ca504",
          "_outcomes": [
            {
              "displayName": "True",
              "id": "true",
            },
            {
              "displayName": "False",
              "id": "false",
            },
          ],
          "_rev": "1459672419",
          "_type": {
            "_id": "InnerTreeEvaluatorNode",
            "collection": true,
            "name": "Inner Tree Evaluator",
          },
          "tree": "AA-Login",
        },
      },
      "saml2Entities": {},
      "scripts": {},
      "socialIdentityProviders": {},
      "themes": [],
      "tree": {
        "_id": "IDVSingle",
        "_rev": "1240883524",
        "description": "Identity verification orchestration",
        "enabled": true,
        "entryNodeId": "46f05f53-bf33-44d7-9ec8-9b09549ca504",
        "identityResource": "managed/alpha_user",
        "nodes": {
          "46f05f53-bf33-44d7-9ec8-9b09549ca504": {
            "connections": {
              "false": "e301438c-0bd0-429c-ab0c-66126501069a",
              "true": "70e691a5-1e33-4ac3-a356-e7b6d60d92e0",
            },
            "displayName": "Provider",
            "nodeType": "InnerTreeEvaluatorNode",
            "x": 184,
            "y": 226.015625,
          },
        },
        "staticNodes": {
          "70e691a5-1e33-4ac3-a356-e7b6d60d92e0": {
            "x": 469,
            "y": 172,
          },
          "e301438c-0bd0-429c-ab0c-66126501069a": {
            "x": 468,
            "y": 339,
          },
          "startNode": {
            "x": 44,
            "y": 244,
          },
        },
        "uiConfig": {
          "categories": "["Prototype","IDV"]",
        },
      },
    },
    "IdentityProofing": {
      "circlesOfTrust": {},
      "emailTemplates": {},
      "innerNodes": {
        "35c1cead-3790-4c9d-9e75-c4bc7a9d64e0": {
          "_id": "35c1cead-3790-4c9d-9e75-c4bc7a9d64e0",
          "_outcomes": [
            {
              "displayName": "Outcome",
              "id": "outcome",
            },
          ],
          "_rev": "1856464668",
          "_type": {
            "_id": "AttributeCollectorNode",
            "collection": true,
            "name": "Attribute Collector",
          },
          "attributesToCollect": [
            "givenName",
            "sn",
            "frIndexedString2",
            "postalAddress",
            "city",
            "stateProvince",
            "postalCode",
            "country",
          ],
          "identityAttribute": "userName",
          "required": false,
          "validateInputs": false,
        },
        "7fe45a62-7694-4def-93d7-56bbc97cff1c": {
          "_id": "7fe45a62-7694-4def-93d7-56bbc97cff1c",
          "_outcomes": [
            {
              "displayName": "True",
              "id": "true",
            },
            {
              "displayName": "False",
              "id": "false",
            },
          ],
          "_rev": "-898998160",
          "_type": {
            "_id": "MessageNode",
            "collection": true,
            "name": "Message Node",
          },
          "message": {
            "en": "Would you like to review the additional or updated data we have received through the verification process?",
          },
          "messageNo": {
            "en": "No",
          },
          "messageYes": {
            "en": "Yes",
          },
        },
        "cddeb3ed-fb5e-4024-84f0-cefe71f151c2": {
          "_id": "cddeb3ed-fb5e-4024-84f0-cefe71f151c2",
          "_outcomes": [
            {
              "displayName": "True",
              "id": "true",
            },
            {
              "displayName": "False",
              "id": "false",
            },
          ],
          "_rev": "1877640319",
          "_type": {
            "_id": "MessageNode",
            "collection": true,
            "name": "Message Node",
          },
          "message": {
            "en": "Would you like to try again?",
          },
          "messageNo": {
            "en": "Abort",
          },
          "messageYes": {
            "en": "Try again",
          },
        },
        "e10b0ec2-f156-4a79-a13f-3bed45563cff": {
          "_id": "e10b0ec2-f156-4a79-a13f-3bed45563cff",
          "_outcomes": [
            {
              "displayName": "Outcome",
              "id": "outcome",
            },
          ],
          "_rev": "-44380228",
          "_type": {
            "_id": "ValidatedUsernameNode",
            "collection": true,
            "name": "Platform Username",
          },
          "usernameAttribute": "userName",
          "validateInput": false,
        },
      },
      "nodes": {
        "007e3130-5424-40d6-a6e2-0a626f27a921": {
          "_id": "007e3130-5424-40d6-a6e2-0a626f27a921",
          "_outcomes": [
            {
              "displayName": "true",
              "id": "true",
            },
          ],
          "_rev": "1568154317",
          "_type": {
            "_id": "ScriptedDecisionNode",
            "collection": true,
            "name": "Scripted Decision",
          },
          "inputs": [
            "*",
          ],
          "outcomes": [
            "true",
          ],
          "outputs": [
            "*",
          ],
          "script": "8a768bb3-01cd-46b8-881c-b77f5a26c283",
        },
        "0478adf2-4302-481c-8d51-a2a5e14a154e": {
          "_id": "0478adf2-4302-481c-8d51-a2a5e14a154e",
          "_outcomes": [
            {
              "displayName": "Outcome",
              "id": "outcome",
            },
          ],
          "_rev": "-722133129",
          "_type": {
            "_id": "PageNode",
            "collection": true,
            "name": "Page Node",
          },
          "nodes": [
            {
              "_id": "e10b0ec2-f156-4a79-a13f-3bed45563cff",
              "displayName": "Username",
              "nodeType": "ValidatedUsernameNode",
            },
          ],
          "pageDescription": {},
          "pageHeader": {},
        },
        "15d1cd26-8664-43de-b9e8-3a79d5546968": {
          "_id": "15d1cd26-8664-43de-b9e8-3a79d5546968",
          "_outcomes": [
            {
              "displayName": "true",
              "id": "true",
            },
            {
              "displayName": "false",
              "id": "false",
            },
          ],
          "_rev": "1385079086",
          "_type": {
            "_id": "ScriptedDecisionNode",
            "collection": true,
            "name": "Scripted Decision",
          },
          "inputs": [
            "*",
          ],
          "outcomes": [
            "true",
            "false",
          ],
          "outputs": [
            "*",
          ],
          "script": "d2a41d85-d33a-42d9-a7dd-50dfbc9fa7c0",
        },
        "5d140ac7-ad74-40e4-96bf-3de3b75ccb68": {
          "_id": "5d140ac7-ad74-40e4-96bf-3de3b75ccb68",
          "_outcomes": [
            {
              "displayName": "True",
              "id": "true",
            },
            {
              "displayName": "False",
              "id": "false",
            },
          ],
          "_rev": "-196117267",
          "_type": {
            "_id": "PageNode",
            "collection": true,
            "name": "Page Node",
          },
          "nodes": [
            {
              "_id": "cddeb3ed-fb5e-4024-84f0-cefe71f151c2",
              "displayName": "Error",
              "nodeType": "MessageNode",
            },
          ],
          "pageDescription": {
            "en": "There was an error verifying your identity. Please try again or contact us by email at help@kemper.com or call us at +1-234-5678.",
          },
          "pageHeader": {
            "en": "Unable to verify your identity!",
          },
        },
        "61dd9a94-dfe6-4efe-b73a-16d66430f979": {
          "_id": "61dd9a94-dfe6-4efe-b73a-16d66430f979",
          "_outcomes": [
            {
              "displayName": "known",
              "id": "known",
            },
            {
              "displayName": "unknown",
              "id": "unknown",
            },
          ],
          "_rev": "-876700098",
          "_type": {
            "_id": "ScriptedDecisionNode",
            "collection": true,
            "name": "Scripted Decision",
          },
          "inputs": [
            "*",
          ],
          "outcomes": [
            "known",
            "unknown",
          ],
          "outputs": [
            "*",
          ],
          "script": "739bdc48-fd24-4c52-b353-88706d75558a",
        },
        "63f6402d-9452-43b5-a6c3-28878003bbf5": {
          "_id": "63f6402d-9452-43b5-a6c3-28878003bbf5",
          "_outcomes": [
            {
              "displayName": "true",
              "id": "true",
            },
            {
              "displayName": "false",
              "id": "false",
            },
          ],
          "_rev": "-106831992",
          "_type": {
            "_id": "ScriptedDecisionNode",
            "collection": true,
            "name": "Scripted Decision",
          },
          "inputs": [
            "*",
          ],
          "outcomes": [
            "true",
            "false",
          ],
          "outputs": [
            "*",
          ],
          "script": "25d8a628-3556-4219-aaf5-2384e2e5f19a",
        },
        "885754b6-129d-4573-9227-6646c940ebbe": {
          "_id": "885754b6-129d-4573-9227-6646c940ebbe",
          "_outcomes": [
            {
              "displayName": "Done",
              "id": "DONE",
            },
          ],
          "_rev": "455035730",
          "_type": {
            "_id": "PollingWaitNode",
            "collection": true,
            "name": "Polling Wait Node",
          },
          "exitMessage": {},
          "exitable": false,
          "secondsToWait": 8,
          "spamDetectionEnabled": false,
          "spamDetectionTolerance": 3,
          "waitingMessage": {},
        },
        "ca2baea6-d5fc-4fe9-8cd5-ce538eb0cdf4": {
          "_id": "ca2baea6-d5fc-4fe9-8cd5-ce538eb0cdf4",
          "_outcomes": [
            {
              "displayName": "Outcome",
              "id": "outcome",
            },
          ],
          "_rev": "166586256",
          "_type": {
            "_id": "PageNode",
            "collection": true,
            "name": "Page Node",
          },
          "nodes": [
            {
              "_id": "35c1cead-3790-4c9d-9e75-c4bc7a9d64e0",
              "displayName": "Attributes",
              "nodeType": "AttributeCollectorNode",
            },
          ],
          "pageDescription": {
            "en": "Please confirm your information is correct.",
          },
          "pageHeader": {
            "en": "Review your information",
          },
        },
        "d339126b-f100-45db-b307-64232de7db5c": {
          "_id": "d339126b-f100-45db-b307-64232de7db5c",
          "_outcomes": [
            {
              "displayName": "true",
              "id": "true",
            },
          ],
          "_rev": "2093665693",
          "_type": {
            "_id": "ScriptedDecisionNode",
            "collection": true,
            "name": "Scripted Decision",
          },
          "inputs": [
            "*",
          ],
          "outcomes": [
            "true",
          ],
          "outputs": [
            "*",
          ],
          "script": "71545db5-ce01-46b1-b79f-d41af36bd548",
        },
        "d9a826b5-657a-4092-95eb-645049076fde": {
          "_id": "d9a826b5-657a-4092-95eb-645049076fde",
          "_outcomes": [
            {
              "displayName": "True",
              "id": "true",
            },
            {
              "displayName": "False",
              "id": "false",
            },
          ],
          "_rev": "-1498866042",
          "_type": {
            "_id": "IdentifyExistingUserNode",
            "collection": true,
            "name": "Identify Existing User",
          },
          "identifier": "userName",
          "identityAttribute": "userName",
        },
        "da0b1369-0c62-4866-bc4d-38a1c537d653": {
          "_id": "da0b1369-0c62-4866-bc4d-38a1c537d653",
          "_outcomes": [
            {
              "displayName": "True",
              "id": "true",
            },
            {
              "displayName": "False",
              "id": "false",
            },
          ],
          "_rev": "146255608",
          "_type": {
            "_id": "PageNode",
            "collection": true,
            "name": "Page Node",
          },
          "nodes": [
            {
              "_id": "7fe45a62-7694-4def-93d7-56bbc97cff1c",
              "displayName": "User Choice",
              "nodeType": "MessageNode",
            },
          ],
          "pageDescription": {
            "en": "Thank you! We have successfully verified your identity.",
          },
          "pageHeader": {
            "en": "Identity verification successful!",
          },
        },
        "e4dbe00b-18fa-4ccf-a0f2-92b798340b5f": {
          "_id": "e4dbe00b-18fa-4ccf-a0f2-92b798340b5f",
          "_outcomes": [
            {
              "displayName": "pending",
              "id": "pending",
            },
            {
              "displayName": "clear",
              "id": "clear",
            },
            {
              "displayName": "consider",
              "id": "consider",
            },
            {
              "displayName": "error",
              "id": "error",
            },
            {
              "displayName": "wronguser",
              "id": "wronguser",
            },
          ],
          "_rev": "-1213008087",
          "_type": {
            "_id": "ScriptedDecisionNode",
            "collection": true,
            "name": "Scripted Decision",
          },
          "inputs": [
            "*",
          ],
          "outcomes": [
            "pending",
            "clear",
            "consider",
            "error",
            "wronguser",
          ],
          "outputs": [
            "*",
          ],
          "script": "0c189425-e5ea-4062-ae2e-53ea14320bf4",
        },
        "e6ba5dd0-81cd-41af-b2c1-158fbffb6ac0": {
          "_id": "e6ba5dd0-81cd-41af-b2c1-158fbffb6ac0",
          "_outcomes": [
            {
              "displayName": "Patched",
              "id": "PATCHED",
            },
            {
              "displayName": "Failed",
              "id": "FAILURE",
            },
          ],
          "_rev": "-529487419",
          "_type": {
            "_id": "PatchObjectNode",
            "collection": true,
            "name": "Patch Object",
          },
          "identityAttribute": "userName",
          "identityResource": "managed/alpha_user",
          "ignoredFields": [],
          "patchAsObject": false,
        },
        "fb530016-9ed1-4541-a150-e55711f58b38": {
          "_id": "fb530016-9ed1-4541-a150-e55711f58b38",
          "_outcomes": [
            {
              "displayName": "Retry",
              "id": "Retry",
            },
            {
              "displayName": "Reject",
              "id": "Reject",
            },
          ],
          "_rev": "78997379",
          "_type": {
            "_id": "RetryLimitDecisionNode",
            "collection": true,
            "name": "Retry Limit Decision",
          },
          "incrementUserAttributeOnFailure": true,
          "retryLimit": 12,
        },
      },
      "saml2Entities": {},
      "scripts": {},
      "socialIdentityProviders": {},
      "themes": [],
      "tree": {
        "_id": "IdentityProofing",
        "_rev": "329635340",
        "enabled": true,
        "entryNodeId": "61dd9a94-dfe6-4efe-b73a-16d66430f979",
        "identityResource": "managed/alpha_user",
        "nodes": {
          "007e3130-5424-40d6-a6e2-0a626f27a921": {
            "connections": {},
            "displayName": "Onfido Meta Tags",
            "nodeType": "ScriptedDecisionNode",
            "x": 676,
            "y": 122.015625,
          },
          "0478adf2-4302-481c-8d51-a2a5e14a154e": {
            "connections": {
              "outcome": "61dd9a94-dfe6-4efe-b73a-16d66430f979",
            },
            "displayName": "Page Node",
            "nodeType": "PageNode",
            "x": 325,
            "y": 619,
          },
          "15d1cd26-8664-43de-b9e8-3a79d5546968": {
            "connections": {
              "false": "885754b6-129d-4573-9227-6646c940ebbe",
              "true": "885754b6-129d-4573-9227-6646c940ebbe",
            },
            "displayName": "Onfido-CheckApplicant",
            "nodeType": "ScriptedDecisionNode",
            "x": 822,
            "y": 331,
          },
          "5d140ac7-ad74-40e4-96bf-3de3b75ccb68": {
            "connections": {
              "false": "e301438c-0bd0-429c-ab0c-66126501069a",
              "true": "61dd9a94-dfe6-4efe-b73a-16d66430f979",
            },
            "displayName": "Verification Error Dialog",
            "nodeType": "PageNode",
            "x": 1907,
            "y": 574.7666625976562,
          },
          "61dd9a94-dfe6-4efe-b73a-16d66430f979": {
            "connections": {
              "known": "d9a826b5-657a-4092-95eb-645049076fde",
              "unknown": "0478adf2-4302-481c-8d51-a2a5e14a154e",
            },
            "displayName": "Check Username",
            "nodeType": "ScriptedDecisionNode",
            "x": 174,
            "y": 324,
          },
          "63f6402d-9452-43b5-a6c3-28878003bbf5": {
            "connections": {
              "false": "e301438c-0bd0-429c-ab0c-66126501069a",
              "true": "d339126b-f100-45db-b307-64232de7db5c",
            },
            "displayName": "Onfido-CreateApplicant",
            "nodeType": "ScriptedDecisionNode",
            "x": 517,
            "y": 328,
          },
          "885754b6-129d-4573-9227-6646c940ebbe": {
            "connections": {
              "DONE": "e4dbe00b-18fa-4ccf-a0f2-92b798340b5f",
            },
            "displayName": "Polling Wait Node",
            "nodeType": "PollingWaitNode",
            "x": 1004,
            "y": 205.5,
          },
          "ca2baea6-d5fc-4fe9-8cd5-ce538eb0cdf4": {
            "connections": {
              "outcome": "e6ba5dd0-81cd-41af-b2c1-158fbffb6ac0",
            },
            "displayName": "Confirmation",
            "nodeType": "PageNode",
            "x": 1699,
            "y": 344.76666259765625,
          },
          "d339126b-f100-45db-b307-64232de7db5c": {
            "connections": {
              "true": "15d1cd26-8664-43de-b9e8-3a79d5546968",
            },
            "displayName": "Onfido-CaptureEvidence",
            "nodeType": "ScriptedDecisionNode",
            "x": 655,
            "y": 205,
          },
          "d9a826b5-657a-4092-95eb-645049076fde": {
            "connections": {
              "false": "e301438c-0bd0-429c-ab0c-66126501069a",
              "true": "63f6402d-9452-43b5-a6c3-28878003bbf5",
            },
            "displayName": "Identify Existing User",
            "nodeType": "IdentifyExistingUserNode",
            "x": 350,
            "y": 181,
          },
          "da0b1369-0c62-4866-bc4d-38a1c537d653": {
            "connections": {
              "false": "e6ba5dd0-81cd-41af-b2c1-158fbffb6ac0",
              "true": "ca2baea6-d5fc-4fe9-8cd5-ce538eb0cdf4",
            },
            "displayName": "Verification Success Dialog",
            "nodeType": "PageNode",
            "x": 1440,
            "y": 335.76666259765625,
          },
          "e4dbe00b-18fa-4ccf-a0f2-92b798340b5f": {
            "connections": {
              "clear": "da0b1369-0c62-4866-bc4d-38a1c537d653",
              "consider": "5d140ac7-ad74-40e4-96bf-3de3b75ccb68",
              "error": "5d140ac7-ad74-40e4-96bf-3de3b75ccb68",
              "pending": "fb530016-9ed1-4541-a150-e55711f58b38",
              "wronguser": "5d140ac7-ad74-40e4-96bf-3de3b75ccb68",
            },
            "displayName": "Onfido-CheckStatus",
            "nodeType": "ScriptedDecisionNode",
            "x": 1134,
            "y": 338,
          },
          "e6ba5dd0-81cd-41af-b2c1-158fbffb6ac0": {
            "connections": {
              "FAILURE": "70e691a5-1e33-4ac3-a356-e7b6d60d92e0",
              "PATCHED": "70e691a5-1e33-4ac3-a356-e7b6d60d92e0",
            },
            "displayName": "Update Account",
            "nodeType": "PatchObjectNode",
            "x": 1925,
            "y": 352.76666259765625,
          },
          "fb530016-9ed1-4541-a150-e55711f58b38": {
            "connections": {
              "Reject": "e301438c-0bd0-429c-ab0c-66126501069a",
              "Retry": "885754b6-129d-4573-9227-6646c940ebbe",
            },
            "displayName": "Retry Limit Decision",
            "nodeType": "RetryLimitDecisionNode",
            "x": 1283,
            "y": 186,
          },
        },
        "staticNodes": {
          "70e691a5-1e33-4ac3-a356-e7b6d60d92e0": {
            "x": 2190,
            "y": 379,
          },
          "e301438c-0bd0-429c-ab0c-66126501069a": {
            "x": 2204,
            "y": 643,
          },
          "startNode": {
            "x": 70,
            "y": 200,
          },
        },
        "uiConfig": {},
      },
    },
    "Impersonate": {
      "circlesOfTrust": {},
      "emailTemplates": {},
      "innerNodes": {},
      "nodes": {
        "09d4efc4-934a-4751-b450-d514f51fc938": {
          "_id": "09d4efc4-934a-4751-b450-d514f51fc938",
          "_outcomes": [
            {
              "displayName": "true",
              "id": "true",
            },
          ],
          "_rev": "1345065702",
          "_type": {
            "_id": "ScriptedDecisionNode",
            "collection": true,
            "name": "Scripted Decision",
          },
          "inputs": [
            "*",
          ],
          "outcomes": [
            "true",
          ],
          "outputs": [
            "*",
          ],
          "script": "7dd80834-e7b2-4737-85a7-40434bb19dde",
        },
        "09ee8d0d-ff79-42a4-b906-3518d353189e": {
          "_id": "09ee8d0d-ff79-42a4-b906-3518d353189e",
          "_outcomes": [
            {
              "displayName": "true",
              "id": "true",
            },
            {
              "displayName": "false",
              "id": "false",
            },
          ],
          "_rev": "-778446570",
          "_type": {
            "_id": "ScriptedDecisionNode",
            "collection": true,
            "name": "Scripted Decision",
          },
          "inputs": [
            "*",
          ],
          "outcomes": [
            "true",
            "false",
          ],
          "outputs": [
            "*",
          ],
          "script": "d6f3befb-c73a-437e-b02a-66d9b4c93f8b",
        },
        "41226349-82cf-4aa1-92cd-5f075f6fe974": {
          "_id": "41226349-82cf-4aa1-92cd-5f075f6fe974",
          "_outcomes": [
            {
              "displayName": "true",
              "id": "true",
            },
            {
              "displayName": "false",
              "id": "false",
            },
          ],
          "_rev": "1743402357",
          "_type": {
            "_id": "ScriptedDecisionNode",
            "collection": true,
            "name": "Scripted Decision",
          },
          "inputs": [
            "*",
          ],
          "outcomes": [
            "true",
            "false",
          ],
          "outputs": [
            "*",
          ],
          "script": "878816b3-2bb4-4b43-8001-10f926ddefff",
        },
        "6143e50a-b37d-48d3-9d10-255359d8b7de": {
          "_id": "6143e50a-b37d-48d3-9d10-255359d8b7de",
          "_outcomes": [
            {
              "displayName": "True",
              "id": "true",
            },
            {
              "displayName": "False",
              "id": "false",
            },
          ],
          "_rev": "-1494533100",
          "_type": {
            "_id": "AccountActiveDecisionNode",
            "collection": true,
            "name": "Account Active Decision",
          },
        },
        "a00352ea-f959-4020-925e-6769376a5334": {
          "_id": "a00352ea-f959-4020-925e-6769376a5334",
          "_outcomes": [
            {
              "displayName": "True",
              "id": "true",
            },
            {
              "displayName": "False",
              "id": "false",
            },
          ],
          "_rev": "416723701",
          "_type": {
            "_id": "InnerTreeEvaluatorNode",
            "collection": true,
            "name": "Inner Tree Evaluator",
          },
          "tree": "APIProtection",
        },
        "a0282895-4520-4001-976a-97e4a62f0b96": {
          "_id": "a0282895-4520-4001-976a-97e4a62f0b96",
          "_outcomes": [
            {
              "displayName": "True",
              "id": "true",
            },
            {
              "displayName": "False",
              "id": "false",
            },
          ],
          "_rev": "1272811963",
          "_type": {
            "_id": "IdentifyExistingUserNode",
            "collection": true,
            "name": "Identify Existing User",
          },
          "identifier": "userName",
          "identityAttribute": "userName",
        },
        "b7d37d59-926f-4f23-8565-a7edc226d760": {
          "_id": "b7d37d59-926f-4f23-8565-a7edc226d760",
          "_outcomes": [
            {
              "displayName": "True",
              "id": "true",
            },
            {
              "displayName": "False",
              "id": "false",
            },
          ],
          "_rev": "1741262866",
          "_type": {
            "_id": "IdentifyExistingUserNode",
            "collection": true,
            "name": "Identify Existing User",
          },
          "identifier": "userName",
          "identityAttribute": "userName",
        },
        "f7bd5a55-52bf-44c8-93f1-b84520cba01a": {
          "_id": "f7bd5a55-52bf-44c8-93f1-b84520cba01a",
          "_outcomes": [
            {
              "displayName": "True",
              "id": "true",
            },
            {
              "displayName": "False",
              "id": "false",
            },
          ],
          "_rev": "-2008892992",
          "_type": {
            "_id": "AccountActiveDecisionNode",
            "collection": true,
            "name": "Account Active Decision",
          },
        },
      },
      "saml2Entities": {},
      "scripts": {},
      "socialIdentityProviders": {},
      "themes": [],
      "tree": {
        "_id": "Impersonate",
        "_rev": "243508423",
        "description": "Impersonate any user",
        "enabled": true,
        "entryNodeId": "a00352ea-f959-4020-925e-6769376a5334",
        "identityResource": "managed/alpha_user",
        "nodes": {
          "09d4efc4-934a-4751-b450-d514f51fc938": {
            "connections": {
              "true": "70e691a5-1e33-4ac3-a356-e7b6d60d92e0",
            },
            "displayName": "Impersonate Session",
            "nodeType": "ScriptedDecisionNode",
            "x": 1701,
            "y": 104.015625,
          },
          "09ee8d0d-ff79-42a4-b906-3518d353189e": {
            "connections": {
              "false": "e301438c-0bd0-429c-ab0c-66126501069a",
              "true": "b7d37d59-926f-4f23-8565-a7edc226d760",
            },
            "displayName": "Extract Actors",
            "nodeType": "ScriptedDecisionNode",
            "x": 349,
            "y": 315.015625,
          },
          "41226349-82cf-4aa1-92cd-5f075f6fe974": {
            "connections": {
              "false": "e301438c-0bd0-429c-ab0c-66126501069a",
              "true": "a0282895-4520-4001-976a-97e4a62f0b96",
            },
            "displayName": "Switch Actors",
            "nodeType": "ScriptedDecisionNode",
            "x": 1024,
            "y": 197.015625,
          },
          "6143e50a-b37d-48d3-9d10-255359d8b7de": {
            "connections": {
              "false": "e301438c-0bd0-429c-ab0c-66126501069a",
              "true": "41226349-82cf-4aa1-92cd-5f075f6fe974",
            },
            "displayName": "Impersonator Active?",
            "nodeType": "AccountActiveDecisionNode",
            "x": 790,
            "y": 236.015625,
          },
          "a00352ea-f959-4020-925e-6769376a5334": {
            "connections": {
              "false": "e301438c-0bd0-429c-ab0c-66126501069a",
              "true": "09ee8d0d-ff79-42a4-b906-3518d353189e",
            },
            "displayName": "APIProtection",
            "nodeType": "InnerTreeEvaluatorNode",
            "x": 138,
            "y": 362.015625,
          },
          "a0282895-4520-4001-976a-97e4a62f0b96": {
            "connections": {
              "false": "e301438c-0bd0-429c-ab0c-66126501069a",
              "true": "f7bd5a55-52bf-44c8-93f1-b84520cba01a",
            },
            "displayName": "Impersonatee Exists?",
            "nodeType": "IdentifyExistingUserNode",
            "x": 1240,
            "y": 153.015625,
          },
          "b7d37d59-926f-4f23-8565-a7edc226d760": {
            "connections": {
              "false": "e301438c-0bd0-429c-ab0c-66126501069a",
              "true": "6143e50a-b37d-48d3-9d10-255359d8b7de",
            },
            "displayName": "Impersonator Exists?",
            "nodeType": "IdentifyExistingUserNode",
            "x": 558,
            "y": 274.015625,
          },
          "f7bd5a55-52bf-44c8-93f1-b84520cba01a": {
            "connections": {
              "false": "e301438c-0bd0-429c-ab0c-66126501069a",
              "true": "09d4efc4-934a-4751-b450-d514f51fc938",
            },
            "displayName": "Impersonatee Active?",
            "nodeType": "AccountActiveDecisionNode",
            "x": 1470,
            "y": 115.015625,
          },
        },
        "staticNodes": {
          "70e691a5-1e33-4ac3-a356-e7b6d60d92e0": {
            "x": 1935,
            "y": 56,
          },
          "e301438c-0bd0-429c-ab0c-66126501069a": {
            "x": 1709,
            "y": 420,
          },
          "startNode": {
            "x": 22,
            "y": 380,
          },
        },
        "uiConfig": {
          "categories": "["Proof Of Concept"]",
        },
      },
    },
    "Impersonation": {
      "circlesOfTrust": {},
      "emailTemplates": {},
      "innerNodes": {
        "bd321b7e-a872-4721-aabd-483cec296276": {
          "_id": "bd321b7e-a872-4721-aabd-483cec296276",
          "_outcomes": [
            {
              "displayName": "Outcome",
              "id": "outcome",
            },
          ],
          "_rev": "1518766268",
          "_type": {
            "_id": "ValidatedUsernameNode",
            "collection": true,
            "name": "Platform Username",
          },
          "usernameAttribute": "userName",
          "validateInput": false,
        },
        "c78898ae-49f7-4c69-adea-469312a6fba5": {
          "_id": "c78898ae-49f7-4c69-adea-469312a6fba5",
          "_outcomes": [
            {
              "displayName": "Outcome",
              "id": "outcome",
            },
          ],
          "_rev": "180298320",
          "_type": {
            "_id": "ValidatedUsernameNode",
            "collection": true,
            "name": "Platform Username",
          },
          "usernameAttribute": "userName",
          "validateInput": false,
        },
        "ca1c460c-2fa3-4434-ba8a-2b19b92f3d1e": {
          "_id": "ca1c460c-2fa3-4434-ba8a-2b19b92f3d1e",
          "_outcomes": [
            {
              "displayName": "Outcome",
              "id": "outcome",
            },
          ],
          "_rev": "-500090710",
          "_type": {
            "_id": "ValidatedPasswordNode",
            "collection": true,
            "name": "Platform Password",
          },
          "passwordAttribute": "password",
          "validateInput": false,
        },
      },
      "nodes": {
        "07653ea0-8d0b-41a5-8271-a0acc6e06591": {
          "_id": "07653ea0-8d0b-41a5-8271-a0acc6e06591",
          "_outcomes": [
            {
              "displayName": "True",
              "id": "true",
            },
            {
              "displayName": "False",
              "id": "false",
            },
          ],
          "_rev": "-771587898",
          "_type": {
            "_id": "IdentifyExistingUserNode",
            "collection": true,
            "name": "Identify Existing User",
          },
          "identifier": "userName",
          "identityAttribute": "userName",
        },
        "345fcc6a-2aea-469c-9aad-e0aa9c7da661": {
          "_id": "345fcc6a-2aea-469c-9aad-e0aa9c7da661",
          "_outcomes": [
            {
              "displayName": "True",
              "id": "true",
            },
            {
              "displayName": "False",
              "id": "false",
            },
          ],
          "_rev": "1699183070",
          "_type": {
            "_id": "InnerTreeEvaluatorNode",
            "collection": true,
            "name": "Inner Tree Evaluator",
          },
          "tree": "Push",
        },
        "51195a59-a0e3-4940-b7db-0d151199a2fc": {
          "_id": "51195a59-a0e3-4940-b7db-0d151199a2fc",
          "_outcomes": [
            {
              "displayName": "True",
              "id": "true",
            },
            {
              "displayName": "False",
              "id": "false",
            },
          ],
          "_rev": "-1980709626",
          "_type": {
            "_id": "DataStoreDecisionNode",
            "collection": true,
            "name": "Data Store Decision",
          },
        },
        "922a357a-8cf6-4411-88bb-3ee9fd338a91": {
          "_id": "922a357a-8cf6-4411-88bb-3ee9fd338a91",
          "_outcomes": [
            {
              "displayName": "Outcome",
              "id": "outcome",
            },
          ],
          "_rev": "-1811869286",
          "_type": {
            "_id": "PageNode",
            "collection": true,
            "name": "Page Node",
          },
          "nodes": [
            {
              "_id": "bd321b7e-a872-4721-aabd-483cec296276",
              "displayName": "Username",
              "nodeType": "ValidatedUsernameNode",
            },
            {
              "_id": "ca1c460c-2fa3-4434-ba8a-2b19b92f3d1e",
              "displayName": "Password",
              "nodeType": "ValidatedPasswordNode",
            },
          ],
          "pageDescription": {},
          "pageHeader": {
            "en": "Begin Impersonation Flow",
          },
        },
        "f64dace1-5887-4df9-97f0-b8f1641daec5": {
          "_id": "f64dace1-5887-4df9-97f0-b8f1641daec5",
          "_outcomes": [
            {
              "displayName": "Outcome",
              "id": "outcome",
            },
          ],
          "_rev": "-887426133",
          "_type": {
            "_id": "PageNode",
            "collection": true,
            "name": "Page Node",
          },
          "nodes": [
            {
              "_id": "c78898ae-49f7-4c69-adea-469312a6fba5",
              "displayName": "Username",
              "nodeType": "ValidatedUsernameNode",
            },
          ],
          "pageDescription": {},
          "pageHeader": {
            "En": "Which User would you like to impersonate?",
          },
        },
      },
      "saml2Entities": {},
      "scripts": {},
      "socialIdentityProviders": {},
      "themes": [],
      "tree": {
        "_id": "Impersonation",
        "_rev": "-341768565",
        "description": "Impersonation functionality to support users",
        "enabled": true,
        "entryNodeId": "922a357a-8cf6-4411-88bb-3ee9fd338a91",
        "identityResource": "managed/alpha_user",
        "nodes": {
          "07653ea0-8d0b-41a5-8271-a0acc6e06591": {
            "connections": {
              "false": "e301438c-0bd0-429c-ab0c-66126501069a",
              "true": "345fcc6a-2aea-469c-9aad-e0aa9c7da661",
            },
            "displayName": "Identify Existing User",
            "nodeType": "IdentifyExistingUserNode",
            "x": 855,
            "y": 160.015625,
          },
          "345fcc6a-2aea-469c-9aad-e0aa9c7da661": {
            "connections": {
              "false": "e301438c-0bd0-429c-ab0c-66126501069a",
              "true": "70e691a5-1e33-4ac3-a356-e7b6d60d92e0",
            },
            "displayName": "Push",
            "nodeType": "InnerTreeEvaluatorNode",
            "x": 1098,
            "y": 99.015625,
          },
          "51195a59-a0e3-4940-b7db-0d151199a2fc": {
            "connections": {
              "false": "e301438c-0bd0-429c-ab0c-66126501069a",
              "true": "f64dace1-5887-4df9-97f0-b8f1641daec5",
            },
            "displayName": "Data Store Decision",
            "nodeType": "DataStoreDecisionNode",
            "x": 376,
            "y": 238.015625,
          },
          "922a357a-8cf6-4411-88bb-3ee9fd338a91": {
            "connections": {
              "outcome": "51195a59-a0e3-4940-b7db-0d151199a2fc",
            },
            "displayName": "Login Page",
            "nodeType": "PageNode",
            "x": 154,
            "y": 204.015625,
          },
          "f64dace1-5887-4df9-97f0-b8f1641daec5": {
            "connections": {
              "outcome": "07653ea0-8d0b-41a5-8271-a0acc6e06591",
            },
            "displayName": "Which User?",
            "nodeType": "PageNode",
            "x": 611,
            "y": 204.015625,
          },
        },
        "staticNodes": {
          "70e691a5-1e33-4ac3-a356-e7b6d60d92e0": {
            "x": 1338,
            "y": 124,
          },
          "e301438c-0bd0-429c-ab0c-66126501069a": {
            "x": 1340,
            "y": 352,
          },
          "startNode": {
            "x": 50,
            "y": 250,
          },
        },
        "uiConfig": {},
      },
    },
    "KerberosLogin": {
      "circlesOfTrust": {},
      "emailTemplates": {},
      "innerNodes": {
        "4c4ffb31-e520-4b13-b737-32781cff324d": {
          "_id": "4c4ffb31-e520-4b13-b737-32781cff324d",
          "_outcomes": [
            {
              "displayName": "error",
              "id": "error",
            },
            {
              "displayName": "abort",
              "id": "abort",
            },
          ],
          "_rev": "-426017121",
          "_type": {
            "_id": "ChoiceCollectorNode",
            "collection": true,
            "name": "Choice Collector",
          },
          "choices": [
            "error",
            "abort",
          ],
          "defaultChoice": "error",
          "prompt": "API Login Failed",
        },
        "6e25738b-e120-414a-9a72-9dc69af4510f": {
          "_id": "6e25738b-e120-414a-9a72-9dc69af4510f",
          "_outcomes": [
            {
              "displayName": "error",
              "id": "error",
            },
            {
              "displayName": "abort",
              "id": "abort",
            },
          ],
          "_rev": "-1971154370",
          "_type": {
            "_id": "ChoiceCollectorNode",
            "collection": true,
            "name": "Choice Collector",
          },
          "choices": [
            "error",
            "abort",
          ],
          "prompt": "User not found!",
        },
        "e96e4503-b2b8-491f-9e16-dd55da79add5": {
          "_id": "e96e4503-b2b8-491f-9e16-dd55da79add5",
          "_outcomes": [
            {
              "displayName": "error",
              "id": "error",
            },
            {
              "displayName": "abort",
              "id": "abort",
            },
          ],
          "_rev": "-2054187791",
          "_type": {
            "_id": "ChoiceCollectorNode",
            "collection": true,
            "name": "Choice Collector",
          },
          "choices": [
            "error",
            "abort",
          ],
          "defaultChoice": "error",
          "prompt": "Username Extraction Failed",
        },
      },
      "nodes": {
        "22ece49f-aa42-452b-9578-22c28b2cf45c": {
          "_id": "22ece49f-aa42-452b-9578-22c28b2cf45c",
          "_outcomes": [
            {
              "displayName": "true",
              "id": "true",
            },
            {
              "displayName": "false",
              "id": "false",
            },
          ],
          "_rev": "630635590",
          "_type": {
            "_id": "ScriptedDecisionNode",
            "collection": true,
            "name": "Scripted Decision",
          },
          "inputs": [
            "*",
          ],
          "outcomes": [
            "true",
            "false",
          ],
          "outputs": [
            "*",
          ],
          "script": "355a8b7c-9e3c-40c1-a873-68127e483adf",
        },
        "30138eb3-4b35-4a4e-8174-497c04639588": {
          "_id": "30138eb3-4b35-4a4e-8174-497c04639588",
          "_outcomes": [
            {
              "displayName": "error",
              "id": "error",
            },
            {
              "displayName": "abort",
              "id": "abort",
            },
          ],
          "_rev": "-1105246579",
          "_type": {
            "_id": "PageNode",
            "collection": true,
            "name": "Page Node",
          },
          "nodes": [
            {
              "_id": "6e25738b-e120-414a-9a72-9dc69af4510f",
              "displayName": "Error",
              "nodeType": "ChoiceCollectorNode",
            },
          ],
          "pageDescription": {},
          "pageHeader": {
            "en": "User Not Found!",
          },
        },
        "4ca0e048-7b85-4394-87a3-d16004f422cc": {
          "_id": "4ca0e048-7b85-4394-87a3-d16004f422cc",
          "_outcomes": [
            {
              "displayName": "error",
              "id": "error",
            },
            {
              "displayName": "abort",
              "id": "abort",
            },
          ],
          "_rev": "1274730759",
          "_type": {
            "_id": "PageNode",
            "collection": true,
            "name": "Page Node",
          },
          "nodes": [
            {
              "_id": "4c4ffb31-e520-4b13-b737-32781cff324d",
              "displayName": "Error",
              "nodeType": "ChoiceCollectorNode",
            },
          ],
          "pageDescription": {
            "en": "The KerberosLogin journey is protected with an API key and secret.",
          },
          "pageHeader": {
            "en": "API Login Failed",
          },
        },
        "587be25b-e40c-4f2e-a9a1-dee5858a74b8": {
          "_id": "587be25b-e40c-4f2e-a9a1-dee5858a74b8",
          "_outcomes": [
            {
              "displayName": "error",
              "id": "error",
            },
            {
              "displayName": "abort",
              "id": "abort",
            },
          ],
          "_rev": "794969917",
          "_type": {
            "_id": "PageNode",
            "collection": true,
            "name": "Page Node",
          },
          "nodes": [
            {
              "_id": "e96e4503-b2b8-491f-9e16-dd55da79add5",
              "displayName": "Error",
              "nodeType": "ChoiceCollectorNode",
            },
          ],
          "pageDescription": {},
          "pageHeader": {
            "en": "Username Extraction Failed!",
          },
        },
        "697ff756-5823-44f7-9854-ff5b656ea91a": {
          "_id": "697ff756-5823-44f7-9854-ff5b656ea91a",
          "_outcomes": [
            {
              "displayName": "True",
              "id": "true",
            },
            {
              "displayName": "False",
              "id": "false",
            },
          ],
          "_rev": "-1178575524",
          "_type": {
            "_id": "IdentifyExistingUserNode",
            "collection": true,
            "name": "Identify Existing User",
          },
          "identifier": "userName",
          "identityAttribute": "userName",
        },
        "e90237e5-f571-4dbf-9276-446270431f18": {
          "_id": "e90237e5-f571-4dbf-9276-446270431f18",
          "_outcomes": [
            {
              "displayName": "True",
              "id": "true",
            },
            {
              "displayName": "False",
              "id": "false",
            },
          ],
          "_rev": "1336449599",
          "_type": {
            "_id": "InnerTreeEvaluatorNode",
            "collection": true,
            "name": "Inner Tree Evaluator",
          },
          "tree": "APIProtection",
        },
      },
      "saml2Entities": {},
      "scripts": {},
      "socialIdentityProviders": {},
      "themes": [],
      "tree": {
        "_id": "KerberosLogin",
        "_rev": "1332922517",
        "description": "Delegated Kerberos login. This journey expects Identity Gateway or some other agent running inside the Kerberos security realm to validate Kerberos tickets and extract username and domain information and include it when calling this journey. This journey will resort to local authentication if it cannot find the Kerberos artifacts.",
        "enabled": true,
        "entryNodeId": "e90237e5-f571-4dbf-9276-446270431f18",
        "identityResource": "managed/alpha_user",
        "nodes": {
          "22ece49f-aa42-452b-9578-22c28b2cf45c": {
            "connections": {
              "false": "587be25b-e40c-4f2e-a9a1-dee5858a74b8",
              "true": "697ff756-5823-44f7-9854-ff5b656ea91a",
            },
            "displayName": "Extract Username",
            "nodeType": "ScriptedDecisionNode",
            "x": 374,
            "y": 127.015625,
          },
          "30138eb3-4b35-4a4e-8174-497c04639588": {
            "connections": {
              "abort": "e301438c-0bd0-429c-ab0c-66126501069a",
              "error": "e301438c-0bd0-429c-ab0c-66126501069a",
            },
            "displayName": "User Not Found",
            "nodeType": "PageNode",
            "x": 824,
            "y": 143.015625,
          },
          "4ca0e048-7b85-4394-87a3-d16004f422cc": {
            "connections": {
              "abort": "e301438c-0bd0-429c-ab0c-66126501069a",
              "error": "e301438c-0bd0-429c-ab0c-66126501069a",
            },
            "displayName": "API Login Failed",
            "nodeType": "PageNode",
            "x": 369,
            "y": 341.015625,
          },
          "587be25b-e40c-4f2e-a9a1-dee5858a74b8": {
            "connections": {
              "abort": "e301438c-0bd0-429c-ab0c-66126501069a",
              "error": "e301438c-0bd0-429c-ab0c-66126501069a",
            },
            "displayName": "Extraction Failed",
            "nodeType": "PageNode",
            "x": 585,
            "y": 223.015625,
          },
          "697ff756-5823-44f7-9854-ff5b656ea91a": {
            "connections": {
              "false": "30138eb3-4b35-4a4e-8174-497c04639588",
              "true": "70e691a5-1e33-4ac3-a356-e7b6d60d92e0",
            },
            "displayName": "User Exists?",
            "nodeType": "IdentifyExistingUserNode",
            "x": 588,
            "y": 50.015625,
          },
          "e90237e5-f571-4dbf-9276-446270431f18": {
            "connections": {
              "false": "4ca0e048-7b85-4394-87a3-d16004f422cc",
              "true": "22ece49f-aa42-452b-9578-22c28b2cf45c",
            },
            "displayName": "APIProtection",
            "nodeType": "InnerTreeEvaluatorNode",
            "x": 150,
            "y": 233.015625,
          },
        },
        "staticNodes": {
          "70e691a5-1e33-4ac3-a356-e7b6d60d92e0": {
            "x": 810,
            "y": 6,
          },
          "e301438c-0bd0-429c-ab0c-66126501069a": {
            "x": 1044,
            "y": 433,
          },
          "startNode": {
            "x": 50,
            "y": 250,
          },
        },
        "uiConfig": {},
      },
    },
    "LanguageSwitcher": {
      "circlesOfTrust": {},
      "emailTemplates": {},
      "innerNodes": {
        "7ec0e019-7415-4526-9805-eb64eebdbf4a": {
          "_id": "7ec0e019-7415-4526-9805-eb64eebdbf4a",
          "_outcomes": [
            {
              "displayName": "Outcome",
              "id": "outcome",
            },
          ],
          "_rev": "208197802",
          "_type": {
            "_id": "ValidatedUsernameNode",
            "collection": true,
            "name": "Platform Username",
          },
          "usernameAttribute": "userName",
          "validateInput": false,
        },
        "e9c9a7de-e5fb-45cf-83fc-f625f9468d3b": {
          "_id": "e9c9a7de-e5fb-45cf-83fc-f625f9468d3b",
          "_outcomes": [
            {
              "displayName": "Outcome",
              "id": "outcome",
            },
          ],
          "_rev": "1880624622",
          "_type": {
            "_id": "ValidatedPasswordNode",
            "collection": true,
            "name": "Platform Password",
          },
          "passwordAttribute": "password",
          "validateInput": false,
        },
      },
      "nodes": {
        "9e5dafa7-345d-4760-9dce-9b3a2c4234a1": {
          "_id": "9e5dafa7-345d-4760-9dce-9b3a2c4234a1",
          "_outcomes": [
            {
              "displayName": "Outcome",
              "id": "outcome",
            },
          ],
          "_rev": "-179219393",
          "_type": {
            "_id": "PageNode",
            "collection": true,
            "name": "Page Node",
          },
          "nodes": [
            {
              "_id": "7ec0e019-7415-4526-9805-eb64eebdbf4a",
              "displayName": "Username",
              "nodeType": "ValidatedUsernameNode",
            },
          ],
          "pageDescription": {
            "de": "<a href="https://openam-volker-dev.forgeblocks.com/am/XUI/?realm=alpha&authIndexType=service&authIndexValue=LanguageSwitcher&locale=en">en</a>|de|<a href="https://openam-volker-dev.forgeblocks.com/am/XUI/?realm=alpha&authIndexType=service&authIndexValue=LanguageSwitcher&locale=fr">fr</a>",
            "en": "en|<a href="https://openam-volker-dev.forgeblocks.com/am/XUI/?realm=alpha&authIndexType=service&authIndexValue=LanguageSwitcher&locale=de">de</a>|<a href="https://openam-volker-dev.forgeblocks.com/am/XUI/?realm=alpha&authIndexType=service&authIndexValue=LanguageSwitcher&locale=fr">fr</a>",
            "fr": "<a href="https://openam-volker-dev.forgeblocks.com/am/XUI/?realm=alpha&authIndexType=service&authIndexValue=LanguageSwitcher&locale=en">en</a>|<a href="https://openam-volker-dev.forgeblocks.com/am/XUI/?realm=alpha&authIndexType=service&authIndexValue=LanguageSwitcher&locale=de">de</a>|fr",
          },
          "pageHeader": {
            "de": "Erste Seite",
            "en": "First Page",
            "fr": "Première Page",
          },
        },
        "bda1be75-5653-46aa-821f-5343fa975492": {
          "_id": "bda1be75-5653-46aa-821f-5343fa975492",
          "_outcomes": [
            {
              "displayName": "true",
              "id": "true",
            },
          ],
          "_rev": "301157330",
          "_type": {
            "_id": "ScriptedDecisionNode",
            "collection": true,
            "name": "Scripted Decision",
          },
          "inputs": [
            "*",
          ],
          "outcomes": [
            "true",
          ],
          "outputs": [
            "*",
          ],
          "script": "35f56a51-cb99-410d-a7d2-7dc0bb9e4cb7",
        },
        "ddd626e8-67b6-4b22-868c-758d27ad9387": {
          "_id": "ddd626e8-67b6-4b22-868c-758d27ad9387",
          "_outcomes": [
            {
              "displayName": "Outcome",
              "id": "outcome",
            },
          ],
          "_rev": "-672707232",
          "_type": {
            "_id": "PageNode",
            "collection": true,
            "name": "Page Node",
          },
          "nodes": [
            {
              "_id": "e9c9a7de-e5fb-45cf-83fc-f625f9468d3b",
              "displayName": "Password",
              "nodeType": "ValidatedPasswordNode",
            },
          ],
          "pageDescription": {
            "de": "<a href="https://openam-volker-dev.forgeblocks.com/am/XUI/?realm=alpha&authIndexType=service&authIndexValue=LanguageSwitcher&locale=en">en</a>|de|<a href="https://openam-volker-dev.forgeblocks.com/am/XUI/?realm=alpha&authIndexType=service&authIndexValue=LanguageSwitcher&locale=fr">fr</a>",
            "en": "en|<a href="https://openam-volker-dev.forgeblocks.com/am/XUI/?realm=alpha&authIndexType=service&authIndexValue=LanguageSwitcher&locale=de">de</a>|<a href="https://openam-volker-dev.forgeblocks.com/am/XUI/?realm=alpha&authIndexType=service&authIndexValue=LanguageSwitcher&locale=fr">fr</a>",
            "fr": "<a href="https://openam-volker-dev.forgeblocks.com/am/XUI/?realm=alpha&authIndexType=service&authIndexValue=LanguageSwitcher&locale=en">en</a>|<a href="https://openam-volker-dev.forgeblocks.com/am/XUI/?realm=alpha&authIndexType=service&authIndexValue=LanguageSwitcher&locale=de">de</a>|fr",
          },
          "pageHeader": {
            "de": "Zweite Seite",
            "en": "Second Page",
            "fr": "Deuxième Page",
          },
        },
      },
      "saml2Entities": {},
      "scripts": {},
      "socialIdentityProviders": {},
      "themes": [],
      "tree": {
        "_id": "LanguageSwitcher",
        "_rev": "-739900473",
        "description": "Allow user to switch language",
        "enabled": true,
        "entryNodeId": "9e5dafa7-345d-4760-9dce-9b3a2c4234a1",
        "identityResource": "managed/alpha_user",
        "nodes": {
          "9e5dafa7-345d-4760-9dce-9b3a2c4234a1": {
            "connections": {
              "outcome": "ddd626e8-67b6-4b22-868c-758d27ad9387",
            },
            "displayName": "First Page",
            "nodeType": "PageNode",
            "x": 165,
            "y": 230.015625,
          },
          "bda1be75-5653-46aa-821f-5343fa975492": {
            "connections": {},
            "displayName": "Select Language",
            "nodeType": "ScriptedDecisionNode",
            "x": 319,
            "y": 83.015625,
          },
          "ddd626e8-67b6-4b22-868c-758d27ad9387": {
            "connections": {
              "outcome": "e301438c-0bd0-429c-ab0c-66126501069a",
            },
            "displayName": "Second Page",
            "nodeType": "PageNode",
            "x": 469,
            "y": 231.015625,
          },
        },
        "staticNodes": {
          "70e691a5-1e33-4ac3-a356-e7b6d60d92e0": {
            "x": 891,
            "y": 99,
          },
          "e301438c-0bd0-429c-ab0c-66126501069a": {
            "x": 763,
            "y": 257,
          },
          "startNode": {
            "x": 50,
            "y": 250,
          },
        },
        "uiConfig": {
          "categories": "["Prototype"]",
        },
      },
    },
    "Launcher": {
      "circlesOfTrust": {},
      "emailTemplates": {},
      "innerNodes": {
        "371d2a4d-1390-4b05-85d5-af5916d98e1a": {
          "_id": "371d2a4d-1390-4b05-85d5-af5916d98e1a",
          "_outcomes": [
            {
              "displayName": "true",
              "id": "true",
            },
          ],
          "_rev": "-575391693",
          "_type": {
            "_id": "ScriptedDecisionNode",
            "collection": true,
            "name": "Scripted Decision",
          },
          "inputs": [
            "*",
          ],
          "outcomes": [
            "true",
          ],
          "outputs": [
            "*",
          ],
          "script": "9535446c-0ff6-4a76-8576-616599119d64",
        },
        "5fda5b01-b6dd-4414-b99e-e40dfc531990": {
          "_id": "5fda5b01-b6dd-4414-b99e-e40dfc531990",
          "_outcomes": [
            {
              "displayName": "true",
              "id": "true",
            },
          ],
          "_rev": "-864408770",
          "_type": {
            "_id": "ScriptedDecisionNode",
            "collection": true,
            "name": "Scripted Decision",
          },
          "inputs": [
            "*",
          ],
          "outcomes": [
            "true",
          ],
          "outputs": [
            "*",
          ],
          "script": "3b81d8e6-55f3-4937-bbbb-d62233cc6a0f",
        },
      },
      "nodes": {
        "02cfdbf4-d834-473a-b87f-c8af00f76d6d": {
          "_id": "02cfdbf4-d834-473a-b87f-c8af00f76d6d",
          "_outcomes": [
            {
              "displayName": "true",
              "id": "true",
            },
          ],
          "_rev": "785749778",
          "_type": {
            "_id": "PageNode",
            "collection": true,
            "name": "Page Node",
          },
          "nodes": [
            {
              "_id": "5fda5b01-b6dd-4414-b99e-e40dfc531990",
              "displayName": "Launcher",
              "nodeType": "ScriptedDecisionNode",
            },
            {
              "_id": "371d2a4d-1390-4b05-85d5-af5916d98e1a",
              "displayName": "Remove Button",
              "nodeType": "ScriptedDecisionNode",
            },
          ],
          "pageDescription": {},
          "pageHeader": {},
        },
        "25001c7a-7928-4949-9706-0689416b18b0": {
          "_id": "25001c7a-7928-4949-9706-0689416b18b0",
          "_outcomes": [
            {
              "displayName": "true",
              "id": "true",
            },
          ],
          "_rev": "-1049667358",
          "_type": {
            "_id": "ScriptedDecisionNode",
            "collection": true,
            "name": "Scripted Decision",
          },
          "inputs": [
            "*",
          ],
          "outcomes": [
            "true",
          ],
          "outputs": [
            "*",
          ],
          "script": "50cde102-d4b6-44c4-9ba7-8564af05ae08",
        },
      },
      "saml2Entities": {},
      "scripts": {},
      "socialIdentityProviders": {},
      "themes": [],
      "tree": {
        "_id": "Launcher",
        "_rev": "352273520",
        "description": "Listing of Flows
",
        "enabled": true,
        "entryNodeId": "25001c7a-7928-4949-9706-0689416b18b0",
        "identityResource": "managed/alpha_user",
        "nodes": {
          "02cfdbf4-d834-473a-b87f-c8af00f76d6d": {
            "connections": {
              "true": "e301438c-0bd0-429c-ab0c-66126501069a",
            },
            "displayName": "Launcher Page",
            "nodeType": "PageNode",
            "x": 365,
            "y": 204.015625,
          },
          "25001c7a-7928-4949-9706-0689416b18b0": {
            "connections": {
              "true": "02cfdbf4-d834-473a-b87f-c8af00f76d6d",
            },
            "displayName": "Theme from URL",
            "nodeType": "ScriptedDecisionNode",
            "x": 159,
            "y": 258.015625,
          },
        },
        "staticNodes": {
          "70e691a5-1e33-4ac3-a356-e7b6d60d92e0": {
            "x": 46,
            "y": 107,
          },
          "e301438c-0bd0-429c-ab0c-66126501069a": {
            "x": 573,
            "y": 256,
          },
          "startNode": {
            "x": 50,
            "y": 250,
          },
        },
        "uiConfig": {
          "categories": "["Helper"]",
        },
      },
    },
    "Login": {
      "circlesOfTrust": {},
      "emailTemplates": {},
      "innerNodes": {
        "2dc57e16-cc46-49dc-b9cc-3379cd060e26": {
          "_id": "2dc57e16-cc46-49dc-b9cc-3379cd060e26",
          "_outcomes": [
            {
              "displayName": "Outcome",
              "id": "outcome",
            },
          ],
          "_rev": "-1518787026",
          "_type": {
            "_id": "ValidatedPasswordNode",
            "collection": true,
            "name": "Platform Password",
          },
          "passwordAttribute": "password",
          "validateInput": false,
        },
        "7d666549-016a-4203-b199-a927861b2414": {
          "_id": "7d666549-016a-4203-b199-a927861b2414",
          "_outcomes": [
            {
              "displayName": "Social Authentication",
              "id": "socialAuthentication",
            },
            {
              "displayName": "Local Authentication",
              "id": "localAuthentication",
            },
          ],
          "_rev": "-383173843",
          "_type": {
            "_id": "SelectIdPNode",
            "collection": true,
            "name": "Select Identity Provider",
          },
          "filteredProviders": [
            "github",
            "facebook",
            "google",
            "apple_web",
            "azure",
            "okta-trial-5735851",
            "adfs",
          ],
          "identityAttribute": "mail",
          "includeLocalAuthentication": true,
          "offerOnlyExisting": false,
          "passwordAttribute": "password",
        },
        "c0a51f25-a88c-4a07-9b00-014cb15927a0": {
          "_id": "c0a51f25-a88c-4a07-9b00-014cb15927a0",
          "_outcomes": [
            {
              "displayName": "Outcome",
              "id": "outcome",
            },
          ],
          "_rev": "-629587801",
          "_type": {
            "_id": "ValidatedUsernameNode",
            "collection": true,
            "name": "Platform Username",
          },
          "usernameAttribute": "userName",
          "validateInput": false,
        },
        "c425e3ed-5d17-4bbb-b357-104b04761157": {
          "_id": "c425e3ed-5d17-4bbb-b357-104b04761157",
          "_outcomes": [
            {
              "displayName": "Outcome",
              "id": "outcome",
            },
          ],
          "_rev": "-1430084109",
          "_type": {
            "_id": "ValidatedPasswordNode",
            "collection": true,
            "name": "Platform Password",
          },
          "passwordAttribute": "password",
          "validateInput": false,
        },
        "fa54d7e9-7f09-4098-8855-9818dff4e82e": {
          "_id": "fa54d7e9-7f09-4098-8855-9818dff4e82e",
          "_outcomes": [
            {
              "displayName": "Social Authentication",
              "id": "socialAuthentication",
            },
            {
              "displayName": "Local Authentication",
              "id": "localAuthentication",
            },
          ],
          "_rev": "1093415729",
          "_type": {
            "_id": "SelectIdPNode",
            "collection": true,
            "name": "Select Identity Provider",
          },
          "filteredProviders": [
            "facebook",
            "google",
            "apple_web",
            "azure",
            "adfs",
          ],
          "identityAttribute": "mail",
          "includeLocalAuthentication": true,
          "offerOnlyExisting": false,
          "passwordAttribute": "password",
        },
      },
      "nodes": {
        "12df19c3-3a89-4761-be1c-9c7304f1cf7f": {
          "_id": "12df19c3-3a89-4761-be1c-9c7304f1cf7f",
          "_outcomes": [
            {
              "displayName": "True",
              "id": "true",
            },
            {
              "displayName": "False",
              "id": "false",
            },
          ],
          "_rev": "-907924671",
          "_type": {
            "_id": "InnerTreeEvaluatorNode",
            "collection": true,
            "name": "Inner Tree Evaluator",
          },
          "tree": "ProgressiveProfile",
        },
        "1caad6df-5b01-427e-8390-f39a1cc6fa21": {
          "_id": "1caad6df-5b01-427e-8390-f39a1cc6fa21",
          "_outcomes": [
            {
              "displayName": "Social Authentication",
              "id": "socialAuthentication",
            },
            {
              "displayName": "Local Authentication",
              "id": "localAuthentication",
            },
          ],
          "_rev": "-1562564784",
          "_type": {
            "_id": "PageNode",
            "collection": true,
            "name": "Page Node",
          },
          "nodes": [
            {
              "_id": "2dc57e16-cc46-49dc-b9cc-3379cd060e26",
              "displayName": "Password",
              "nodeType": "ValidatedPasswordNode",
            },
            {
              "_id": "fa54d7e9-7f09-4098-8855-9818dff4e82e",
              "displayName": "Select IDP",
              "nodeType": "SelectIdPNode",
            },
          ],
          "pageDescription": {
            "en": "New here? <a href="#/service/Registration">Create an account</a><br><a href="#/service/ForgottenUsername">Forgot username?</a><a href="#/service/ResetPassword"> Forgot password?</a>",
          },
          "pageHeader": {
            "en": "Sign In",
          },
        },
        "1d8e0b33-34fb-4e83-af82-eef928d85d7b": {
          "_id": "1d8e0b33-34fb-4e83-af82-eef928d85d7b",
          "_outcomes": [
            {
              "displayName": "True",
              "id": "true",
            },
            {
              "displayName": "False",
              "id": "false",
            },
          ],
          "_rev": "757320808",
          "_type": {
            "_id": "DataStoreDecisionNode",
            "collection": true,
            "name": "Data Store Decision",
          },
        },
        "2b47d18d-b3c6-4885-831b-15416d6e4152": {
          "_id": "2b47d18d-b3c6-4885-831b-15416d6e4152",
          "_outcomes": [
            {
              "displayName": "Social Authentication",
              "id": "socialAuthentication",
            },
            {
              "displayName": "Local Authentication",
              "id": "localAuthentication",
            },
          ],
          "_rev": "-337606322",
          "_type": {
            "_id": "PageNode",
            "collection": true,
            "name": "Page Node",
          },
          "nodes": [
            {
              "_id": "c0a51f25-a88c-4a07-9b00-014cb15927a0",
              "displayName": "Username",
              "nodeType": "ValidatedUsernameNode",
            },
            {
              "_id": "c425e3ed-5d17-4bbb-b357-104b04761157",
              "displayName": "Password",
              "nodeType": "ValidatedPasswordNode",
            },
            {
              "_id": "7d666549-016a-4203-b199-a927861b2414",
              "displayName": "Select IDP",
              "nodeType": "SelectIdPNode",
            },
          ],
          "pageDescription": {
            "en": "New here? <a href="#/service/Registration">Create an account</a><br><a href="#/service/ForgottenUsername">Forgot username?</a><a href="#/service/ResetPassword"> Forgot password?</a>",
          },
          "pageHeader": {
            "en": "Sign In",
          },
        },
        "5d8a5dc3-0502-4b97-a16c-6c2e9e37e19d": {
          "_id": "5d8a5dc3-0502-4b97-a16c-6c2e9e37e19d",
          "_outcomes": [
            {
              "displayName": "True",
              "id": "true",
            },
            {
              "displayName": "False",
              "id": "false",
            },
          ],
          "_rev": "-1531959324",
          "_type": {
            "_id": "InnerTreeEvaluatorNode",
            "collection": true,
            "name": "Inner Tree Evaluator",
          },
          "tree": "FraudRisk",
        },
        "5ee3ebe7-00f8-48ed-a18a-5cb37d95a1b2": {
          "_id": "5ee3ebe7-00f8-48ed-a18a-5cb37d95a1b2",
          "_outcomes": [
            {
              "displayName": "True",
              "id": "true",
            },
            {
              "displayName": "False",
              "id": "false",
            },
          ],
          "_rev": "-11092449",
          "_type": {
            "_id": "InnerTreeEvaluatorNode",
            "collection": true,
            "name": "Inner Tree Evaluator",
          },
          "tree": "MFAAutoSelect",
        },
        "756ec76a-f266-4fd8-98ed-df37ed692337": {
          "_id": "756ec76a-f266-4fd8-98ed-df37ed692337",
          "_outcomes": [
            {
              "displayName": "Outcome",
              "id": "outcome",
            },
          ],
          "_rev": "1688596300",
          "_type": {
            "_id": "IncrementLoginCountNode",
            "collection": true,
            "name": "Increment Login Count",
          },
          "identityAttribute": "userName",
        },
        "b0cc6f9c-3bb2-43e4-9405-569eeabb785c": {
          "_id": "b0cc6f9c-3bb2-43e4-9405-569eeabb785c",
          "_outcomes": [
            {
              "displayName": "known",
              "id": "known",
            },
            {
              "displayName": "unknown",
              "id": "unknown",
            },
          ],
          "_rev": "1675997390",
          "_type": {
            "_id": "ScriptedDecisionNode",
            "collection": true,
            "name": "Scripted Decision",
          },
          "inputs": [
            "*",
          ],
          "outcomes": [
            "known",
            "unknown",
          ],
          "outputs": [
            "*",
          ],
          "script": "739bdc48-fd24-4c52-b353-88706d75558a",
        },
        "cac5b285-6d38-42c0-a57c-d536a446ea98": {
          "_id": "cac5b285-6d38-42c0-a57c-d536a446ea98",
          "_outcomes": [
            {
              "displayName": "True",
              "id": "true",
            },
            {
              "displayName": "False",
              "id": "false",
            },
          ],
          "_rev": "-161058517",
          "_type": {
            "_id": "InnerTreeEvaluatorNode",
            "collection": true,
            "name": "Inner Tree Evaluator",
          },
          "tree": "iSocialLogin",
        },
        "d7de1e1f-b43d-4be4-a830-7074180931b4": {
          "_id": "d7de1e1f-b43d-4be4-a830-7074180931b4",
          "_outcomes": [
            {
              "displayName": "True",
              "id": "true",
            },
            {
              "displayName": "False",
              "id": "false",
            },
          ],
          "_rev": "2065356039",
          "_type": {
            "_id": "InnerTreeEvaluatorNode",
            "collection": true,
            "name": "Inner Tree Evaluator",
          },
          "tree": "DevicePrint",
        },
      },
      "saml2Entities": {},
      "scripts": {},
      "socialIdentityProviders": {},
      "themes": [],
      "tree": {
        "_id": "Login",
        "_rev": "1955097461",
        "description": "Platform Login Tree",
        "enabled": true,
        "entryNodeId": "b0cc6f9c-3bb2-43e4-9405-569eeabb785c",
        "identityResource": "managed/alpha_user",
        "nodes": {
          "12df19c3-3a89-4761-be1c-9c7304f1cf7f": {
            "connections": {
              "false": "756ec76a-f266-4fd8-98ed-df37ed692337",
              "true": "756ec76a-f266-4fd8-98ed-df37ed692337",
            },
            "displayName": "Progressive Profile",
            "nodeType": "InnerTreeEvaluatorNode",
            "x": 1479,
            "y": 258,
          },
          "1caad6df-5b01-427e-8390-f39a1cc6fa21": {
            "connections": {
              "localAuthentication": "1d8e0b33-34fb-4e83-af82-eef928d85d7b",
              "socialAuthentication": "cac5b285-6d38-42c0-a57c-d536a446ea98",
            },
            "displayName": "Page Node",
            "nodeType": "PageNode",
            "x": 357,
            "y": 81.015625,
          },
          "1d8e0b33-34fb-4e83-af82-eef928d85d7b": {
            "connections": {
              "false": "e301438c-0bd0-429c-ab0c-66126501069a",
              "true": "5d8a5dc3-0502-4b97-a16c-6c2e9e37e19d",
            },
            "displayName": "U/P Login",
            "nodeType": "DataStoreDecisionNode",
            "x": 636,
            "y": 329,
          },
          "2b47d18d-b3c6-4885-831b-15416d6e4152": {
            "connections": {
              "localAuthentication": "1d8e0b33-34fb-4e83-af82-eef928d85d7b",
              "socialAuthentication": "cac5b285-6d38-42c0-a57c-d536a446ea98",
            },
            "displayName": "Page Node",
            "nodeType": "PageNode",
            "x": 359,
            "y": 320,
          },
          "5d8a5dc3-0502-4b97-a16c-6c2e9e37e19d": {
            "connections": {
              "false": "e301438c-0bd0-429c-ab0c-66126501069a",
              "true": "d7de1e1f-b43d-4be4-a830-7074180931b4",
            },
            "displayName": "Benign Visitor?",
            "nodeType": "InnerTreeEvaluatorNode",
            "x": 874,
            "y": 254.76666259765625,
          },
          "5ee3ebe7-00f8-48ed-a18a-5cb37d95a1b2": {
            "connections": {
              "false": "e301438c-0bd0-429c-ab0c-66126501069a",
              "true": "12df19c3-3a89-4761-be1c-9c7304f1cf7f",
            },
            "displayName": "MFA",
            "nodeType": "InnerTreeEvaluatorNode",
            "x": 1293,
            "y": 373.76666259765625,
          },
          "756ec76a-f266-4fd8-98ed-df37ed692337": {
            "connections": {
              "outcome": "70e691a5-1e33-4ac3-a356-e7b6d60d92e0",
            },
            "displayName": "Count Login",
            "nodeType": "IncrementLoginCountNode",
            "x": 1698,
            "y": 282,
          },
          "b0cc6f9c-3bb2-43e4-9405-569eeabb785c": {
            "connections": {
              "known": "1caad6df-5b01-427e-8390-f39a1cc6fa21",
              "unknown": "2b47d18d-b3c6-4885-831b-15416d6e4152",
            },
            "displayName": "Username?",
            "nodeType": "ScriptedDecisionNode",
            "x": 148,
            "y": 260.015625,
          },
          "cac5b285-6d38-42c0-a57c-d536a446ea98": {
            "connections": {
              "false": "e301438c-0bd0-429c-ab0c-66126501069a",
              "true": "5d8a5dc3-0502-4b97-a16c-6c2e9e37e19d",
            },
            "displayName": "Social Login",
            "nodeType": "InnerTreeEvaluatorNode",
            "x": 635,
            "y": 175.015625,
          },
          "d7de1e1f-b43d-4be4-a830-7074180931b4": {
            "connections": {
              "false": "5ee3ebe7-00f8-48ed-a18a-5cb37d95a1b2",
              "true": "12df19c3-3a89-4761-be1c-9c7304f1cf7f",
            },
            "displayName": "Device Print",
            "nodeType": "InnerTreeEvaluatorNode",
            "x": 1094,
            "y": 254.76666259765625,
          },
        },
        "staticNodes": {
          "70e691a5-1e33-4ac3-a356-e7b6d60d92e0": {
            "x": 1909,
            "y": 274,
          },
          "e301438c-0bd0-429c-ab0c-66126501069a": {
            "x": 1527,
            "y": 509,
          },
          "startNode": {
            "x": 38,
            "y": 278,
          },
        },
        "uiConfig": {
          "categories": "["Authentication","Social Authentication"]",
        },
      },
    },
    "Metrics": {
      "circlesOfTrust": {},
      "emailTemplates": {},
      "innerNodes": {
        "17dcc13e-5a2d-4ea4-8b7b-6c836ef19041": {
          "_id": "17dcc13e-5a2d-4ea4-8b7b-6c836ef19041",
          "_outcomes": [
            {
              "displayName": "Outcome",
              "id": "outcome",
            },
          ],
          "_rev": "-1282702970",
          "_type": {
            "_id": "ValidatedPasswordNode",
            "collection": true,
            "name": "Platform Password",
          },
          "passwordAttribute": "password",
          "validateInput": false,
        },
        "1b88e8ff-8bea-4ab2-826a-63599c1674ed": {
          "_id": "1b88e8ff-8bea-4ab2-826a-63599c1674ed",
          "_outcomes": [
            {
              "displayName": "Outcome",
              "id": "outcome",
            },
          ],
          "_rev": "-617874084",
          "_type": {
            "_id": "ValidatedUsernameNode",
            "collection": true,
            "name": "Platform Username",
          },
          "usernameAttribute": "userName",
          "validateInput": false,
        },
        "c392967d-a508-42a1-a81f-abcc78f33f9b": {
          "_id": "c392967d-a508-42a1-a81f-abcc78f33f9b",
          "_outcomes": [
            {
              "displayName": "Outcome",
              "id": "outcome",
            },
          ],
          "_rev": "-1932813117",
          "_type": {
            "_id": "TimerStartNode",
            "collection": true,
            "name": "Timer Start",
          },
          "startTimeProperty": "LoginStartTime",
        },
      },
      "nodes": {
        "511c3a28-6070-4447-80cd-19eb9d5e48a3": {
          "_id": "511c3a28-6070-4447-80cd-19eb9d5e48a3",
          "_outcomes": [
            {
              "displayName": "Outcome",
              "id": "outcome",
            },
          ],
          "_rev": "-962727374",
          "_type": {
            "_id": "MeterNode",
            "collection": true,
            "name": "Meter",
          },
          "metricKey": "UPSuccessCount",
        },
        "516fc6b6-3107-4675-8932-3f9aedaed363": {
          "_id": "516fc6b6-3107-4675-8932-3f9aedaed363",
          "_outcomes": [
            {
              "displayName": "Outcome",
              "id": "outcome",
            },
          ],
          "_rev": "842392670",
          "_type": {
            "_id": "TimerStopNode",
            "collection": true,
            "name": "Timer Stop",
          },
          "metricKey": "UPFailureTime",
          "startTimeProperty": "TimerNodeStartTime",
        },
        "5de86f94-88f2-4da6-95da-44c0b15f0220": {
          "_id": "5de86f94-88f2-4da6-95da-44c0b15f0220",
          "_outcomes": [
            {
              "displayName": "True",
              "id": "true",
            },
            {
              "displayName": "False",
              "id": "false",
            },
          ],
          "_rev": "2065123221",
          "_type": {
            "_id": "DataStoreDecisionNode",
            "collection": true,
            "name": "Data Store Decision",
          },
        },
        "689e092e-93f5-4cb3-b35f-494fda870589": {
          "_id": "689e092e-93f5-4cb3-b35f-494fda870589",
          "_outcomes": [
            {
              "displayName": "Outcome",
              "id": "outcome",
            },
          ],
          "_rev": "2022031163",
          "_type": {
            "_id": "TimerStopNode",
            "collection": true,
            "name": "Timer Stop",
          },
          "metricKey": "UPSuccessTime",
          "startTimeProperty": "LoginStartTime",
        },
        "851de971-3bed-429d-b619-d325ed456dbc": {
          "_id": "851de971-3bed-429d-b619-d325ed456dbc",
          "_outcomes": [
            {
              "displayName": "Outcome",
              "id": "outcome",
            },
          ],
          "_rev": "2090941224",
          "_type": {
            "_id": "MeterNode",
            "collection": true,
            "name": "Meter",
          },
          "metricKey": "UPFailureCount",
        },
        "cb7b0a23-d4d3-42a2-81bb-96f672d903a9": {
          "_id": "cb7b0a23-d4d3-42a2-81bb-96f672d903a9",
          "_outcomes": [
            {
              "displayName": "Outcome",
              "id": "outcome",
            },
          ],
          "_rev": "-1116538386",
          "_type": {
            "_id": "PageNode",
            "collection": true,
            "name": "Page Node",
          },
          "nodes": [
            {
              "_id": "c392967d-a508-42a1-a81f-abcc78f33f9b",
              "displayName": "Timer Start",
              "nodeType": "TimerStartNode",
            },
            {
              "_id": "1b88e8ff-8bea-4ab2-826a-63599c1674ed",
              "displayName": "Username",
              "nodeType": "ValidatedUsernameNode",
            },
            {
              "_id": "17dcc13e-5a2d-4ea4-8b7b-6c836ef19041",
              "displayName": "Password",
              "nodeType": "ValidatedPasswordNode",
            },
          ],
          "pageDescription": {},
          "pageHeader": {},
        },
      },
      "saml2Entities": {},
      "scripts": {},
      "socialIdentityProviders": {},
      "themes": [],
      "tree": {
        "_id": "Metrics",
        "_rev": "463129919",
        "description": "Demonstrate custom metrics.",
        "enabled": true,
        "entryNodeId": "cb7b0a23-d4d3-42a2-81bb-96f672d903a9",
        "identityResource": "managed/alpha_user",
        "nodes": {
          "511c3a28-6070-4447-80cd-19eb9d5e48a3": {
            "connections": {
              "outcome": "70e691a5-1e33-4ac3-a356-e7b6d60d92e0",
            },
            "displayName": "Meter (UPSuccessCount)",
            "nodeType": "MeterNode",
            "x": 819,
            "y": 223.015625,
          },
          "516fc6b6-3107-4675-8932-3f9aedaed363": {
            "connections": {
              "outcome": "851de971-3bed-429d-b619-d325ed456dbc",
            },
            "displayName": "Timer Stop (UPFailureTime)",
            "nodeType": "TimerStopNode",
            "x": 575,
            "y": 325.015625,
          },
          "5de86f94-88f2-4da6-95da-44c0b15f0220": {
            "connections": {
              "false": "516fc6b6-3107-4675-8932-3f9aedaed363",
              "true": "689e092e-93f5-4cb3-b35f-494fda870589",
            },
            "displayName": "Validate Credentials",
            "nodeType": "DataStoreDecisionNode",
            "x": 356,
            "y": 239.015625,
          },
          "689e092e-93f5-4cb3-b35f-494fda870589": {
            "connections": {
              "outcome": "511c3a28-6070-4447-80cd-19eb9d5e48a3",
            },
            "displayName": "Timer Stop (UPSuccessTime)",
            "nodeType": "TimerStopNode",
            "x": 574,
            "y": 224.015625,
          },
          "851de971-3bed-429d-b619-d325ed456dbc": {
            "connections": {
              "outcome": "e301438c-0bd0-429c-ab0c-66126501069a",
            },
            "displayName": "Meter (UPFailureCount)",
            "nodeType": "MeterNode",
            "x": 819,
            "y": 326.015625,
          },
          "cb7b0a23-d4d3-42a2-81bb-96f672d903a9": {
            "connections": {
              "outcome": "5de86f94-88f2-4da6-95da-44c0b15f0220",
            },
            "displayName": "Login Page",
            "nodeType": "PageNode",
            "x": 144,
            "y": 178.015625,
          },
        },
        "staticNodes": {
          "70e691a5-1e33-4ac3-a356-e7b6d60d92e0": {
            "x": 1050,
            "y": 215,
          },
          "e301438c-0bd0-429c-ab0c-66126501069a": {
            "x": 1045,
            "y": 318,
          },
          "startNode": {
            "x": 50,
            "y": 250,
          },
        },
        "uiConfig": {},
      },
    },
    "MobileGenerateEmailOTP": {
      "circlesOfTrust": {},
      "emailTemplates": {},
      "innerNodes": {},
      "nodes": {
        "6fa793e2-1176-49be-9ceb-84ffee2d3f1d": {
          "_id": "6fa793e2-1176-49be-9ceb-84ffee2d3f1d",
          "_outcomes": [
            {
              "displayName": "Outcome",
              "id": "outcome",
            },
          ],
          "_rev": "878630442",
          "_type": {
            "_id": "OneTimePasswordGeneratorNode",
            "collection": true,
            "name": "HOTP Generator",
          },
          "length": 8,
        },
        "83cb922d-0472-4fc9-9a3c-37b0c7c13137": {
          "_id": "83cb922d-0472-4fc9-9a3c-37b0c7c13137",
          "_outcomes": [
            {
              "displayName": "Patched",
              "id": "PATCHED",
            },
            {
              "displayName": "Failed",
              "id": "FAILURE",
            },
          ],
          "_rev": "1462553226",
          "_type": {
            "_id": "PatchObjectNode",
            "collection": true,
            "name": "Patch Object",
          },
          "identityAttribute": "userName",
          "identityResource": "managed/alpha_user",
          "ignoredFields": [
            "userName",
          ],
          "patchAsObject": false,
        },
        "975e9e95-fe2a-4e5e-ba32-6c176bdb8397": {
          "_id": "975e9e95-fe2a-4e5e-ba32-6c176bdb8397",
          "_outcomes": [
            {
              "displayName": "known",
              "id": "known",
            },
            {
              "displayName": "unknown",
              "id": "unknown",
            },
          ],
          "_rev": "186889556",
          "_type": {
            "_id": "ScriptedDecisionNode",
            "collection": true,
            "name": "Scripted Decision",
          },
          "inputs": [
            "*",
          ],
          "outcomes": [
            "known",
            "unknown",
          ],
          "outputs": [
            "*",
          ],
          "script": "739bdc48-fd24-4c52-b353-88706d75558a",
        },
        "9b72a804-32c1-4d90-a760-96ef74f22c3b": {
          "_id": "9b72a804-32c1-4d90-a760-96ef74f22c3b",
          "_outcomes": [
            {
              "displayName": "Email Sent",
              "id": "EMAIL_SENT",
            },
            {
              "displayName": "Email Not Sent",
              "id": "EMAIL_NOT_SENT",
            },
          ],
          "_rev": "776887805",
          "_type": {
            "_id": "EmailTemplateNode",
            "collection": true,
            "name": "Email Template Node",
          },
          "emailAttribute": "mail",
          "emailTemplateName": "MobileEmailOTP",
          "identityAttribute": "userName",
        },
        "eca32d6a-129c-448a-892c-640dcb34b137": {
          "_id": "eca32d6a-129c-448a-892c-640dcb34b137",
          "_outcomes": [
            {
              "displayName": "true",
              "id": "true",
            },
          ],
          "_rev": "-1919381652",
          "_type": {
            "_id": "ScriptedDecisionNode",
            "collection": true,
            "name": "Scripted Decision",
          },
          "inputs": [
            "*",
          ],
          "outcomes": [
            "true",
          ],
          "outputs": [
            "*",
          ],
          "script": "5561a45f-bf00-4ec5-bab4-f069bac9a38b",
        },
      },
      "saml2Entities": {},
      "scripts": {},
      "socialIdentityProviders": {},
      "themes": [],
      "tree": {
        "_id": "MobileGenerateEmailOTP",
        "_rev": "-461407226",
        "enabled": true,
        "entryNodeId": "975e9e95-fe2a-4e5e-ba32-6c176bdb8397",
        "identityResource": "managed/alpha_user",
        "nodes": {
          "6fa793e2-1176-49be-9ceb-84ffee2d3f1d": {
            "connections": {
              "outcome": "eca32d6a-129c-448a-892c-640dcb34b137",
            },
            "displayName": "Generate HOTP",
            "nodeType": "OneTimePasswordGeneratorNode",
            "x": 314,
            "y": 15.76666259765625,
          },
          "83cb922d-0472-4fc9-9a3c-37b0c7c13137": {
            "connections": {
              "FAILURE": "e301438c-0bd0-429c-ab0c-66126501069a",
              "PATCHED": "9b72a804-32c1-4d90-a760-96ef74f22c3b",
            },
            "displayName": "Store OTP",
            "nodeType": "PatchObjectNode",
            "x": 636,
            "y": 205.76666259765625,
          },
          "975e9e95-fe2a-4e5e-ba32-6c176bdb8397": {
            "connections": {
              "known": "6fa793e2-1176-49be-9ceb-84ffee2d3f1d",
              "unknown": "e301438c-0bd0-429c-ab0c-66126501069a",
            },
            "displayName": "Check Username",
            "nodeType": "ScriptedDecisionNode",
            "x": 137,
            "y": 154.015625,
          },
          "9b72a804-32c1-4d90-a760-96ef74f22c3b": {
            "connections": {
              "EMAIL_NOT_SENT": "e301438c-0bd0-429c-ab0c-66126501069a",
              "EMAIL_SENT": "e301438c-0bd0-429c-ab0c-66126501069a",
            },
            "displayName": "Send OTP",
            "nodeType": "EmailTemplateNode",
            "x": 802,
            "y": 355.76666259765625,
          },
          "eca32d6a-129c-448a-892c-640dcb34b137": {
            "connections": {
              "true": "83cb922d-0472-4fc9-9a3c-37b0c7c13137",
            },
            "displayName": "Prep OTP Store",
            "nodeType": "ScriptedDecisionNode",
            "x": 476,
            "y": 113.76666259765625,
          },
        },
        "staticNodes": {
          "70e691a5-1e33-4ac3-a356-e7b6d60d92e0": {
            "x": 54,
            "y": 367,
          },
          "e301438c-0bd0-429c-ab0c-66126501069a": {
            "x": 1371,
            "y": 20,
          },
          "startNode": {
            "x": 50,
            "y": 75,
          },
        },
        "uiConfig": {},
      },
    },
    "MobileValidateEmailOTP": {
      "circlesOfTrust": {},
      "emailTemplates": {},
      "innerNodes": {},
      "nodes": {
        "943d8c9c-3904-49ca-a4cb-29a0c9b42060": {
          "_id": "943d8c9c-3904-49ca-a4cb-29a0c9b42060",
          "_outcomes": [
            {
              "displayName": "True",
              "id": "true",
            },
            {
              "displayName": "False",
              "id": "false",
            },
          ],
          "_rev": "-595553319",
          "_type": {
            "_id": "DataStoreDecisionNode",
            "collection": true,
            "name": "Data Store Decision",
          },
        },
        "cfc8fd06-e580-4d4a-a442-c29cb88681b1": {
          "_id": "cfc8fd06-e580-4d4a-a442-c29cb88681b1",
          "_outcomes": [
            {
              "displayName": "Patched",
              "id": "PATCHED",
            },
            {
              "displayName": "Failed",
              "id": "FAILURE",
            },
          ],
          "_rev": "-985031165",
          "_type": {
            "_id": "PatchObjectNode",
            "collection": true,
            "name": "Patch Object",
          },
          "identityAttribute": "userName",
          "identityResource": "managed/alpha_user",
          "ignoredFields": [
            "userName",
          ],
          "patchAsObject": false,
        },
        "df7ab2e5-0d14-4a44-85e2-be86940d3b98": {
          "_id": "df7ab2e5-0d14-4a44-85e2-be86940d3b98",
          "_outcomes": [
            {
              "displayName": "true",
              "id": "true",
            },
          ],
          "_rev": "-2127849123",
          "_type": {
            "_id": "ScriptedDecisionNode",
            "collection": true,
            "name": "Scripted Decision",
          },
          "inputs": [
            "*",
          ],
          "outcomes": [
            "true",
          ],
          "outputs": [
            "*",
          ],
          "script": "d25a1315-8beb-4a0c-84bf-534214fed087",
        },
        "e4bea5e3-2e96-4dff-9b87-0bd8978d9630": {
          "_id": "e4bea5e3-2e96-4dff-9b87-0bd8978d9630",
          "_outcomes": [
            {
              "displayName": "true",
              "id": "true",
            },
            {
              "displayName": "false",
              "id": "false",
            },
          ],
          "_rev": "-484484329",
          "_type": {
            "_id": "ScriptedDecisionNode",
            "collection": true,
            "name": "Scripted Decision",
          },
          "inputs": [
            "*",
          ],
          "outcomes": [
            "true",
            "false",
          ],
          "outputs": [
            "*",
          ],
          "script": "ce6fbbcf-5d9a-471b-bcc1-448758a6374a",
        },
        "ef1f4544-33fe-447c-b4ae-be4733d5a249": {
          "_id": "ef1f4544-33fe-447c-b4ae-be4733d5a249",
          "_outcomes": [
            {
              "displayName": "true",
              "id": "true",
            },
            {
              "displayName": "false",
              "id": "false",
            },
          ],
          "_rev": "-1027746111",
          "_type": {
            "_id": "ScriptedDecisionNode",
            "collection": true,
            "name": "Scripted Decision",
          },
          "inputs": [
            "*",
          ],
          "outcomes": [
            "true",
            "false",
          ],
          "outputs": [
            "*",
          ],
          "script": "57807349-630f-496a-bccb-ea1011b8e945",
        },
      },
      "saml2Entities": {},
      "scripts": {},
      "socialIdentityProviders": {},
      "themes": [],
      "tree": {
        "_id": "MobileValidateEmailOTP",
        "_rev": "-1949530940",
        "enabled": true,
        "entryNodeId": "ef1f4544-33fe-447c-b4ae-be4733d5a249",
        "identityResource": "managed/alpha_user",
        "nodes": {
          "943d8c9c-3904-49ca-a4cb-29a0c9b42060": {
            "connections": {
              "false": "e301438c-0bd0-429c-ab0c-66126501069a",
              "true": "e4bea5e3-2e96-4dff-9b87-0bd8978d9630",
            },
            "displayName": "Validate U/P",
            "nodeType": "DataStoreDecisionNode",
            "x": 347,
            "y": 21.015625,
          },
          "cfc8fd06-e580-4d4a-a442-c29cb88681b1": {
            "connections": {
              "FAILURE": "70e691a5-1e33-4ac3-a356-e7b6d60d92e0",
              "PATCHED": "70e691a5-1e33-4ac3-a356-e7b6d60d92e0",
            },
            "displayName": "Reset OTP",
            "nodeType": "PatchObjectNode",
            "x": 851,
            "y": 447.76666259765625,
          },
          "df7ab2e5-0d14-4a44-85e2-be86940d3b98": {
            "connections": {
              "true": "cfc8fd06-e580-4d4a-a442-c29cb88681b1",
            },
            "displayName": "Prep OTP Reset",
            "nodeType": "ScriptedDecisionNode",
            "x": 677,
            "y": 338.76666259765625,
          },
          "e4bea5e3-2e96-4dff-9b87-0bd8978d9630": {
            "connections": {
              "false": "e301438c-0bd0-429c-ab0c-66126501069a",
              "true": "df7ab2e5-0d14-4a44-85e2-be86940d3b98",
            },
            "displayName": "Validate OTP",
            "nodeType": "ScriptedDecisionNode",
            "x": 518,
            "y": 162.015625,
          },
          "ef1f4544-33fe-447c-b4ae-be4733d5a249": {
            "connections": {
              "false": "e301438c-0bd0-429c-ab0c-66126501069a",
              "true": "943d8c9c-3904-49ca-a4cb-29a0c9b42060",
            },
            "displayName": "Extract U/P and OTP",
            "nodeType": "ScriptedDecisionNode",
            "x": 137,
            "y": 154.015625,
          },
        },
        "staticNodes": {
          "70e691a5-1e33-4ac3-a356-e7b6d60d92e0": {
            "x": 1103,
            "y": 479,
          },
          "e301438c-0bd0-429c-ab0c-66126501069a": {
            "x": 1103,
            "y": 33,
          },
          "startNode": {
            "x": 50,
            "y": 75,
          },
        },
        "uiConfig": {},
      },
    },
    "NodeStateIssue": {
      "circlesOfTrust": {},
      "emailTemplates": {},
      "innerNodes": {
        "35f11102-62eb-4f7c-a399-b77e3a9a2116": {
          "_id": "35f11102-62eb-4f7c-a399-b77e3a9a2116",
          "_outcomes": [
            {
              "displayName": "Outcome",
              "id": "outcome",
            },
          ],
          "_rev": "-667625599",
          "_type": {
            "_id": "DisplayUserNameNode",
            "collection": true,
            "name": "Display Username",
          },
          "identityAttribute": "mail",
          "userName": "userName",
        },
        "546219fa-ca0f-41ca-b94f-68905a940f7a": {
          "_id": "546219fa-ca0f-41ca-b94f-68905a940f7a",
          "_outcomes": [
            {
              "displayName": "Outcome",
              "id": "outcome",
            },
          ],
          "_rev": "-1363899242",
          "_type": {
            "_id": "ValidatedPasswordNode",
            "collection": true,
            "name": "Platform Password",
          },
          "passwordAttribute": "password",
          "validateInput": false,
        },
        "59036dd3-551b-4557-87cf-dc015479c49e": {
          "_id": "59036dd3-551b-4557-87cf-dc015479c49e",
          "_outcomes": [
            {
              "displayName": "Outcome",
              "id": "outcome",
            },
          ],
          "_rev": "-1402047156",
          "_type": {
            "_id": "ValidatedUsernameNode",
            "collection": true,
            "name": "Platform Username",
          },
          "usernameAttribute": "userName",
          "validateInput": false,
        },
        "9ce205fe-27e8-4265-8bae-5c8693364aaf": {
          "_id": "9ce205fe-27e8-4265-8bae-5c8693364aaf",
          "_outcomes": [
            {
              "displayName": "Outcome",
              "id": "outcome",
            },
          ],
          "_rev": "228761939",
          "_type": {
            "_id": "DisplayUserNameNode",
            "collection": true,
            "name": "Display Username",
          },
          "identityAttribute": "mail",
          "userName": "userName",
        },
        "cb01fcb4-ef94-4451-a46b-4f0666d3925e": {
          "_id": "cb01fcb4-ef94-4451-a46b-4f0666d3925e",
          "_outcomes": [
            {
              "displayName": "true",
              "id": "true",
            },
          ],
          "_rev": "1110126407",
          "_type": {
            "_id": "ScriptedDecisionNode",
            "collection": true,
            "name": "Scripted Decision",
          },
          "inputs": [
            "*",
          ],
          "outcomes": [
            "true",
          ],
          "outputs": [
            "*",
          ],
          "script": "ec8b314c-8e11-4364-93b9-a3e82d2a074a",
        },
        "d4796825-c318-422c-a4d2-44d079495f5b": {
          "_id": "d4796825-c318-422c-a4d2-44d079495f5b",
          "_outcomes": [
            {
              "displayName": "true",
              "id": "true",
            },
          ],
          "_rev": "286691008",
          "_type": {
            "_id": "ScriptedDecisionNode",
            "collection": true,
            "name": "Scripted Decision",
          },
          "inputs": [
            "*",
          ],
          "outcomes": [
            "true",
          ],
          "outputs": [
            "*",
          ],
          "script": "9535446c-0ff6-4a76-8576-616599119d64",
        },
        "effdd866-e33e-40e9-afbd-117480a2cf9d": {
          "_id": "effdd866-e33e-40e9-afbd-117480a2cf9d",
          "_outcomes": [
            {
              "displayName": "true",
              "id": "true",
            },
          ],
          "_rev": "949403799",
          "_type": {
            "_id": "ScriptedDecisionNode",
            "collection": true,
            "name": "Scripted Decision",
          },
          "inputs": [
            "*",
          ],
          "outcomes": [
            "true",
          ],
          "outputs": [
            "*",
          ],
          "script": "ec8b314c-8e11-4364-93b9-a3e82d2a074a",
        },
      },
      "nodes": {
        "379bd6b1-d478-463f-a168-7ccee1bea731": {
          "_id": "379bd6b1-d478-463f-a168-7ccee1bea731",
          "_outcomes": [
            {
              "displayName": "True",
              "id": "true",
            },
            {
              "displayName": "False",
              "id": "false",
            },
          ],
          "_rev": "1628891260",
          "_type": {
            "_id": "InnerTreeEvaluatorNode",
            "collection": true,
            "name": "Inner Tree Evaluator",
          },
          "tree": "NodeStateIssue2",
        },
        "46133b41-f7cc-4696-84d3-fa77ab8fac59": {
          "_id": "46133b41-f7cc-4696-84d3-fa77ab8fac59",
          "_outcomes": [
            {
              "displayName": "true",
              "id": "true",
            },
          ],
          "_rev": "1382446092",
          "_type": {
            "_id": "PageNode",
            "collection": true,
            "name": "Page Node",
          },
          "nodes": [
            {
              "_id": "9ce205fe-27e8-4265-8bae-5c8693364aaf",
              "displayName": "Display Username",
              "nodeType": "DisplayUserNameNode",
            },
            {
              "_id": "effdd866-e33e-40e9-afbd-117480a2cf9d",
              "displayName": "Display Password",
              "nodeType": "ScriptedDecisionNode",
            },
            {
              "_id": "d4796825-c318-422c-a4d2-44d079495f5b",
              "displayName": "Remove Button",
              "nodeType": "ScriptedDecisionNode",
            },
          ],
          "pageDescription": {},
          "pageHeader": {
            "en": "Stage 2",
          },
        },
        "70763fd3-e690-4525-a290-7c7619e2b43a": {
          "_id": "70763fd3-e690-4525-a290-7c7619e2b43a",
          "_outcomes": [
            {
              "displayName": "Outcome",
              "id": "outcome",
            },
          ],
          "_rev": "1696050726",
          "_type": {
            "_id": "PageNode",
            "collection": true,
            "name": "Page Node",
          },
          "nodes": [
            {
              "_id": "59036dd3-551b-4557-87cf-dc015479c49e",
              "displayName": "Username",
              "nodeType": "ValidatedUsernameNode",
            },
            {
              "_id": "546219fa-ca0f-41ca-b94f-68905a940f7a",
              "displayName": "Password",
              "nodeType": "ValidatedPasswordNode",
            },
          ],
          "pageDescription": {},
          "pageHeader": {},
        },
        "dc3fb422-720f-438d-859c-1f7b9fe2250e": {
          "_id": "dc3fb422-720f-438d-859c-1f7b9fe2250e",
          "_outcomes": [
            {
              "displayName": "true",
              "id": "true",
            },
          ],
          "_rev": "-128076485",
          "_type": {
            "_id": "PageNode",
            "collection": true,
            "name": "Page Node",
          },
          "nodes": [
            {
              "_id": "35f11102-62eb-4f7c-a399-b77e3a9a2116",
              "displayName": "Display Username",
              "nodeType": "DisplayUserNameNode",
            },
            {
              "_id": "cb01fcb4-ef94-4451-a46b-4f0666d3925e",
              "displayName": "Display Password",
              "nodeType": "ScriptedDecisionNode",
            },
          ],
          "pageDescription": {},
          "pageHeader": {
            "en": "Stage 1",
          },
        },
      },
      "saml2Entities": {},
      "scripts": {},
      "socialIdentityProviders": {},
      "themes": [],
      "tree": {
        "_id": "NodeStateIssue",
        "_rev": "1556157327",
        "description": "Investigate issue of node state variables disappearing",
        "enabled": true,
        "entryNodeId": "70763fd3-e690-4525-a290-7c7619e2b43a",
        "identityResource": "managed/alpha_user",
        "nodes": {
          "379bd6b1-d478-463f-a168-7ccee1bea731": {
            "connections": {
              "false": "46133b41-f7cc-4696-84d3-fa77ab8fac59",
              "true": "46133b41-f7cc-4696-84d3-fa77ab8fac59",
            },
            "displayName": "Inner Tree Evaluator",
            "nodeType": "InnerTreeEvaluatorNode",
            "x": 735,
            "y": 228.015625,
          },
          "46133b41-f7cc-4696-84d3-fa77ab8fac59": {
            "connections": {
              "true": "e301438c-0bd0-429c-ab0c-66126501069a",
            },
            "displayName": "Stage 2",
            "nodeType": "PageNode",
            "x": 1114,
            "y": 175.015625,
          },
          "70763fd3-e690-4525-a290-7c7619e2b43a": {
            "connections": {
              "outcome": "dc3fb422-720f-438d-859c-1f7b9fe2250e",
            },
            "displayName": "Collect Password",
            "nodeType": "PageNode",
            "x": 148,
            "y": 204.015625,
          },
          "dc3fb422-720f-438d-859c-1f7b9fe2250e": {
            "connections": {
              "true": "379bd6b1-d478-463f-a168-7ccee1bea731",
            },
            "displayName": "Stage 1",
            "nodeType": "PageNode",
            "x": 367,
            "y": 204.015625,
          },
        },
        "staticNodes": {
          "70e691a5-1e33-4ac3-a356-e7b6d60d92e0": {
            "x": 48,
            "y": 151,
          },
          "e301438c-0bd0-429c-ab0c-66126501069a": {
            "x": 1334,
            "y": 253,
          },
          "startNode": {
            "x": 50,
            "y": 250,
          },
        },
        "uiConfig": {
          "categories": "["Jira","Prototype"]",
        },
      },
    },
    "NodeStateIssue2": {
      "circlesOfTrust": {},
      "emailTemplates": {},
      "innerNodes": {
        "13c40522-06ec-4b28-a2b8-b1a8d45d026b": {
          "_id": "13c40522-06ec-4b28-a2b8-b1a8d45d026b",
          "_outcomes": [
            {
              "displayName": "true",
              "id": "true",
            },
          ],
          "_rev": "1655303611",
          "_type": {
            "_id": "ScriptedDecisionNode",
            "collection": true,
            "name": "Scripted Decision",
          },
          "inputs": [
            "*",
          ],
          "outcomes": [
            "true",
          ],
          "outputs": [
            "*",
          ],
          "script": "ec8b314c-8e11-4364-93b9-a3e82d2a074a",
        },
        "6b34e1da-7ba8-4c8d-b58e-182e05c2af10": {
          "_id": "6b34e1da-7ba8-4c8d-b58e-182e05c2af10",
          "_outcomes": [
            {
              "displayName": "Outcome",
              "id": "outcome",
            },
          ],
          "_rev": "-1999310857",
          "_type": {
            "_id": "DisplayUserNameNode",
            "collection": true,
            "name": "Display Username",
          },
          "identityAttribute": "mail",
          "userName": "userName",
        },
        "74a22a05-ff15-48b4-b71c-10b42e7ba213": {
          "_id": "74a22a05-ff15-48b4-b71c-10b42e7ba213",
          "_outcomes": [
            {
              "displayName": "Outcome",
              "id": "outcome",
            },
          ],
          "_rev": "-185972687",
          "_type": {
            "_id": "DisplayUserNameNode",
            "collection": true,
            "name": "Display Username",
          },
          "identityAttribute": "mail",
          "userName": "userName",
        },
        "b3b3b19a-c5bb-4c74-a841-b8b1527195f1": {
          "_id": "b3b3b19a-c5bb-4c74-a841-b8b1527195f1",
          "_outcomes": [
            {
              "displayName": "true",
              "id": "true",
            },
          ],
          "_rev": "-1319502880",
          "_type": {
            "_id": "ScriptedDecisionNode",
            "collection": true,
            "name": "Scripted Decision",
          },
          "inputs": [
            "*",
            "password",
          ],
          "outcomes": [
            "true",
          ],
          "outputs": [
            "*",
          ],
          "script": "ec8b314c-8e11-4364-93b9-a3e82d2a074a",
        },
      },
      "nodes": {
        "170537ae-d09a-4edc-be7d-0f5bf9e9ad40": {
          "_id": "170537ae-d09a-4edc-be7d-0f5bf9e9ad40",
          "_outcomes": [
            {
              "displayName": "true",
              "id": "true",
            },
          ],
          "_rev": "861145457",
          "_type": {
            "_id": "PageNode",
            "collection": true,
            "name": "Page Node",
          },
          "nodes": [
            {
              "_id": "6b34e1da-7ba8-4c8d-b58e-182e05c2af10",
              "displayName": "Display Username",
              "nodeType": "DisplayUserNameNode",
            },
            {
              "_id": "13c40522-06ec-4b28-a2b8-b1a8d45d026b",
              "displayName": "Display Password",
              "nodeType": "ScriptedDecisionNode",
            },
          ],
          "pageDescription": {},
          "pageHeader": {
            "en": "Inner Stage 2",
          },
        },
        "9f9e1f5b-640e-4def-aab9-5ba02a1da2c8": {
          "_id": "9f9e1f5b-640e-4def-aab9-5ba02a1da2c8",
          "_outcomes": [
            {
              "displayName": "true",
              "id": "true",
            },
          ],
          "_rev": "462735720",
          "_type": {
            "_id": "PageNode",
            "collection": true,
            "name": "Page Node",
          },
          "nodes": [
            {
              "_id": "74a22a05-ff15-48b4-b71c-10b42e7ba213",
              "displayName": "Display Username",
              "nodeType": "DisplayUserNameNode",
            },
            {
              "_id": "b3b3b19a-c5bb-4c74-a841-b8b1527195f1",
              "displayName": "Display Password",
              "nodeType": "ScriptedDecisionNode",
            },
          ],
          "pageDescription": {},
          "pageHeader": {
            "en": "Inner Stage 1",
          },
        },
      },
      "saml2Entities": {},
      "scripts": {},
      "socialIdentityProviders": {},
      "themes": [],
      "tree": {
        "_id": "NodeStateIssue2",
        "_rev": "-978151498",
        "description": "Investigate issue of node state variables disappearing",
        "enabled": true,
        "entryNodeId": "9f9e1f5b-640e-4def-aab9-5ba02a1da2c8",
        "identityResource": "managed/alpha_user",
        "nodes": {
          "170537ae-d09a-4edc-be7d-0f5bf9e9ad40": {
            "connections": {
              "true": "e301438c-0bd0-429c-ab0c-66126501069a",
            },
            "displayName": "Inner Stage 2",
            "nodeType": "PageNode",
            "x": 371,
            "y": 205.015625,
          },
          "9f9e1f5b-640e-4def-aab9-5ba02a1da2c8": {
            "connections": {
              "true": "170537ae-d09a-4edc-be7d-0f5bf9e9ad40",
            },
            "displayName": "Inner Stage 1",
            "nodeType": "PageNode",
            "x": 157,
            "y": 204.015625,
          },
        },
        "staticNodes": {
          "70e691a5-1e33-4ac3-a356-e7b6d60d92e0": {
            "x": 49,
            "y": 149,
          },
          "e301438c-0bd0-429c-ab0c-66126501069a": {
            "x": 593,
            "y": 256,
          },
          "startNode": {
            "x": 50,
            "y": 250,
          },
        },
        "uiConfig": {
          "categories": "["Jira","Prototype"]",
        },
      },
    },
    "OTPEndpoint": {
      "circlesOfTrust": {},
      "emailTemplates": {},
      "innerNodes": {
        "597f3d0b-f93c-41b1-a6bd-06160cfde4e1": {
          "_id": "597f3d0b-f93c-41b1-a6bd-06160cfde4e1",
          "_outcomes": [
            {
              "displayName": "true",
              "id": "true",
            },
          ],
          "_rev": "1566207866",
          "_type": {
            "_id": "ScriptedDecisionNode",
            "collection": true,
            "name": "Scripted Decision",
          },
          "inputs": [
            "*",
          ],
          "outcomes": [
            "true",
          ],
          "outputs": [
            "*",
          ],
          "script": "d3405f9c-d338-4dc2-b00d-7aacf77b731d",
        },
        "7b7b300c-d538-42dc-aaa2-767726d55f05": {
          "_id": "7b7b300c-d538-42dc-aaa2-767726d55f05",
          "_outcomes": [
            {
              "displayName": "True",
              "id": "true",
            },
            {
              "displayName": "False",
              "id": "false",
            },
          ],
          "_rev": "419458849",
          "_type": {
            "_id": "OneTimePasswordCollectorDecisionNode",
            "collection": true,
            "name": "OTP Collector Decision",
          },
          "passwordExpiryTime": 1,
        },
      },
      "nodes": {
        "0d640dd6-bcfc-4fde-9cc8-b76f7ba6ea19": {
          "_id": "0d640dd6-bcfc-4fde-9cc8-b76f7ba6ea19",
          "_outcomes": [
            {
              "displayName": "true",
              "id": "true",
            },
          ],
          "_rev": "910180494",
          "_type": {
            "_id": "ScriptedDecisionNode",
            "collection": true,
            "name": "Scripted Decision",
          },
          "inputs": [
            "*",
          ],
          "outcomes": [
            "true",
          ],
          "outputs": [
            "*",
          ],
          "script": "89eff37a-2e1e-47c2-8d62-5f7417fbb6b4",
        },
        "61ea909a-f2e0-4f36-9498-652eb38efe50": {
          "_id": "61ea909a-f2e0-4f36-9498-652eb38efe50",
          "_outcomes": [
            {
              "displayName": "Outcome",
              "id": "outcome",
            },
          ],
          "_rev": "1225273889",
          "_type": {
            "_id": "OneTimePasswordGeneratorNode",
            "collection": true,
            "name": "HOTP Generator",
          },
          "length": 6,
        },
        "725804ce-e8e8-4ee0-b8cf-c773fc2c703d": {
          "_id": "725804ce-e8e8-4ee0-b8cf-c773fc2c703d",
          "_outcomes": [
            {
              "displayName": "true",
              "id": "true",
            },
          ],
          "_rev": "1581303564",
          "_type": {
            "_id": "ScriptedDecisionNode",
            "collection": true,
            "name": "Scripted Decision",
          },
          "inputs": [
            "*",
          ],
          "outcomes": [
            "true",
          ],
          "outputs": [
            "*",
          ],
          "script": "5dbd53c6-67ff-4a43-84c3-90c5cf5da35a",
        },
        "af4b655d-a600-4e22-add4-1746809b73d0": {
          "_id": "af4b655d-a600-4e22-add4-1746809b73d0",
          "_outcomes": [
            {
              "displayName": "True",
              "id": "true",
            },
            {
              "displayName": "False",
              "id": "false",
            },
          ],
          "_rev": "1413009823",
          "_type": {
            "_id": "PageNode",
            "collection": true,
            "name": "Page Node",
          },
          "nodes": [
            {
              "_id": "597f3d0b-f93c-41b1-a6bd-06160cfde4e1",
              "displayName": "Return OTP",
              "nodeType": "ScriptedDecisionNode",
            },
            {
              "_id": "7b7b300c-d538-42dc-aaa2-767726d55f05",
              "displayName": "Validate OTP",
              "nodeType": "OneTimePasswordCollectorDecisionNode",
            },
          ],
          "pageDescription": {},
          "pageHeader": {},
        },
        "ef21f2c3-d84a-4d99-b9a7-483894267795": {
          "_id": "ef21f2c3-d84a-4d99-b9a7-483894267795",
          "_outcomes": [
            {
              "displayName": "Outcome",
              "id": "outcome",
            },
          ],
          "_rev": "-1746849575",
          "_type": {
            "_id": "AnonymousUserNode",
            "collection": true,
            "name": "Anonymous User Mapping",
          },
          "anonymousUserName": "anonymous",
        },
      },
      "saml2Entities": {},
      "scripts": {},
      "socialIdentityProviders": {},
      "themes": [],
      "tree": {
        "_id": "OTPEndpoint",
        "_rev": "1409301184",
        "description": "DO NOT MODIFY!

This journey is executed by the otp custom endpoint.",
        "enabled": true,
        "entryNodeId": "ef21f2c3-d84a-4d99-b9a7-483894267795",
        "identityResource": "managed/alpha_user",
        "nodes": {
          "0d640dd6-bcfc-4fde-9cc8-b76f7ba6ea19": {
            "connections": {
              "true": "e301438c-0bd0-429c-ab0c-66126501069a",
            },
            "displayName": "OTP Invalid",
            "nodeType": "ScriptedDecisionNode",
            "x": 827,
            "y": 312.015625,
          },
          "61ea909a-f2e0-4f36-9498-652eb38efe50": {
            "connections": {
              "outcome": "af4b655d-a600-4e22-add4-1746809b73d0",
            },
            "displayName": "HOTP Generator",
            "nodeType": "OneTimePasswordGeneratorNode",
            "x": 360,
            "y": 257.015625,
          },
          "725804ce-e8e8-4ee0-b8cf-c773fc2c703d": {
            "connections": {
              "true": "e301438c-0bd0-429c-ab0c-66126501069a",
            },
            "displayName": "OTP Valid",
            "nodeType": "ScriptedDecisionNode",
            "x": 826,
            "y": 207.015625,
          },
          "af4b655d-a600-4e22-add4-1746809b73d0": {
            "connections": {
              "false": "0d640dd6-bcfc-4fde-9cc8-b76f7ba6ea19",
              "true": "725804ce-e8e8-4ee0-b8cf-c773fc2c703d",
            },
            "displayName": "Return OTP",
            "nodeType": "PageNode",
            "x": 578,
            "y": 179.015625,
          },
          "ef21f2c3-d84a-4d99-b9a7-483894267795": {
            "connections": {
              "outcome": "61ea909a-f2e0-4f36-9498-652eb38efe50",
            },
            "displayName": "Anonymous",
            "nodeType": "AnonymousUserNode",
            "x": 155,
            "y": 257.015625,
          },
        },
        "staticNodes": {
          "70e691a5-1e33-4ac3-a356-e7b6d60d92e0": {
            "x": 49,
            "y": 127,
          },
          "e301438c-0bd0-429c-ab0c-66126501069a": {
            "x": 1083,
            "y": 252,
          },
          "startNode": {
            "x": 50,
            "y": 250,
          },
        },
        "uiConfig": {
          "categories": "["Helper","OTP"]",
        },
      },
    },
    "Oath": {
      "circlesOfTrust": {},
      "emailTemplates": {},
      "innerNodes": {
        "188bd07f-6105-4c0c-826c-51ca46df9be4": {
          "_id": "188bd07f-6105-4c0c-826c-51ca46df9be4",
          "_outcomes": [
            {
              "displayName": "Outcome",
              "id": "outcome",
            },
          ],
          "_rev": "-1216388053",
          "_type": {
            "_id": "ValidatedUsernameNode",
            "collection": true,
            "name": "Platform Username",
          },
          "usernameAttribute": "userName",
          "validateInput": false,
        },
      },
      "nodes": {
        "172e6ef4-7a3d-4ed9-98c8-6938f92e884e": {
          "_id": "172e6ef4-7a3d-4ed9-98c8-6938f92e884e",
          "_outcomes": [
            {
              "displayName": "Success",
              "id": "successOutcome",
            },
            {
              "displayName": "Failure",
              "id": "failureOutcome",
            },
          ],
          "_rev": "1012577580",
          "_type": {
            "_id": "OathRegistrationNode",
            "collection": true,
            "name": "OATH Registration",
          },
          "accountName": "USERNAME",
          "addChecksum": false,
          "algorithm": "TOTP",
          "bgColor": "032b75",
          "generateRecoveryCodes": false,
          "imgUrl": "",
          "issuer": "ForgeRock",
          "minSharedSecretLength": 40,
          "passwordLength": "SIX_DIGITS",
          "postponeDeviceProfileStorage": false,
          "scanQRCodeMessage": {},
          "totpHashAlgorithm": "HMAC_SHA1",
          "totpTimeInterval": 30,
          "truncationOffset": -1,
        },
        "34d3d266-d5fd-4179-bc9f-44bc173417ea": {
          "_id": "34d3d266-d5fd-4179-bc9f-44bc173417ea",
          "_outcomes": [
            {
              "displayName": "Outcome",
              "id": "outcome",
            },
          ],
          "_rev": "-349146443",
          "_type": {
            "_id": "PageNode",
            "collection": true,
            "name": "Page Node",
          },
          "nodes": [
            {
              "_id": "188bd07f-6105-4c0c-826c-51ca46df9be4",
              "displayName": "Username",
              "nodeType": "ValidatedUsernameNode",
            },
          ],
          "pageDescription": {},
          "pageHeader": {},
          "stage": "themeId=a5420670-bae8-4ad6-9595-8477f6bca2c7",
        },
        "ae9eb2a2-b4cd-4d39-8c57-906c04441f3e": {
          "_id": "ae9eb2a2-b4cd-4d39-8c57-906c04441f3e",
          "_outcomes": [
            {
              "displayName": "Success",
              "id": "successOutcome",
            },
            {
              "displayName": "Failure",
              "id": "failureOutcome",
            },
            {
              "displayName": "Not registered",
              "id": "notRegisteredOutcome",
            },
          ],
          "_rev": "588156725",
          "_type": {
            "_id": "OathTokenVerifierNode",
            "collection": true,
            "name": "OATH Token Verifier",
          },
          "algorithm": "TOTP",
          "hotpWindowSize": 100,
          "isRecoveryCodeAllowed": false,
          "maximumAllowedClockDrift": 5,
          "totpHashAlgorithm": "HMAC_SHA1",
          "totpTimeInterval": 30,
          "totpTimeSteps": 2,
        },
      },
      "saml2Entities": {},
      "scripts": {},
      "socialIdentityProviders": {},
      "themes": [],
      "tree": {
        "_id": "Oath",
        "_rev": "-511524369",
        "description": "Google Authenticator",
        "enabled": true,
        "entryNodeId": "34d3d266-d5fd-4179-bc9f-44bc173417ea",
        "identityResource": "managed/alpha_user",
        "nodes": {
          "172e6ef4-7a3d-4ed9-98c8-6938f92e884e": {
            "connections": {
              "failureOutcome": "e301438c-0bd0-429c-ab0c-66126501069a",
              "successOutcome": "ae9eb2a2-b4cd-4d39-8c57-906c04441f3e",
            },
            "displayName": "OATH Registration",
            "nodeType": "OathRegistrationNode",
            "x": 638,
            "y": 348.015625,
          },
          "34d3d266-d5fd-4179-bc9f-44bc173417ea": {
            "connections": {
              "outcome": "ae9eb2a2-b4cd-4d39-8c57-906c04441f3e",
            },
            "displayName": "Login Page",
            "nodeType": "PageNode",
            "x": 178,
            "y": 226.015625,
          },
          "ae9eb2a2-b4cd-4d39-8c57-906c04441f3e": {
            "connections": {
              "failureOutcome": "e301438c-0bd0-429c-ab0c-66126501069a",
              "notRegisteredOutcome": "172e6ef4-7a3d-4ed9-98c8-6938f92e884e",
              "successOutcome": "70e691a5-1e33-4ac3-a356-e7b6d60d92e0",
            },
            "displayName": "OATH Token Verifier",
            "nodeType": "OathTokenVerifierNode",
            "x": 419,
            "y": 210.015625,
          },
        },
        "staticNodes": {
          "70e691a5-1e33-4ac3-a356-e7b6d60d92e0": {
            "x": 819,
            "y": 77,
          },
          "e301438c-0bd0-429c-ab0c-66126501069a": {
            "x": 818,
            "y": 512,
          },
          "startNode": {
            "x": 50,
            "y": 250,
          },
        },
        "uiConfig": {
          "categories": "["MFA","OTP"]",
        },
      },
    },
    "OathJoker": {
      "circlesOfTrust": {},
      "emailTemplates": {},
      "innerNodes": {
        "ae1a5fd3-fedc-4c00-a0ea-8248f701f749": {
          "_id": "ae1a5fd3-fedc-4c00-a0ea-8248f701f749",
          "_outcomes": [
            {
              "displayName": "Outcome",
              "id": "outcome",
            },
          ],
          "_rev": "475880990",
          "_type": {
            "_id": "ValidatedUsernameNode",
            "collection": true,
            "name": "Platform Username",
          },
          "usernameAttribute": "userName",
          "validateInput": false,
        },
      },
      "nodes": {
        "127b6d2d-e675-400e-9ea2-b5085d2b5a90": {
          "_id": "127b6d2d-e675-400e-9ea2-b5085d2b5a90",
          "_outcomes": [
            {
              "displayName": "Outcome",
              "id": "outcome",
            },
          ],
          "_rev": "-199503474",
          "_type": {
            "_id": "PageNode",
            "collection": true,
            "name": "Page Node",
          },
          "nodes": [
            {
              "_id": "ae1a5fd3-fedc-4c00-a0ea-8248f701f749",
              "displayName": "Username",
              "nodeType": "ValidatedUsernameNode",
            },
          ],
          "pageDescription": {},
          "pageHeader": {},
          "stage": "themeId=a5420670-bae8-4ad6-9595-8477f6bca2c7",
        },
        "2081a224-3f38-44d4-86ac-3cd2b523979a": {
          "_id": "2081a224-3f38-44d4-86ac-3cd2b523979a",
          "_outcomes": [
            {
              "displayName": "true",
              "id": "true",
            },
          ],
          "_rev": "1158558380",
          "_type": {
            "_id": "ScriptedDecisionNode",
            "collection": true,
            "name": "Scripted Decision",
          },
          "inputs": [
            "*",
          ],
          "outcomes": [
            "true",
          ],
          "outputs": [
            "*",
          ],
          "script": "199405e4-050e-4f2a-87d1-d9125f74a8df",
        },
        "26632e18-838f-4851-8c18-ee92a38b278e": {
          "_id": "26632e18-838f-4851-8c18-ee92a38b278e",
          "_outcomes": [
            {
              "displayName": "Success",
              "id": "successOutcome",
            },
            {
              "displayName": "Failure",
              "id": "failureOutcome",
            },
          ],
          "_rev": "1568019315",
          "_type": {
            "_id": "OathRegistrationNode",
            "collection": true,
            "name": "OATH Registration",
          },
          "accountName": "USERNAME",
          "addChecksum": false,
          "algorithm": "TOTP",
          "bgColor": "032b75",
          "generateRecoveryCodes": false,
          "imgUrl": "",
          "issuer": "ForgeRock",
          "minSharedSecretLength": 40,
          "passwordLength": "SIX_DIGITS",
          "postponeDeviceProfileStorage": false,
          "scanQRCodeMessage": {},
          "totpHashAlgorithm": "HMAC_SHA1",
          "totpTimeInterval": 30,
          "truncationOffset": -1,
        },
        "41ffae6b-2158-4017-b09c-25794e1eb68a": {
          "_id": "41ffae6b-2158-4017-b09c-25794e1eb68a",
          "_outcomes": [
            {
              "displayName": "true",
              "id": "true",
            },
          ],
          "_rev": "868862034",
          "_type": {
            "_id": "ScriptedDecisionNode",
            "collection": true,
            "name": "Scripted Decision",
          },
          "inputs": [
            "*",
          ],
          "outcomes": [
            "true",
          ],
          "outputs": [
            "*",
          ],
          "script": "199405e4-050e-4f2a-87d1-d9125f74a8df",
        },
        "47168976-847e-44ff-ae7c-1dda9c8acbd0": {
          "_id": "47168976-847e-44ff-ae7c-1dda9c8acbd0",
          "_outcomes": [
            {
              "displayName": "Success",
              "id": "successOutcome",
            },
            {
              "displayName": "Failure",
              "id": "failureOutcome",
            },
            {
              "displayName": "Not registered",
              "id": "notRegisteredOutcome",
            },
          ],
          "_rev": "486591535",
          "_type": {
            "_id": "OathTokenVerifierNode",
            "collection": true,
            "name": "OATH Token Verifier",
          },
          "algorithm": "TOTP",
          "hotpWindowSize": 100,
          "isRecoveryCodeAllowed": false,
          "maximumAllowedClockDrift": 5,
          "totpHashAlgorithm": "HMAC_SHA1",
          "totpTimeInterval": 30,
          "totpTimeSteps": 2,
        },
        "5fbd2b43-25a5-4eac-97d6-dab189046c8f": {
          "_id": "5fbd2b43-25a5-4eac-97d6-dab189046c8f",
          "_outcomes": [
            {
              "displayName": "true",
              "id": "true",
            },
          ],
          "_rev": "-712574112",
          "_type": {
            "_id": "ScriptedDecisionNode",
            "collection": true,
            "name": "Scripted Decision",
          },
          "inputs": [
            "*",
          ],
          "outcomes": [
            "true",
          ],
          "outputs": [
            "*",
          ],
          "script": "f2107949-22f8-46c4-865d-ae1d1110a9cb",
        },
      },
      "saml2Entities": {},
      "scripts": {},
      "socialIdentityProviders": {},
      "themes": [],
      "tree": {
        "_id": "OathJoker",
        "_rev": "1011876139",
        "description": "Google Authenticator",
        "enabled": true,
        "entryNodeId": "127b6d2d-e675-400e-9ea2-b5085d2b5a90",
        "identityResource": "managed/alpha_user",
        "nodes": {
          "127b6d2d-e675-400e-9ea2-b5085d2b5a90": {
            "connections": {
              "outcome": "47168976-847e-44ff-ae7c-1dda9c8acbd0",
            },
            "displayName": "Login Page",
            "nodeType": "PageNode",
            "x": 210,
            "y": 153,
          },
          "2081a224-3f38-44d4-86ac-3cd2b523979a": {
            "connections": {
              "true": "47168976-847e-44ff-ae7c-1dda9c8acbd0",
            },
            "displayName": "Reset Theme",
            "nodeType": "ScriptedDecisionNode",
            "x": 1143,
            "y": 305.015625,
          },
          "26632e18-838f-4851-8c18-ee92a38b278e": {
            "connections": {
              "failureOutcome": "41ffae6b-2158-4017-b09c-25794e1eb68a",
              "successOutcome": "2081a224-3f38-44d4-86ac-3cd2b523979a",
            },
            "displayName": "OATH Registration",
            "nodeType": "OathRegistrationNode",
            "x": 929,
            "y": 315,
          },
          "41ffae6b-2158-4017-b09c-25794e1eb68a": {
            "connections": {
              "true": "e301438c-0bd0-429c-ab0c-66126501069a",
            },
            "displayName": "Reset Theme",
            "nodeType": "ScriptedDecisionNode",
            "x": 1145,
            "y": 373.015625,
          },
          "47168976-847e-44ff-ae7c-1dda9c8acbd0": {
            "connections": {
              "failureOutcome": "e301438c-0bd0-429c-ab0c-66126501069a",
              "notRegisteredOutcome": "5fbd2b43-25a5-4eac-97d6-dab189046c8f",
              "successOutcome": "70e691a5-1e33-4ac3-a356-e7b6d60d92e0",
            },
            "displayName": "OATH Token Verifier",
            "nodeType": "OathTokenVerifierNode",
            "x": 452,
            "y": 148.5,
          },
          "5fbd2b43-25a5-4eac-97d6-dab189046c8f": {
            "connections": {
              "true": "26632e18-838f-4851-8c18-ee92a38b278e",
            },
            "displayName": "Set OATH Theme",
            "nodeType": "ScriptedDecisionNode",
            "x": 700,
            "y": 322,
          },
        },
        "staticNodes": {
          "70e691a5-1e33-4ac3-a356-e7b6d60d92e0": {
            "x": 751,
            "y": 108,
          },
          "e301438c-0bd0-429c-ab0c-66126501069a": {
            "x": 1379,
            "y": 199.5,
          },
          "startNode": {
            "x": 70,
            "y": 172.5,
          },
        },
        "uiConfig": {
          "categories": "["Prototype"]",
        },
      },
    },
    "Okta_Passthru": {
      "circlesOfTrust": {},
      "emailTemplates": {},
      "innerNodes": {
        "8033fc48-d50e-4689-a049-e1247269833b": {
          "_id": "8033fc48-d50e-4689-a049-e1247269833b",
          "_outcomes": [
            {
              "displayName": "Outcome",
              "id": "outcome",
            },
          ],
          "_rev": "592455014",
          "_type": {
            "_id": "ValidatedUsernameNode",
            "collection": true,
            "name": "Platform Username",
          },
          "usernameAttribute": "userName",
          "validateInput": false,
        },
        "f6593030-ac1e-4829-bdc1-3a8a83326cb8": {
          "_id": "f6593030-ac1e-4829-bdc1-3a8a83326cb8",
          "_outcomes": [
            {
              "displayName": "Outcome",
              "id": "outcome",
            },
          ],
          "_rev": "-1396522291",
          "_type": {
            "_id": "ValidatedPasswordNode",
            "collection": true,
            "name": "Platform Password",
          },
          "passwordAttribute": "password",
          "validateInput": false,
        },
      },
      "nodes": {
        "48207e1c-e1f7-4772-8409-e28c41ec144b": {
          "_id": "48207e1c-e1f7-4772-8409-e28c41ec144b",
          "_outcomes": [
            {
              "displayName": "True",
              "id": "true",
            },
            {
              "displayName": "False",
              "id": "false",
            },
          ],
          "_rev": "2141479181",
          "_type": {
            "_id": "DataStoreDecisionNode",
            "collection": true,
            "name": "Data Store Decision",
          },
        },
        "5ae1a0f4-5608-496a-8577-2ab867168187": {
          "_id": "5ae1a0f4-5608-496a-8577-2ab867168187",
          "_outcomes": [
            {
              "displayName": "True",
              "id": "true",
            },
            {
              "displayName": "False",
              "id": "false",
            },
          ],
          "_rev": "784682440",
          "_type": {
            "_id": "IdentifyExistingUserNode",
            "collection": true,
            "name": "Identify Existing User",
          },
          "identifier": "userName",
          "identityAttribute": "userName",
        },
        "6f384086-60d3-4079-a4c1-31c4d8b42e9c": {
          "_id": "6f384086-60d3-4079-a4c1-31c4d8b42e9c",
          "_outcomes": [
            {
              "displayName": "Success",
              "id": "Success",
            },
            {
              "displayName": "Failure",
              "id": "Failure",
            },
            {
              "displayName": "Error",
              "id": "Error",
            },
          ],
          "_rev": "1634180110",
          "_type": {
            "_id": "ScriptedDecisionNode",
            "collection": true,
            "name": "Scripted Decision",
          },
          "inputs": [
            "*",
          ],
          "outcomes": [
            "Success",
            "Failure",
            "Error",
          ],
          "outputs": [
            "*",
          ],
          "script": "2eb48a0c-24e0-4dac-acaf-02085c142ec5",
        },
        "9e863f0b-6804-4917-8901-ac36ae3f0a85": {
          "_id": "9e863f0b-6804-4917-8901-ac36ae3f0a85",
          "_outcomes": [
            {
              "displayName": "true",
              "id": "true",
            },
          ],
          "_rev": "-331024612",
          "_type": {
            "_id": "ScriptedDecisionNode",
            "collection": true,
            "name": "Scripted Decision",
          },
          "inputs": [
            "*",
          ],
          "outcomes": [
            "true",
          ],
          "outputs": [
            "*",
          ],
          "script": "6d6c2202-725b-4196-9436-92ec11a0b385",
        },
        "cfa2c31d-6522-4257-8230-92610c7db69d": {
          "_id": "cfa2c31d-6522-4257-8230-92610c7db69d",
          "_outcomes": [
            {
              "displayName": "Outcome",
              "id": "outcome",
            },
          ],
          "_rev": "1252295263",
          "_type": {
            "_id": "PageNode",
            "collection": true,
            "name": "Page Node",
          },
          "nodes": [
            {
              "_id": "8033fc48-d50e-4689-a049-e1247269833b",
              "displayName": "Username",
              "nodeType": "ValidatedUsernameNode",
            },
            {
              "_id": "f6593030-ac1e-4829-bdc1-3a8a83326cb8",
              "displayName": "Password",
              "nodeType": "ValidatedPasswordNode",
            },
          ],
          "pageDescription": {},
          "pageHeader": {},
        },
      },
      "saml2Entities": {},
      "scripts": {},
      "socialIdentityProviders": {},
      "themes": [],
      "tree": {
        "_id": "Okta_Passthru",
        "_rev": "1406573292",
        "description": "Use Okta pass through authentication.",
        "enabled": true,
        "entryNodeId": "cfa2c31d-6522-4257-8230-92610c7db69d",
        "identityResource": "managed/alpha_user",
        "nodes": {
          "48207e1c-e1f7-4772-8409-e28c41ec144b": {
            "connections": {
              "false": "6f384086-60d3-4079-a4c1-31c4d8b42e9c",
              "true": "70e691a5-1e33-4ac3-a356-e7b6d60d92e0",
            },
            "displayName": "Authenticate Locally",
            "nodeType": "DataStoreDecisionNode",
            "x": 619,
            "y": 115.015625,
          },
          "5ae1a0f4-5608-496a-8577-2ab867168187": {
            "connections": {
              "false": "6f384086-60d3-4079-a4c1-31c4d8b42e9c",
              "true": "48207e1c-e1f7-4772-8409-e28c41ec144b",
            },
            "displayName": "Identify Existing User",
            "nodeType": "IdentifyExistingUserNode",
            "x": 385,
            "y": 233.015625,
          },
          "6f384086-60d3-4079-a4c1-31c4d8b42e9c": {
            "connections": {
              "Error": "e301438c-0bd0-429c-ab0c-66126501069a",
              "Failure": "e301438c-0bd0-429c-ab0c-66126501069a",
              "Success": "9e863f0b-6804-4917-8901-ac36ae3f0a85",
            },
            "displayName": "Authenticate Remotely",
            "nodeType": "ScriptedDecisionNode",
            "x": 896,
            "y": 200.015625,
          },
          "9e863f0b-6804-4917-8901-ac36ae3f0a85": {
            "connections": {
              "true": "70e691a5-1e33-4ac3-a356-e7b6d60d92e0",
            },
            "displayName": "Display States",
            "nodeType": "ScriptedDecisionNode",
            "x": 1121,
            "y": 201.015625,
          },
          "cfa2c31d-6522-4257-8230-92610c7db69d": {
            "connections": {
              "outcome": "5ae1a0f4-5608-496a-8577-2ab867168187",
            },
            "displayName": "Login Page",
            "nodeType": "PageNode",
            "x": 168,
            "y": 201.015625,
          },
        },
        "staticNodes": {
          "70e691a5-1e33-4ac3-a356-e7b6d60d92e0": {
            "x": 1346,
            "y": 140,
          },
          "e301438c-0bd0-429c-ab0c-66126501069a": {
            "x": 1184,
            "y": 355,
          },
          "startNode": {
            "x": 50,
            "y": 250,
          },
        },
        "uiConfig": {},
      },
    },
    "Okta_SAML": {
      "circlesOfTrust": {},
      "emailTemplates": {},
      "innerNodes": {},
      "nodes": {
        "1d6827d1-bfc3-4c8f-bc66-7ca2177b7020": {
          "_id": "1d6827d1-bfc3-4c8f-bc66-7ca2177b7020",
          "_outcomes": [
            {
              "displayName": "Account exists",
              "id": "ACCOUNT_EXISTS",
            },
            {
              "displayName": "No account exists",
              "id": "NO_ACCOUNT",
            },
          ],
          "_rev": "570562652",
          "_type": {
            "_id": "product-Saml2Node",
            "collection": true,
            "name": "SAML2 Authentication",
          },
          "allowCreate": false,
          "authComparison": "EXACT",
          "authnContextClassRef": [],
          "authnContextDeclRef": [],
          "binding": "HTTP_POST",
          "forceAuthn": false,
          "idpEntityId": "http://www.okta.com/exk1xse7f0z5UGDFD5d7",
          "isPassive": false,
          "metaAlias": "/alpha/SPOkta",
          "nameIdFormat": "urn:oasis:names:tc:SAML:1.1:nameid-format:unspecified",
          "requestBinding": "HTTP_REDIRECT",
        },
        "2d9148d5-2583-46d5-b9bc-4bdf010809b0": {
          "_id": "2d9148d5-2583-46d5-b9bc-4bdf010809b0",
          "_outcomes": [
            {
              "displayName": "true",
              "id": "true",
            },
          ],
          "_rev": "511797276",
          "_type": {
            "_id": "ScriptedDecisionNode",
            "collection": true,
            "name": "Scripted Decision",
          },
          "inputs": [
            "*",
          ],
          "outcomes": [
            "true",
          ],
          "outputs": [
            "*",
          ],
          "script": "3cb43516-ae69-433a-8787-501d45db14e9",
        },
        "2ed51f69-64d4-4529-827b-4e5b435f835f": {
          "_id": "2ed51f69-64d4-4529-827b-4e5b435f835f",
          "_outcomes": [
            {
              "displayName": "true",
              "id": "true",
            },
            {
              "displayName": "false",
              "id": "false",
            },
          ],
          "_rev": "-1511075074",
          "_type": {
            "_id": "ScriptedDecisionNode",
            "collection": true,
            "name": "Scripted Decision",
          },
          "inputs": [
            "*",
          ],
          "outcomes": [
            "true",
            "false",
          ],
          "outputs": [
            "*",
          ],
          "script": "5b553f58-16bd-42b7-a782-4a981a66dbd4",
        },
        "2eec2fba-e3a6-4167-8d06-821649e82d97": {
          "_id": "2eec2fba-e3a6-4167-8d06-821649e82d97",
          "_outcomes": [
            {
              "displayName": "Created",
              "id": "CREATED",
            },
            {
              "displayName": "Failed",
              "id": "FAILURE",
            },
          ],
          "_rev": "-535504092",
          "_type": {
            "_id": "CreateObjectNode",
            "collection": true,
            "name": "Create Object",
          },
          "identityResource": "managed/alpha_user",
        },
        "3c93bc1b-6729-4cf5-b909-d815b7b8d239": {
          "_id": "3c93bc1b-6729-4cf5-b909-d815b7b8d239",
          "_outcomes": [
            {
              "displayName": "true",
              "id": "true",
            },
            {
              "displayName": "false",
              "id": "false",
            },
          ],
          "_rev": "-1376662869",
          "_type": {
            "_id": "ScriptedDecisionNode",
            "collection": true,
            "name": "Scripted Decision",
          },
          "inputs": [
            "*",
          ],
          "outcomes": [
            "true",
            "false",
          ],
          "outputs": [
            "*",
          ],
          "script": "ab917dad-6fdb-46c2-8c8c-42f094ebeea1",
        },
        "4de0ee99-23ad-42e4-a441-50cb7dda57f9": {
          "_id": "4de0ee99-23ad-42e4-a441-50cb7dda57f9",
          "_outcomes": [
            {
              "displayName": "True",
              "id": "true",
            },
            {
              "displayName": "False",
              "id": "false",
            },
          ],
          "_rev": "-173976411",
          "_type": {
            "_id": "InnerTreeEvaluatorNode",
            "collection": true,
            "name": "Inner Tree Evaluator",
          },
          "tree": "DefaultSuccessURL",
        },
        "529b089c-eb0b-49b5-8a56-65b295e71c58": {
          "_id": "529b089c-eb0b-49b5-8a56-65b295e71c58",
          "_outcomes": [
            {
              "displayName": "true",
              "id": "true",
            },
          ],
          "_rev": "799294708",
          "_type": {
            "_id": "ScriptedDecisionNode",
            "collection": true,
            "name": "Scripted Decision",
          },
          "inputs": [
            "*",
          ],
          "outcomes": [
            "true",
          ],
          "outputs": [
            "*",
          ],
          "script": "8e03eb43-ed5d-4c12-9e15-2051cc9be578",
        },
        "7cc68888-505c-4dec-87e3-baf285d84c95": {
          "_id": "7cc68888-505c-4dec-87e3-baf285d84c95",
          "_outcomes": [
            {
              "displayName": "True",
              "id": "true",
            },
            {
              "displayName": "False",
              "id": "false",
            },
          ],
          "_rev": "1117031476",
          "_type": {
            "_id": "IdentifyExistingUserNode",
            "collection": true,
            "name": "Identify Existing User",
          },
          "identifier": "userName",
          "identityAttribute": "userName",
        },
        "7e45c500-7454-4787-950b-2e170cb64215": {
          "_id": "7e45c500-7454-4787-950b-2e170cb64215",
          "_outcomes": [
            {
              "displayName": "true",
              "id": "true",
            },
          ],
          "_rev": "1265885600",
          "_type": {
            "_id": "ScriptedDecisionNode",
            "collection": true,
            "name": "Scripted Decision",
          },
          "inputs": [
            "*",
          ],
          "outcomes": [
            "true",
          ],
          "outputs": [
            "*",
          ],
          "script": "3981c0d3-0e3a-4c1d-be6b-5442e8acd3a1",
        },
        "fbf6b63c-8241-41b4-b9a9-9ff68fb1bf95": {
          "_id": "fbf6b63c-8241-41b4-b9a9-9ff68fb1bf95",
          "_outcomes": [
            {
              "displayName": "true",
              "id": "true",
            },
            {
              "displayName": "false",
              "id": "false",
            },
          ],
          "_rev": "1100365810",
          "_type": {
            "_id": "ScriptedDecisionNode",
            "collection": true,
            "name": "Scripted Decision",
          },
          "inputs": [
            "*",
          ],
          "outcomes": [
            "true",
            "false",
          ],
          "outputs": [
            "*",
          ],
          "script": "988c10fa-98da-4bf7-8ac9-a558d2fef1fd",
        },
      },
      "saml2Entities": {},
      "scripts": {},
      "socialIdentityProviders": {},
      "themes": [],
      "tree": {
        "_id": "Okta_SAML",
        "_rev": "466648433",
        "description": "SP-initiated SAML login to Chico's Okta tenant (IDP)",
        "enabled": true,
        "entryNodeId": "3c93bc1b-6729-4cf5-b909-d815b7b8d239",
        "identityResource": "managed/alpha_user",
        "nodes": {
          "1d6827d1-bfc3-4c8f-bc66-7ca2177b7020": {
            "connections": {
              "ACCOUNT_EXISTS": "529b089c-eb0b-49b5-8a56-65b295e71c58",
              "NO_ACCOUNT": "529b089c-eb0b-49b5-8a56-65b295e71c58",
            },
            "displayName": "SAML Login",
            "nodeType": "product-Saml2Node",
            "x": 365,
            "y": 232.76666259765625,
          },
          "2d9148d5-2583-46d5-b9bc-4bdf010809b0": {
            "connections": {
              "true": "7e45c500-7454-4787-950b-2e170cb64215",
            },
            "displayName": "debug",
            "nodeType": "ScriptedDecisionNode",
            "x": 1316,
            "y": 72.015625,
          },
          "2ed51f69-64d4-4529-827b-4e5b435f835f": {
            "connections": {
              "false": "7e45c500-7454-4787-950b-2e170cb64215",
              "true": "2eec2fba-e3a6-4167-8d06-821649e82d97",
            },
            "displayName": "Persist?",
            "nodeType": "ScriptedDecisionNode",
            "x": 911,
            "y": 412.015625,
          },
          "2eec2fba-e3a6-4167-8d06-821649e82d97": {
            "connections": {
              "CREATED": "7e45c500-7454-4787-950b-2e170cb64215",
              "FAILURE": "7e45c500-7454-4787-950b-2e170cb64215",
            },
            "displayName": "Create Account",
            "nodeType": "CreateObjectNode",
            "x": 1028,
            "y": 200.76666259765625,
          },
          "3c93bc1b-6729-4cf5-b909-d815b7b8d239": {
            "connections": {
              "false": "e301438c-0bd0-429c-ab0c-66126501069a",
              "true": "1d6827d1-bfc3-4c8f-bc66-7ca2177b7020",
            },
            "displayName": "IDP Re-Lookup",
            "nodeType": "ScriptedDecisionNode",
            "x": 154,
            "y": 230.015625,
          },
          "4de0ee99-23ad-42e4-a441-50cb7dda57f9": {
            "connections": {
              "false": "70e691a5-1e33-4ac3-a356-e7b6d60d92e0",
              "true": "70e691a5-1e33-4ac3-a356-e7b6d60d92e0",
            },
            "displayName": "Default Destination",
            "nodeType": "InnerTreeEvaluatorNode",
            "x": 1670,
            "y": 236.015625,
          },
          "529b089c-eb0b-49b5-8a56-65b295e71c58": {
            "connections": {
              "true": "fbf6b63c-8241-41b4-b9a9-9ff68fb1bf95",
            },
            "displayName": "Process SAML Data",
            "nodeType": "ScriptedDecisionNode",
            "x": 480,
            "y": 412.76666259765625,
          },
          "7cc68888-505c-4dec-87e3-baf285d84c95": {
            "connections": {
              "false": "2ed51f69-64d4-4529-827b-4e5b435f835f",
              "true": "7e45c500-7454-4787-950b-2e170cb64215",
            },
            "displayName": "Account Exists?",
            "nodeType": "IdentifyExistingUserNode",
            "x": 769,
            "y": 229.76666259765625,
          },
          "7e45c500-7454-4787-950b-2e170cb64215": {
            "connections": {
              "true": "4de0ee99-23ad-42e4-a441-50cb7dda57f9",
            },
            "displayName": "Store SAML Profile In Session",
            "nodeType": "ScriptedDecisionNode",
            "x": 1388,
            "y": 262.015625,
          },
          "fbf6b63c-8241-41b4-b9a9-9ff68fb1bf95": {
            "connections": {
              "false": "e301438c-0bd0-429c-ab0c-66126501069a",
              "true": "7cc68888-505c-4dec-87e3-baf285d84c95",
            },
            "displayName": "IDP Integrity Check",
            "nodeType": "ScriptedDecisionNode",
            "x": 569,
            "y": 231.015625,
          },
        },
        "staticNodes": {
          "70e691a5-1e33-4ac3-a356-e7b6d60d92e0": {
            "x": 1918,
            "y": 271,
          },
          "e301438c-0bd0-429c-ab0c-66126501069a": {
            "x": 714,
            "y": 724,
          },
          "startNode": {
            "x": 50,
            "y": 250,
          },
        },
        "uiConfig": {
          "categories": "["SAML"]",
        },
      },
    },
    "Passthru": {
      "circlesOfTrust": {},
      "emailTemplates": {},
      "innerNodes": {
        "174cdb0d-1732-458a-b6e2-ba9b540d608b": {
          "_id": "174cdb0d-1732-458a-b6e2-ba9b540d608b",
          "_outcomes": [
            {
              "displayName": "True",
              "id": "true",
            },
            {
              "displayName": "False",
              "id": "false",
            },
          ],
          "_rev": "-183716198",
          "_type": {
            "_id": "MessageNode",
            "collection": true,
            "name": "Message Node",
          },
          "message": {
            "en": "How would you like to proceed?",
          },
          "messageNo": {
            "en": "Finish",
          },
          "messageYes": {
            "en": "Show state variables and login again",
          },
        },
        "232fa759-fba3-44cb-ac11-c5b2be035bb8": {
          "_id": "232fa759-fba3-44cb-ac11-c5b2be035bb8",
          "_outcomes": [
            {
              "displayName": "Outcome",
              "id": "outcome",
            },
          ],
          "_rev": "-709360701",
          "_type": {
            "_id": "ValidatedPasswordNode",
            "collection": true,
            "name": "Platform Password",
          },
          "passwordAttribute": "password",
          "validateInput": false,
        },
        "9407b5f9-8235-4d8b-a8cf-c8a0cf629fa4": {
          "_id": "9407b5f9-8235-4d8b-a8cf-c8a0cf629fa4",
          "_outcomes": [
            {
              "displayName": "True",
              "id": "true",
            },
            {
              "displayName": "False",
              "id": "false",
            },
          ],
          "_rev": "-381404769",
          "_type": {
            "_id": "MessageNode",
            "collection": true,
            "name": "Message Node",
          },
          "message": {
            "en": "How would you like to proceed?",
          },
          "messageNo": {
            "en": "Finish",
          },
          "messageYes": {
            "en": "Show state variables and login again",
          },
        },
        "b79691b2-98ea-4685-aed2-2a5c2ffc8f6c": {
          "_id": "b79691b2-98ea-4685-aed2-2a5c2ffc8f6c",
          "_outcomes": [
            {
              "displayName": "Outcome",
              "id": "outcome",
            },
          ],
          "_rev": "-1910616557",
          "_type": {
            "_id": "ValidatedUsernameNode",
            "collection": true,
            "name": "Platform Username",
          },
          "usernameAttribute": "userName",
          "validateInput": false,
        },
      },
      "nodes": {
        "0ed4c8b6-049d-4998-ad51-961c4afa5c0b": {
          "_id": "0ed4c8b6-049d-4998-ad51-961c4afa5c0b",
          "_outcomes": [
            {
              "displayName": "true",
              "id": "true",
            },
          ],
          "_rev": "-1691617422",
          "_type": {
            "_id": "ScriptedDecisionNode",
            "collection": true,
            "name": "Scripted Decision",
          },
          "inputs": [
            "*",
          ],
          "outcomes": [
            "true",
          ],
          "outputs": [
            "*",
          ],
          "script": "b703581a-e112-42b9-bc24-6db8bced5a13",
        },
        "1c3ba876-7ce0-4adc-b995-6ed6fb4bccfc": {
          "_id": "1c3ba876-7ce0-4adc-b995-6ed6fb4bccfc",
          "_outcomes": [
            {
              "displayName": "Authenticated",
              "id": "AUTHENTICATED",
            },
            {
              "displayName": "Missing Input",
              "id": "MISSING",
            },
            {
              "displayName": "Failed",
              "id": "FAILED",
            },
          ],
          "_rev": "1647919208",
          "_type": {
            "_id": "PassthroughAuthenticationNode",
            "collection": true,
            "name": "Passthrough Authentication",
          },
          "identityAttribute": "userName",
          "objectType": "__ACCOUNT__",
          "passwordAttribute": "password",
          "systemEndpoint": "OUD",
        },
        "28ef10b9-2238-4e04-bec7-1fd2990b15a4": {
          "_id": "28ef10b9-2238-4e04-bec7-1fd2990b15a4",
          "_outcomes": [
            {
              "displayName": "True",
              "id": "true",
            },
            {
              "displayName": "False",
              "id": "false",
            },
          ],
          "_rev": "1118831981",
          "_type": {
            "_id": "PageNode",
            "collection": true,
            "name": "Page Node",
          },
          "nodes": [
            {
              "_id": "9407b5f9-8235-4d8b-a8cf-c8a0cf629fa4",
              "displayName": "Success",
              "nodeType": "MessageNode",
            },
          ],
          "pageDescription": {
            "en": "You have successfully authenticated using a directory with 10M user records running on-prem.",
          },
          "pageHeader": {
            "en": "Passthrough Authentication Succeeded!",
          },
        },
        "51934f80-9805-4ba0-b27c-7f87f91237aa": {
          "_id": "51934f80-9805-4ba0-b27c-7f87f91237aa",
          "_outcomes": [
            {
              "displayName": "Outcome",
              "id": "outcome",
            },
          ],
          "_rev": "-2110797842",
          "_type": {
            "_id": "PageNode",
            "collection": true,
            "name": "Page Node",
          },
          "nodes": [
            {
              "_id": "b79691b2-98ea-4685-aed2-2a5c2ffc8f6c",
              "displayName": "Username",
              "nodeType": "ValidatedUsernameNode",
            },
            {
              "_id": "232fa759-fba3-44cb-ac11-c5b2be035bb8",
              "displayName": "Password",
              "nodeType": "ValidatedPasswordNode",
            },
          ],
          "pageDescription": {},
          "pageHeader": {},
          "stage": "themeId=Expanse",
        },
        "7f336d46-8874-40ff-aacf-fe8ead74c8ce": {
          "_id": "7f336d46-8874-40ff-aacf-fe8ead74c8ce",
          "_outcomes": [
            {
              "displayName": "true",
              "id": "true",
            },
          ],
          "_rev": "-1537903947",
          "_type": {
            "_id": "ScriptedDecisionNode",
            "collection": true,
            "name": "Scripted Decision",
          },
          "inputs": [
            "*",
          ],
          "outcomes": [
            "true",
          ],
          "outputs": [
            "*",
          ],
          "script": "b703581a-e112-42b9-bc24-6db8bced5a13",
        },
        "ee5da993-7b31-4601-9fe7-ccca59efecd0": {
          "_id": "ee5da993-7b31-4601-9fe7-ccca59efecd0",
          "_outcomes": [
            {
              "displayName": "True",
              "id": "true",
            },
            {
              "displayName": "False",
              "id": "false",
            },
          ],
          "_rev": "-910352725",
          "_type": {
            "_id": "PageNode",
            "collection": true,
            "name": "Page Node",
          },
          "nodes": [
            {
              "_id": "174cdb0d-1732-458a-b6e2-ba9b540d608b",
              "displayName": "Failure",
              "nodeType": "MessageNode",
            },
          ],
          "pageDescription": {
            "en": "Authentication using an on-prem 10M user directory failed.",
          },
          "pageHeader": {
            "en": "Passthrough Authentication Failed!",
          },
        },
      },
      "saml2Entities": {},
      "scripts": {},
      "socialIdentityProviders": {},
      "themes": [],
      "tree": {
        "_id": "Passthru",
        "_rev": "-356915991",
        "description": "Passthru authentication",
        "enabled": true,
        "entryNodeId": "51934f80-9805-4ba0-b27c-7f87f91237aa",
        "identityResource": "managed/alpha_user",
        "nodes": {
          "0ed4c8b6-049d-4998-ad51-961c4afa5c0b": {
            "connections": {
              "true": "51934f80-9805-4ba0-b27c-7f87f91237aa",
            },
            "displayName": "Display States",
            "nodeType": "ScriptedDecisionNode",
            "x": 893,
            "y": 408.015625,
          },
          "1c3ba876-7ce0-4adc-b995-6ed6fb4bccfc": {
            "connections": {
              "AUTHENTICATED": "28ef10b9-2238-4e04-bec7-1fd2990b15a4",
              "FAILED": "ee5da993-7b31-4601-9fe7-ccca59efecd0",
              "MISSING": "51934f80-9805-4ba0-b27c-7f87f91237aa",
            },
            "displayName": "Passthrough Authentication",
            "nodeType": "PassthroughAuthenticationNode",
            "x": 393,
            "y": 129.015625,
          },
          "28ef10b9-2238-4e04-bec7-1fd2990b15a4": {
            "connections": {
              "false": "70e691a5-1e33-4ac3-a356-e7b6d60d92e0",
              "true": "7f336d46-8874-40ff-aacf-fe8ead74c8ce",
            },
            "displayName": "Success",
            "nodeType": "PageNode",
            "x": 662,
            "y": 36.015625,
          },
          "51934f80-9805-4ba0-b27c-7f87f91237aa": {
            "connections": {
              "outcome": "1c3ba876-7ce0-4adc-b995-6ed6fb4bccfc",
            },
            "displayName": "Login",
            "nodeType": "PageNode",
            "x": 164,
            "y": 207.015625,
          },
          "7f336d46-8874-40ff-aacf-fe8ead74c8ce": {
            "connections": {
              "true": "51934f80-9805-4ba0-b27c-7f87f91237aa",
            },
            "displayName": "Display States",
            "nodeType": "ScriptedDecisionNode",
            "x": 893,
            "y": 85.015625,
          },
          "ee5da993-7b31-4601-9fe7-ccca59efecd0": {
            "connections": {
              "false": "e301438c-0bd0-429c-ab0c-66126501069a",
              "true": "0ed4c8b6-049d-4998-ad51-961c4afa5c0b",
            },
            "displayName": "Failure",
            "nodeType": "PageNode",
            "x": 664,
            "y": 231.015625,
          },
        },
        "staticNodes": {
          "70e691a5-1e33-4ac3-a356-e7b6d60d92e0": {
            "x": 1104,
            "y": 136,
          },
          "e301438c-0bd0-429c-ab0c-66126501069a": {
            "x": 1111,
            "y": 333,
          },
          "startNode": {
            "x": 50,
            "y": 250,
          },
        },
        "uiConfig": {
          "categories": "["Authentication"]",
        },
      },
    },
    "PasswordBreachDetection": {
      "circlesOfTrust": {},
      "emailTemplates": {},
      "innerNodes": {
        "53bbcda5-0f75-4f95-bafe-6208020e9d8f": {
          "_id": "53bbcda5-0f75-4f95-bafe-6208020e9d8f",
          "_outcomes": [
            {
              "displayName": "Outcome",
              "id": "outcome",
            },
          ],
          "_rev": "1338819593",
          "_type": {
            "_id": "ValidatedPasswordNode",
            "collection": true,
            "name": "Platform Password",
          },
          "passwordAttribute": "password",
          "validateInput": false,
        },
        "84a508f5-7f31-44ec-981f-a64dcfe8ffdd": {
          "_id": "84a508f5-7f31-44ec-981f-a64dcfe8ffdd",
          "_outcomes": [
            {
              "displayName": "True",
              "id": "true",
            },
            {
              "displayName": "False",
              "id": "false",
            },
          ],
          "_rev": "1773727029",
          "_type": {
            "_id": "MessageNode",
            "collection": true,
            "name": "Message Node",
          },
          "message": {
            "en": "Analyze another password?",
          },
          "messageNo": {
            "en": "No",
          },
          "messageYes": {
            "en": "Yes",
          },
        },
        "d0b058da-3d5a-41e0-92d5-5dfc3892ee6c": {
          "_id": "d0b058da-3d5a-41e0-92d5-5dfc3892ee6c",
          "_outcomes": [
            {
              "displayName": "True",
              "id": "true",
            },
            {
              "displayName": "False",
              "id": "false",
            },
          ],
          "_rev": "1054960312",
          "_type": {
            "_id": "MessageNode",
            "collection": true,
            "name": "Message Node",
          },
          "message": {
            "en": "Analyze another password?",
          },
          "messageNo": {
            "en": "No",
          },
          "messageYes": {
            "en": "Yes",
          },
        },
        "e90307e7-8e1a-4b08-bc23-8810f9308758": {
          "_id": "e90307e7-8e1a-4b08-bc23-8810f9308758",
          "_outcomes": [
            {
              "displayName": "True",
              "id": "true",
            },
            {
              "displayName": "False",
              "id": "false",
            },
          ],
          "_rev": "-775187233",
          "_type": {
            "_id": "MessageNode",
            "collection": true,
            "name": "Message Node",
          },
          "message": {
            "en": "Try again?",
          },
          "messageNo": {
            "en": "No",
          },
          "messageYes": {
            "en": "Yes",
          },
        },
      },
      "nodes": {
        "4c46a103-6a9c-4b7c-8dfa-dc543c59fb09": {
          "_id": "4c46a103-6a9c-4b7c-8dfa-dc543c59fb09",
          "_outcomes": [
            {
              "displayName": "Outcome",
              "id": "outcome",
            },
          ],
          "_rev": "-1522961717",
          "_type": {
            "_id": "PageNode",
            "collection": true,
            "name": "Page Node",
          },
          "nodes": [
            {
              "_id": "53bbcda5-0f75-4f95-bafe-6208020e9d8f",
              "displayName": "Password",
              "nodeType": "ValidatedPasswordNode",
            },
          ],
          "pageDescription": {
            "en": "Test your password!",
          },
          "pageHeader": {
            "en": "Password Breach Detection",
          },
        },
        "75fff577-aab7-4aa3-b1f1-07d959b878a0": {
          "_id": "75fff577-aab7-4aa3-b1f1-07d959b878a0",
          "_outcomes": [
            {
              "displayName": "True",
              "id": "true",
            },
            {
              "displayName": "False",
              "id": "false",
            },
          ],
          "_rev": "-256817820",
          "_type": {
            "_id": "PageNode",
            "collection": true,
            "name": "Page Node",
          },
          "nodes": [
            {
              "_id": "84a508f5-7f31-44ec-981f-a64dcfe8ffdd",
              "displayName": "User Choice",
              "nodeType": "MessageNode",
            },
          ],
          "pageDescription": {
            "en": "Your password was exposed in past breaches! It should never be used again!",
          },
          "pageHeader": {
            "en": "Breached!",
          },
        },
        "a2e01740-d63b-4977-b843-d57ae2272b7f": {
          "_id": "a2e01740-d63b-4977-b843-d57ae2272b7f",
          "_outcomes": [
            {
              "displayName": "clear",
              "id": "clear",
            },
            {
              "displayName": "breached",
              "id": "breached",
            },
            {
              "displayName": "failed",
              "id": "failed",
            },
          ],
          "_rev": "-1084639260",
          "_type": {
            "_id": "ScriptedDecisionNode",
            "collection": true,
            "name": "Scripted Decision",
          },
          "inputs": [
            "*",
          ],
          "outcomes": [
            "clear",
            "breached",
            "failed",
          ],
          "outputs": [
            "*",
          ],
          "script": "790045fa-a325-4e3e-96f8-d4a91b32e9de",
        },
        "b2457a0e-dcc3-4e44-8f89-89fd022b134e": {
          "_id": "b2457a0e-dcc3-4e44-8f89-89fd022b134e",
          "_outcomes": [
            {
              "displayName": "True",
              "id": "true",
            },
            {
              "displayName": "False",
              "id": "false",
            },
          ],
          "_rev": "-2017921974",
          "_type": {
            "_id": "PageNode",
            "collection": true,
            "name": "Page Node",
          },
          "nodes": [
            {
              "_id": "e90307e7-8e1a-4b08-bc23-8810f9308758",
              "displayName": "User Choice",
              "nodeType": "MessageNode",
            },
          ],
          "pageDescription": {},
          "pageHeader": {
            "en": "Analysis failed!",
          },
        },
        "bfd0553f-d88a-4a22-8739-ee8b2ba73289": {
          "_id": "bfd0553f-d88a-4a22-8739-ee8b2ba73289",
          "_outcomes": [
            {
              "displayName": "True",
              "id": "true",
            },
            {
              "displayName": "False",
              "id": "false",
            },
          ],
          "_rev": "-1541310220",
          "_type": {
            "_id": "PageNode",
            "collection": true,
            "name": "Page Node",
          },
          "nodes": [
            {
              "_id": "d0b058da-3d5a-41e0-92d5-5dfc3892ee6c",
              "displayName": "User Choice",
              "nodeType": "MessageNode",
            },
          ],
          "pageDescription": {
            "en": "Congratulations! Your password has not been involved in any known breaches!",
          },
          "pageHeader": {
            "en": "Clear!",
          },
        },
      },
      "saml2Entities": {},
      "scripts": {},
      "socialIdentityProviders": {},
      "themes": [],
      "tree": {
        "_id": "PasswordBreachDetection",
        "_rev": "310168134",
        "description": "Use Have I Been Pwned Password to check if password has been breached.",
        "enabled": true,
        "entryNodeId": "4c46a103-6a9c-4b7c-8dfa-dc543c59fb09",
        "identityResource": "managed/alpha_user",
        "nodes": {
          "4c46a103-6a9c-4b7c-8dfa-dc543c59fb09": {
            "connections": {
              "outcome": "a2e01740-d63b-4977-b843-d57ae2272b7f",
            },
            "displayName": "Collect Password",
            "nodeType": "PageNode",
            "x": 171,
            "y": 227.015625,
          },
          "75fff577-aab7-4aa3-b1f1-07d959b878a0": {
            "connections": {
              "false": "e301438c-0bd0-429c-ab0c-66126501069a",
              "true": "4c46a103-6a9c-4b7c-8dfa-dc543c59fb09",
            },
            "displayName": "Breached!",
            "nodeType": "PageNode",
            "x": 611,
            "y": 214.015625,
          },
          "a2e01740-d63b-4977-b843-d57ae2272b7f": {
            "connections": {
              "breached": "75fff577-aab7-4aa3-b1f1-07d959b878a0",
              "clear": "bfd0553f-d88a-4a22-8739-ee8b2ba73289",
              "failed": "b2457a0e-dcc3-4e44-8f89-89fd022b134e",
            },
            "displayName": "Analyze Password",
            "nodeType": "ScriptedDecisionNode",
            "x": 401,
            "y": 220.015625,
          },
          "b2457a0e-dcc3-4e44-8f89-89fd022b134e": {
            "connections": {
              "false": "e301438c-0bd0-429c-ab0c-66126501069a",
              "true": "4c46a103-6a9c-4b7c-8dfa-dc543c59fb09",
            },
            "displayName": "Failed!",
            "nodeType": "PageNode",
            "x": 611,
            "y": 398.015625,
          },
          "bfd0553f-d88a-4a22-8739-ee8b2ba73289": {
            "connections": {
              "false": "70e691a5-1e33-4ac3-a356-e7b6d60d92e0",
              "true": "4c46a103-6a9c-4b7c-8dfa-dc543c59fb09",
            },
            "displayName": "Clear!",
            "nodeType": "PageNode",
            "x": 611,
            "y": 30.015625,
          },
        },
        "staticNodes": {
          "70e691a5-1e33-4ac3-a356-e7b6d60d92e0": {
            "x": 50,
            "y": 126,
          },
          "e301438c-0bd0-429c-ab0c-66126501069a": {
            "x": 1082,
            "y": 264,
          },
          "startNode": {
            "x": 50,
            "y": 250,
          },
        },
        "uiConfig": {},
      },
    },
    "PasswordGrant": {
      "circlesOfTrust": {},
      "emailTemplates": {},
      "innerNodes": {
        "69e3553e-5c59-4ea0-883b-98795f5fa087": {
          "_id": "69e3553e-5c59-4ea0-883b-98795f5fa087",
          "_outcomes": [
            {
              "displayName": "Outcome",
              "id": "outcome",
            },
          ],
          "_rev": "597653734",
          "_type": {
            "_id": "UsernameCollectorNode",
            "collection": true,
            "name": "Username Collector",
          },
        },
        "bfc3b766-3e89-4cba-b3bc-c282633ea382": {
          "_id": "bfc3b766-3e89-4cba-b3bc-c282633ea382",
          "_outcomes": [
            {
              "displayName": "Outcome",
              "id": "outcome",
            },
          ],
          "_rev": "-609437673",
          "_type": {
            "_id": "PasswordCollectorNode",
            "collection": true,
            "name": "Password Collector",
          },
        },
      },
      "nodes": {
        "620272bb-1d7a-46ba-8d93-c7eba5d8d9b8": {
          "_id": "620272bb-1d7a-46ba-8d93-c7eba5d8d9b8",
          "_outcomes": [
            {
              "displayName": "True",
              "id": "true",
            },
            {
              "displayName": "False",
              "id": "false",
            },
          ],
          "_rev": "700151798",
          "_type": {
            "_id": "DataStoreDecisionNode",
            "collection": true,
            "name": "Data Store Decision",
          },
        },
        "774d0d91-4a7f-44b6-ba4c-c05a766fa68c": {
          "_id": "774d0d91-4a7f-44b6-ba4c-c05a766fa68c",
          "_outcomes": [
            {
              "displayName": "Outcome",
              "id": "outcome",
            },
          ],
          "_rev": "-1197535281",
          "_type": {
            "_id": "PageNode",
            "collection": true,
            "name": "Page Node",
          },
          "nodes": [
            {
              "_id": "69e3553e-5c59-4ea0-883b-98795f5fa087",
              "displayName": "Username Collector",
              "nodeType": "UsernameCollectorNode",
            },
            {
              "_id": "bfc3b766-3e89-4cba-b3bc-c282633ea382",
              "displayName": "Password Collector",
              "nodeType": "PasswordCollectorNode",
            },
          ],
          "pageDescription": {},
          "pageHeader": {},
        },
      },
      "saml2Entities": {},
      "scripts": {},
      "socialIdentityProviders": {},
      "themes": [],
      "tree": {
        "_id": "PasswordGrant",
        "_rev": "-222912931",
        "enabled": true,
        "entryNodeId": "774d0d91-4a7f-44b6-ba4c-c05a766fa68c",
        "identityResource": "managed/alpha_user",
        "nodes": {
          "620272bb-1d7a-46ba-8d93-c7eba5d8d9b8": {
            "connections": {
              "false": "e301438c-0bd0-429c-ab0c-66126501069a",
              "true": "70e691a5-1e33-4ac3-a356-e7b6d60d92e0",
            },
            "displayName": "Data Store Decision",
            "nodeType": "DataStoreDecisionNode",
            "x": 311,
            "y": 240,
          },
          "774d0d91-4a7f-44b6-ba4c-c05a766fa68c": {
            "connections": {
              "outcome": "620272bb-1d7a-46ba-8d93-c7eba5d8d9b8",
            },
            "displayName": "Page Node",
            "nodeType": "PageNode",
            "x": 134,
            "y": 77,
          },
        },
        "staticNodes": {
          "70e691a5-1e33-4ac3-a356-e7b6d60d92e0": {
            "x": 459,
            "y": 20,
          },
          "e301438c-0bd0-429c-ab0c-66126501069a": {
            "x": 524,
            "y": 165,
          },
          "startNode": {
            "x": 50,
            "y": 25,
          },
        },
        "uiConfig": {},
      },
    },
    "PostBody": {
      "circlesOfTrust": {},
      "emailTemplates": {},
      "innerNodes": {
        "31930042-7c1b-4cdd-a081-d199808232a8": {
          "_id": "31930042-7c1b-4cdd-a081-d199808232a8",
          "_outcomes": [
            {
              "displayName": "Outcome",
              "id": "outcome",
            },
          ],
          "_rev": "324283194",
          "_type": {
            "_id": "PasswordCollectorNode",
            "collection": true,
            "name": "Password Collector",
          },
        },
        "51feade3-fff4-445a-9f32-db20a5783b61": {
          "_id": "51feade3-fff4-445a-9f32-db20a5783b61",
          "_outcomes": [
            {
              "displayName": "true",
              "id": "true",
            },
          ],
          "_rev": "-2032961868",
          "_type": {
            "_id": "ScriptedDecisionNode",
            "collection": true,
            "name": "Scripted Decision",
          },
          "inputs": [
            "*",
          ],
          "outcomes": [
            "true",
          ],
          "outputs": [
            "*",
          ],
          "script": "92edf2c7-0bab-412c-a0da-82ad4f04505b",
        },
        "ced767f0-3a66-4ac2-9e9b-f5f2cbf0dd67": {
          "_id": "ced767f0-3a66-4ac2-9e9b-f5f2cbf0dd67",
          "_outcomes": [
            {
              "displayName": "Outcome",
              "id": "outcome",
            },
          ],
          "_rev": "876772673",
          "_type": {
            "_id": "UsernameCollectorNode",
            "collection": true,
            "name": "Username Collector",
          },
        },
      },
      "nodes": {
        "47c9aaaa-f4e3-4ebf-80ad-4dd6e60dcf96": {
          "_id": "47c9aaaa-f4e3-4ebf-80ad-4dd6e60dcf96",
          "_outcomes": [
            {
              "displayName": "true",
              "id": "true",
            },
          ],
          "_rev": "-704408700",
          "_type": {
            "_id": "PageNode",
            "collection": true,
            "name": "Page Node",
          },
          "nodes": [
            {
              "_id": "ced767f0-3a66-4ac2-9e9b-f5f2cbf0dd67",
              "displayName": "Username Collector",
              "nodeType": "UsernameCollectorNode",
            },
            {
              "_id": "31930042-7c1b-4cdd-a081-d199808232a8",
              "displayName": "Password Collector",
              "nodeType": "PasswordCollectorNode",
            },
            {
              "_id": "51feade3-fff4-445a-9f32-db20a5783b61",
              "displayName": "Extra Fields",
              "nodeType": "ScriptedDecisionNode",
            },
          ],
          "pageDescription": {},
          "pageHeader": {},
        },
        "e3654df6-776c-4ee8-a758-f05635b3ebd6": {
          "_id": "e3654df6-776c-4ee8-a758-f05635b3ebd6",
          "_outcomes": [
            {
              "displayName": "True",
              "id": "true",
            },
            {
              "displayName": "False",
              "id": "false",
            },
          ],
          "_rev": "422041175",
          "_type": {
            "_id": "DataStoreDecisionNode",
            "collection": true,
            "name": "Data Store Decision",
          },
        },
        "f9469752-3847-4016-9396-252a2b56631b": {
          "_id": "f9469752-3847-4016-9396-252a2b56631b",
          "_outcomes": [
            {
              "displayName": "true",
              "id": "true",
            },
          ],
          "_rev": "2485055",
          "_type": {
            "_id": "ScriptedDecisionNode",
            "collection": true,
            "name": "Scripted Decision",
          },
          "inputs": [
            "*",
          ],
          "outcomes": [
            "true",
          ],
          "outputs": [
            "*",
          ],
          "script": "3cb43516-ae69-433a-8787-501d45db14e9",
        },
      },
      "saml2Entities": {},
      "scripts": {},
      "socialIdentityProviders": {},
      "themes": [],
      "tree": {
        "_id": "PostBody",
        "_rev": "1379205831",
        "enabled": true,
        "entryNodeId": "47c9aaaa-f4e3-4ebf-80ad-4dd6e60dcf96",
        "identityResource": "managed/alpha_user",
        "nodes": {
          "47c9aaaa-f4e3-4ebf-80ad-4dd6e60dcf96": {
            "connections": {
              "true": "f9469752-3847-4016-9396-252a2b56631b",
            },
            "displayName": "Page Node",
            "nodeType": "PageNode",
            "x": 200,
            "y": 170.015625,
          },
          "e3654df6-776c-4ee8-a758-f05635b3ebd6": {
            "connections": {
              "false": "e301438c-0bd0-429c-ab0c-66126501069a",
              "true": "70e691a5-1e33-4ac3-a356-e7b6d60d92e0",
            },
            "displayName": "Data Store Decision",
            "nodeType": "DataStoreDecisionNode",
            "x": 633,
            "y": 211.015625,
          },
          "f9469752-3847-4016-9396-252a2b56631b": {
            "connections": {
              "true": "e3654df6-776c-4ee8-a758-f05635b3ebd6",
            },
            "displayName": "Debug",
            "nodeType": "ScriptedDecisionNode",
            "x": 430,
            "y": 239.015625,
          },
        },
        "staticNodes": {
          "70e691a5-1e33-4ac3-a356-e7b6d60d92e0": {
            "x": 846,
            "y": 132,
          },
          "e301438c-0bd0-429c-ab0c-66126501069a": {
            "x": 851,
            "y": 356,
          },
          "startNode": {
            "x": 50,
            "y": 250,
          },
        },
        "uiConfig": {
          "categories": "[]",
        },
      },
    },
    "ProgressiveProfile": {
      "circlesOfTrust": {},
      "emailTemplates": {},
      "innerNodes": {
        "96309460-4ade-4963-9004-c655d5da2990": {
          "_id": "96309460-4ade-4963-9004-c655d5da2990",
          "_outcomes": [
            {
              "displayName": "Outcome",
              "id": "outcome",
            },
          ],
          "_rev": "-1731010071",
          "_type": {
            "_id": "AttributeCollectorNode",
            "collection": true,
            "name": "Attribute Collector",
          },
          "attributesToCollect": [
            "preferences/marketing",
            "preferences/updates",
          ],
          "identityAttribute": "userName",
          "required": false,
          "validateInputs": false,
        },
      },
      "nodes": {
        "1231e2b4-7f5c-4ae5-8bf9-574be4e330be": {
          "_id": "1231e2b4-7f5c-4ae5-8bf9-574be4e330be",
          "_outcomes": [
            {
              "displayName": "Patched",
              "id": "PATCHED",
            },
            {
              "displayName": "Failed",
              "id": "FAILURE",
            },
          ],
          "_rev": "682820020",
          "_type": {
            "_id": "PatchObjectNode",
            "collection": true,
            "name": "Patch Object",
          },
          "identityAttribute": "userName",
          "identityResource": "managed/alpha_user",
          "ignoredFields": [],
          "patchAsObject": false,
        },
        "68b4eb4d-a7bb-4ed6-8952-606c770e2fcc": {
          "_id": "68b4eb4d-a7bb-4ed6-8952-606c770e2fcc",
          "_outcomes": [
            {
              "displayName": "True",
              "id": "true",
            },
            {
              "displayName": "False",
              "id": "false",
            },
          ],
          "_rev": "54584996",
          "_type": {
            "_id": "LoginCountDecisionNode",
            "collection": true,
            "name": "Login Count Decision",
          },
          "amount": 3,
          "identityAttribute": "userName",
          "interval": "EVERY",
        },
        "6fec099f-5d71-4201-8d2b-6d021a941965": {
          "_id": "6fec099f-5d71-4201-8d2b-6d021a941965",
          "_outcomes": [
            {
              "displayName": "Outcome",
              "id": "outcome",
            },
          ],
          "_rev": "-302105561",
          "_type": {
            "_id": "PageNode",
            "collection": true,
            "name": "Page Node",
          },
          "nodes": [
            {
              "_id": "96309460-4ade-4963-9004-c655d5da2990",
              "displayName": "Preferences",
              "nodeType": "AttributeCollectorNode",
            },
          ],
          "pageDescription": {},
          "pageHeader": {
            "en": "Please select your preferences",
          },
        },
      },
      "saml2Entities": {},
      "scripts": {},
      "socialIdentityProviders": {},
      "themes": [],
      "tree": {
        "_id": "ProgressiveProfile",
        "_rev": "-939173418",
        "description": "Prompt for missing preferences on 3rd login",
        "enabled": true,
        "entryNodeId": "68b4eb4d-a7bb-4ed6-8952-606c770e2fcc",
        "identityResource": "managed/alpha_user",
        "nodes": {
          "1231e2b4-7f5c-4ae5-8bf9-574be4e330be": {
            "connections": {
              "FAILURE": "e301438c-0bd0-429c-ab0c-66126501069a",
              "PATCHED": "70e691a5-1e33-4ac3-a356-e7b6d60d92e0",
            },
            "displayName": "Update Account",
            "nodeType": "PatchObjectNode",
            "x": 611,
            "y": 357,
          },
          "68b4eb4d-a7bb-4ed6-8952-606c770e2fcc": {
            "connections": {
              "false": "70e691a5-1e33-4ac3-a356-e7b6d60d92e0",
              "true": "6fec099f-5d71-4201-8d2b-6d021a941965",
            },
            "displayName": "Login Count",
            "nodeType": "LoginCountDecisionNode",
            "x": 142,
            "y": 216,
          },
          "6fec099f-5d71-4201-8d2b-6d021a941965": {
            "connections": {
              "outcome": "1231e2b4-7f5c-4ae5-8bf9-574be4e330be",
            },
            "displayName": "Collect Preferences",
            "nodeType": "PageNode",
            "x": 366,
            "y": 357,
          },
        },
        "staticNodes": {
          "70e691a5-1e33-4ac3-a356-e7b6d60d92e0": {
            "x": 860,
            "y": 267,
          },
          "e301438c-0bd0-429c-ab0c-66126501069a": {
            "x": 860,
            "y": 407,
          },
          "startNode": {
            "x": 26,
            "y": 233.5,
          },
        },
        "uiConfig": {
          "categories": "["Progressive Profile","Helper"]",
        },
      },
    },
    "ProtectedLogin": {
      "circlesOfTrust": {},
      "emailTemplates": {},
      "innerNodes": {},
      "nodes": {
        "9fe5ce95-8e35-4dc6-bbb8-8b53b0b5a677": {
          "_id": "9fe5ce95-8e35-4dc6-bbb8-8b53b0b5a677",
          "_outcomes": [
            {
              "displayName": "True",
              "id": "true",
            },
            {
              "displayName": "False",
              "id": "false",
            },
          ],
          "_rev": "-740786273",
          "_type": {
            "_id": "InnerTreeEvaluatorNode",
            "collection": true,
            "name": "Inner Tree Evaluator",
          },
          "tree": "Login",
        },
        "f7b2145d-f311-421f-8c89-a87169ca795c": {
          "_id": "f7b2145d-f311-421f-8c89-a87169ca795c",
          "_outcomes": [
            {
              "displayName": "True",
              "id": "true",
            },
            {
              "displayName": "False",
              "id": "false",
            },
          ],
          "_rev": "-731458243",
          "_type": {
            "_id": "InnerTreeEvaluatorNode",
            "collection": true,
            "name": "Inner Tree Evaluator",
          },
          "tree": "APIProtection",
        },
      },
      "saml2Entities": {},
      "scripts": {},
      "socialIdentityProviders": {},
      "themes": [],
      "tree": {
        "_id": "ProtectedLogin",
        "_rev": "-1510783590",
        "description": "Protected Platform Login",
        "enabled": true,
        "entryNodeId": "f7b2145d-f311-421f-8c89-a87169ca795c",
        "identityResource": "managed/alpha_user",
        "nodes": {
          "9fe5ce95-8e35-4dc6-bbb8-8b53b0b5a677": {
            "connections": {
              "false": "e301438c-0bd0-429c-ab0c-66126501069a",
              "true": "70e691a5-1e33-4ac3-a356-e7b6d60d92e0",
            },
            "displayName": "Login",
            "nodeType": "InnerTreeEvaluatorNode",
            "x": 421,
            "y": 154.015625,
          },
          "f7b2145d-f311-421f-8c89-a87169ca795c": {
            "connections": {
              "false": "e301438c-0bd0-429c-ab0c-66126501069a",
              "true": "9fe5ce95-8e35-4dc6-bbb8-8b53b0b5a677",
            },
            "displayName": "API Protection",
            "nodeType": "InnerTreeEvaluatorNode",
            "x": 189,
            "y": 232.015625,
          },
        },
        "staticNodes": {
          "70e691a5-1e33-4ac3-a356-e7b6d60d92e0": {
            "x": 660,
            "y": 105,
          },
          "e301438c-0bd0-429c-ab0c-66126501069a": {
            "x": 660,
            "y": 282,
          },
          "startNode": {
            "x": 50,
            "y": 250,
          },
        },
        "uiConfig": {
          "categories": "["API Protection","Authentication","Proof Of Concept","Prototype"]",
        },
      },
    },
    "Push": {
      "circlesOfTrust": {},
      "emailTemplates": {},
      "innerNodes": {
        "d59b3174-1bee-4e43-9df0-4c997dd31f87": {
          "_id": "d59b3174-1bee-4e43-9df0-4c997dd31f87",
          "_outcomes": [
            {
              "displayName": "Outcome",
              "id": "outcome",
            },
          ],
          "_rev": "-1705367512",
          "_type": {
            "_id": "ValidatedUsernameNode",
            "collection": true,
            "name": "Platform Username",
          },
          "usernameAttribute": "userName",
          "validateInput": false,
        },
      },
      "nodes": {
        "11ea4433-1c6d-4da3-96c4-5900b2ea1312": {
          "_id": "11ea4433-1c6d-4da3-96c4-5900b2ea1312",
          "_outcomes": [
            {
              "displayName": "Done",
              "id": "DONE",
            },
            {
              "displayName": "Exited",
              "id": "EXITED",
            },
            {
              "displayName": "Spam",
              "id": "SPAM",
            },
          ],
          "_rev": "-862556118",
          "_type": {
            "_id": "PollingWaitNode",
            "collection": true,
            "name": "Polling Wait Node",
          },
          "exitMessage": {
            "en": "Exit",
          },
          "exitable": true,
          "secondsToWait": 3,
          "spamDetectionEnabled": true,
          "spamDetectionTolerance": 8,
          "waitingMessage": {},
        },
        "176f34ea-4684-4aad-be4d-572801b44009": {
          "_id": "176f34ea-4684-4aad-be4d-572801b44009",
          "_outcomes": [
            {
              "displayName": "Sent",
              "id": "SENT",
            },
            {
              "displayName": "Not Registered",
              "id": "NOT_REGISTERED",
            },
          ],
          "_rev": "1147539824",
          "_type": {
            "_id": "PushAuthenticationSenderNode",
            "collection": true,
            "name": "Push Sender",
          },
          "contextInfo": false,
          "customPayload": [],
          "mandatory": true,
          "messageTimeout": 120000,
          "pushType": "DEFAULT",
          "userMessage": {
            "en-US": "Allow login of {{user}} at {{issuer}}?",
          },
        },
        "3a2de576-3594-423d-8c91-0e27e41023ff": {
          "_id": "3a2de576-3594-423d-8c91-0e27e41023ff",
          "_outcomes": [
            {
              "displayName": "Outcome",
              "id": "outcome",
            },
          ],
          "_rev": "1872339826",
          "_type": {
            "_id": "PageNode",
            "collection": true,
            "name": "Page Node",
          },
          "nodes": [
            {
              "_id": "d59b3174-1bee-4e43-9df0-4c997dd31f87",
              "displayName": "Username",
              "nodeType": "ValidatedUsernameNode",
            },
          ],
          "pageDescription": {},
          "pageHeader": {},
        },
        "836f6326-9aa0-4c8c-b0f3-5636d0c2dd6f": {
          "_id": "836f6326-9aa0-4c8c-b0f3-5636d0c2dd6f",
          "_outcomes": [
            {
              "displayName": "known",
              "id": "known",
            },
            {
              "displayName": "unknown",
              "id": "unknown",
            },
          ],
          "_rev": "715114770",
          "_type": {
            "_id": "ScriptedDecisionNode",
            "collection": true,
            "name": "Scripted Decision",
          },
          "inputs": [
            "*",
          ],
          "outcomes": [
            "known",
            "unknown",
          ],
          "outputs": [
            "*",
          ],
          "script": "739bdc48-fd24-4c52-b353-88706d75558a",
        },
        "bac6d9a5-b158-4f2f-a51f-8078a69a331f": {
          "_id": "bac6d9a5-b158-4f2f-a51f-8078a69a331f",
          "_outcomes": [
            {
              "displayName": "True",
              "id": "true",
            },
            {
              "displayName": "False",
              "id": "false",
            },
          ],
          "_rev": "734911763",
          "_type": {
            "_id": "InnerTreeEvaluatorNode",
            "collection": true,
            "name": "Inner Tree Evaluator",
          },
          "tree": "PushRegistration",
        },
        "ed65bd47-1122-40af-84e8-61c445aba0de": {
          "_id": "ed65bd47-1122-40af-84e8-61c445aba0de",
          "_outcomes": [
            {
              "displayName": "Success",
              "id": "TRUE",
            },
            {
              "displayName": "Failure",
              "id": "FALSE",
            },
            {
              "displayName": "Expired",
              "id": "EXPIRED",
            },
            {
              "displayName": "Waiting",
              "id": "WAITING",
            },
          ],
          "_rev": "-1376383680",
          "_type": {
            "_id": "PushResultVerifierNode",
            "collection": true,
            "name": "Push Result Verifier Node",
          },
        },
      },
      "saml2Entities": {},
      "scripts": {},
      "socialIdentityProviders": {},
      "themes": [],
      "tree": {
        "_id": "Push",
        "_rev": "823052154",
        "description": "Authenticate users with push notifications",
        "enabled": true,
        "entryNodeId": "836f6326-9aa0-4c8c-b0f3-5636d0c2dd6f",
        "identityResource": "managed/alpha_user",
        "nodes": {
          "11ea4433-1c6d-4da3-96c4-5900b2ea1312": {
            "connections": {
              "DONE": "ed65bd47-1122-40af-84e8-61c445aba0de",
              "EXITED": "e301438c-0bd0-429c-ab0c-66126501069a",
              "SPAM": "e301438c-0bd0-429c-ab0c-66126501069a",
            },
            "displayName": "Polling",
            "nodeType": "PollingWaitNode",
            "x": 835,
            "y": 94,
          },
          "176f34ea-4684-4aad-be4d-572801b44009": {
            "connections": {
              "NOT_REGISTERED": "bac6d9a5-b158-4f2f-a51f-8078a69a331f",
              "SENT": "11ea4433-1c6d-4da3-96c4-5900b2ea1312",
            },
            "displayName": "Send Push",
            "nodeType": "PushAuthenticationSenderNode",
            "x": 619,
            "y": 194,
          },
          "3a2de576-3594-423d-8c91-0e27e41023ff": {
            "connections": {
              "outcome": "176f34ea-4684-4aad-be4d-572801b44009",
            },
            "displayName": "Login Form",
            "nodeType": "PageNode",
            "x": 385,
            "y": 283.5,
          },
          "836f6326-9aa0-4c8c-b0f3-5636d0c2dd6f": {
            "connections": {
              "known": "176f34ea-4684-4aad-be4d-572801b44009",
              "unknown": "3a2de576-3594-423d-8c91-0e27e41023ff",
            },
            "displayName": "Username?",
            "nodeType": "ScriptedDecisionNode",
            "x": 170,
            "y": 186,
          },
          "bac6d9a5-b158-4f2f-a51f-8078a69a331f": {
            "connections": {
              "false": "e301438c-0bd0-429c-ab0c-66126501069a",
              "true": "176f34ea-4684-4aad-be4d-572801b44009",
            },
            "displayName": "Register",
            "nodeType": "InnerTreeEvaluatorNode",
            "x": 836,
            "y": 287,
          },
          "ed65bd47-1122-40af-84e8-61c445aba0de": {
            "connections": {
              "EXPIRED": "e301438c-0bd0-429c-ab0c-66126501069a",
              "FALSE": "e301438c-0bd0-429c-ab0c-66126501069a",
              "TRUE": "70e691a5-1e33-4ac3-a356-e7b6d60d92e0",
              "WAITING": "11ea4433-1c6d-4da3-96c4-5900b2ea1312",
            },
            "displayName": "Verify Push",
            "nodeType": "PushResultVerifierNode",
            "x": 1061,
            "y": 77.5,
          },
        },
        "staticNodes": {
          "70e691a5-1e33-4ac3-a356-e7b6d60d92e0": {
            "x": 1291,
            "y": 102.33333333333334,
          },
          "e301438c-0bd0-429c-ab0c-66126501069a": {
            "x": 1297,
            "y": 337.66666666666663,
          },
          "startNode": {
            "x": 70,
            "y": 204,
          },
        },
        "uiConfig": {
          "categories": "["MFA"]",
        },
      },
    },
    "PushRegistration": {
      "circlesOfTrust": {},
      "emailTemplates": {},
      "innerNodes": {},
      "nodes": {
        "2de2c088-f21c-4db5-aa86-3f74db002181": {
          "_id": "2de2c088-f21c-4db5-aa86-3f74db002181",
          "_outcomes": [
            {
              "displayName": "True",
              "id": "true",
            },
            {
              "displayName": "False",
              "id": "false",
            },
          ],
          "_rev": "-1008987019",
          "_type": {
            "_id": "InnerTreeEvaluatorNode",
            "collection": true,
            "name": "Inner Tree Evaluator",
          },
          "tree": "Login",
        },
        "772bb737-1f08-4e0c-9b18-c3d83c38ebea": {
          "_id": "772bb737-1f08-4e0c-9b18-c3d83c38ebea",
          "_outcomes": [
            {
              "displayName": "Success",
              "id": "successOutcome",
            },
            {
              "displayName": "Failure",
              "id": "failureOutcome",
            },
            {
              "displayName": "Time Out",
              "id": "timeoutOutcome",
            },
          ],
          "_rev": "-998956947",
          "_type": {
            "_id": "PushRegistrationNode",
            "collection": true,
            "name": "Push Registration",
          },
          "accountName": "USERNAME",
          "bgColor": "ffffff",
          "generateRecoveryCodes": true,
          "imgUrl": "https://m.media-amazon.com/images/S/abs-image-upload-na/0/AmazonStores/ATVPDKIKX0DER/5683b91a619f66025b070cb04d803710.w400.h400.png",
          "issuer": "The Expanse",
          "scanQRCodeMessage": {},
          "timeout": 60,
        },
        "8561422d-911f-44a0-b0e7-3483a531042a": {
          "_id": "8561422d-911f-44a0-b0e7-3483a531042a",
          "_outcomes": [
            {
              "displayName": "Outcome",
              "id": "outcome",
            },
          ],
          "_rev": "1561201764",
          "_type": {
            "_id": "RecoveryCodeDisplayNode",
            "collection": true,
            "name": "Recovery Code Display Node",
          },
        },
      },
      "saml2Entities": {},
      "scripts": {},
      "socialIdentityProviders": {},
      "themes": [],
      "tree": {
        "_id": "PushRegistration",
        "_rev": "-1506811489",
        "description": "Register mobile device for push notifications.",
        "enabled": true,
        "entryNodeId": "2de2c088-f21c-4db5-aa86-3f74db002181",
        "identityResource": "managed/alpha_user",
        "nodes": {
          "2de2c088-f21c-4db5-aa86-3f74db002181": {
            "connections": {
              "false": "e301438c-0bd0-429c-ab0c-66126501069a",
              "true": "772bb737-1f08-4e0c-9b18-c3d83c38ebea",
            },
            "displayName": "Login",
            "nodeType": "InnerTreeEvaluatorNode",
            "x": 210,
            "y": 129.5,
          },
          "772bb737-1f08-4e0c-9b18-c3d83c38ebea": {
            "connections": {
              "failureOutcome": "e301438c-0bd0-429c-ab0c-66126501069a",
              "successOutcome": "8561422d-911f-44a0-b0e7-3483a531042a",
              "timeoutOutcome": "e301438c-0bd0-429c-ab0c-66126501069a",
            },
            "displayName": "Register Device",
            "nodeType": "PushRegistrationNode",
            "x": 442,
            "y": 111.14234924316406,
          },
          "8561422d-911f-44a0-b0e7-3483a531042a": {
            "connections": {
              "outcome": "70e691a5-1e33-4ac3-a356-e7b6d60d92e0",
            },
            "displayName": "Display Recovery Codes",
            "nodeType": "RecoveryCodeDisplayNode",
            "x": 674,
            "y": 80,
          },
        },
        "staticNodes": {
          "70e691a5-1e33-4ac3-a356-e7b6d60d92e0": {
            "x": 927,
            "y": 71.5,
          },
          "e301438c-0bd0-429c-ab0c-66126501069a": {
            "x": 710,
            "y": 240,
          },
          "startNode": {
            "x": 70,
            "y": 147.5,
          },
        },
        "uiConfig": {
          "categories": "["MFA"]",
        },
      },
    },
    "ReadyEndpoint": {
      "circlesOfTrust": {},
      "emailTemplates": {},
      "innerNodes": {},
      "nodes": {
        "813f517b-41b5-405f-b5d7-8eaeed39b0df": {
          "_id": "813f517b-41b5-405f-b5d7-8eaeed39b0df",
          "_outcomes": [
            {
              "displayName": "true",
              "id": "true",
            },
          ],
          "_rev": "1468941294",
          "_type": {
            "_id": "ScriptedDecisionNode",
            "collection": true,
            "name": "Scripted Decision",
          },
          "inputs": [
            "*",
          ],
          "outcomes": [
            "true",
          ],
          "outputs": [
            "*",
          ],
          "script": "1acc5535-13e2-4ed8-83e1-f4fefd86d243",
        },
      },
      "saml2Entities": {},
      "scripts": {},
      "socialIdentityProviders": {},
      "themes": [],
      "tree": {
        "_id": "ReadyEndpoint",
        "_rev": "-1433002058",
        "description": "Readiness probe.",
        "enabled": true,
        "entryNodeId": "813f517b-41b5-405f-b5d7-8eaeed39b0df",
        "identityResource": "managed/alpha_user",
        "nodes": {
          "813f517b-41b5-405f-b5d7-8eaeed39b0df": {
            "connections": {
              "true": "e301438c-0bd0-429c-ab0c-66126501069a",
            },
            "displayName": "Ready Response",
            "nodeType": "ScriptedDecisionNode",
            "x": 210,
            "y": 87.5,
          },
        },
        "staticNodes": {
          "70e691a5-1e33-4ac3-a356-e7b6d60d92e0": {
            "x": 70,
            "y": 230,
          },
          "e301438c-0bd0-429c-ab0c-66126501069a": {
            "x": 440,
            "y": 80,
          },
          "startNode": {
            "x": 70,
            "y": 80,
          },
        },
        "uiConfig": {
          "categories": "["Prototype","Helper","Proof Of Concept"]",
        },
      },
    },
    "Registration": {
      "circlesOfTrust": {},
      "emailTemplates": {},
      "innerNodes": {
        "5bcf3680-bfc5-4b6c-8fd7-d8ba4638f1fc": {
          "_id": "5bcf3680-bfc5-4b6c-8fd7-d8ba4638f1fc",
          "_outcomes": [
            {
              "displayName": "Outcome",
              "id": "outcome",
            },
          ],
          "_rev": "857346034",
          "_type": {
            "_id": "AttributeCollectorNode",
            "collection": true,
            "name": "Attribute Collector",
          },
          "attributesToCollect": [
            "givenName",
            "sn",
            "mail",
            "telephoneNumber",
          ],
          "identityAttribute": "userName",
          "required": true,
          "validateInputs": false,
        },
        "8678013b-1189-4df1-876b-0f96ec56fc66": {
          "_id": "8678013b-1189-4df1-876b-0f96ec56fc66",
          "_outcomes": [
            {
              "displayName": "Outcome",
              "id": "outcome",
            },
          ],
          "_rev": "-335223007",
          "_type": {
            "_id": "ValidatedPasswordNode",
            "collection": true,
            "name": "Platform Password",
          },
          "passwordAttribute": "password",
          "validateInput": true,
        },
        "98a57f98-5c0a-4a12-b9cc-8c6f493a2edf": {
          "_id": "98a57f98-5c0a-4a12-b9cc-8c6f493a2edf",
          "_outcomes": [
            {
              "displayName": "Outcome",
              "id": "outcome",
            },
          ],
          "_rev": "603641555",
          "_type": {
            "_id": "AttributeCollectorNode",
            "collection": true,
            "name": "Attribute Collector",
          },
          "attributesToCollect": [
            "givenName",
            "sn",
            "mail",
            "telephoneNumber",
          ],
          "identityAttribute": "userName",
          "required": true,
          "validateInputs": true,
        },
        "b8322a87-6dc6-441e-a37b-01eef16b7cfd": {
          "_id": "b8322a87-6dc6-441e-a37b-01eef16b7cfd",
          "_outcomes": [
            {
              "displayName": "Social Authentication",
              "id": "socialAuthentication",
            },
            {
              "displayName": "Local Authentication",
              "id": "localAuthentication",
            },
          ],
          "_rev": "-1249204790",
          "_type": {
            "_id": "SelectIdPNode",
            "collection": true,
            "name": "Select Identity Provider",
          },
          "filteredProviders": [],
          "identityAttribute": "userName",
          "includeLocalAuthentication": true,
          "offerOnlyExisting": false,
          "passwordAttribute": "password",
        },
        "dd0d7088-6e1b-472d-bcae-a75e3c6d9264": {
          "_id": "dd0d7088-6e1b-472d-bcae-a75e3c6d9264",
          "_outcomes": [
            {
              "displayName": "True",
              "id": "true",
            },
            {
              "displayName": "False",
              "id": "false",
            },
          ],
          "_rev": "-2002006872",
          "_type": {
            "_id": "MessageNode",
            "collection": true,
            "name": "Message Node",
          },
          "message": {
            "en": "Please accept by clicking 'I Agree'",
          },
          "messageNo": {
            "en": "Abort",
          },
          "messageYes": {
            "en": "I Agree",
          },
        },
      },
      "nodes": {
        "0e48370b-a837-421d-9f75-269a02f55a25": {
          "_id": "0e48370b-a837-421d-9f75-269a02f55a25",
          "_outcomes": [
            {
              "displayName": "true",
              "id": "true",
            },
          ],
          "_rev": "132173447",
          "_type": {
            "_id": "ScriptedDecisionNode",
            "collection": true,
            "name": "Scripted Decision",
          },
          "inputs": [
            "*",
          ],
          "outcomes": [
            "true",
          ],
          "outputs": [
            "*",
          ],
          "script": "4855aac0-1efd-49c0-a153-3b9aadc911a6",
        },
        "13438b92-ea68-4a5e-9303-9b331e46ee94": {
          "_id": "13438b92-ea68-4a5e-9303-9b331e46ee94",
          "_outcomes": [
            {
              "displayName": "Outcome",
              "id": "outcome",
            },
          ],
          "_rev": "1069467351",
          "_type": {
            "_id": "IncrementLoginCountNode",
            "collection": true,
            "name": "Increment Login Count",
          },
          "identityAttribute": "userName",
        },
        "1387f904-6f2b-4a0c-be73-fd9205a8da59": {
          "_id": "1387f904-6f2b-4a0c-be73-fd9205a8da59",
          "_outcomes": [
            {
              "displayName": "true",
              "id": "true",
            },
          ],
          "_rev": "-809615838",
          "_type": {
            "_id": "ScriptedDecisionNode",
            "collection": true,
            "name": "Scripted Decision",
          },
          "inputs": [
            "*",
          ],
          "outcomes": [
            "true",
          ],
          "outputs": [
            "*",
          ],
          "script": "4855aac0-1efd-49c0-a153-3b9aadc911a6",
        },
        "1fbf8ecf-b7b8-41f2-8db5-04950d688d7e": {
          "_id": "1fbf8ecf-b7b8-41f2-8db5-04950d688d7e",
          "_outcomes": [
            {
              "displayName": "True",
              "id": "true",
            },
            {
              "displayName": "False",
              "id": "false",
            },
          ],
          "_rev": "62959154",
          "_type": {
            "_id": "IdentifyExistingUserNode",
            "collection": true,
            "name": "Identify Existing User",
          },
          "identifier": "userName",
          "identityAttribute": "userName",
        },
        "31990adc-5b18-4726-b99a-c4eec611e089": {
          "_id": "31990adc-5b18-4726-b99a-c4eec611e089",
          "_outcomes": [
            {
              "displayName": "True",
              "id": "true",
            },
            {
              "displayName": "False",
              "id": "false",
            },
          ],
          "_rev": "-293606864",
          "_type": {
            "_id": "InnerTreeEvaluatorNode",
            "collection": true,
            "name": "Inner Tree Evaluator",
          },
          "tree": "FraudRisk",
        },
        "3ca9bf67-f228-40c4-9456-b7522e8ccee8": {
          "_id": "3ca9bf67-f228-40c4-9456-b7522e8ccee8",
          "_outcomes": [
            {
              "displayName": "true",
              "id": "true",
            },
          ],
          "_rev": "1158210492",
          "_type": {
            "_id": "ScriptedDecisionNode",
            "collection": true,
            "name": "Scripted Decision",
          },
          "inputs": [
            "*",
          ],
          "outcomes": [
            "true",
          ],
          "outputs": [
            "*",
          ],
          "script": "452d73ee-c6f3-4f4e-9dae-e75bb3886cbd",
        },
        "40b310ac-6f81-4d14-96e7-d89e55bd5ed8": {
          "_id": "40b310ac-6f81-4d14-96e7-d89e55bd5ed8",
          "_outcomes": [
            {
              "displayName": "Account exists",
              "id": "ACCOUNT_EXISTS",
            },
            {
              "displayName": "No account exists",
              "id": "NO_ACCOUNT",
            },
          ],
          "_rev": "-77705983",
          "_type": {
            "_id": "SocialProviderHandlerNode",
            "collection": true,
            "name": "Social Provider Handler Node",
          },
          "clientType": "BROWSER",
          "script": "58c824ae-84ed-4724-82cd-db128fc3f6c",
          "usernameAttribute": "userName",
        },
        "4485f7e1-5a8f-4ee1-9001-181a256d7ee2": {
          "_id": "4485f7e1-5a8f-4ee1-9001-181a256d7ee2",
          "_outcomes": [
            {
              "displayName": "Outcome",
              "id": "outcome",
            },
          ],
          "_rev": "2014784189",
          "_type": {
            "_id": "PageNode",
            "collection": true,
            "name": "Page Node",
          },
          "nodes": [
            {
              "_id": "98a57f98-5c0a-4a12-b9cc-8c6f493a2edf",
              "displayName": "Attributes",
              "nodeType": "AttributeCollectorNode",
            },
          ],
          "pageDescription": {},
          "pageHeader": {},
        },
        "493b8b2b-1a6b-4002-a511-d16fc8634825": {
          "_id": "493b8b2b-1a6b-4002-a511-d16fc8634825",
          "_outcomes": [
            {
              "displayName": "True",
              "id": "true",
            },
            {
              "displayName": "False",
              "id": "false",
            },
          ],
          "_rev": "113144206",
          "_type": {
            "_id": "InnerTreeEvaluatorNode",
            "collection": true,
            "name": "Inner Tree Evaluator",
          },
          "tree": "EmailValidation",
        },
        "4c4cef3f-e745-4c13-a487-e47ab7489a50": {
          "_id": "4c4cef3f-e745-4c13-a487-e47ab7489a50",
          "_outcomes": [
            {
              "displayName": "true",
              "id": "true",
            },
          ],
          "_rev": "418071023",
          "_type": {
            "_id": "ScriptedDecisionNode",
            "collection": true,
            "name": "Scripted Decision",
          },
          "inputs": [
            "*",
          ],
          "outcomes": [
            "true",
          ],
          "outputs": [
            "*",
          ],
          "script": "a064f7b7-29c5-480b-ac09-d3d122829278",
        },
        "526e754e-8df2-4add-91b7-dbcc1193e851": {
          "_id": "526e754e-8df2-4add-91b7-dbcc1193e851",
          "_outcomes": [
            {
              "displayName": "True",
              "id": "true",
            },
            {
              "displayName": "False",
              "id": "false",
            },
          ],
          "_rev": "-118766499",
          "_type": {
            "_id": "MessageNode",
            "collection": true,
            "name": "Message Node",
          },
          "message": {
            "en": "An account with that username already exists. Would you like to login?",
          },
          "messageNo": {
            "en": "Abort",
          },
          "messageYes": {
            "en": "Login",
          },
        },
        "5412fe83-c4b2-4332-82f6-9b6f7c444277": {
          "_id": "5412fe83-c4b2-4332-82f6-9b6f7c444277",
          "_outcomes": [
            {
              "displayName": "True",
              "id": "true",
            },
            {
              "displayName": "False",
              "id": "false",
            },
          ],
          "_rev": "1127745102",
          "_type": {
            "_id": "InnerTreeEvaluatorNode",
            "collection": true,
            "name": "Inner Tree Evaluator",
          },
          "tree": "DevicePrint",
        },
        "65809f1c-abc9-4be8-b804-c2462d80ed31": {
          "_id": "65809f1c-abc9-4be8-b804-c2462d80ed31",
          "_outcomes": [
            {
              "displayName": "True",
              "id": "true",
            },
            {
              "displayName": "False",
              "id": "false",
            },
          ],
          "_rev": "-124792684",
          "_type": {
            "_id": "IdentifyExistingUserNode",
            "collection": true,
            "name": "Identify Existing User",
          },
          "identifier": "userName",
          "identityAttribute": "userName",
        },
        "6bf77dc0-15ea-40dc-9d22-44f7b865e401": {
          "_id": "6bf77dc0-15ea-40dc-9d22-44f7b865e401",
          "_outcomes": [
            {
              "displayName": "true",
              "id": "true",
            },
          ],
          "_rev": "1251531885",
          "_type": {
            "_id": "ScriptedDecisionNode",
            "collection": true,
            "name": "Scripted Decision",
          },
          "inputs": [
            "*",
          ],
          "outcomes": [
            "true",
          ],
          "outputs": [
            "*",
          ],
          "script": "a064f7b7-29c5-480b-ac09-d3d122829278",
        },
        "831f93ba-5b22-4e51-8971-a04c5055035a": {
          "_id": "831f93ba-5b22-4e51-8971-a04c5055035a",
          "_outcomes": [
            {
              "displayName": "Social Authentication",
              "id": "socialAuthentication",
            },
            {
              "displayName": "Local Authentication",
              "id": "localAuthentication",
            },
          ],
          "_rev": "-1075027186",
          "_type": {
            "_id": "PageNode",
            "collection": true,
            "name": "Page Node",
          },
          "nodes": [
            {
              "_id": "5bcf3680-bfc5-4b6c-8fd7-d8ba4638f1fc",
              "displayName": "Attributes",
              "nodeType": "AttributeCollectorNode",
            },
            {
              "_id": "8678013b-1189-4df1-876b-0f96ec56fc66",
              "displayName": "Password",
              "nodeType": "ValidatedPasswordNode",
            },
            {
              "_id": "b8322a87-6dc6-441e-a37b-01eef16b7cfd",
              "displayName": "Select IDP",
              "nodeType": "SelectIdPNode",
            },
          ],
          "pageDescription": {
            "en": "Signing up is fast and easy.<br>Already have an account? <a href='#/service/Login'>Sign In</a>",
          },
          "pageHeader": {
            "en": "Sign Up",
          },
        },
        "85e2196e-78b9-4f94-a816-bb1e14f3e35b": {
          "_id": "85e2196e-78b9-4f94-a816-bb1e14f3e35b",
          "_outcomes": [
            {
              "displayName": "True",
              "id": "true",
            },
            {
              "displayName": "False",
              "id": "false",
            },
          ],
          "_rev": "285640468",
          "_type": {
            "_id": "PageNode",
            "collection": true,
            "name": "Page Node",
          },
          "nodes": [
            {
              "_id": "dd0d7088-6e1b-472d-bcae-a75e3c6d9264",
              "displayName": "User Choice",
              "nodeType": "MessageNode",
            },
          ],
          "pageDescription": {
            "en": "<h4>Read our <a href="http://www.kemper.com/wps/portal/Kemper/Home/Legal/lp_termsofuse" target="_blank" >Terms of use</a>.</h4>",
          },
          "pageHeader": {},
        },
        "a029fdc2-64bb-467e-8fe8-5209afa4ee7e": {
          "_id": "a029fdc2-64bb-467e-8fe8-5209afa4ee7e",
          "_outcomes": [
            {
              "displayName": "True",
              "id": "true",
            },
            {
              "displayName": "False",
              "id": "false",
            },
          ],
          "_rev": "1533305703",
          "_type": {
            "_id": "MessageNode",
            "collection": true,
            "name": "Message Node",
          },
          "message": {
            "en": "An account with that username already exists. Would you like to login?",
          },
          "messageNo": {
            "en": "Abort",
          },
          "messageYes": {
            "en": "Login",
          },
        },
        "a292d18d-aae9-44c1-b500-1d816dc63947": {
          "_id": "a292d18d-aae9-44c1-b500-1d816dc63947",
          "_outcomes": [
            {
              "displayName": "True",
              "id": "true",
            },
            {
              "displayName": "False",
              "id": "false",
            },
          ],
          "_rev": "-327638313",
          "_type": {
            "_id": "InnerTreeEvaluatorNode",
            "collection": true,
            "name": "Inner Tree Evaluator",
          },
          "tree": "IdentityProofing",
        },
        "a42d03db-4b9c-4084-802b-eabb6a8b757d": {
          "_id": "a42d03db-4b9c-4084-802b-eabb6a8b757d",
          "_outcomes": [
            {
              "displayName": "True",
              "id": "true",
            },
            {
              "displayName": "False",
              "id": "false",
            },
          ],
          "_rev": "-1414832160",
          "_type": {
            "_id": "MessageNode",
            "collection": true,
            "name": "Message Node",
          },
          "message": {
            "en": "Skip Identity Proofing?",
          },
          "messageNo": {
            "en": "No, do it!",
          },
          "messageYes": {
            "en": "Skip",
          },
        },
        "afa8d4ce-b3f8-41d6-b10a-dec5bd244058": {
          "_id": "afa8d4ce-b3f8-41d6-b10a-dec5bd244058",
          "_outcomes": [
            {
              "displayName": "True",
              "id": "true",
            },
            {
              "displayName": "False",
              "id": "false",
            },
          ],
          "_rev": "-1648254916",
          "_type": {
            "_id": "InnerTreeEvaluatorNode",
            "collection": true,
            "name": "Inner Tree Evaluator",
          },
          "tree": "Login",
        },
        "b3337ac2-8e99-4a06-bd92-bda7f8edbaa4": {
          "_id": "b3337ac2-8e99-4a06-bd92-bda7f8edbaa4",
          "_outcomes": [
            {
              "displayName": "True",
              "id": "true",
            },
            {
              "displayName": "False",
              "id": "false",
            },
          ],
          "_rev": "-922009166",
          "_type": {
            "_id": "InnerTreeEvaluatorNode",
            "collection": true,
            "name": "Inner Tree Evaluator",
          },
          "tree": "MFAAutoSelect",
        },
        "b4ad3617-11c2-4c59-ac45-e555ecda46a0": {
          "_id": "b4ad3617-11c2-4c59-ac45-e555ecda46a0",
          "_outcomes": [
            {
              "displayName": "True",
              "id": "true",
            },
            {
              "displayName": "False",
              "id": "false",
            },
          ],
          "_rev": "-164221595",
          "_type": {
            "_id": "InnerTreeEvaluatorNode",
            "collection": true,
            "name": "Inner Tree Evaluator",
          },
          "tree": "DevicePrint",
        },
        "b5739e42-5203-4e8b-9600-6efe99098966": {
          "_id": "b5739e42-5203-4e8b-9600-6efe99098966",
          "_outcomes": [
            {
              "displayName": "Email Sent",
              "id": "EMAIL_SENT",
            },
            {
              "displayName": "Email Not Sent",
              "id": "EMAIL_NOT_SENT",
            },
          ],
          "_rev": "-1508053349",
          "_type": {
            "_id": "EmailTemplateNode",
            "collection": true,
            "name": "Email Template Node",
          },
          "emailAttribute": "mail",
          "emailTemplateName": "Welcome",
          "identityAttribute": "userName",
        },
        "bf2b29b0-c46d-42ed-8fc3-1a94e3919cfb": {
          "_id": "bf2b29b0-c46d-42ed-8fc3-1a94e3919cfb",
          "_outcomes": [
            {
              "displayName": "Outcome",
              "id": "outcome",
            },
          ],
          "_rev": "-2052910249",
          "_type": {
            "_id": "IncrementLoginCountNode",
            "collection": true,
            "name": "Increment Login Count",
          },
          "identityAttribute": "userName",
        },
        "c7de073a-b38b-4851-95c0-6f538eea612a": {
          "_id": "c7de073a-b38b-4851-95c0-6f538eea612a",
          "_outcomes": [
            {
              "displayName": "true",
              "id": "true",
            },
          ],
          "_rev": "-2133477789",
          "_type": {
            "_id": "ScriptedDecisionNode",
            "collection": true,
            "name": "Scripted Decision",
          },
          "inputs": [
            "*",
          ],
          "outcomes": [
            "true",
          ],
          "outputs": [
            "*",
          ],
          "script": "3cb43516-ae69-433a-8787-501d45db14e9",
        },
        "dd5617e2-ee42-4266-9e3f-23f6672127f5": {
          "_id": "dd5617e2-ee42-4266-9e3f-23f6672127f5",
          "_outcomes": [
            {
              "displayName": "true",
              "id": "true",
            },
          ],
          "_rev": "-1847748277",
          "_type": {
            "_id": "ScriptedDecisionNode",
            "collection": true,
            "name": "Scripted Decision",
          },
          "inputs": [
            "*",
          ],
          "outcomes": [
            "true",
          ],
          "outputs": [
            "*",
          ],
          "script": "4855aac0-1efd-49c0-a153-3b9aadc911a6",
        },
        "df14d9b2-b421-4933-afd6-66a8ae5b4a5d": {
          "_id": "df14d9b2-b421-4933-afd6-66a8ae5b4a5d",
          "_outcomes": [
            {
              "displayName": "True",
              "id": "true",
            },
            {
              "displayName": "False",
              "id": "false",
            },
          ],
          "_rev": "1188177345",
          "_type": {
            "_id": "IdentifyExistingUserNode",
            "collection": true,
            "name": "Identify Existing User",
          },
          "identifier": "userName",
          "identityAttribute": "userName",
        },
        "f833dcc2-3a65-4ed6-97fb-fbb889f19c83": {
          "_id": "f833dcc2-3a65-4ed6-97fb-fbb889f19c83",
          "_outcomes": [
            {
              "displayName": "Created",
              "id": "CREATED",
            },
            {
              "displayName": "Failed",
              "id": "FAILURE",
            },
          ],
          "_rev": "1109250971",
          "_type": {
            "_id": "CreateObjectNode",
            "collection": true,
            "name": "Create Object",
          },
          "identityResource": "managed/alpha_user",
        },
        "f8873e13-f17e-445a-bfa7-aebdeafc532e": {
          "_id": "f8873e13-f17e-445a-bfa7-aebdeafc532e",
          "_outcomes": [
            {
              "displayName": "True",
              "id": "true",
            },
            {
              "displayName": "False",
              "id": "false",
            },
          ],
          "_rev": "1062089110",
          "_type": {
            "_id": "InnerTreeEvaluatorNode",
            "collection": true,
            "name": "Inner Tree Evaluator",
          },
          "tree": "PasswordBreachDetection",
        },
        "f9f66dc2-d54d-4c98-8946-1a0bcce68c8c": {
          "_id": "f9f66dc2-d54d-4c98-8946-1a0bcce68c8c",
          "_outcomes": [
            {
              "displayName": "true",
              "id": "true",
            },
          ],
          "_rev": "-1719293105",
          "_type": {
            "_id": "ScriptedDecisionNode",
            "collection": true,
            "name": "Scripted Decision",
          },
          "inputs": [
            "*",
          ],
          "outcomes": [
            "true",
          ],
          "outputs": [
            "*",
          ],
          "script": "3cb43516-ae69-433a-8787-501d45db14e9",
        },
      },
      "saml2Entities": {},
      "scripts": {},
      "socialIdentityProviders": {},
      "themes": [],
      "tree": {
        "_id": "Registration",
        "_rev": "-1949232019",
        "description": "Platform Registration Tree",
        "enabled": true,
        "entryNodeId": "31990adc-5b18-4726-b99a-c4eec611e089",
        "identityResource": "managed/alpha_user",
        "nodes": {
          "0e48370b-a837-421d-9f75-269a02f55a25": {
            "connections": {
              "true": "6bf77dc0-15ea-40dc-9d22-44f7b865e401",
            },
            "displayName": "Populate Username",
            "nodeType": "ScriptedDecisionNode",
            "x": 785,
            "y": 281.015625,
          },
          "13438b92-ea68-4a5e-9303-9b331e46ee94": {
            "connections": {
              "outcome": "5412fe83-c4b2-4332-82f6-9b6f7c444277",
            },
            "displayName": "Count Login",
            "nodeType": "IncrementLoginCountNode",
            "x": 2036,
            "y": 110.33333333333331,
          },
          "1387f904-6f2b-4a0c-be73-fd9205a8da59": {
            "connections": {
              "true": "4c4cef3f-e745-4c13-a487-e47ab7489a50",
            },
            "displayName": "Populate Username",
            "nodeType": "ScriptedDecisionNode",
            "x": 429,
            "y": 456.015625,
          },
          "1fbf8ecf-b7b8-41f2-8db5-04950d688d7e": {
            "connections": {
              "false": "f8873e13-f17e-445a-bfa7-aebdeafc532e",
              "true": "526e754e-8df2-4add-91b7-dbcc1193e851",
            },
            "displayName": "Check by username",
            "nodeType": "IdentifyExistingUserNode",
            "x": 554,
            "y": 621.7666625976562,
          },
          "31990adc-5b18-4726-b99a-c4eec611e089": {
            "connections": {
              "false": "e301438c-0bd0-429c-ab0c-66126501069a",
              "true": "831f93ba-5b22-4e51-8971-a04c5055035a",
            },
            "displayName": "Benign Visitor?",
            "nodeType": "InnerTreeEvaluatorNode",
            "x": 170,
            "y": 243.76666259765625,
          },
          "3ca9bf67-f228-40c4-9456-b7522e8ccee8": {
            "connections": {
              "true": "df14d9b2-b421-4933-afd6-66a8ae5b4a5d",
            },
            "displayName": "Copy to transient",
            "nodeType": "ScriptedDecisionNode",
            "x": 1008,
            "y": 279.015625,
          },
          "40b310ac-6f81-4d14-96e7-d89e55bd5ed8": {
            "connections": {
              "ACCOUNT_EXISTS": "65809f1c-abc9-4be8-b804-c2462d80ed31",
              "NO_ACCOUNT": "65809f1c-abc9-4be8-b804-c2462d80ed31",
            },
            "displayName": "Social Login",
            "nodeType": "SocialProviderHandlerNode",
            "x": 570,
            "y": 19,
          },
          "4485f7e1-5a8f-4ee1-9001-181a256d7ee2": {
            "connections": {
              "outcome": "0e48370b-a837-421d-9f75-269a02f55a25",
            },
            "displayName": "Social Confirmation Page",
            "nodeType": "PageNode",
            "x": 780,
            "y": 149,
          },
          "493b8b2b-1a6b-4002-a511-d16fc8634825": {
            "connections": {
              "false": "e301438c-0bd0-429c-ab0c-66126501069a",
              "true": "dd5617e2-ee42-4266-9e3f-23f6672127f5",
            },
            "displayName": "Validate Email",
            "nodeType": "InnerTreeEvaluatorNode",
            "x": 1425,
            "y": 380.76666259765625,
          },
          "4c4cef3f-e745-4c13-a487-e47ab7489a50": {
            "connections": {
              "true": "c7de073a-b38b-4851-95c0-6f538eea612a",
            },
            "displayName": "Sanitize Data",
            "nodeType": "ScriptedDecisionNode",
            "x": 493,
            "y": 539.7666625976562,
          },
          "526e754e-8df2-4add-91b7-dbcc1193e851": {
            "connections": {
              "false": "831f93ba-5b22-4e51-8971-a04c5055035a",
              "true": "afa8d4ce-b3f8-41d6-b10a-dec5bd244058",
            },
            "displayName": "Already Exists Dialog",
            "nodeType": "MessageNode",
            "x": 776,
            "y": 544.7666625976562,
          },
          "5412fe83-c4b2-4332-82f6-9b6f7c444277": {
            "connections": {
              "false": "b3337ac2-8e99-4a06-bd92-bda7f8edbaa4",
              "true": "70e691a5-1e33-4ac3-a356-e7b6d60d92e0",
            },
            "displayName": "Device Print",
            "nodeType": "InnerTreeEvaluatorNode",
            "x": 2479,
            "y": 83.76666259765625,
          },
          "65809f1c-abc9-4be8-b804-c2462d80ed31": {
            "connections": {
              "false": "4485f7e1-5a8f-4ee1-9001-181a256d7ee2",
              "true": "a029fdc2-64bb-467e-8fe8-5209afa4ee7e",
            },
            "displayName": "Check by username",
            "nodeType": "IdentifyExistingUserNode",
            "x": 780,
            "y": 22.015625,
          },
          "6bf77dc0-15ea-40dc-9d22-44f7b865e401": {
            "connections": {
              "true": "3ca9bf67-f228-40c4-9456-b7522e8ccee8",
            },
            "displayName": "Sanitize Data",
            "nodeType": "ScriptedDecisionNode",
            "x": 1013,
            "y": 192.76666259765625,
          },
          "831f93ba-5b22-4e51-8971-a04c5055035a": {
            "connections": {
              "localAuthentication": "1387f904-6f2b-4a0c-be73-fd9205a8da59",
              "socialAuthentication": "40b310ac-6f81-4d14-96e7-d89e55bd5ed8",
            },
            "displayName": "Registration Page",
            "nodeType": "PageNode",
            "x": 356,
            "y": 164,
          },
          "85e2196e-78b9-4f94-a816-bb1e14f3e35b": {
            "connections": {
              "false": "e301438c-0bd0-429c-ab0c-66126501069a",
              "true": "f833dcc2-3a65-4ed6-97fb-fbb889f19c83",
            },
            "displayName": "Terms Of Use",
            "nodeType": "PageNode",
            "x": 1636,
            "y": 362.76666259765625,
          },
          "a029fdc2-64bb-467e-8fe8-5209afa4ee7e": {
            "connections": {
              "false": "831f93ba-5b22-4e51-8971-a04c5055035a",
              "true": "13438b92-ea68-4a5e-9303-9b331e46ee94",
            },
            "displayName": "Already Exists Dialog",
            "nodeType": "MessageNode",
            "x": 1439,
            "y": 27.76666259765625,
          },
          "a292d18d-aae9-44c1-b500-1d816dc63947": {
            "connections": {
              "false": "e301438c-0bd0-429c-ab0c-66126501069a",
              "true": "70e691a5-1e33-4ac3-a356-e7b6d60d92e0",
            },
            "displayName": "Identity Proofing",
            "nodeType": "InnerTreeEvaluatorNode",
            "x": 2678,
            "y": 277.76666259765625,
          },
          "a42d03db-4b9c-4084-802b-eabb6a8b757d": {
            "connections": {
              "false": "a292d18d-aae9-44c1-b500-1d816dc63947",
              "true": "70e691a5-1e33-4ac3-a356-e7b6d60d92e0",
            },
            "displayName": "Skip?",
            "nodeType": "MessageNode",
            "x": 2578,
            "y": 423.76666259765625,
          },
          "afa8d4ce-b3f8-41d6-b10a-dec5bd244058": {
            "connections": {
              "false": "e301438c-0bd0-429c-ab0c-66126501069a",
              "true": "70e691a5-1e33-4ac3-a356-e7b6d60d92e0",
            },
            "displayName": "Login",
            "nodeType": "InnerTreeEvaluatorNode",
            "x": 1000,
            "y": 546.7666625976562,
          },
          "b3337ac2-8e99-4a06-bd92-bda7f8edbaa4": {
            "connections": {
              "false": "e301438c-0bd0-429c-ab0c-66126501069a",
              "true": "70e691a5-1e33-4ac3-a356-e7b6d60d92e0",
            },
            "displayName": "MFA",
            "nodeType": "InnerTreeEvaluatorNode",
            "x": 2679,
            "y": 82.76666259765625,
          },
          "b4ad3617-11c2-4c59-ac45-e555ecda46a0": {
            "connections": {
              "false": "a42d03db-4b9c-4084-802b-eabb6a8b757d",
              "true": "a42d03db-4b9c-4084-802b-eabb6a8b757d",
            },
            "displayName": "Device Print",
            "nodeType": "InnerTreeEvaluatorNode",
            "x": 2475,
            "y": 277.76666259765625,
          },
          "b5739e42-5203-4e8b-9600-6efe99098966": {
            "connections": {
              "EMAIL_NOT_SENT": "b4ad3617-11c2-4c59-ac45-e555ecda46a0",
              "EMAIL_SENT": "b4ad3617-11c2-4c59-ac45-e555ecda46a0",
            },
            "displayName": "Welcome Email",
            "nodeType": "EmailTemplateNode",
            "x": 2250,
            "y": 278.76666259765625,
          },
          "bf2b29b0-c46d-42ed-8fc3-1a94e3919cfb": {
            "connections": {
              "outcome": "b5739e42-5203-4e8b-9600-6efe99098966",
            },
            "displayName": "Count Login",
            "nodeType": "IncrementLoginCountNode",
            "x": 2042,
            "y": 304.76666259765625,
          },
          "c7de073a-b38b-4851-95c0-6f538eea612a": {
            "connections": {
              "true": "1fbf8ecf-b7b8-41f2-8db5-04950d688d7e",
            },
            "displayName": "Scripted Decision",
            "nodeType": "ScriptedDecisionNode",
            "x": 315,
            "y": 620.015625,
          },
          "dd5617e2-ee42-4266-9e3f-23f6672127f5": {
            "connections": {
              "true": "85e2196e-78b9-4f94-a816-bb1e14f3e35b",
            },
            "displayName": "Re-Populate Username",
            "nodeType": "ScriptedDecisionNode",
            "x": 1572,
            "y": 254.015625,
          },
          "df14d9b2-b421-4933-afd6-66a8ae5b4a5d": {
            "connections": {
              "false": "493b8b2b-1a6b-4002-a511-d16fc8634825",
              "true": "a029fdc2-64bb-467e-8fe8-5209afa4ee7e",
            },
            "displayName": "Check by username",
            "nodeType": "IdentifyExistingUserNode",
            "x": 1230,
            "y": 183.015625,
          },
          "f833dcc2-3a65-4ed6-97fb-fbb889f19c83": {
            "connections": {
              "CREATED": "bf2b29b0-c46d-42ed-8fc3-1a94e3919cfb",
              "FAILURE": "e301438c-0bd0-429c-ab0c-66126501069a",
            },
            "displayName": "Create Account",
            "nodeType": "CreateObjectNode",
            "x": 1863,
            "y": 392,
          },
          "f8873e13-f17e-445a-bfa7-aebdeafc532e": {
            "connections": {
              "false": "e301438c-0bd0-429c-ab0c-66126501069a",
              "true": "493b8b2b-1a6b-4002-a511-d16fc8634825",
            },
            "displayName": "Validate Password",
            "nodeType": "InnerTreeEvaluatorNode",
            "x": 1189,
            "y": 414.015625,
          },
          "f9f66dc2-d54d-4c98-8946-1a0bcce68c8c": {
            "connections": {
              "true": "65809f1c-abc9-4be8-b804-c2462d80ed31",
            },
            "displayName": "Display States",
            "nodeType": "ScriptedDecisionNode",
            "x": 575,
            "y": 151.015625,
          },
        },
        "staticNodes": {
          "70e691a5-1e33-4ac3-a356-e7b6d60d92e0": {
            "x": 2888,
            "y": 108.5,
          },
          "e301438c-0bd0-429c-ab0c-66126501069a": {
            "x": 2908,
            "y": 661.6666666666666,
          },
          "startNode": {
            "x": 70,
            "y": 269.5,
          },
        },
        "uiConfig": {
          "categories": "["Registration"]",
        },
      },
    },
    "Registration-scp": {
      "circlesOfTrust": {},
      "emailTemplates": {},
      "innerNodes": {
        "16eb946c-791a-42ef-bccf-1fad07d1b137": {
          "_id": "16eb946c-791a-42ef-bccf-1fad07d1b137",
          "_outcomes": [
            {
              "displayName": "Outcome",
              "id": "outcome",
            },
          ],
          "_rev": "897496693",
          "_type": {
            "_id": "AttributeCollectorNode",
            "collection": true,
            "name": "Attribute Collector",
          },
          "attributesToCollect": [
            "givenName",
            "sn",
            "mail",
            "telephoneNumber",
          ],
          "identityAttribute": "userName",
          "required": true,
          "validateInputs": true,
        },
        "418eb3ed-867e-4e45-b953-62b5f066d9a7": {
          "_id": "418eb3ed-867e-4e45-b953-62b5f066d9a7",
          "_outcomes": [
            {
              "displayName": "True",
              "id": "true",
            },
            {
              "displayName": "False",
              "id": "false",
            },
          ],
          "_rev": "-65760197",
          "_type": {
            "_id": "MessageNode",
            "collection": true,
            "name": "Message Node",
          },
          "message": {
            "en": "Please accept by clicking 'I Agree'",
          },
          "messageNo": {
            "en": "Abort",
          },
          "messageYes": {
            "en": "I Agree",
          },
        },
        "710456cd-3df9-4fe7-8d3a-b12537405975": {
          "_id": "710456cd-3df9-4fe7-8d3a-b12537405975",
          "_outcomes": [
            {
              "displayName": "Outcome",
              "id": "outcome",
            },
          ],
          "_rev": "173609959",
          "_type": {
            "_id": "AttributeCollectorNode",
            "collection": true,
            "name": "Attribute Collector",
          },
          "attributesToCollect": [
            "givenName",
            "sn",
            "mail",
            "telephoneNumber",
          ],
          "identityAttribute": "userName",
          "required": true,
          "validateInputs": false,
        },
        "8dfb8f35-0fd1-4076-9f5b-18d674226e41": {
          "_id": "8dfb8f35-0fd1-4076-9f5b-18d674226e41",
          "_outcomes": [
            {
              "displayName": "Social Authentication",
              "id": "socialAuthentication",
            },
            {
              "displayName": "Local Authentication",
              "id": "localAuthentication",
            },
          ],
          "_rev": "683520427",
          "_type": {
            "_id": "SelectIdPNode",
            "collection": true,
            "name": "Select Identity Provider",
          },
          "filteredProviders": [],
          "identityAttribute": "userName",
          "includeLocalAuthentication": true,
          "offerOnlyExisting": false,
          "passwordAttribute": "password",
        },
        "ba8146b3-7791-42cf-a6de-11b9c5a249a0": {
          "_id": "ba8146b3-7791-42cf-a6de-11b9c5a249a0",
          "_outcomes": [
            {
              "displayName": "Outcome",
              "id": "outcome",
            },
          ],
          "_rev": "1915987136",
          "_type": {
            "_id": "ValidatedPasswordNode",
            "collection": true,
            "name": "Platform Password",
          },
          "passwordAttribute": "password",
          "validateInput": true,
        },
      },
      "nodes": {
        "187ea8d6-33f9-44e8-9579-3e1c7d5ddc07": {
          "_id": "187ea8d6-33f9-44e8-9579-3e1c7d5ddc07",
          "_outcomes": [
            {
              "displayName": "true",
              "id": "true",
            },
          ],
          "_rev": "1712061986",
          "_type": {
            "_id": "ScriptedDecisionNode",
            "collection": true,
            "name": "Scripted Decision",
          },
          "inputs": [
            "*",
          ],
          "outcomes": [
            "true",
          ],
          "outputs": [
            "*",
          ],
          "script": "3cb43516-ae69-433a-8787-501d45db14e9",
        },
        "22f281a2-d7b4-43d1-8440-67f3ed4d3292": {
          "_id": "22f281a2-d7b4-43d1-8440-67f3ed4d3292",
          "_outcomes": [
            {
              "displayName": "Email Sent",
              "id": "EMAIL_SENT",
            },
            {
              "displayName": "Email Not Sent",
              "id": "EMAIL_NOT_SENT",
            },
          ],
          "_rev": "1949818694",
          "_type": {
            "_id": "EmailTemplateNode",
            "collection": true,
            "name": "Email Template Node",
          },
          "emailAttribute": "mail",
          "emailTemplateName": "Welcome",
          "identityAttribute": "userName",
        },
        "245373f5-204a-483c-8a3a-ebd029d4d915": {
          "_id": "245373f5-204a-483c-8a3a-ebd029d4d915",
          "_outcomes": [
            {
              "displayName": "true",
              "id": "true",
            },
          ],
          "_rev": "67557271",
          "_type": {
            "_id": "ScriptedDecisionNode",
            "collection": true,
            "name": "Scripted Decision",
          },
          "inputs": [
            "*",
          ],
          "outcomes": [
            "true",
          ],
          "outputs": [
            "*",
          ],
          "script": "4855aac0-1efd-49c0-a153-3b9aadc911a6",
        },
        "2704f25d-2098-47e9-87ea-4500eba64a42": {
          "_id": "2704f25d-2098-47e9-87ea-4500eba64a42",
          "_outcomes": [
            {
              "displayName": "true",
              "id": "true",
            },
          ],
          "_rev": "945829665",
          "_type": {
            "_id": "ScriptedDecisionNode",
            "collection": true,
            "name": "Scripted Decision",
          },
          "inputs": [
            "*",
          ],
          "outcomes": [
            "true",
          ],
          "outputs": [
            "*",
          ],
          "script": "a064f7b7-29c5-480b-ac09-d3d122829278",
        },
        "29b01e52-4c17-437a-ad3b-2d5e9909a991": {
          "_id": "29b01e52-4c17-437a-ad3b-2d5e9909a991",
          "_outcomes": [
            {
              "displayName": "true",
              "id": "true",
            },
          ],
          "_rev": "-363588694",
          "_type": {
            "_id": "ScriptedDecisionNode",
            "collection": true,
            "name": "Scripted Decision",
          },
          "inputs": [
            "*",
          ],
          "outcomes": [
            "true",
          ],
          "outputs": [
            "*",
          ],
          "script": "452d73ee-c6f3-4f4e-9dae-e75bb3886cbd",
        },
        "2ccbe4a4-843d-4e0d-aae8-368e866a4a51": {
          "_id": "2ccbe4a4-843d-4e0d-aae8-368e866a4a51",
          "_outcomes": [
            {
              "displayName": "Created",
              "id": "CREATED",
            },
            {
              "displayName": "Failed",
              "id": "FAILURE",
            },
          ],
          "_rev": "207431769",
          "_type": {
            "_id": "CreateObjectNode",
            "collection": true,
            "name": "Create Object",
          },
          "identityResource": "managed/alpha_user",
        },
        "2d4a3041-a937-4b63-a881-1c14e3f07160": {
          "_id": "2d4a3041-a937-4b63-a881-1c14e3f07160",
          "_outcomes": [
            {
              "displayName": "True",
              "id": "true",
            },
            {
              "displayName": "False",
              "id": "false",
            },
          ],
          "_rev": "-1624124409",
          "_type": {
            "_id": "InnerTreeEvaluatorNode",
            "collection": true,
            "name": "Inner Tree Evaluator",
          },
          "tree": "DevicePrint",
        },
        "343416ee-c670-4204-8c6a-005aa2f3e689": {
          "_id": "343416ee-c670-4204-8c6a-005aa2f3e689",
          "_outcomes": [
            {
              "displayName": "True",
              "id": "true",
            },
            {
              "displayName": "False",
              "id": "false",
            },
          ],
          "_rev": "1938857247",
          "_type": {
            "_id": "PageNode",
            "collection": true,
            "name": "Page Node",
          },
          "nodes": [
            {
              "_id": "418eb3ed-867e-4e45-b953-62b5f066d9a7",
              "displayName": "User Choice",
              "nodeType": "MessageNode",
            },
          ],
          "pageDescription": {
            "en": "<h4>Read our <a href="http://www.kemper.com/wps/portal/Kemper/Home/Legal/lp_termsofuse" target="_blank" >Terms of use</a>.</h4>",
          },
          "pageHeader": {},
        },
        "34be5db7-51a4-4785-91bd-24a3c694b4b7": {
          "_id": "34be5db7-51a4-4785-91bd-24a3c694b4b7",
          "_outcomes": [
            {
              "displayName": "True",
              "id": "true",
            },
            {
              "displayName": "False",
              "id": "false",
            },
          ],
          "_rev": "-1651553441",
          "_type": {
            "_id": "MessageNode",
            "collection": true,
            "name": "Message Node",
          },
          "message": {
            "en": "An account with that username already exists. Would you like to login?",
          },
          "messageNo": {
            "en": "Abort",
          },
          "messageYes": {
            "en": "Login",
          },
        },
        "35afe0b9-cad6-4126-b5c0-bd396f4d5e1e": {
          "_id": "35afe0b9-cad6-4126-b5c0-bd396f4d5e1e",
          "_outcomes": [
            {
              "displayName": "true",
              "id": "true",
            },
          ],
          "_rev": "-1695667262",
          "_type": {
            "_id": "ScriptedDecisionNode",
            "collection": true,
            "name": "Scripted Decision",
          },
          "inputs": [
            "*",
          ],
          "outcomes": [
            "true",
          ],
          "outputs": [
            "*",
          ],
          "script": "3cb43516-ae69-433a-8787-501d45db14e9",
        },
        "36165e7f-42f4-4e12-9afe-c2bfb74bfdd4": {
          "_id": "36165e7f-42f4-4e12-9afe-c2bfb74bfdd4",
          "_outcomes": [
            {
              "displayName": "Social Authentication",
              "id": "socialAuthentication",
            },
            {
              "displayName": "Local Authentication",
              "id": "localAuthentication",
            },
          ],
          "_rev": "1729367659",
          "_type": {
            "_id": "PageNode",
            "collection": true,
            "name": "Page Node",
          },
          "nodes": [
            {
              "_id": "710456cd-3df9-4fe7-8d3a-b12537405975",
              "displayName": "Attributes",
              "nodeType": "AttributeCollectorNode",
            },
            {
              "_id": "ba8146b3-7791-42cf-a6de-11b9c5a249a0",
              "displayName": "Password",
              "nodeType": "ValidatedPasswordNode",
            },
            {
              "_id": "8dfb8f35-0fd1-4076-9f5b-18d674226e41",
              "displayName": "Select IDP",
              "nodeType": "SelectIdPNode",
            },
          ],
          "pageDescription": {
            "en": "Signing up is fast and easy.<br>Already have an account? <a href='#/service/Login'>Sign In</a>",
          },
          "pageHeader": {
            "en": "Sign Up",
          },
        },
        "3d715fcf-db84-4646-abfb-9c361c267e2b": {
          "_id": "3d715fcf-db84-4646-abfb-9c361c267e2b",
          "_outcomes": [
            {
              "displayName": "True",
              "id": "true",
            },
            {
              "displayName": "False",
              "id": "false",
            },
          ],
          "_rev": "717232031",
          "_type": {
            "_id": "InnerTreeEvaluatorNode",
            "collection": true,
            "name": "Inner Tree Evaluator",
          },
          "tree": "FraudRisk",
        },
        "617782ca-4e3a-4f6c-8eae-fcaa96f3bd79": {
          "_id": "617782ca-4e3a-4f6c-8eae-fcaa96f3bd79",
          "_outcomes": [
            {
              "displayName": "Account exists",
              "id": "ACCOUNT_EXISTS",
            },
            {
              "displayName": "No account exists",
              "id": "NO_ACCOUNT",
            },
          ],
          "_rev": "880568291",
          "_type": {
            "_id": "SocialProviderHandlerNode",
            "collection": true,
            "name": "Social Provider Handler Node",
          },
          "clientType": "BROWSER",
          "script": "58c824ae-84ed-4724-82cd-db128fc3f6c",
          "usernameAttribute": "userName",
        },
        "63d21c49-c6ff-41c2-ac69-9fe8a40b8167": {
          "_id": "63d21c49-c6ff-41c2-ac69-9fe8a40b8167",
          "_outcomes": [
            {
              "displayName": "Outcome",
              "id": "outcome",
            },
          ],
          "_rev": "542093324",
          "_type": {
            "_id": "IncrementLoginCountNode",
            "collection": true,
            "name": "Increment Login Count",
          },
          "identityAttribute": "userName",
        },
        "73363eed-f035-4ba8-90d1-34171a3ee14d": {
          "_id": "73363eed-f035-4ba8-90d1-34171a3ee14d",
          "_outcomes": [
            {
              "displayName": "True",
              "id": "true",
            },
            {
              "displayName": "False",
              "id": "false",
            },
          ],
          "_rev": "-637668744",
          "_type": {
            "_id": "InnerTreeEvaluatorNode",
            "collection": true,
            "name": "Inner Tree Evaluator",
          },
          "tree": "MFAAutoSelect",
        },
        "8c316099-3bd5-4ed0-b006-2c795f0e3a49": {
          "_id": "8c316099-3bd5-4ed0-b006-2c795f0e3a49",
          "_outcomes": [
            {
              "displayName": "true",
              "id": "true",
            },
          ],
          "_rev": "485371629",
          "_type": {
            "_id": "ScriptedDecisionNode",
            "collection": true,
            "name": "Scripted Decision",
          },
          "inputs": [
            "*",
          ],
          "outcomes": [
            "true",
          ],
          "outputs": [
            "*",
          ],
          "script": "4855aac0-1efd-49c0-a153-3b9aadc911a6",
        },
        "926ac60e-7f3b-4b21-a05c-60eb9b0d0b44": {
          "_id": "926ac60e-7f3b-4b21-a05c-60eb9b0d0b44",
          "_outcomes": [
            {
              "displayName": "True",
              "id": "true",
            },
            {
              "displayName": "False",
              "id": "false",
            },
          ],
          "_rev": "-495949168",
          "_type": {
            "_id": "InnerTreeEvaluatorNode",
            "collection": true,
            "name": "Inner Tree Evaluator",
          },
          "tree": "Login",
        },
        "9a088444-9d9d-4546-9c25-8994977c3355": {
          "_id": "9a088444-9d9d-4546-9c25-8994977c3355",
          "_outcomes": [
            {
              "displayName": "Outcome",
              "id": "outcome",
            },
          ],
          "_rev": "-1800263995",
          "_type": {
            "_id": "IncrementLoginCountNode",
            "collection": true,
            "name": "Increment Login Count",
          },
          "identityAttribute": "userName",
        },
        "9b560002-3d0e-4590-b297-90734022c247": {
          "_id": "9b560002-3d0e-4590-b297-90734022c247",
          "_outcomes": [
            {
              "displayName": "True",
              "id": "true",
            },
            {
              "displayName": "False",
              "id": "false",
            },
          ],
          "_rev": "606794600",
          "_type": {
            "_id": "InnerTreeEvaluatorNode",
            "collection": true,
            "name": "Inner Tree Evaluator",
          },
          "tree": "IdentityProofing",
        },
        "9ec8d84b-917e-44f4-aff9-c25612ab4f8f": {
          "_id": "9ec8d84b-917e-44f4-aff9-c25612ab4f8f",
          "_outcomes": [
            {
              "displayName": "True",
              "id": "true",
            },
            {
              "displayName": "False",
              "id": "false",
            },
          ],
          "_rev": "-1821413905",
          "_type": {
            "_id": "IdentifyExistingUserNode",
            "collection": true,
            "name": "Identify Existing User",
          },
          "identifier": "userName",
          "identityAttribute": "userName",
        },
        "a0e5f999-0fd7-4530-bfbc-5a0971380e13": {
          "_id": "a0e5f999-0fd7-4530-bfbc-5a0971380e13",
          "_outcomes": [
            {
              "displayName": "True",
              "id": "true",
            },
            {
              "displayName": "False",
              "id": "false",
            },
          ],
          "_rev": "1054865975",
          "_type": {
            "_id": "MessageNode",
            "collection": true,
            "name": "Message Node",
          },
          "message": {
            "en": "Skip Identity Proofing?",
          },
          "messageNo": {
            "en": "No, do it!",
          },
          "messageYes": {
            "en": "Skip",
          },
        },
        "b2a40bf1-b8f1-4d27-9cb5-d8774a292f6b": {
          "_id": "b2a40bf1-b8f1-4d27-9cb5-d8774a292f6b",
          "_outcomes": [
            {
              "displayName": "True",
              "id": "true",
            },
            {
              "displayName": "False",
              "id": "false",
            },
          ],
          "_rev": "-458381589",
          "_type": {
            "_id": "InnerTreeEvaluatorNode",
            "collection": true,
            "name": "Inner Tree Evaluator",
          },
          "tree": "EmailValidation",
        },
        "bcdc1f33-5bcc-4028-a77f-817d8d266143": {
          "_id": "bcdc1f33-5bcc-4028-a77f-817d8d266143",
          "_outcomes": [
            {
              "displayName": "True",
              "id": "true",
            },
            {
              "displayName": "False",
              "id": "false",
            },
          ],
          "_rev": "1286367263",
          "_type": {
            "_id": "IdentifyExistingUserNode",
            "collection": true,
            "name": "Identify Existing User",
          },
          "identifier": "userName",
          "identityAttribute": "userName",
        },
        "c880191f-9b0a-4a61-850c-255172d67f7f": {
          "_id": "c880191f-9b0a-4a61-850c-255172d67f7f",
          "_outcomes": [
            {
              "displayName": "True",
              "id": "true",
            },
            {
              "displayName": "False",
              "id": "false",
            },
          ],
          "_rev": "-108702388",
          "_type": {
            "_id": "InnerTreeEvaluatorNode",
            "collection": true,
            "name": "Inner Tree Evaluator",
          },
          "tree": "DevicePrint",
        },
        "c931768c-b677-4f68-b148-fa20cdc49e8b": {
          "_id": "c931768c-b677-4f68-b148-fa20cdc49e8b",
          "_outcomes": [
            {
              "displayName": "true",
              "id": "true",
            },
          ],
          "_rev": "1730498017",
          "_type": {
            "_id": "ScriptedDecisionNode",
            "collection": true,
            "name": "Scripted Decision",
          },
          "inputs": [
            "*",
          ],
          "outcomes": [
            "true",
          ],
          "outputs": [
            "*",
          ],
          "script": "4855aac0-1efd-49c0-a153-3b9aadc911a6",
        },
        "d4c63f05-0cd7-4b89-8059-9809c4065dfd": {
          "_id": "d4c63f05-0cd7-4b89-8059-9809c4065dfd",
          "_outcomes": [
            {
              "displayName": "True",
              "id": "true",
            },
            {
              "displayName": "False",
              "id": "false",
            },
          ],
          "_rev": "47474224",
          "_type": {
            "_id": "InnerTreeEvaluatorNode",
            "collection": true,
            "name": "Inner Tree Evaluator",
          },
          "tree": "PasswordBreachDetection",
        },
        "dd9135ba-37c6-4b69-bd0d-43543cd76e48": {
          "_id": "dd9135ba-37c6-4b69-bd0d-43543cd76e48",
          "_outcomes": [
            {
              "displayName": "Outcome",
              "id": "outcome",
            },
          ],
          "_rev": "650209336",
          "_type": {
            "_id": "PageNode",
            "collection": true,
            "name": "Page Node",
          },
          "nodes": [
            {
              "_id": "16eb946c-791a-42ef-bccf-1fad07d1b137",
              "displayName": "Attributes",
              "nodeType": "AttributeCollectorNode",
            },
          ],
          "pageDescription": {},
          "pageHeader": {},
        },
        "e24bddb1-e4be-451d-b770-78a6ede61743": {
          "_id": "e24bddb1-e4be-451d-b770-78a6ede61743",
          "_outcomes": [
            {
              "displayName": "True",
              "id": "true",
            },
            {
              "displayName": "False",
              "id": "false",
            },
          ],
          "_rev": "426258979",
          "_type": {
            "_id": "IdentifyExistingUserNode",
            "collection": true,
            "name": "Identify Existing User",
          },
          "identifier": "userName",
          "identityAttribute": "userName",
        },
        "e60b5320-6ce1-42fa-9117-191760c3b813": {
          "_id": "e60b5320-6ce1-42fa-9117-191760c3b813",
          "_outcomes": [
            {
              "displayName": "true",
              "id": "true",
            },
          ],
          "_rev": "-1436994927",
          "_type": {
            "_id": "ScriptedDecisionNode",
            "collection": true,
            "name": "Scripted Decision",
          },
          "inputs": [
            "*",
          ],
          "outcomes": [
            "true",
          ],
          "outputs": [
            "*",
          ],
          "script": "a064f7b7-29c5-480b-ac09-d3d122829278",
        },
        "ece464a1-6204-4014-b991-d1cb435a46cf": {
          "_id": "ece464a1-6204-4014-b991-d1cb435a46cf",
          "_outcomes": [
            {
              "displayName": "True",
              "id": "true",
            },
            {
              "displayName": "False",
              "id": "false",
            },
          ],
          "_rev": "-1383356310",
          "_type": {
            "_id": "MessageNode",
            "collection": true,
            "name": "Message Node",
          },
          "message": {
            "en": "An account with that username already exists. Would you like to login?",
          },
          "messageNo": {
            "en": "Abort",
          },
          "messageYes": {
            "en": "Login",
          },
        },
      },
      "saml2Entities": {},
      "scripts": {},
      "socialIdentityProviders": {},
      "themes": [],
      "tree": {
        "_id": "Registration-scp",
        "_rev": "2111215589",
        "description": "Platform Registration Tree",
        "enabled": true,
        "entryNodeId": "3d715fcf-db84-4646-abfb-9c361c267e2b",
        "identityResource": "managed/alpha_user",
        "nodes": {
          "187ea8d6-33f9-44e8-9579-3e1c7d5ddc07": {
            "connections": {
              "true": "bcdc1f33-5bcc-4028-a77f-817d8d266143",
            },
            "displayName": "Display States",
            "nodeType": "ScriptedDecisionNode",
            "x": 575,
            "y": 151.015625,
          },
          "22f281a2-d7b4-43d1-8440-67f3ed4d3292": {
            "connections": {
              "EMAIL_NOT_SENT": "c880191f-9b0a-4a61-850c-255172d67f7f",
              "EMAIL_SENT": "c880191f-9b0a-4a61-850c-255172d67f7f",
            },
            "displayName": "Welcome Email",
            "nodeType": "EmailTemplateNode",
            "x": 2250,
            "y": 278.76666259765625,
          },
          "245373f5-204a-483c-8a3a-ebd029d4d915": {
            "connections": {
              "true": "e60b5320-6ce1-42fa-9117-191760c3b813",
            },
            "displayName": "Populate Username",
            "nodeType": "ScriptedDecisionNode",
            "x": 785,
            "y": 281.015625,
          },
          "2704f25d-2098-47e9-87ea-4500eba64a42": {
            "connections": {
              "true": "35afe0b9-cad6-4126-b5c0-bd396f4d5e1e",
            },
            "displayName": "Sanitize Data",
            "nodeType": "ScriptedDecisionNode",
            "x": 493,
            "y": 539.7666625976562,
          },
          "29b01e52-4c17-437a-ad3b-2d5e9909a991": {
            "connections": {
              "true": "e24bddb1-e4be-451d-b770-78a6ede61743",
            },
            "displayName": "Copy to transient",
            "nodeType": "ScriptedDecisionNode",
            "x": 1008,
            "y": 279.015625,
          },
          "2ccbe4a4-843d-4e0d-aae8-368e866a4a51": {
            "connections": {
              "CREATED": "9a088444-9d9d-4546-9c25-8994977c3355",
              "FAILURE": "e301438c-0bd0-429c-ab0c-66126501069a",
            },
            "displayName": "Create Account",
            "nodeType": "CreateObjectNode",
            "x": 1863,
            "y": 392,
          },
          "2d4a3041-a937-4b63-a881-1c14e3f07160": {
            "connections": {
              "false": "73363eed-f035-4ba8-90d1-34171a3ee14d",
              "true": "70e691a5-1e33-4ac3-a356-e7b6d60d92e0",
            },
            "displayName": "Device Print",
            "nodeType": "InnerTreeEvaluatorNode",
            "x": 2479,
            "y": 83.76666259765625,
          },
          "343416ee-c670-4204-8c6a-005aa2f3e689": {
            "connections": {
              "false": "e301438c-0bd0-429c-ab0c-66126501069a",
              "true": "2ccbe4a4-843d-4e0d-aae8-368e866a4a51",
            },
            "displayName": "Terms Of Use",
            "nodeType": "PageNode",
            "x": 1636,
            "y": 362.76666259765625,
          },
          "34be5db7-51a4-4785-91bd-24a3c694b4b7": {
            "connections": {
              "false": "36165e7f-42f4-4e12-9afe-c2bfb74bfdd4",
              "true": "926ac60e-7f3b-4b21-a05c-60eb9b0d0b44",
            },
            "displayName": "Already Exists Dialog",
            "nodeType": "MessageNode",
            "x": 776,
            "y": 544.7666625976562,
          },
          "35afe0b9-cad6-4126-b5c0-bd396f4d5e1e": {
            "connections": {
              "true": "9ec8d84b-917e-44f4-aff9-c25612ab4f8f",
            },
            "displayName": "Scripted Decision",
            "nodeType": "ScriptedDecisionNode",
            "x": 315,
            "y": 620.015625,
          },
          "36165e7f-42f4-4e12-9afe-c2bfb74bfdd4": {
            "connections": {
              "localAuthentication": "8c316099-3bd5-4ed0-b006-2c795f0e3a49",
              "socialAuthentication": "617782ca-4e3a-4f6c-8eae-fcaa96f3bd79",
            },
            "displayName": "Registration Page",
            "nodeType": "PageNode",
            "x": 356,
            "y": 164,
          },
          "3d715fcf-db84-4646-abfb-9c361c267e2b": {
            "connections": {
              "false": "e301438c-0bd0-429c-ab0c-66126501069a",
              "true": "36165e7f-42f4-4e12-9afe-c2bfb74bfdd4",
            },
            "displayName": "Benign Visitor?",
            "nodeType": "InnerTreeEvaluatorNode",
            "x": 170,
            "y": 243.76666259765625,
          },
          "617782ca-4e3a-4f6c-8eae-fcaa96f3bd79": {
            "connections": {
              "ACCOUNT_EXISTS": "bcdc1f33-5bcc-4028-a77f-817d8d266143",
              "NO_ACCOUNT": "bcdc1f33-5bcc-4028-a77f-817d8d266143",
            },
            "displayName": "Social Login",
            "nodeType": "SocialProviderHandlerNode",
            "x": 570,
            "y": 19,
          },
          "63d21c49-c6ff-41c2-ac69-9fe8a40b8167": {
            "connections": {
              "outcome": "2d4a3041-a937-4b63-a881-1c14e3f07160",
            },
            "displayName": "Count Login",
            "nodeType": "IncrementLoginCountNode",
            "x": 2036,
            "y": 110.33333333333331,
          },
          "73363eed-f035-4ba8-90d1-34171a3ee14d": {
            "connections": {
              "false": "e301438c-0bd0-429c-ab0c-66126501069a",
              "true": "70e691a5-1e33-4ac3-a356-e7b6d60d92e0",
            },
            "displayName": "MFA",
            "nodeType": "InnerTreeEvaluatorNode",
            "x": 2679,
            "y": 82.76666259765625,
          },
          "8c316099-3bd5-4ed0-b006-2c795f0e3a49": {
            "connections": {
              "true": "2704f25d-2098-47e9-87ea-4500eba64a42",
            },
            "displayName": "Populate Username",
            "nodeType": "ScriptedDecisionNode",
            "x": 429,
            "y": 456.015625,
          },
          "926ac60e-7f3b-4b21-a05c-60eb9b0d0b44": {
            "connections": {
              "false": "e301438c-0bd0-429c-ab0c-66126501069a",
              "true": "70e691a5-1e33-4ac3-a356-e7b6d60d92e0",
            },
            "displayName": "Login",
            "nodeType": "InnerTreeEvaluatorNode",
            "x": 1000,
            "y": 546.7666625976562,
          },
          "9a088444-9d9d-4546-9c25-8994977c3355": {
            "connections": {
              "outcome": "22f281a2-d7b4-43d1-8440-67f3ed4d3292",
            },
            "displayName": "Count Login",
            "nodeType": "IncrementLoginCountNode",
            "x": 2042,
            "y": 304.76666259765625,
          },
          "9b560002-3d0e-4590-b297-90734022c247": {
            "connections": {
              "false": "e301438c-0bd0-429c-ab0c-66126501069a",
              "true": "70e691a5-1e33-4ac3-a356-e7b6d60d92e0",
            },
            "displayName": "Identity Proofing",
            "nodeType": "InnerTreeEvaluatorNode",
            "x": 2678,
            "y": 277.76666259765625,
          },
          "9ec8d84b-917e-44f4-aff9-c25612ab4f8f": {
            "connections": {
              "false": "d4c63f05-0cd7-4b89-8059-9809c4065dfd",
              "true": "34be5db7-51a4-4785-91bd-24a3c694b4b7",
            },
            "displayName": "Check by username",
            "nodeType": "IdentifyExistingUserNode",
            "x": 554,
            "y": 621.7666625976562,
          },
          "a0e5f999-0fd7-4530-bfbc-5a0971380e13": {
            "connections": {
              "false": "9b560002-3d0e-4590-b297-90734022c247",
              "true": "70e691a5-1e33-4ac3-a356-e7b6d60d92e0",
            },
            "displayName": "Skip?",
            "nodeType": "MessageNode",
            "x": 2578,
            "y": 423.76666259765625,
          },
          "b2a40bf1-b8f1-4d27-9cb5-d8774a292f6b": {
            "connections": {
              "false": "e301438c-0bd0-429c-ab0c-66126501069a",
              "true": "c931768c-b677-4f68-b148-fa20cdc49e8b",
            },
            "displayName": "Validate Email",
            "nodeType": "InnerTreeEvaluatorNode",
            "x": 1425,
            "y": 380.76666259765625,
          },
          "bcdc1f33-5bcc-4028-a77f-817d8d266143": {
            "connections": {
              "false": "dd9135ba-37c6-4b69-bd0d-43543cd76e48",
              "true": "ece464a1-6204-4014-b991-d1cb435a46cf",
            },
            "displayName": "Check by username",
            "nodeType": "IdentifyExistingUserNode",
            "x": 780,
            "y": 22.015625,
          },
          "c880191f-9b0a-4a61-850c-255172d67f7f": {
            "connections": {
              "false": "a0e5f999-0fd7-4530-bfbc-5a0971380e13",
              "true": "a0e5f999-0fd7-4530-bfbc-5a0971380e13",
            },
            "displayName": "Device Print",
            "nodeType": "InnerTreeEvaluatorNode",
            "x": 2475,
            "y": 277.76666259765625,
          },
          "c931768c-b677-4f68-b148-fa20cdc49e8b": {
            "connections": {
              "true": "343416ee-c670-4204-8c6a-005aa2f3e689",
            },
            "displayName": "Re-Populate Username",
            "nodeType": "ScriptedDecisionNode",
            "x": 1572,
            "y": 254.015625,
          },
          "d4c63f05-0cd7-4b89-8059-9809c4065dfd": {
            "connections": {
              "false": "e301438c-0bd0-429c-ab0c-66126501069a",
              "true": "b2a40bf1-b8f1-4d27-9cb5-d8774a292f6b",
            },
            "displayName": "Validate Password",
            "nodeType": "InnerTreeEvaluatorNode",
            "x": 1189,
            "y": 414.015625,
          },
          "dd9135ba-37c6-4b69-bd0d-43543cd76e48": {
            "connections": {
              "outcome": "245373f5-204a-483c-8a3a-ebd029d4d915",
            },
            "displayName": "Social Confirmation Page",
            "nodeType": "PageNode",
            "x": 780,
            "y": 149,
          },
          "e24bddb1-e4be-451d-b770-78a6ede61743": {
            "connections": {
              "false": "b2a40bf1-b8f1-4d27-9cb5-d8774a292f6b",
              "true": "ece464a1-6204-4014-b991-d1cb435a46cf",
            },
            "displayName": "Check by username",
            "nodeType": "IdentifyExistingUserNode",
            "x": 1230,
            "y": 183.015625,
          },
          "e60b5320-6ce1-42fa-9117-191760c3b813": {
            "connections": {
              "true": "29b01e52-4c17-437a-ad3b-2d5e9909a991",
            },
            "displayName": "Sanitize Data",
            "nodeType": "ScriptedDecisionNode",
            "x": 1013,
            "y": 192.76666259765625,
          },
          "ece464a1-6204-4014-b991-d1cb435a46cf": {
            "connections": {
              "false": "36165e7f-42f4-4e12-9afe-c2bfb74bfdd4",
              "true": "63d21c49-c6ff-41c2-ac69-9fe8a40b8167",
            },
            "displayName": "Already Exists Dialog",
            "nodeType": "MessageNode",
            "x": 1439,
            "y": 27.76666259765625,
          },
        },
        "staticNodes": {
          "70e691a5-1e33-4ac3-a356-e7b6d60d92e0": {
            "x": 2888,
            "y": 108.5,
          },
          "e301438c-0bd0-429c-ab0c-66126501069a": {
            "x": 2908,
            "y": 661.6666666666666,
          },
          "startNode": {
            "x": 70,
            "y": 269.5,
          },
        },
        "uiConfig": {
          "categories": "["Registration"]",
        },
      },
    },
    "ResendOTPTest": {
      "circlesOfTrust": {},
      "emailTemplates": {},
      "innerNodes": {
        "74bb56c5-2470-42d2-adba-918b80c1b09d": {
          "_id": "74bb56c5-2470-42d2-adba-918b80c1b09d",
          "_outcomes": [
            {
              "displayName": "true",
              "id": "true",
            },
            {
              "displayName": "false",
              "id": "false",
            },
            {
              "displayName": "resend",
              "id": "resend",
            },
          ],
          "_rev": "-2045062206",
          "_type": {
            "_id": "ScriptedDecisionNode",
            "collection": true,
            "name": "Scripted Decision",
          },
          "inputs": [
            "*",
          ],
          "outcomes": [
            "true",
            "false",
            "resend",
          ],
          "outputs": [
            "*",
          ],
          "script": "4ee5b182-1b09-45cc-97a9-0e609f0a2915",
        },
      },
      "nodes": {
        "26bee16b-339c-4a04-b7d7-076240de2dbc": {
          "_id": "26bee16b-339c-4a04-b7d7-076240de2dbc",
          "_outcomes": [
            {
              "displayName": "Outcome",
              "id": "outcome",
            },
          ],
          "_rev": "-350112644",
          "_type": {
            "_id": "OneTimePasswordGeneratorNode",
            "collection": true,
            "name": "HOTP Generator",
          },
          "length": 8,
        },
        "d21d6871-3a1c-458f-bc63-272324ee74ef": {
          "_id": "d21d6871-3a1c-458f-bc63-272324ee74ef",
          "_outcomes": [
            {
              "displayName": "true",
              "id": "true",
            },
            {
              "displayName": "false",
              "id": "false",
            },
            {
              "displayName": "resend",
              "id": "resend",
            },
          ],
          "_rev": "-709732712",
          "_type": {
            "_id": "PageNode",
            "collection": true,
            "name": "Page Node",
          },
          "nodes": [
            {
              "_id": "74bb56c5-2470-42d2-adba-918b80c1b09d",
              "displayName": "Resend OTP Option",
              "nodeType": "ScriptedDecisionNode",
            },
          ],
          "pageDescription": {},
          "pageHeader": {},
        },
      },
      "saml2Entities": {},
      "scripts": {},
      "socialIdentityProviders": {},
      "themes": [],
      "tree": {
        "_id": "ResendOTPTest",
        "_rev": "-1301709058",
        "description": "Resend OTP Test",
        "enabled": true,
        "entryNodeId": "26bee16b-339c-4a04-b7d7-076240de2dbc",
        "identityResource": "managed/alpha_user",
        "nodes": {
          "26bee16b-339c-4a04-b7d7-076240de2dbc": {
            "connections": {
              "outcome": "d21d6871-3a1c-458f-bc63-272324ee74ef",
            },
            "displayName": "HOTP Generator",
            "nodeType": "OneTimePasswordGeneratorNode",
            "x": 168,
            "y": 258.015625,
          },
          "d21d6871-3a1c-458f-bc63-272324ee74ef": {
            "connections": {
              "false": "e301438c-0bd0-429c-ab0c-66126501069a",
              "resend": "70e691a5-1e33-4ac3-a356-e7b6d60d92e0",
              "true": "70e691a5-1e33-4ac3-a356-e7b6d60d92e0",
            },
            "displayName": "Page Node",
            "nodeType": "PageNode",
            "x": 388,
            "y": 193.015625,
          },
        },
        "staticNodes": {
          "70e691a5-1e33-4ac3-a356-e7b6d60d92e0": {
            "x": 681,
            "y": 141,
          },
          "e301438c-0bd0-429c-ab0c-66126501069a": {
            "x": 682,
            "y": 403,
          },
          "startNode": {
            "x": 50,
            "y": 250,
          },
        },
        "uiConfig": {
          "categories": "[]",
        },
      },
    },
    "ResetPIN": {
      "circlesOfTrust": {},
      "emailTemplates": {},
      "innerNodes": {
        "264133f5-d620-4bd3-886b-116c758cd792": {
          "_id": "264133f5-d620-4bd3-886b-116c758cd792",
          "_outcomes": [
            {
              "displayName": "Outcome",
              "id": "outcome",
            },
          ],
          "_rev": "771675789",
          "_type": {
            "_id": "AttributeCollectorNode",
            "collection": true,
            "name": "Attribute Collector",
          },
          "attributesToCollect": [
            "mail",
          ],
          "identityAttribute": "mail",
          "required": true,
          "validateInputs": false,
        },
        "28f353e8-fe7a-4d12-ad7f-71ecc4acadc5": {
          "_id": "28f353e8-fe7a-4d12-ad7f-71ecc4acadc5",
          "_outcomes": [
            {
              "displayName": "true",
              "id": "true",
            },
          ],
          "_rev": "-712158733",
          "_type": {
            "_id": "ScriptedDecisionNode",
            "collection": true,
            "name": "Scripted Decision",
          },
          "inputs": [
            "*",
          ],
          "outcomes": [
            "true",
          ],
          "outputs": [
            "*",
          ],
          "script": "e4417108-4dc9-4ffc-9995-3cd490adf2ed",
        },
        "77f0be15-2086-4846-99d3-ac0e2da99de3": {
          "_id": "77f0be15-2086-4846-99d3-ac0e2da99de3",
          "_outcomes": [
            {
              "displayName": "Outcome",
              "id": "outcome",
            },
          ],
          "_rev": "-1415314263",
          "_type": {
            "_id": "ValidatedPasswordNode",
            "collection": true,
            "name": "Platform Password",
          },
          "passwordAttribute": "frUnindexedString3",
          "validateInput": false,
        },
      },
      "nodes": {
        "12a70ef3-9fbf-4ac1-bc02-b589b342568c": {
          "_id": "12a70ef3-9fbf-4ac1-bc02-b589b342568c",
          "_outcomes": [
            {
              "displayName": "Outcome",
              "id": "outcome",
            },
          ],
          "_rev": "-1509806017",
          "_type": {
            "_id": "PageNode",
            "collection": true,
            "name": "Page Node",
          },
          "nodes": [
            {
              "_id": "77f0be15-2086-4846-99d3-ac0e2da99de3",
              "displayName": "Collect PIN",
              "nodeType": "ValidatedPasswordNode",
            },
          ],
          "pageDescription": {
            "en": "Change PIN",
          },
          "pageHeader": {
            "en": "Reset PIN",
          },
        },
        "1615aa5a-b73d-4bd2-9158-8d149b5e135a": {
          "_id": "1615aa5a-b73d-4bd2-9158-8d149b5e135a",
          "_outcomes": [
            {
              "displayName": "true",
              "id": "true",
            },
          ],
          "_rev": "14858668",
          "_type": {
            "_id": "PageNode",
            "collection": true,
            "name": "Page Node",
          },
          "nodes": [
            {
              "_id": "28f353e8-fe7a-4d12-ad7f-71ecc4acadc5",
              "displayName": "Collect PIN",
              "nodeType": "ScriptedDecisionNode",
            },
          ],
          "pageDescription": {},
          "pageHeader": {},
        },
        "5a0942a2-1dde-46f6-b8e9-60014c8cf107": {
          "_id": "5a0942a2-1dde-46f6-b8e9-60014c8cf107",
          "_outcomes": [
            {
              "displayName": "Patched",
              "id": "PATCHED",
            },
            {
              "displayName": "Failed",
              "id": "FAILURE",
            },
          ],
          "_rev": "78465894",
          "_type": {
            "_id": "PatchObjectNode",
            "collection": true,
            "name": "Patch Object",
          },
          "identityAttribute": "mail",
          "identityResource": "managed/alpha_user",
          "ignoredFields": [],
          "patchAsObject": false,
        },
        "69cec9e6-91e5-46da-b2b9-c660dba813a4": {
          "_id": "69cec9e6-91e5-46da-b2b9-c660dba813a4",
          "_outcomes": [
            {
              "displayName": "Outcome",
              "id": "outcome",
            },
          ],
          "_rev": "1415546847",
          "_type": {
            "_id": "PageNode",
            "collection": true,
            "name": "Page Node",
          },
          "nodes": [
            {
              "_id": "264133f5-d620-4bd3-886b-116c758cd792",
              "displayName": "Attribute Collector",
              "nodeType": "AttributeCollectorNode",
            },
          ],
          "pageDescription": {
            "en": "Enter your email address or <a href="#/service/Login">Sign in</a>",
          },
          "pageHeader": {
            "en": "Reset PIN",
          },
        },
        "9a42da87-13bf-40a1-aa20-0dad387fcd44": {
          "_id": "9a42da87-13bf-40a1-aa20-0dad387fcd44",
          "_outcomes": [
            {
              "displayName": "Outcome",
              "id": "outcome",
            },
          ],
          "_rev": "-548663919",
          "_type": {
            "_id": "EmailSuspendNode",
            "collection": true,
            "name": "Email Suspend Node",
          },
          "emailAttribute": "mail",
          "emailSuspendMessage": {
            "en": "An email has been sent to the address you entered. Click the link in that email to proceed.",
          },
          "emailTemplateName": "resetPassword",
          "identityAttribute": "mail",
          "objectLookup": true,
        },
        "cadee5c8-ec81-4fce-b8d0-2e74c404f124": {
          "_id": "cadee5c8-ec81-4fce-b8d0-2e74c404f124",
          "_outcomes": [
            {
              "displayName": "True",
              "id": "true",
            },
            {
              "displayName": "False",
              "id": "false",
            },
          ],
          "_rev": "-776799812",
          "_type": {
            "_id": "IdentifyExistingUserNode",
            "collection": true,
            "name": "Identify Existing User",
          },
          "identifier": "userName",
          "identityAttribute": "mail",
        },
      },
      "saml2Entities": {},
      "scripts": {},
      "socialIdentityProviders": {},
      "themes": [],
      "tree": {
        "_id": "ResetPIN",
        "_rev": "-1046621629",
        "description": "Reset PIN",
        "enabled": true,
        "entryNodeId": "69cec9e6-91e5-46da-b2b9-c660dba813a4",
        "identityResource": "managed/alpha_user",
        "nodes": {
          "12a70ef3-9fbf-4ac1-bc02-b589b342568c": {
            "connections": {
              "outcome": "5a0942a2-1dde-46f6-b8e9-60014c8cf107",
            },
            "displayName": "Reset PIN (OOTB)",
            "nodeType": "PageNode",
            "x": 944,
            "y": 74.5,
          },
          "1615aa5a-b73d-4bd2-9158-8d149b5e135a": {
            "connections": {
              "true": "5a0942a2-1dde-46f6-b8e9-60014c8cf107",
            },
            "displayName": "Reset PIN (Script)",
            "nodeType": "PageNode",
            "x": 947,
            "y": 218.015625,
          },
          "5a0942a2-1dde-46f6-b8e9-60014c8cf107": {
            "connections": {
              "FAILURE": "e301438c-0bd0-429c-ab0c-66126501069a",
              "PATCHED": "70e691a5-1e33-4ac3-a356-e7b6d60d92e0",
            },
            "displayName": "Patch Object",
            "nodeType": "PatchObjectNode",
            "x": 1189,
            "y": 137,
          },
          "69cec9e6-91e5-46da-b2b9-c660dba813a4": {
            "connections": {
              "outcome": "cadee5c8-ec81-4fce-b8d0-2e74c404f124",
            },
            "displayName": "Page Node",
            "nodeType": "PageNode",
            "x": 210,
            "y": 127.5,
          },
          "9a42da87-13bf-40a1-aa20-0dad387fcd44": {
            "connections": {
              "outcome": "1615aa5a-b73d-4bd2-9158-8d149b5e135a",
            },
            "displayName": "Email Suspend Node",
            "nodeType": "EmailSuspendNode",
            "x": 702,
            "y": 162.5,
          },
          "cadee5c8-ec81-4fce-b8d0-2e74c404f124": {
            "connections": {
              "false": "9a42da87-13bf-40a1-aa20-0dad387fcd44",
              "true": "9a42da87-13bf-40a1-aa20-0dad387fcd44",
            },
            "displayName": "Identify Existing User",
            "nodeType": "IdentifyExistingUserNode",
            "x": 455,
            "y": 137,
          },
        },
        "staticNodes": {
          "70e691a5-1e33-4ac3-a356-e7b6d60d92e0": {
            "x": 1419,
            "y": 80,
          },
          "e301438c-0bd0-429c-ab0c-66126501069a": {
            "x": 1419,
            "y": 230,
          },
          "startNode": {
            "x": 70,
            "y": 155,
          },
        },
        "uiConfig": {},
      },
    },
    "ResetPassword": {
      "circlesOfTrust": {},
      "emailTemplates": {},
      "innerNodes": {
        "b45dca2e-d493-49ff-8aeb-2c408615f4c0": {
          "_id": "b45dca2e-d493-49ff-8aeb-2c408615f4c0",
          "_outcomes": [
            {
              "displayName": "Outcome",
              "id": "outcome",
            },
          ],
          "_rev": "1617687413",
          "_type": {
            "_id": "ValidatedPasswordNode",
            "collection": true,
            "name": "Platform Password",
          },
          "passwordAttribute": "password",
          "validateInput": true,
        },
        "e13885c3-709a-43c4-8d69-58bd7ee1bbed": {
          "_id": "e13885c3-709a-43c4-8d69-58bd7ee1bbed",
          "_outcomes": [
            {
              "displayName": "Outcome",
              "id": "outcome",
            },
          ],
          "_rev": "-416848214",
          "_type": {
            "_id": "AttributeCollectorNode",
            "collection": true,
            "name": "Attribute Collector",
          },
          "attributesToCollect": [
            "mail",
          ],
          "identityAttribute": "mail",
          "required": true,
          "validateInputs": false,
        },
      },
      "nodes": {
        "0ae0593b-887e-48f4-92b3-69c5a6aa76e0": {
          "_id": "0ae0593b-887e-48f4-92b3-69c5a6aa76e0",
          "_outcomes": [
            {
              "displayName": "Outcome",
              "id": "outcome",
            },
          ],
          "_rev": "1500245188",
          "_type": {
            "_id": "PageNode",
            "collection": true,
            "name": "Page Node",
          },
          "nodes": [
            {
              "_id": "e13885c3-709a-43c4-8d69-58bd7ee1bbed",
              "displayName": "Attribute Collector",
              "nodeType": "AttributeCollectorNode",
            },
          ],
          "pageDescription": {
            "en": "Enter your email address or <a href="#/service/Login">Sign in</a>",
          },
          "pageHeader": {
            "en": "Reset Password",
          },
        },
        "273557b0-0791-418a-95e2-c8d7aaa3a31a": {
          "_id": "273557b0-0791-418a-95e2-c8d7aaa3a31a",
          "_outcomes": [
            {
              "displayName": "Outcome",
              "id": "outcome",
            },
          ],
          "_rev": "85538416",
          "_type": {
            "_id": "EmailSuspendNode",
            "collection": true,
            "name": "Email Suspend Node",
          },
          "emailAttribute": "mail",
          "emailSuspendMessage": {
            "en": "An email has been sent to the address you entered. Click the link in that email to proceed.",
          },
          "emailTemplateName": "resetPassword",
          "identityAttribute": "mail",
          "objectLookup": true,
        },
        "73d83a7f-452e-47a0-ba47-593a483d2e11": {
          "_id": "73d83a7f-452e-47a0-ba47-593a483d2e11",
          "_outcomes": [
            {
              "displayName": "True",
              "id": "true",
            },
            {
              "displayName": "False",
              "id": "false",
            },
          ],
          "_rev": "-1676101718",
          "_type": {
            "_id": "IdentifyExistingUserNode",
            "collection": true,
            "name": "Identify Existing User",
          },
          "identifier": "userName",
          "identityAttribute": "mail",
        },
        "9c84ee8f-2493-44a6-a99c-ada43e933fae": {
          "_id": "9c84ee8f-2493-44a6-a99c-ada43e933fae",
          "_outcomes": [
            {
              "displayName": "Outcome",
              "id": "outcome",
            },
          ],
          "_rev": "-361234304",
          "_type": {
            "_id": "PageNode",
            "collection": true,
            "name": "Page Node",
          },
          "nodes": [
            {
              "_id": "b45dca2e-d493-49ff-8aeb-2c408615f4c0",
              "displayName": "Platform Password",
              "nodeType": "ValidatedPasswordNode",
            },
          ],
          "pageDescription": {
            "en": "Change password",
          },
          "pageHeader": {
            "en": "Reset Password",
          },
        },
        "dbae03a7-208a-4a27-b089-ef2c6fd6cbe8": {
          "_id": "dbae03a7-208a-4a27-b089-ef2c6fd6cbe8",
          "_outcomes": [
            {
              "displayName": "Patched",
              "id": "PATCHED",
            },
            {
              "displayName": "Failed",
              "id": "FAILURE",
            },
          ],
          "_rev": "2014425928",
          "_type": {
            "_id": "PatchObjectNode",
            "collection": true,
            "name": "Patch Object",
          },
          "identityAttribute": "mail",
          "identityResource": "managed/alpha_user",
          "ignoredFields": [],
          "patchAsObject": false,
        },
      },
      "saml2Entities": {},
      "scripts": {},
      "socialIdentityProviders": {},
      "themes": [],
      "tree": {
        "_id": "ResetPassword",
        "_rev": "1107667975",
        "description": "Reset Password Tree",
        "enabled": true,
        "entryNodeId": "0ae0593b-887e-48f4-92b3-69c5a6aa76e0",
        "identityResource": "managed/alpha_user",
        "nodes": {
          "0ae0593b-887e-48f4-92b3-69c5a6aa76e0": {
            "connections": {
              "outcome": "73d83a7f-452e-47a0-ba47-593a483d2e11",
            },
            "displayName": "Page Node",
            "nodeType": "PageNode",
            "x": 210,
            "y": 127.5,
          },
          "273557b0-0791-418a-95e2-c8d7aaa3a31a": {
            "connections": {
              "outcome": "9c84ee8f-2493-44a6-a99c-ada43e933fae",
            },
            "displayName": "Email Suspend Node",
            "nodeType": "EmailSuspendNode",
            "x": 702,
            "y": 162.5,
          },
          "73d83a7f-452e-47a0-ba47-593a483d2e11": {
            "connections": {
              "false": "273557b0-0791-418a-95e2-c8d7aaa3a31a",
              "true": "273557b0-0791-418a-95e2-c8d7aaa3a31a",
            },
            "displayName": "Identify Existing User",
            "nodeType": "IdentifyExistingUserNode",
            "x": 455,
            "y": 137,
          },
          "9c84ee8f-2493-44a6-a99c-ada43e933fae": {
            "connections": {
              "outcome": "dbae03a7-208a-4a27-b089-ef2c6fd6cbe8",
            },
            "displayName": "Page Node",
            "nodeType": "PageNode",
            "x": 944,
            "y": 127.5,
          },
          "dbae03a7-208a-4a27-b089-ef2c6fd6cbe8": {
            "connections": {
              "FAILURE": "e301438c-0bd0-429c-ab0c-66126501069a",
              "PATCHED": "70e691a5-1e33-4ac3-a356-e7b6d60d92e0",
            },
            "displayName": "Patch Object",
            "nodeType": "PatchObjectNode",
            "x": 1189,
            "y": 137,
          },
        },
        "staticNodes": {
          "70e691a5-1e33-4ac3-a356-e7b6d60d92e0": {
            "x": 1419,
            "y": 80,
          },
          "e301438c-0bd0-429c-ab0c-66126501069a": {
            "x": 1419,
            "y": 230,
          },
          "startNode": {
            "x": 70,
            "y": 155,
          },
        },
        "uiConfig": {},
      },
    },
    "ResetPassword-Choice": {
      "circlesOfTrust": {},
      "emailTemplates": {},
      "innerNodes": {
        "1d7783ef-b93c-42a8-91af-f9a946d7a371": {
          "_id": "1d7783ef-b93c-42a8-91af-f9a946d7a371",
          "_outcomes": [
            {
              "displayName": "Outcome",
              "id": "outcome",
            },
          ],
          "_rev": "2142755968",
          "_type": {
            "_id": "ValidatedPasswordNode",
            "collection": true,
            "name": "Platform Password",
          },
          "passwordAttribute": "password",
          "validateInput": true,
        },
        "2561dd31-79fa-4576-9904-7df05da0300d": {
          "_id": "2561dd31-79fa-4576-9904-7df05da0300d",
          "_outcomes": [
            {
              "displayName": "Outcome",
              "id": "outcome",
            },
          ],
          "_rev": "-716497473",
          "_type": {
            "_id": "AttributeCollectorNode",
            "collection": true,
            "name": "Attribute Collector",
          },
          "attributesToCollect": [
            "mail",
          ],
          "identityAttribute": "mail",
          "required": true,
          "validateInputs": false,
        },
        "4459ff4d-78b1-4465-8ede-bc74387234e4": {
          "_id": "4459ff4d-78b1-4465-8ede-bc74387234e4",
          "_outcomes": [
            {
              "displayName": "true",
              "id": "true",
            },
          ],
          "_rev": "813604793",
          "_type": {
            "_id": "ScriptedDecisionNode",
            "collection": true,
            "name": "Scripted Decision",
          },
          "inputs": [
            "*",
          ],
          "outcomes": [
            "true",
          ],
          "outputs": [
            "*",
          ],
          "script": "021e434f-89b6-45fb-9d67-5147bc1650c3",
        },
      },
      "nodes": {
        "0f20f0ee-4ee6-4c68-abd0-bc8cd7c4ca61": {
          "_id": "0f20f0ee-4ee6-4c68-abd0-bc8cd7c4ca61",
          "_outcomes": [
            {
              "displayName": "True",
              "id": "true",
            },
            {
              "displayName": "False",
              "id": "false",
            },
          ],
          "_rev": "-1002277020",
          "_type": {
            "_id": "IdentifyExistingUserNode",
            "collection": true,
            "name": "Identify Existing User",
          },
          "identifier": "userName",
          "identityAttribute": "mail",
        },
        "3cf8798d-6cf6-41ab-a98d-ef4ecefc40bc": {
          "_id": "3cf8798d-6cf6-41ab-a98d-ef4ecefc40bc",
          "_outcomes": [
            {
              "displayName": "True",
              "id": "true",
            },
            {
              "displayName": "False",
              "id": "false",
            },
          ],
          "_rev": "1339040522",
          "_type": {
            "_id": "OneTimePasswordCollectorDecisionNode",
            "collection": true,
            "name": "OTP Collector Decision",
          },
          "passwordExpiryTime": 5,
        },
        "43852e45-1b81-4062-951b-51655ddda433": {
          "_id": "43852e45-1b81-4062-951b-51655ddda433",
          "_outcomes": [
            {
              "displayName": "sent",
              "id": "sent",
            },
            {
              "displayName": "failed",
              "id": "failed",
            },
          ],
          "_rev": "1425448582",
          "_type": {
            "_id": "ScriptedDecisionNode",
            "collection": true,
            "name": "Scripted Decision",
          },
          "inputs": [
            "*",
          ],
          "outcomes": [
            "sent",
            "failed",
          ],
          "outputs": [
            "*",
          ],
          "script": "91554b10-79a5-4aa8-aca1-59481a734c19",
        },
        "5a89bf12-a735-4535-a955-360fe165f3b4": {
          "_id": "5a89bf12-a735-4535-a955-360fe165f3b4",
          "_outcomes": [
            {
              "displayName": "Outcome",
              "id": "outcome",
            },
          ],
          "_rev": "132053013",
          "_type": {
            "_id": "OneTimePasswordGeneratorNode",
            "collection": true,
            "name": "HOTP Generator",
          },
          "length": 6,
        },
        "642f18f7-aa2d-4c68-9660-3f60e938f060": {
          "_id": "642f18f7-aa2d-4c68-9660-3f60e938f060",
          "_outcomes": [
            {
              "displayName": "Patched",
              "id": "PATCHED",
            },
            {
              "displayName": "Failed",
              "id": "FAILURE",
            },
          ],
          "_rev": "-2038081849",
          "_type": {
            "_id": "PatchObjectNode",
            "collection": true,
            "name": "Patch Object",
          },
          "identityAttribute": "mail",
          "identityResource": "managed/alpha_user",
          "ignoredFields": [],
          "patchAsObject": false,
        },
        "99dd9549-bf83-49ec-87ef-39584adfe3ea": {
          "_id": "99dd9549-bf83-49ec-87ef-39584adfe3ea",
          "_outcomes": [
            {
              "displayName": "True",
              "id": "true",
            },
            {
              "displayName": "False",
              "id": "false",
            },
          ],
          "_rev": "1539417021",
          "_type": {
            "_id": "MessageNode",
            "collection": true,
            "name": "Message Node",
          },
          "message": {
            "EN": "How would you like to reset your password?",
          },
          "messageNo": {
            "EN": "Email",
          },
          "messageYes": {
            "EN": "SMS",
          },
        },
        "e1a1e26b-72f8-4f51-9529-d4cdef60f174": {
          "_id": "e1a1e26b-72f8-4f51-9529-d4cdef60f174",
          "_outcomes": [
            {
              "displayName": "Outcome",
              "id": "outcome",
            },
          ],
          "_rev": "1332153474",
          "_type": {
            "_id": "EmailSuspendNode",
            "collection": true,
            "name": "Email Suspend Node",
          },
          "emailAttribute": "mail",
          "emailSuspendMessage": {
            "en": "An email has been sent to the address you entered. Click the link in that email to proceed.",
          },
          "emailTemplateName": "resetPassword",
          "identityAttribute": "mail",
          "objectLookup": true,
        },
        "f33ce13a-2d50-45f9-83f0-3939bcd667dc": {
          "_id": "f33ce13a-2d50-45f9-83f0-3939bcd667dc",
          "_outcomes": [
            {
              "displayName": "Outcome",
              "id": "outcome",
            },
          ],
          "_rev": "-923983710",
          "_type": {
            "_id": "PageNode",
            "collection": true,
            "name": "Page Node",
          },
          "nodes": [
            {
              "_id": "2561dd31-79fa-4576-9904-7df05da0300d",
              "displayName": "Attribute Collector",
              "nodeType": "AttributeCollectorNode",
            },
          ],
          "pageDescription": {
            "en": "Enter your User Name or <a href="#/service/Login">Sign in</a>",
          },
          "pageHeader": {
            "en": "Reset Password",
          },
        },
        "f6bd0479-7f4c-42f1-87ee-091bf17c4903": {
          "_id": "f6bd0479-7f4c-42f1-87ee-091bf17c4903",
          "_outcomes": [
            {
              "displayName": "true",
              "id": "true",
            },
          ],
          "_rev": "986887660",
          "_type": {
            "_id": "PageNode",
            "collection": true,
            "name": "Page Node",
          },
          "nodes": [
            {
              "_id": "1d7783ef-b93c-42a8-91af-f9a946d7a371",
              "displayName": "Platform Password",
              "nodeType": "ValidatedPasswordNode",
            },
            {
              "_id": "4459ff4d-78b1-4465-8ede-bc74387234e4",
              "displayName": "Scripted Decision",
              "nodeType": "ScriptedDecisionNode",
            },
          ],
          "pageDescription": {
            "en": "Change password",
          },
          "pageHeader": {
            "en": "Reset Password",
          },
        },
      },
      "saml2Entities": {},
      "scripts": {},
      "socialIdentityProviders": {},
      "themes": [],
      "tree": {
        "_id": "ResetPassword-Choice",
        "_rev": "205923890",
        "description": "Reset Password Tree",
        "enabled": true,
        "entryNodeId": "f33ce13a-2d50-45f9-83f0-3939bcd667dc",
        "identityResource": "managed/alpha_user",
        "nodes": {
          "0f20f0ee-4ee6-4c68-abd0-bc8cd7c4ca61": {
            "connections": {
              "false": "99dd9549-bf83-49ec-87ef-39584adfe3ea",
              "true": "99dd9549-bf83-49ec-87ef-39584adfe3ea",
            },
            "displayName": "Identify Existing User",
            "nodeType": "IdentifyExistingUserNode",
            "x": 172,
            "y": 224.015625,
          },
          "3cf8798d-6cf6-41ab-a98d-ef4ecefc40bc": {
            "connections": {
              "false": "e301438c-0bd0-429c-ab0c-66126501069a",
              "true": "f6bd0479-7f4c-42f1-87ee-091bf17c4903",
            },
            "displayName": "Validate OTP",
            "nodeType": "OneTimePasswordCollectorDecisionNode",
            "x": 589,
            "y": 560.015625,
          },
          "43852e45-1b81-4062-951b-51655ddda433": {
            "connections": {
              "failed": "e301438c-0bd0-429c-ab0c-66126501069a",
              "sent": "3cf8798d-6cf6-41ab-a98d-ef4ecefc40bc",
            },
            "displayName": "Send OTP",
            "nodeType": "ScriptedDecisionNode",
            "x": 578,
            "y": 446.015625,
          },
          "5a89bf12-a735-4535-a955-360fe165f3b4": {
            "connections": {
              "outcome": "43852e45-1b81-4062-951b-51655ddda433",
            },
            "displayName": "Generate OTP Code",
            "nodeType": "OneTimePasswordGeneratorNode",
            "x": 548,
            "y": 376.015625,
          },
          "642f18f7-aa2d-4c68-9660-3f60e938f060": {
            "connections": {
              "FAILURE": "e301438c-0bd0-429c-ab0c-66126501069a",
              "PATCHED": "70e691a5-1e33-4ac3-a356-e7b6d60d92e0",
            },
            "displayName": "Patch Object",
            "nodeType": "PatchObjectNode",
            "x": 1189,
            "y": 137,
          },
          "99dd9549-bf83-49ec-87ef-39584adfe3ea": {
            "connections": {
              "false": "e1a1e26b-72f8-4f51-9529-d4cdef60f174",
              "true": "5a89bf12-a735-4535-a955-360fe165f3b4",
            },
            "displayName": "MFA Choice",
            "nodeType": "MessageNode",
            "x": 445,
            "y": 145.015625,
          },
          "e1a1e26b-72f8-4f51-9529-d4cdef60f174": {
            "connections": {
              "outcome": "f6bd0479-7f4c-42f1-87ee-091bf17c4903",
            },
            "displayName": "Email Suspend Node",
            "nodeType": "EmailSuspendNode",
            "x": 717,
            "y": 132.5,
          },
          "f33ce13a-2d50-45f9-83f0-3939bcd667dc": {
            "connections": {
              "outcome": "0f20f0ee-4ee6-4c68-abd0-bc8cd7c4ca61",
            },
            "displayName": "Page Node",
            "nodeType": "PageNode",
            "x": 179,
            "y": 42.5,
          },
          "f6bd0479-7f4c-42f1-87ee-091bf17c4903": {
            "connections": {
              "true": "70e691a5-1e33-4ac3-a356-e7b6d60d92e0",
            },
            "displayName": "Page Node",
            "nodeType": "PageNode",
            "x": 872,
            "y": 265.5,
          },
        },
        "staticNodes": {
          "70e691a5-1e33-4ac3-a356-e7b6d60d92e0": {
            "x": 1419,
            "y": 80,
          },
          "e301438c-0bd0-429c-ab0c-66126501069a": {
            "x": 1419,
            "y": 230,
          },
          "startNode": {
            "x": 70,
            "y": 155,
          },
        },
        "uiConfig": {},
      },
    },
    "ResetReplayCredentials": {
      "circlesOfTrust": {},
      "emailTemplates": {},
      "innerNodes": {
        "0faca924-3807-44cd-838d-725e4b9637fe": {
          "_id": "0faca924-3807-44cd-838d-725e4b9637fe",
          "_outcomes": [
            {
              "displayName": "Outcome",
              "id": "outcome",
            },
          ],
          "_rev": "268156159",
          "_type": {
            "_id": "DisplayUserNameNode",
            "collection": true,
            "name": "Display Username",
          },
          "identityAttribute": "mail",
          "userName": "userName",
        },
        "1e495ccf-2c7a-41e4-b0ce-39d8322409d8": {
          "_id": "1e495ccf-2c7a-41e4-b0ce-39d8322409d8",
          "_outcomes": [
            {
              "displayName": "Outcome",
              "id": "outcome",
            },
          ],
          "_rev": "99873781",
          "_type": {
            "_id": "DisplayUserNameNode",
            "collection": true,
            "name": "Display Username",
          },
          "identityAttribute": "mail",
          "userName": "userName",
        },
      },
      "nodes": {
        "0624799b-ab5b-4f1d-8bb7-9558725a7eb0": {
          "_id": "0624799b-ab5b-4f1d-8bb7-9558725a7eb0",
          "_outcomes": [
            {
              "displayName": "True",
              "id": "true",
            },
            {
              "displayName": "False",
              "id": "false",
            },
          ],
          "_rev": "-1467654681",
          "_type": {
            "_id": "IdentifyExistingUserNode",
            "collection": true,
            "name": "Identify Existing User",
          },
          "identifier": "userName",
          "identityAttribute": "userName",
        },
        "1df072c3-9885-47bb-94ab-5205c202b4c2": {
          "_id": "1df072c3-9885-47bb-94ab-5205c202b4c2",
          "_outcomes": [
            {
              "displayName": "Outcome",
              "id": "outcome",
            },
          ],
          "_rev": "-1829508816",
          "_type": {
            "_id": "PageNode",
            "collection": true,
            "name": "Page Node",
          },
          "nodes": [
            {
              "_id": "0faca924-3807-44cd-838d-725e4b9637fe",
              "displayName": "Display Username",
              "nodeType": "DisplayUserNameNode",
            },
          ],
          "pageDescription": {
            "en": "Successfully reset replay credentials for user:",
          },
          "pageHeader": {
            "en": "Reset Complete",
          },
        },
        "5220abe0-0811-44de-97e8-bd40704428f6": {
          "_id": "5220abe0-0811-44de-97e8-bd40704428f6",
          "_outcomes": [
            {
              "displayName": "true",
              "id": "true",
            },
          ],
          "_rev": "292106372",
          "_type": {
            "_id": "ScriptedDecisionNode",
            "collection": true,
            "name": "Scripted Decision",
          },
          "inputs": [
            "*",
          ],
          "outcomes": [
            "true",
          ],
          "outputs": [
            "*",
          ],
          "script": "a8f10e93-3f6c-4d6c-b6a3-a8453e3d6b3a",
        },
        "6210fb7f-99bb-4f4a-9eb7-7eea0eb0ff55": {
          "_id": "6210fb7f-99bb-4f4a-9eb7-7eea0eb0ff55",
          "_outcomes": [
            {
              "displayName": "Patched",
              "id": "PATCHED",
            },
            {
              "displayName": "Failed",
              "id": "FAILURE",
            },
          ],
          "_rev": "-232460769",
          "_type": {
            "_id": "PatchObjectNode",
            "collection": true,
            "name": "Patch Object",
          },
          "identityAttribute": "userName",
          "identityResource": "managed/alpha_user",
          "ignoredFields": [
            "userName",
          ],
          "patchAsObject": false,
        },
        "7ea15e15-859c-46b4-9231-2e6d282e6b58": {
          "_id": "7ea15e15-859c-46b4-9231-2e6d282e6b58",
          "_outcomes": [
            {
              "displayName": "Outcome",
              "id": "outcome",
            },
          ],
          "_rev": "-1264098092",
          "_type": {
            "_id": "SessionDataNode",
            "collection": true,
            "name": "Get Session Data",
          },
          "sessionDataKey": "UserToken",
          "sharedStateKey": "userName",
        },
        "97f2bcb6-553b-4521-aa40-a9deca37e12b": {
          "_id": "97f2bcb6-553b-4521-aa40-a9deca37e12b",
          "_outcomes": [
            {
              "displayName": "True",
              "id": "true",
            },
            {
              "displayName": "False",
              "id": "false",
            },
          ],
          "_rev": "-1748973959",
          "_type": {
            "_id": "AttributePresentDecisionNode",
            "collection": true,
            "name": "Attribute Present Decision",
          },
          "identityAttribute": "userName",
          "presentAttribute": "frUnindexedString1",
        },
        "d5064521-1d4f-4800-beda-ac117401f754": {
          "_id": "d5064521-1d4f-4800-beda-ac117401f754",
          "_outcomes": [
            {
              "displayName": "True",
              "id": "true",
            },
            {
              "displayName": "False",
              "id": "false",
            },
          ],
          "_rev": "210140579",
          "_type": {
            "_id": "AttributePresentDecisionNode",
            "collection": true,
            "name": "Attribute Present Decision",
          },
          "identityAttribute": "userName",
          "presentAttribute": "frUnindexedString2",
        },
        "e2b47b2f-c503-4200-92f5-c66389e2507a": {
          "_id": "e2b47b2f-c503-4200-92f5-c66389e2507a",
          "_outcomes": [
            {
              "displayName": "Outcome",
              "id": "outcome",
            },
          ],
          "_rev": "-882631302",
          "_type": {
            "_id": "PageNode",
            "collection": true,
            "name": "Page Node",
          },
          "nodes": [
            {
              "_id": "1e495ccf-2c7a-41e4-b0ce-39d8322409d8",
              "displayName": "Display Username",
              "nodeType": "DisplayUserNameNode",
            },
          ],
          "pageDescription": {
            "en": "No credentials to reset for user:",
          },
          "pageHeader": {
            "en": "No Credentials To Reset",
          },
        },
        "f36e54a7-5ab3-4051-bdc1-b89d443273df": {
          "_id": "f36e54a7-5ab3-4051-bdc1-b89d443273df",
          "_outcomes": [
            {
              "displayName": "Outcome",
              "id": "outcome",
            },
          ],
          "_rev": "778904356",
          "_type": {
            "_id": "SetSuccessUrlNode",
            "collection": true,
            "name": "Success URL",
          },
          "successUrl": "https://idc.scheuber.io/login/?realm=/alpha#/service/Launcher",
        },
      },
      "saml2Entities": {},
      "scripts": {},
      "socialIdentityProviders": {},
      "themes": [],
      "tree": {
        "_id": "ResetReplayCredentials",
        "_rev": "-1486686917",
        "description": "Journey for IG Password Replay Use Case",
        "enabled": true,
        "entryNodeId": "7ea15e15-859c-46b4-9231-2e6d282e6b58",
        "identityResource": "managed/alpha_user",
        "nodes": {
          "0624799b-ab5b-4f1d-8bb7-9558725a7eb0": {
            "connections": {
              "false": "e301438c-0bd0-429c-ab0c-66126501069a",
              "true": "97f2bcb6-553b-4521-aa40-a9deca37e12b",
            },
            "displayName": "Lookup User",
            "nodeType": "IdentifyExistingUserNode",
            "x": 356,
            "y": 361.015625,
          },
          "1df072c3-9885-47bb-94ab-5205c202b4c2": {
            "connections": {
              "outcome": "f36e54a7-5ab3-4051-bdc1-b89d443273df",
            },
            "displayName": "Success",
            "nodeType": "PageNode",
            "x": 1450,
            "y": 103.015625,
          },
          "5220abe0-0811-44de-97e8-bd40704428f6": {
            "connections": {
              "true": "6210fb7f-99bb-4f4a-9eb7-7eea0eb0ff55",
            },
            "displayName": "Prepare Reset",
            "nodeType": "ScriptedDecisionNode",
            "x": 993,
            "y": 224.015625,
          },
          "6210fb7f-99bb-4f4a-9eb7-7eea0eb0ff55": {
            "connections": {
              "FAILURE": "70e691a5-1e33-4ac3-a356-e7b6d60d92e0",
              "PATCHED": "1df072c3-9885-47bb-94ab-5205c202b4c2",
            },
            "displayName": "Reset Credentials",
            "nodeType": "PatchObjectNode",
            "x": 1219,
            "y": 153.015625,
          },
          "7ea15e15-859c-46b4-9231-2e6d282e6b58": {
            "connections": {
              "outcome": "0624799b-ab5b-4f1d-8bb7-9558725a7eb0",
            },
            "displayName": "Get Session Data",
            "nodeType": "SessionDataNode",
            "x": 150,
            "y": 387.015625,
          },
          "97f2bcb6-553b-4521-aa40-a9deca37e12b": {
            "connections": {
              "false": "e2b47b2f-c503-4200-92f5-c66389e2507a",
              "true": "d5064521-1d4f-4800-beda-ac117401f754",
            },
            "displayName": "Username?",
            "nodeType": "AttributePresentDecisionNode",
            "x": 569,
            "y": 300.015625,
          },
          "d5064521-1d4f-4800-beda-ac117401f754": {
            "connections": {
              "false": "e2b47b2f-c503-4200-92f5-c66389e2507a",
              "true": "5220abe0-0811-44de-97e8-bd40704428f6",
            },
            "displayName": "Password?",
            "nodeType": "AttributePresentDecisionNode",
            "x": 778,
            "y": 248.015625,
          },
          "e2b47b2f-c503-4200-92f5-c66389e2507a": {
            "connections": {
              "outcome": "f36e54a7-5ab3-4051-bdc1-b89d443273df",
            },
            "displayName": "No Creds",
            "nodeType": "PageNode",
            "x": 1450.111111111111,
            "y": 232.01736111111114,
          },
          "f36e54a7-5ab3-4051-bdc1-b89d443273df": {
            "connections": {
              "outcome": "70e691a5-1e33-4ac3-a356-e7b6d60d92e0",
            },
            "displayName": "Success URL",
            "nodeType": "SetSuccessUrlNode",
            "x": 1699,
            "y": 84.015625,
          },
        },
        "staticNodes": {
          "70e691a5-1e33-4ac3-a356-e7b6d60d92e0": {
            "x": 1931,
            "y": 30,
          },
          "e301438c-0bd0-429c-ab0c-66126501069a": {
            "x": 1940,
            "y": 413,
          },
          "startNode": {
            "x": 42,
            "y": 380,
          },
        },
        "uiConfig": {
          "categories": "["Proof Of Concept","Prototype","Helper"]",
        },
      },
    },
    "Routed_OIDC": {
      "circlesOfTrust": {},
      "emailTemplates": {},
      "innerNodes": {},
      "nodes": {
        "035cd986-9bbd-4344-91ab-e2b74da48229": {
          "_id": "035cd986-9bbd-4344-91ab-e2b74da48229",
          "_outcomes": [
            {
              "displayName": "true",
              "id": "true",
            },
            {
              "displayName": "false",
              "id": "false",
            },
          ],
          "_rev": "1579671692",
          "_type": {
            "_id": "ScriptedDecisionNode",
            "collection": true,
            "name": "Scripted Decision",
          },
          "inputs": [
            "*",
          ],
          "outcomes": [
            "true",
            "false",
          ],
          "outputs": [
            "*",
          ],
          "script": "5b553f58-16bd-42b7-a782-4a981a66dbd4",
        },
        "4801ea1a-e24c-442b-9721-e9846fd85811": {
          "_id": "4801ea1a-e24c-442b-9721-e9846fd85811",
          "_outcomes": [
            {
              "displayName": "Created",
              "id": "CREATED",
            },
            {
              "displayName": "Failed",
              "id": "FAILURE",
            },
          ],
          "_rev": "846832603",
          "_type": {
            "_id": "CreateObjectNode",
            "collection": true,
            "name": "Create Object",
          },
          "identityResource": "managed/alpha_user",
        },
        "8a7a662a-78dd-4a48-b576-2b017c3edafc": {
          "_id": "8a7a662a-78dd-4a48-b576-2b017c3edafc",
          "_outcomes": [
            {
              "displayName": "true",
              "id": "true",
            },
            {
              "displayName": "false",
              "id": "false",
            },
          ],
          "_rev": "-1249200068",
          "_type": {
            "_id": "ScriptedDecisionNode",
            "collection": true,
            "name": "Scripted Decision",
          },
          "inputs": [
            "*",
          ],
          "outcomes": [
            "true",
            "false",
          ],
          "outputs": [
            "*",
          ],
          "script": "988c10fa-98da-4bf7-8ac9-a558d2fef1fd",
        },
        "a9f948ac-1c08-4082-afe1-3456ce30598d": {
          "_id": "a9f948ac-1c08-4082-afe1-3456ce30598d",
          "_outcomes": [
            {
              "displayName": "Account exists",
              "id": "ACCOUNT_EXISTS",
            },
            {
              "displayName": "No account exists",
              "id": "NO_ACCOUNT",
            },
          ],
          "_rev": "-1980381",
          "_type": {
            "_id": "SocialProviderHandlerNode",
            "collection": true,
            "name": "Social Provider Handler Node",
          },
          "clientType": "BROWSER",
          "script": "58c824ae-84ed-4724-82cd-db128fc3f6c",
          "usernameAttribute": "userName",
        },
        "b0e5911f-0841-43eb-9e4c-28c7b0508134": {
          "_id": "b0e5911f-0841-43eb-9e4c-28c7b0508134",
          "_outcomes": [
            {
              "displayName": "true",
              "id": "true",
            },
          ],
          "_rev": "-424652259",
          "_type": {
            "_id": "ScriptedDecisionNode",
            "collection": true,
            "name": "Scripted Decision",
          },
          "inputs": [
            "*",
          ],
          "outcomes": [
            "true",
          ],
          "outputs": [
            "*",
          ],
          "script": "3981c0d3-0e3a-4c1d-be6b-5442e8acd3a1",
        },
        "b77e975f-6cf6-4656-b998-dae90c96406d": {
          "_id": "b77e975f-6cf6-4656-b998-dae90c96406d",
          "_outcomes": [
            {
              "displayName": "True",
              "id": "true",
            },
            {
              "displayName": "False",
              "id": "false",
            },
          ],
          "_rev": "959415493",
          "_type": {
            "_id": "InnerTreeEvaluatorNode",
            "collection": true,
            "name": "Inner Tree Evaluator",
          },
          "tree": "DefaultSuccessURL",
        },
        "bfa1b24c-89bc-4ec7-80a8-4b908a0fc238": {
          "_id": "bfa1b24c-89bc-4ec7-80a8-4b908a0fc238",
          "_outcomes": [
            {
              "displayName": "True",
              "id": "true",
            },
            {
              "displayName": "False",
              "id": "false",
            },
          ],
          "_rev": "1702685781",
          "_type": {
            "_id": "IdentifyExistingUserNode",
            "collection": true,
            "name": "Identify Existing User",
          },
          "identifier": "userName",
          "identityAttribute": "userName",
        },
        "f1c7f2b2-91ec-455b-ba0c-7a1c29d924f0": {
          "_id": "f1c7f2b2-91ec-455b-ba0c-7a1c29d924f0",
          "_outcomes": [
            {
              "displayName": "true",
              "id": "true",
            },
            {
              "displayName": "false",
              "id": "false",
            },
          ],
          "_rev": "1892981928",
          "_type": {
            "_id": "ScriptedDecisionNode",
            "collection": true,
            "name": "Scripted Decision",
          },
          "inputs": [
            "*",
          ],
          "outcomes": [
            "true",
            "false",
          ],
          "outputs": [
            "*",
          ],
          "script": "988c10fa-98da-4bf7-8ac9-a558d2fef1fd",
        },
      },
      "saml2Entities": {},
      "scripts": {},
      "socialIdentityProviders": {},
      "themes": [],
      "tree": {
        "_id": "Routed_OIDC",
        "_rev": "1403361253",
        "description": "Routed OIDC Authentication",
        "enabled": true,
        "entryNodeId": "a9f948ac-1c08-4082-afe1-3456ce30598d",
        "identityResource": "managed/alpha_user",
        "nodes": {
          "035cd986-9bbd-4344-91ab-e2b74da48229": {
            "connections": {
              "false": "b0e5911f-0841-43eb-9e4c-28c7b0508134",
              "true": "4801ea1a-e24c-442b-9721-e9846fd85811",
            },
            "displayName": "Persist?",
            "nodeType": "ScriptedDecisionNode",
            "x": 567,
            "y": 193.015625,
          },
          "4801ea1a-e24c-442b-9721-e9846fd85811": {
            "connections": {
              "CREATED": "b0e5911f-0841-43eb-9e4c-28c7b0508134",
              "FAILURE": "b0e5911f-0841-43eb-9e4c-28c7b0508134",
            },
            "displayName": "Persist User",
            "nodeType": "CreateObjectNode",
            "x": 783,
            "y": 158.015625,
          },
          "8a7a662a-78dd-4a48-b576-2b017c3edafc": {
            "connections": {
              "false": "e301438c-0bd0-429c-ab0c-66126501069a",
              "true": "035cd986-9bbd-4344-91ab-e2b74da48229",
            },
            "displayName": "IDP Integrity Check",
            "nodeType": "ScriptedDecisionNode",
            "x": 345,
            "y": 248.015625,
          },
          "a9f948ac-1c08-4082-afe1-3456ce30598d": {
            "connections": {
              "ACCOUNT_EXISTS": "f1c7f2b2-91ec-455b-ba0c-7a1c29d924f0",
              "NO_ACCOUNT": "8a7a662a-78dd-4a48-b576-2b017c3edafc",
            },
            "displayName": "OAuth/OIDC Login",
            "nodeType": "SocialProviderHandlerNode",
            "x": 127.95001220703125,
            "y": 116.76666259765625,
          },
          "b0e5911f-0841-43eb-9e4c-28c7b0508134": {
            "connections": {
              "true": "b77e975f-6cf6-4656-b998-dae90c96406d",
            },
            "displayName": "Profile In Session",
            "nodeType": "ScriptedDecisionNode",
            "x": 1015,
            "y": 61.015625,
          },
          "b77e975f-6cf6-4656-b998-dae90c96406d": {
            "connections": {
              "false": "70e691a5-1e33-4ac3-a356-e7b6d60d92e0",
              "true": "70e691a5-1e33-4ac3-a356-e7b6d60d92e0",
            },
            "displayName": "Default Destination",
            "nodeType": "InnerTreeEvaluatorNode",
            "x": 1238,
            "y": 35.015625,
          },
          "bfa1b24c-89bc-4ec7-80a8-4b908a0fc238": {
            "connections": {
              "false": "b0e5911f-0841-43eb-9e4c-28c7b0508134",
              "true": "b0e5911f-0841-43eb-9e4c-28c7b0508134",
            },
            "displayName": "Get User _id",
            "nodeType": "IdentifyExistingUserNode",
            "x": 786,
            "y": 29.015625,
          },
          "f1c7f2b2-91ec-455b-ba0c-7a1c29d924f0": {
            "connections": {
              "false": "e301438c-0bd0-429c-ab0c-66126501069a",
              "true": "bfa1b24c-89bc-4ec7-80a8-4b908a0fc238",
            },
            "displayName": "IDP Integrity Check",
            "nodeType": "ScriptedDecisionNode",
            "x": 342,
            "y": 23.015625,
          },
        },
        "staticNodes": {
          "70e691a5-1e33-4ac3-a356-e7b6d60d92e0": {
            "x": 1471,
            "y": 54,
          },
          "e301438c-0bd0-429c-ab0c-66126501069a": {
            "x": 1475,
            "y": 302,
          },
          "startNode": {
            "x": 21,
            "y": 134,
          },
        },
        "uiConfig": {
          "categories": "["Authentication","IDP Discovery"]",
        },
      },
    },
    "Routed_SAML": {
      "circlesOfTrust": {},
      "emailTemplates": {},
      "innerNodes": {},
      "nodes": {
        "05fe9d8e-1770-4bdc-8ac9-67ddba8e8432": {
          "_id": "05fe9d8e-1770-4bdc-8ac9-67ddba8e8432",
          "_outcomes": [
            {
              "displayName": "Account exists",
              "id": "ACCOUNT_EXISTS",
            },
            {
              "displayName": "No account exists",
              "id": "NO_ACCOUNT",
            },
            {
              "displayName": "Configuration failure",
              "id": "CONFIGURATION_FAILED",
            },
          ],
          "_rev": "1722766508",
          "_type": {
            "_id": "ConfigProviderNode",
            "collection": true,
            "name": "Configuration Provider",
          },
          "nodeType": "product-Saml2Node",
          "script": "5e854779-6ec1-4c39-aeba-0477e0986646",
          "scriptInputs": [
            "*",
          ],
        },
        "0c80b25d-dd24-4def-9bc9-2e7ed96b2879": {
          "_id": "0c80b25d-dd24-4def-9bc9-2e7ed96b2879",
          "_outcomes": [
            {
              "displayName": "True",
              "id": "true",
            },
            {
              "displayName": "False",
              "id": "false",
            },
          ],
          "_rev": "-600483156",
          "_type": {
            "_id": "InnerTreeEvaluatorNode",
            "collection": true,
            "name": "Inner Tree Evaluator",
          },
          "tree": "DefaultSuccessURL",
        },
        "1c3b67ab-de55-48eb-8c38-0a78c9511a7a": {
          "_id": "1c3b67ab-de55-48eb-8c38-0a78c9511a7a",
          "_outcomes": [
            {
              "displayName": "Created",
              "id": "CREATED",
            },
            {
              "displayName": "Failed",
              "id": "FAILURE",
            },
          ],
          "_rev": "646882497",
          "_type": {
            "_id": "CreateObjectNode",
            "collection": true,
            "name": "Create Object",
          },
          "identityResource": "managed/alpha_user",
        },
        "3bd82dbf-a1d2-483d-b5ae-71fc548c540f": {
          "_id": "3bd82dbf-a1d2-483d-b5ae-71fc548c540f",
          "_outcomes": [
            {
              "displayName": "true",
              "id": "true",
            },
          ],
          "_rev": "-164348524",
          "_type": {
            "_id": "ScriptedDecisionNode",
            "collection": true,
            "name": "Scripted Decision",
          },
          "inputs": [
            "*",
          ],
          "outcomes": [
            "true",
          ],
          "outputs": [
            "*",
          ],
          "script": "3981c0d3-0e3a-4c1d-be6b-5442e8acd3a1",
        },
        "4ae06ffe-b34b-4462-a316-386be50d9a7b": {
          "_id": "4ae06ffe-b34b-4462-a316-386be50d9a7b",
          "_outcomes": [
            {
              "displayName": "true",
              "id": "true",
            },
          ],
          "_rev": "2058070512",
          "_type": {
            "_id": "ScriptedDecisionNode",
            "collection": true,
            "name": "Scripted Decision",
          },
          "inputs": [
            "*",
          ],
          "outcomes": [
            "true",
          ],
          "outputs": [
            "*",
          ],
          "script": "8e03eb43-ed5d-4c12-9e15-2051cc9be578",
        },
        "4b3987f3-3ed4-43f2-915b-3856fba1b126": {
          "_id": "4b3987f3-3ed4-43f2-915b-3856fba1b126",
          "_outcomes": [
            {
              "displayName": "True",
              "id": "true",
            },
            {
              "displayName": "False",
              "id": "false",
            },
          ],
          "_rev": "-1293321853",
          "_type": {
            "_id": "IdentifyExistingUserNode",
            "collection": true,
            "name": "Identify Existing User",
          },
          "identifier": "userName",
          "identityAttribute": "userName",
        },
        "52091482-63f2-464e-aa73-2622d5149566": {
          "_id": "52091482-63f2-464e-aa73-2622d5149566",
          "_outcomes": [
            {
              "displayName": "known",
              "id": "known",
            },
            {
              "displayName": "unknown",
              "id": "unknown",
            },
          ],
          "_rev": "-1447076520",
          "_type": {
            "_id": "ScriptedDecisionNode",
            "collection": true,
            "name": "Scripted Decision",
          },
          "inputs": [
            "*",
          ],
          "outcomes": [
            "known",
            "unknown",
          ],
          "outputs": [
            "*",
          ],
          "script": "739bdc48-fd24-4c52-b353-88706d75558a",
        },
        "64aac883-f466-4f12-a831-df32de85e198": {
          "_id": "64aac883-f466-4f12-a831-df32de85e198",
          "_outcomes": [
            {
              "displayName": "true",
              "id": "true",
            },
          ],
          "_rev": "-1246547080",
          "_type": {
            "_id": "ScriptedDecisionNode",
            "collection": true,
            "name": "Scripted Decision",
          },
          "inputs": [
            "*",
          ],
          "outcomes": [
            "true",
          ],
          "outputs": [
            "*",
          ],
          "script": "3cb43516-ae69-433a-8787-501d45db14e9",
        },
        "99dd331f-2417-4a78-8840-f417d03b8e47": {
          "_id": "99dd331f-2417-4a78-8840-f417d03b8e47",
          "_outcomes": [
            {
              "displayName": "true",
              "id": "true",
            },
            {
              "displayName": "false",
              "id": "false",
            },
          ],
          "_rev": "1095733201",
          "_type": {
            "_id": "ScriptedDecisionNode",
            "collection": true,
            "name": "Scripted Decision",
          },
          "inputs": [
            "*",
          ],
          "outcomes": [
            "true",
            "false",
          ],
          "outputs": [
            "*",
          ],
          "script": "5b553f58-16bd-42b7-a782-4a981a66dbd4",
        },
        "bfbbb98a-1cb3-44c1-8eb3-c84a0a1cb4a8": {
          "_id": "bfbbb98a-1cb3-44c1-8eb3-c84a0a1cb4a8",
          "_outcomes": [
            {
              "displayName": "true",
              "id": "true",
            },
            {
              "displayName": "false",
              "id": "false",
            },
          ],
          "_rev": "-2127352114",
          "_type": {
            "_id": "ScriptedDecisionNode",
            "collection": true,
            "name": "Scripted Decision",
          },
          "inputs": [
            "*",
          ],
          "outcomes": [
            "true",
            "false",
          ],
          "outputs": [
            "*",
          ],
          "script": "988c10fa-98da-4bf7-8ac9-a558d2fef1fd",
        },
      },
      "saml2Entities": {},
      "scripts": {},
      "socialIdentityProviders": {},
      "themes": [],
      "tree": {
        "_id": "Routed_SAML",
        "_rev": "-2076043374",
        "description": "Routed SAML Authentication.",
        "enabled": true,
        "entryNodeId": "52091482-63f2-464e-aa73-2622d5149566",
        "identityResource": "managed/alpha_user",
        "nodes": {
          "05fe9d8e-1770-4bdc-8ac9-67ddba8e8432": {
            "connections": {
              "ACCOUNT_EXISTS": "4ae06ffe-b34b-4462-a316-386be50d9a7b",
              "CONFIGURATION_FAILED": "e301438c-0bd0-429c-ab0c-66126501069a",
              "NO_ACCOUNT": "4ae06ffe-b34b-4462-a316-386be50d9a7b",
            },
            "displayName": "SAML Login",
            "nodeType": "ConfigProviderNode",
            "x": 343,
            "y": 218.015625,
          },
          "0c80b25d-dd24-4def-9bc9-2e7ed96b2879": {
            "connections": {
              "false": "70e691a5-1e33-4ac3-a356-e7b6d60d92e0",
              "true": "70e691a5-1e33-4ac3-a356-e7b6d60d92e0",
            },
            "displayName": "Default Destination",
            "nodeType": "InnerTreeEvaluatorNode",
            "x": 1866,
            "y": 236.015625,
          },
          "1c3b67ab-de55-48eb-8c38-0a78c9511a7a": {
            "connections": {
              "CREATED": "3bd82dbf-a1d2-483d-b5ae-71fc548c540f",
              "FAILURE": "3bd82dbf-a1d2-483d-b5ae-71fc548c540f",
            },
            "displayName": "Create Account",
            "nodeType": "CreateObjectNode",
            "x": 1372,
            "y": 323.76666259765625,
          },
          "3bd82dbf-a1d2-483d-b5ae-71fc548c540f": {
            "connections": {
              "true": "0c80b25d-dd24-4def-9bc9-2e7ed96b2879",
            },
            "displayName": "Store SAML Profile In Session",
            "nodeType": "ScriptedDecisionNode",
            "x": 1584,
            "y": 262.015625,
          },
          "4ae06ffe-b34b-4462-a316-386be50d9a7b": {
            "connections": {
              "true": "bfbbb98a-1cb3-44c1-8eb3-c84a0a1cb4a8",
            },
            "displayName": "Process SAML Data",
            "nodeType": "ScriptedDecisionNode",
            "x": 550,
            "y": 261.76666259765625,
          },
          "4b3987f3-3ed4-43f2-915b-3856fba1b126": {
            "connections": {
              "false": "99dd331f-2417-4a78-8840-f417d03b8e47",
              "true": "3bd82dbf-a1d2-483d-b5ae-71fc548c540f",
            },
            "displayName": "Account Exists?",
            "nodeType": "IdentifyExistingUserNode",
            "x": 949,
            "y": 232.76666259765625,
          },
          "52091482-63f2-464e-aa73-2622d5149566": {
            "connections": {
              "known": "05fe9d8e-1770-4bdc-8ac9-67ddba8e8432",
              "unknown": "e301438c-0bd0-429c-ab0c-66126501069a",
            },
            "displayName": "Check Username",
            "nodeType": "ScriptedDecisionNode",
            "x": 140,
            "y": 235.015625,
          },
          "64aac883-f466-4f12-a831-df32de85e198": {
            "connections": {
              "true": "3bd82dbf-a1d2-483d-b5ae-71fc548c540f",
            },
            "displayName": "debug",
            "nodeType": "ScriptedDecisionNode",
            "x": 1372,
            "y": 190.015625,
          },
          "99dd331f-2417-4a78-8840-f417d03b8e47": {
            "connections": {
              "false": "3bd82dbf-a1d2-483d-b5ae-71fc548c540f",
              "true": "1c3b67ab-de55-48eb-8c38-0a78c9511a7a",
            },
            "displayName": "Persist?",
            "nodeType": "ScriptedDecisionNode",
            "x": 1167,
            "y": 412.015625,
          },
          "bfbbb98a-1cb3-44c1-8eb3-c84a0a1cb4a8": {
            "connections": {
              "false": "e301438c-0bd0-429c-ab0c-66126501069a",
              "true": "4b3987f3-3ed4-43f2-915b-3856fba1b126",
            },
            "displayName": "IDP Integrity Check",
            "nodeType": "ScriptedDecisionNode",
            "x": 749,
            "y": 234.015625,
          },
        },
        "staticNodes": {
          "70e691a5-1e33-4ac3-a356-e7b6d60d92e0": {
            "x": 2092,
            "y": 271,
          },
          "e301438c-0bd0-429c-ab0c-66126501069a": {
            "x": 976,
            "y": 441,
          },
          "startNode": {
            "x": 28,
            "y": 253,
          },
        },
        "uiConfig": {
          "categories": "["IDP Discovery","SAML"]",
        },
      },
    },
    "Router": {
      "circlesOfTrust": {},
      "emailTemplates": {},
      "innerNodes": {
        "cf0467e4-2bb4-455e-bbb7-e96945659965": {
          "_id": "cf0467e4-2bb4-455e-bbb7-e96945659965",
          "_outcomes": [
            {
              "displayName": "true",
              "id": "true",
            },
          ],
          "_rev": "790862126",
          "_type": {
            "_id": "ScriptedDecisionNode",
            "collection": true,
            "name": "Scripted Decision",
          },
          "inputs": [
            "*",
          ],
          "outcomes": [
            "true",
          ],
          "outputs": [
            "*",
          ],
          "script": "b703581a-e112-42b9-bc24-6db8bced5a13",
        },
        "ef79db60-93e4-420a-a7b5-8f75f8e6efdc": {
          "_id": "ef79db60-93e4-420a-a7b5-8f75f8e6efdc",
          "_outcomes": [
            {
              "displayName": "Outcome",
              "id": "outcome",
            },
          ],
          "_rev": "695506529",
          "_type": {
            "_id": "ValidatedUsernameNode",
            "collection": true,
            "name": "Platform Username",
          },
          "usernameAttribute": "userName",
          "validateInput": false,
        },
      },
      "nodes": {
        "1f53c6ab-49d2-4f92-b6e2-f7059236b7ac": {
          "_id": "1f53c6ab-49d2-4f92-b6e2-f7059236b7ac",
          "_outcomes": [
            {
              "displayName": "true",
              "id": "true",
            },
          ],
          "_rev": "1180489619",
          "_type": {
            "_id": "PageNode",
            "collection": true,
            "name": "Page Node",
          },
          "nodes": [
            {
              "_id": "cf0467e4-2bb4-455e-bbb7-e96945659965",
              "displayName": "Display States",
              "nodeType": "ScriptedDecisionNode",
            },
          ],
          "pageDescription": {
            "en": "A configuration error occurred.",
          },
          "pageHeader": {
            "en": "Configuration Error",
          },
        },
        "715d980d-b507-4ebc-918b-df965d8a1205": {
          "_id": "715d980d-b507-4ebc-918b-df965d8a1205",
          "_outcomes": [
            {
              "displayName": "Outcome",
              "id": "outcome",
            },
          ],
          "_rev": "-811529045",
          "_type": {
            "_id": "PageNode",
            "collection": true,
            "name": "Page Node",
          },
          "nodes": [
            {
              "_id": "ef79db60-93e4-420a-a7b5-8f75f8e6efdc",
              "displayName": "Username",
              "nodeType": "ValidatedUsernameNode",
            },
          ],
          "pageDescription": {
            "en": "Customer Sign-In",
          },
          "pageHeader": {},
        },
        "75f9ca89-5fe6-428b-a18a-6a3461240c77": {
          "_id": "75f9ca89-5fe6-428b-a18a-6a3461240c77",
          "_outcomes": [
            {
              "displayName": "True",
              "id": "true",
            },
            {
              "displayName": "False",
              "id": "false",
            },
          ],
          "_rev": "-579065375",
          "_type": {
            "_id": "InnerTreeEvaluatorNode",
            "collection": true,
            "name": "Inner Tree Evaluator",
          },
          "tree": "Routed_OIDC",
        },
        "76cb5ae9-f04e-4d05-abe1-5d944ba6d101": {
          "_id": "76cb5ae9-f04e-4d05-abe1-5d944ba6d101",
          "_outcomes": [
            {
              "displayName": "saml",
              "id": "saml",
            },
            {
              "displayName": "oidc",
              "id": "oidc",
            },
            {
              "displayName": "local",
              "id": "local",
            },
            {
              "displayName": "custom",
              "id": "custom",
            },
          ],
          "_rev": "1579122491",
          "_type": {
            "_id": "ScriptedDecisionNode",
            "collection": true,
            "name": "Scripted Decision",
          },
          "inputs": [
            "*",
          ],
          "outcomes": [
            "saml",
            "oidc",
            "local",
            "custom",
          ],
          "outputs": [
            "*",
          ],
          "script": "aef262d0-7a42-4a34-9826-e7dbc2ea6eb9",
        },
        "81c8e53a-b018-43e8-8eba-a8e417987fcf": {
          "_id": "81c8e53a-b018-43e8-8eba-a8e417987fcf",
          "_outcomes": [
            {
              "displayName": "True",
              "id": "true",
            },
            {
              "displayName": "False",
              "id": "false",
            },
          ],
          "_rev": "1347880882",
          "_type": {
            "_id": "InnerTreeEvaluatorNode",
            "collection": true,
            "name": "Inner Tree Evaluator",
          },
          "tree": "Login",
        },
        "b1150c50-dba8-4d69-ae94-11031aeb22f9": {
          "_id": "b1150c50-dba8-4d69-ae94-11031aeb22f9",
          "_outcomes": [
            {
              "displayName": "True",
              "id": "true",
            },
            {
              "displayName": "False",
              "id": "false",
            },
          ],
          "_rev": "177349699",
          "_type": {
            "_id": "InnerTreeEvaluatorNode",
            "collection": true,
            "name": "Inner Tree Evaluator",
          },
          "tree": "Routed_SAML",
        },
        "bfa8b307-df59-43ba-bfc6-c4527d547a1f": {
          "_id": "bfa8b307-df59-43ba-bfc6-c4527d547a1f",
          "_outcomes": [
            {
              "displayName": "True",
              "id": "true",
            },
            {
              "displayName": "False",
              "id": "false",
            },
            {
              "displayName": "Configuration failure",
              "id": "CONFIGURATION_FAILED",
            },
          ],
          "_rev": "-2111159944",
          "_type": {
            "_id": "ConfigProviderNode",
            "collection": true,
            "name": "Configuration Provider",
          },
          "nodeType": "InnerTreeEvaluatorNode",
          "script": "5e854779-6ec1-4c39-aeba-0477e0986646",
          "scriptInputs": [
            "*",
          ],
        },
        "c5e3589a-d119-4c05-94d7-5a445fe87ddd": {
          "_id": "c5e3589a-d119-4c05-94d7-5a445fe87ddd",
          "_outcomes": [
            {
              "displayName": "one",
              "id": "one",
            },
            {
              "displayName": "multiple",
              "id": "multiple",
            },
            {
              "displayName": "none",
              "id": "none",
            },
          ],
          "_rev": "1524744172",
          "_type": {
            "_id": "ScriptedDecisionNode",
            "collection": true,
            "name": "Scripted Decision",
          },
          "inputs": [
            "*",
          ],
          "outcomes": [
            "one",
            "multiple",
            "none",
          ],
          "outputs": [
            "*",
          ],
          "script": "68d5a8e7-fcc9-4215-9e63-a01afe8fa849",
        },
      },
      "saml2Entities": {},
      "scripts": {},
      "socialIdentityProviders": {},
      "themes": [],
      "tree": {
        "_id": "Router",
        "_rev": "-1451836538",
        "description": "Route users to their respective IDP based on their username, which is in email address format. The email domain determines IDP association.",
        "enabled": true,
        "entryNodeId": "715d980d-b507-4ebc-918b-df965d8a1205",
        "identityResource": "managed/alpha_user",
        "nodes": {
          "1f53c6ab-49d2-4f92-b6e2-f7059236b7ac": {
            "connections": {
              "true": "e301438c-0bd0-429c-ab0c-66126501069a",
            },
            "displayName": "Config Error",
            "nodeType": "PageNode",
            "x": 960,
            "y": 478.015625,
          },
          "715d980d-b507-4ebc-918b-df965d8a1205": {
            "connections": {
              "outcome": "c5e3589a-d119-4c05-94d7-5a445fe87ddd",
            },
            "displayName": "Login Page",
            "nodeType": "PageNode",
            "x": 106,
            "y": 237.015625,
          },
          "75f9ca89-5fe6-428b-a18a-6a3461240c77": {
            "connections": {
              "false": "e301438c-0bd0-429c-ab0c-66126501069a",
              "true": "70e691a5-1e33-4ac3-a356-e7b6d60d92e0",
            },
            "displayName": "OAuth/OIDC Login",
            "nodeType": "InnerTreeEvaluatorNode",
            "x": 752,
            "y": 179.015625,
          },
          "76cb5ae9-f04e-4d05-abe1-5d944ba6d101": {
            "connections": {
              "custom": "bfa8b307-df59-43ba-bfc6-c4527d547a1f",
              "local": "81c8e53a-b018-43e8-8eba-a8e417987fcf",
              "oidc": "75f9ca89-5fe6-428b-a18a-6a3461240c77",
              "saml": "b1150c50-dba8-4d69-ae94-11031aeb22f9",
            },
            "displayName": "Route to IDP",
            "nodeType": "ScriptedDecisionNode",
            "x": 531,
            "y": 217.015625,
          },
          "81c8e53a-b018-43e8-8eba-a8e417987fcf": {
            "connections": {
              "false": "e301438c-0bd0-429c-ab0c-66126501069a",
              "true": "70e691a5-1e33-4ac3-a356-e7b6d60d92e0",
            },
            "displayName": "Local Authentication",
            "nodeType": "InnerTreeEvaluatorNode",
            "x": 752,
            "y": 301.015625,
          },
          "b1150c50-dba8-4d69-ae94-11031aeb22f9": {
            "connections": {
              "false": "e301438c-0bd0-429c-ab0c-66126501069a",
              "true": "70e691a5-1e33-4ac3-a356-e7b6d60d92e0",
            },
            "displayName": "SAML Login",
            "nodeType": "InnerTreeEvaluatorNode",
            "x": 750,
            "y": 57.015625,
          },
          "bfa8b307-df59-43ba-bfc6-c4527d547a1f": {
            "connections": {
              "CONFIGURATION_FAILED": "1f53c6ab-49d2-4f92-b6e2-f7059236b7ac",
              "false": "e301438c-0bd0-429c-ab0c-66126501069a",
              "true": "70e691a5-1e33-4ac3-a356-e7b6d60d92e0",
            },
            "displayName": "Custom Login",
            "nodeType": "ConfigProviderNode",
            "x": 754,
            "y": 423.015625,
          },
          "c5e3589a-d119-4c05-94d7-5a445fe87ddd": {
            "connections": {
              "multiple": "76cb5ae9-f04e-4d05-abe1-5d944ba6d101",
              "none": "81c8e53a-b018-43e8-8eba-a8e417987fcf",
              "one": "76cb5ae9-f04e-4d05-abe1-5d944ba6d101",
            },
            "displayName": "IDP Lookup",
            "nodeType": "ScriptedDecisionNode",
            "x": 316,
            "y": 230.015625,
          },
        },
        "staticNodes": {
          "70e691a5-1e33-4ac3-a356-e7b6d60d92e0": {
            "x": 1198,
            "y": 204,
          },
          "e301438c-0bd0-429c-ab0c-66126501069a": {
            "x": 1198,
            "y": 351,
          },
          "startNode": {
            "x": 16,
            "y": 256,
          },
        },
        "uiConfig": {
          "categories": "["IDP Discovery"]",
        },
      },
    },
    "SCP-demo": {
      "circlesOfTrust": {},
      "emailTemplates": {},
      "innerNodes": {
        "728eefd6-f60c-433e-9a7e-4e73a005fc23": {
          "_id": "728eefd6-f60c-433e-9a7e-4e73a005fc23",
          "_outcomes": [
            {
              "displayName": "Outcome",
              "id": "outcome",
            },
          ],
          "_rev": "543151448",
          "_type": {
            "_id": "ValidatedPasswordNode",
            "collection": true,
            "name": "Platform Password",
          },
          "passwordAttribute": "password",
          "validateInput": false,
        },
        "e8837241-f474-40d7-af4a-f90e89eef07b": {
          "_id": "e8837241-f474-40d7-af4a-f90e89eef07b",
          "_outcomes": [
            {
              "displayName": "Outcome",
              "id": "outcome",
            },
          ],
          "_rev": "-963094544",
          "_type": {
            "_id": "ValidatedUsernameNode",
            "collection": true,
            "name": "Platform Username",
          },
          "usernameAttribute": "userName",
          "validateInput": false,
        },
      },
      "nodes": {
        "88b9f95e-cffe-4019-aad1-bf42dac3fec8": {
          "_id": "88b9f95e-cffe-4019-aad1-bf42dac3fec8",
          "_outcomes": [
            {
              "displayName": "Outcome",
              "id": "outcome",
            },
          ],
          "_rev": "1021056244",
          "_type": {
            "_id": "PageNode",
            "collection": true,
            "name": "Page Node",
          },
          "nodes": [
            {
              "_id": "e8837241-f474-40d7-af4a-f90e89eef07b",
              "displayName": "Platform Username",
              "nodeType": "ValidatedUsernameNode",
            },
            {
              "_id": "728eefd6-f60c-433e-9a7e-4e73a005fc23",
              "displayName": "Platform Password",
              "nodeType": "ValidatedPasswordNode",
            },
          ],
          "pageDescription": {},
          "pageHeader": {},
        },
        "d1c11988-604f-4401-94e7-471d02065236": {
          "_id": "d1c11988-604f-4401-94e7-471d02065236",
          "_outcomes": [
            {
              "displayName": "True",
              "id": "true",
            },
            {
              "displayName": "False",
              "id": "false",
            },
          ],
          "_rev": "300982266",
          "_type": {
            "_id": "InnerTreeEvaluatorNode",
            "collection": true,
            "name": "Inner Tree Evaluator",
          },
          "tree": "WebAuthN",
        },
        "e54c4a0d-579b-4296-bae5-c2e365a1ad58": {
          "_id": "e54c4a0d-579b-4296-bae5-c2e365a1ad58",
          "_outcomes": [
            {
              "displayName": "True",
              "id": "TRUE",
            },
            {
              "displayName": "False",
              "id": "FALSE",
            },
            {
              "displayName": "Locked",
              "id": "LOCKED",
            },
            {
              "displayName": "Cancelled",
              "id": "CANCELLED",
            },
            {
              "displayName": "Expired",
              "id": "EXPIRED",
            },
          ],
          "_rev": "720315428",
          "_type": {
            "_id": "IdentityStoreDecisionNode",
            "collection": true,
            "name": "Identity Store Decision",
          },
          "minimumPasswordLength": 8,
          "mixedCaseForPasswordChangeMessages": false,
          "useUniversalIdForUsername": false,
        },
      },
      "saml2Entities": {},
      "scripts": {},
      "socialIdentityProviders": {},
      "themes": [],
      "tree": {
        "_id": "SCP-demo",
        "_rev": "-480508798",
        "enabled": true,
        "entryNodeId": "88b9f95e-cffe-4019-aad1-bf42dac3fec8",
        "identityResource": "managed/alpha_user",
        "nodes": {
          "88b9f95e-cffe-4019-aad1-bf42dac3fec8": {
            "connections": {
              "outcome": "e54c4a0d-579b-4296-bae5-c2e365a1ad58",
            },
            "displayName": "Page Node",
            "nodeType": "PageNode",
            "x": 105,
            "y": 124.015625,
          },
          "d1c11988-604f-4401-94e7-471d02065236": {
            "connections": {
              "false": "e301438c-0bd0-429c-ab0c-66126501069a",
              "true": "70e691a5-1e33-4ac3-a356-e7b6d60d92e0",
            },
            "displayName": "Inner Tree Evaluator",
            "nodeType": "InnerTreeEvaluatorNode",
            "x": 492,
            "y": 102.015625,
          },
          "e54c4a0d-579b-4296-bae5-c2e365a1ad58": {
            "connections": {
              "FALSE": "e301438c-0bd0-429c-ab0c-66126501069a",
              "TRUE": "d1c11988-604f-4401-94e7-471d02065236",
            },
            "displayName": "Identity Store Decision",
            "nodeType": "IdentityStoreDecisionNode",
            "x": 243.1875,
            "y": 310.015625,
          },
        },
        "staticNodes": {
          "70e691a5-1e33-4ac3-a356-e7b6d60d92e0": {
            "x": 975,
            "y": 112,
          },
          "e301438c-0bd0-429c-ab0c-66126501069a": {
            "x": 912,
            "y": 365,
          },
          "startNode": {
            "x": 41,
            "y": 47,
          },
        },
        "uiConfig": {
          "categories": "[]",
        },
      },
    },
    "SendEmailTest": {
      "circlesOfTrust": {},
      "emailTemplates": {},
      "innerNodes": {
        "a3b18047-d080-4ddf-8730-f19cdadbf861": {
          "_id": "a3b18047-d080-4ddf-8730-f19cdadbf861",
          "_outcomes": [
            {
              "displayName": "Outcome",
              "id": "outcome",
            },
          ],
          "_rev": "-1173710155",
          "_type": {
            "_id": "ValidatedUsernameNode",
            "collection": true,
            "name": "Platform Username",
          },
          "usernameAttribute": "userName",
          "validateInput": false,
        },
      },
      "nodes": {
        "4d8bef2c-0877-4722-b19d-4bccb4cec6f9": {
          "_id": "4d8bef2c-0877-4722-b19d-4bccb4cec6f9",
          "_outcomes": [
            {
              "displayName": "Email Sent",
              "id": "EMAIL_SENT",
            },
            {
              "displayName": "Email Not Sent",
              "id": "EMAIL_NOT_SENT",
            },
            {
              "displayName": "Configuration failure",
              "id": "CONFIGURATION_FAILED",
            },
          ],
          "_rev": "-2058747214",
          "_type": {
            "_id": "ConfigProviderNode",
            "collection": true,
            "name": "Configuration Provider",
          },
          "nodeType": "EmailTemplateNode",
          "script": "5e854779-6ec1-4c39-aeba-0477e0986646",
          "scriptInputs": [
            "*",
          ],
        },
        "4f488444-eaff-4ee6-9a3f-a5ea05c5c519": {
          "_id": "4f488444-eaff-4ee6-9a3f-a5ea05c5c519",
          "_outcomes": [
            {
              "displayName": "True",
              "id": "true",
            },
            {
              "displayName": "False",
              "id": "false",
            },
          ],
          "_rev": "-1762782088",
          "_type": {
            "_id": "MessageNode",
            "collection": true,
            "name": "Message Node",
          },
          "message": {},
          "messageNo": {},
          "messageYes": {},
        },
        "5be03c0c-d33a-4dd9-b2dd-335dda67f9d8": {
          "_id": "5be03c0c-d33a-4dd9-b2dd-335dda67f9d8",
          "_outcomes": [
            {
              "displayName": "true",
              "id": "true",
            },
          ],
          "_rev": "1796342659",
          "_type": {
            "_id": "ScriptedDecisionNode",
            "collection": true,
            "name": "Scripted Decision",
          },
          "inputs": [
            "*",
          ],
          "outcomes": [
            "true",
          ],
          "outputs": [
            "*",
          ],
          "script": "3cb43516-ae69-433a-8787-501d45db14e9",
        },
        "5c5c7be7-3dca-4a54-8d6e-cdd98e75f923": {
          "_id": "5c5c7be7-3dca-4a54-8d6e-cdd98e75f923",
          "_outcomes": [
            {
              "displayName": "Outcome",
              "id": "outcome",
            },
          ],
          "_rev": "1310462602",
          "_type": {
            "_id": "PageNode",
            "collection": true,
            "name": "Page Node",
          },
          "nodes": [
            {
              "_id": "a3b18047-d080-4ddf-8730-f19cdadbf861",
              "displayName": "Username",
              "nodeType": "ValidatedUsernameNode",
            },
          ],
          "pageDescription": {},
          "pageHeader": {},
        },
        "952de04d-daa4-4828-832d-5b4c34f1d43a": {
          "_id": "952de04d-daa4-4828-832d-5b4c34f1d43a",
          "_outcomes": [
            {
              "displayName": "True",
              "id": "true",
            },
            {
              "displayName": "False",
              "id": "false",
            },
          ],
          "_rev": "-1347027231",
          "_type": {
            "_id": "MessageNode",
            "collection": true,
            "name": "Message Node",
          },
          "message": {
            "en": "Configuration Failure",
          },
          "messageNo": {},
          "messageYes": {},
        },
        "9d903201-8fcc-45fb-b93d-c119f19291ea": {
          "_id": "9d903201-8fcc-45fb-b93d-c119f19291ea",
          "_outcomes": [
            {
              "displayName": "True",
              "id": "true",
            },
            {
              "displayName": "False",
              "id": "false",
            },
          ],
          "_rev": "41541985",
          "_type": {
            "_id": "MessageNode",
            "collection": true,
            "name": "Message Node",
          },
          "message": {},
          "messageNo": {},
          "messageYes": {},
        },
        "ce74c2e3-c41c-44ff-96b0-ae6bd4f9e49c": {
          "_id": "ce74c2e3-c41c-44ff-96b0-ae6bd4f9e49c",
          "_outcomes": [
            {
              "displayName": "true",
              "id": "true",
            },
            {
              "displayName": "error",
              "id": "error",
            },
          ],
          "_rev": "664588218",
          "_type": {
            "_id": "ScriptedDecisionNode",
            "collection": true,
            "name": "Scripted Decision",
          },
          "inputs": [
            "*",
          ],
          "outcomes": [
            "true",
            "error",
          ],
          "outputs": [
            "*",
          ],
          "script": "22ab12ac-d1d9-414b-ab51-cfae30de8c0a",
        },
      },
      "saml2Entities": {},
      "scripts": {},
      "socialIdentityProviders": {},
      "themes": [],
      "tree": {
        "_id": "SendEmailTest",
        "_rev": "1939900329",
        "description": "Testing sending emails through the Email Template and the Config Provider nodes.",
        "enabled": true,
        "entryNodeId": "5c5c7be7-3dca-4a54-8d6e-cdd98e75f923",
        "identityResource": "managed/alpha_user",
        "nodes": {
          "4d8bef2c-0877-4722-b19d-4bccb4cec6f9": {
            "connections": {
              "CONFIGURATION_FAILED": "952de04d-daa4-4828-832d-5b4c34f1d43a",
              "EMAIL_NOT_SENT": "9d903201-8fcc-45fb-b93d-c119f19291ea",
              "EMAIL_SENT": "4f488444-eaff-4ee6-9a3f-a5ea05c5c519",
            },
            "displayName": "Configuration Provider",
            "nodeType": "ConfigProviderNode",
            "x": 630,
            "y": 221.015625,
          },
          "4f488444-eaff-4ee6-9a3f-a5ea05c5c519": {
            "connections": {
              "false": "e301438c-0bd0-429c-ab0c-66126501069a",
              "true": "e301438c-0bd0-429c-ab0c-66126501069a",
            },
            "displayName": "Email Sent",
            "nodeType": "MessageNode",
            "x": 892,
            "y": 141.015625,
          },
          "5be03c0c-d33a-4dd9-b2dd-335dda67f9d8": {
            "connections": {
              "true": "e301438c-0bd0-429c-ab0c-66126501069a",
            },
            "displayName": "Debug",
            "nodeType": "ScriptedDecisionNode",
            "x": 631,
            "y": 373.015625,
          },
          "5c5c7be7-3dca-4a54-8d6e-cdd98e75f923": {
            "connections": {
              "outcome": "ce74c2e3-c41c-44ff-96b0-ae6bd4f9e49c",
            },
            "displayName": "Page Node",
            "nodeType": "PageNode",
            "x": 176,
            "y": 229.015625,
          },
          "952de04d-daa4-4828-832d-5b4c34f1d43a": {
            "connections": {
              "false": "e301438c-0bd0-429c-ab0c-66126501069a",
              "true": "e301438c-0bd0-429c-ab0c-66126501069a",
            },
            "displayName": "Configuration Failure",
            "nodeType": "MessageNode",
            "x": 897,
            "y": 389.015625,
          },
          "9d903201-8fcc-45fb-b93d-c119f19291ea": {
            "connections": {
              "false": "e301438c-0bd0-429c-ab0c-66126501069a",
              "true": "e301438c-0bd0-429c-ab0c-66126501069a",
            },
            "displayName": "Email Not Sent",
            "nodeType": "MessageNode",
            "x": 896,
            "y": 265.015625,
          },
          "ce74c2e3-c41c-44ff-96b0-ae6bd4f9e49c": {
            "connections": {
              "error": "5be03c0c-d33a-4dd9-b2dd-335dda67f9d8",
              "true": "4d8bef2c-0877-4722-b19d-4bccb4cec6f9",
            },
            "displayName": "Prepare Config",
            "nodeType": "ScriptedDecisionNode",
            "x": 411,
            "y": 233.015625,
          },
        },
        "staticNodes": {
          "70e691a5-1e33-4ac3-a356-e7b6d60d92e0": {
            "x": 50,
            "y": 129,
          },
          "e301438c-0bd0-429c-ab0c-66126501069a": {
            "x": 1143,
            "y": 261,
          },
          "startNode": {
            "x": 50,
            "y": 250,
          },
        },
        "uiConfig": {
          "categories": "["Prototype"]",
        },
      },
    },
    "SessionInfo": {
      "circlesOfTrust": {},
      "emailTemplates": {},
      "innerNodes": {
        "f90b1838-1e94-4a29-82cc-21a8e6bd10cf": {
          "_id": "f90b1838-1e94-4a29-82cc-21a8e6bd10cf",
          "_outcomes": [
            {
              "displayName": "Goto SAML App",
              "id": "Goto SAML App",
            },
            {
              "displayName": "Goto OIDC App",
              "id": "Goto OIDC App",
            },
            {
              "displayName": "Goto Profile Page",
              "id": "Goto Profile Page",
            },
            {
              "displayName": "Logout",
              "id": "Logout",
            },
            {
              "displayName": "Login",
              "id": "Login",
            },
          ],
          "_rev": "-1585294571",
          "_type": {
            "_id": "ScriptedDecisionNode",
            "collection": true,
            "name": "Scripted Decision",
          },
          "inputs": [
            "*",
          ],
          "outcomes": [
            "Goto SAML App",
            "Goto OIDC App",
            "Goto Profile Page",
            "Logout",
            "Login",
          ],
          "outputs": [
            "*",
          ],
          "script": "37bf200a-158f-4a45-8ee5-81516e4593f8",
        },
      },
      "nodes": {
        "57f6d02d-a29a-4e54-8bee-f221a8fc8951": {
          "_id": "57f6d02d-a29a-4e54-8bee-f221a8fc8951",
          "_outcomes": [
            {
              "displayName": "Goto SAML App",
              "id": "Goto SAML App",
            },
            {
              "displayName": "Goto OIDC App",
              "id": "Goto OIDC App",
            },
            {
              "displayName": "Goto Profile Page",
              "id": "Goto Profile Page",
            },
            {
              "displayName": "Logout",
              "id": "Logout",
            },
            {
              "displayName": "Login",
              "id": "Login",
            },
          ],
          "_rev": "1853712271",
          "_type": {
            "_id": "PageNode",
            "collection": true,
            "name": "Page Node",
          },
          "nodes": [
            {
              "_id": "f90b1838-1e94-4a29-82cc-21a8e6bd10cf",
              "displayName": "Display Session",
              "nodeType": "ScriptedDecisionNode",
            },
          ],
          "pageDescription": {},
          "pageHeader": {},
        },
        "60efaf36-d679-4daa-b986-197b02f7a607": {
          "_id": "60efaf36-d679-4daa-b986-197b02f7a607",
          "_outcomes": [
            {
              "displayName": "Outcome",
              "id": "outcome",
            },
          ],
          "_rev": "-488097494",
          "_type": {
            "_id": "SetFailureUrlNode",
            "collection": true,
            "name": "Failure URL",
          },
          "failureUrl": "/login/?realm=alpha#/",
        },
        "a61dc7d0-36a1-439f-ad1a-44e742b9a15c": {
          "_id": "a61dc7d0-36a1-439f-ad1a-44e742b9a15c",
          "_outcomes": [
            {
              "displayName": "Outcome",
              "id": "outcome",
            },
          ],
          "_rev": "1226421655",
          "_type": {
            "_id": "SetSuccessUrlNode",
            "collection": true,
            "name": "Success URL",
          },
          "successUrl": "https://sp.mytestrun.com/home/federate",
        },
        "bacf89fb-3ec4-46b5-a75b-248bd577d720": {
          "_id": "bacf89fb-3ec4-46b5-a75b-248bd577d720",
          "_outcomes": [
            {
              "displayName": "Outcome",
              "id": "outcome",
            },
          ],
          "_rev": "-1192658668",
          "_type": {
            "_id": "SetSuccessUrlNode",
            "collection": true,
            "name": "Success URL",
          },
          "successUrl": "/enduser/?realm=alpha#/dashboard",
        },
        "e11003f7-f3ea-4fa5-aa94-3767607abb56": {
          "_id": "e11003f7-f3ea-4fa5-aa94-3767607abb56",
          "_outcomes": [
            {
              "displayName": "Outcome",
              "id": "outcome",
            },
          ],
          "_rev": "-1481807743",
          "_type": {
            "_id": "SetSuccessUrlNode",
            "collection": true,
            "name": "Success URL",
          },
          "successUrl": "https://ig.mytestrun.com/home/oidc",
        },
        "fed68078-fd01-4be6-a1ad-ca9ab272003e": {
          "_id": "fed68078-fd01-4be6-a1ad-ca9ab272003e",
          "_outcomes": [
            {
              "displayName": "true",
              "id": "true",
            },
          ],
          "_rev": "-770466975",
          "_type": {
            "_id": "ScriptedDecisionNode",
            "collection": true,
            "name": "Scripted Decision",
          },
          "inputs": [
            "*",
          ],
          "outcomes": [
            "true",
          ],
          "outputs": [
            "*",
          ],
          "script": "2aab9d46-9363-4061-9f63-eb824e33c505",
        },
      },
      "saml2Entities": {},
      "scripts": {},
      "socialIdentityProviders": {},
      "themes": [],
      "tree": {
        "_id": "SessionInfo",
        "_rev": "561079608",
        "description": "Display session info.",
        "enabled": true,
        "entryNodeId": "57f6d02d-a29a-4e54-8bee-f221a8fc8951",
        "identityResource": "managed/alpha_user",
        "nodes": {
          "57f6d02d-a29a-4e54-8bee-f221a8fc8951": {
            "connections": {
              "Goto OIDC App": "e11003f7-f3ea-4fa5-aa94-3767607abb56",
              "Goto Profile Page": "bacf89fb-3ec4-46b5-a75b-248bd577d720",
              "Goto SAML App": "a61dc7d0-36a1-439f-ad1a-44e742b9a15c",
              "Login": "60efaf36-d679-4daa-b986-197b02f7a607",
              "Logout": "fed68078-fd01-4be6-a1ad-ca9ab272003e",
            },
            "displayName": "Session Info",
            "nodeType": "PageNode",
            "x": 194,
            "y": 200.015625,
          },
          "60efaf36-d679-4daa-b986-197b02f7a607": {
            "connections": {
              "outcome": "e301438c-0bd0-429c-ab0c-66126501069a",
            },
            "displayName": "Login",
            "nodeType": "SetFailureUrlNode",
            "x": 429,
            "y": 420.015625,
          },
          "a61dc7d0-36a1-439f-ad1a-44e742b9a15c": {
            "connections": {
              "outcome": "70e691a5-1e33-4ac3-a356-e7b6d60d92e0",
            },
            "displayName": "Goto SAML App",
            "nodeType": "SetSuccessUrlNode",
            "x": 428,
            "y": 154.015625,
          },
          "bacf89fb-3ec4-46b5-a75b-248bd577d720": {
            "connections": {
              "outcome": "70e691a5-1e33-4ac3-a356-e7b6d60d92e0",
            },
            "displayName": "Goto Profile Page",
            "nodeType": "SetSuccessUrlNode",
            "x": 428,
            "y": 290.015625,
          },
          "e11003f7-f3ea-4fa5-aa94-3767607abb56": {
            "connections": {
              "outcome": "70e691a5-1e33-4ac3-a356-e7b6d60d92e0",
            },
            "displayName": "Goto OIDC App",
            "nodeType": "SetSuccessUrlNode",
            "x": 428,
            "y": 222.015625,
          },
          "fed68078-fd01-4be6-a1ad-ca9ab272003e": {
            "connections": {
              "true": "70e691a5-1e33-4ac3-a356-e7b6d60d92e0",
            },
            "displayName": "Logout",
            "nodeType": "ScriptedDecisionNode",
            "x": 429,
            "y": 354.015625,
          },
        },
        "staticNodes": {
          "70e691a5-1e33-4ac3-a356-e7b6d60d92e0": {
            "x": 675,
            "y": 246,
          },
          "e301438c-0bd0-429c-ab0c-66126501069a": {
            "x": 671,
            "y": 359,
          },
          "startNode": {
            "x": 55,
            "y": 270,
          },
        },
        "uiConfig": {},
      },
    },
    "SetupMFA": {
      "circlesOfTrust": {},
      "emailTemplates": {},
      "innerNodes": {
        "54464696-52b7-4031-a619-7b368df75945": {
          "_id": "54464696-52b7-4031-a619-7b368df75945",
          "_outcomes": [
            {
              "displayName": "true",
              "id": "true",
            },
          ],
          "_rev": "454146168",
          "_type": {
            "_id": "ScriptedDecisionNode",
            "collection": true,
            "name": "Scripted Decision",
          },
          "inputs": [
            "*",
          ],
          "outcomes": [
            "true",
          ],
          "outputs": [
            "*",
          ],
          "script": "3814d347-a2f2-4be9-a810-ab41a1e374bd",
        },
        "bf634a11-6ad6-496c-8b11-9620dbfdb8b4": {
          "_id": "bf634a11-6ad6-496c-8b11-9620dbfdb8b4",
          "_outcomes": [
            {
              "displayName": "SMS",
              "id": "SMS",
            },
            {
              "displayName": "Fido",
              "id": "Fido",
            },
            {
              "displayName": "Push",
              "id": "Push",
            },
            {
              "displayName": "Skip",
              "id": "Skip",
            },
          ],
          "_rev": "1029834262",
          "_type": {
            "_id": "ScriptedDecisionNode",
            "collection": true,
            "name": "Scripted Decision",
          },
          "inputs": [
            "*",
          ],
          "outcomes": [
            "SMS",
            "Fido",
            "Push",
            "Skip",
          ],
          "outputs": [
            "*",
          ],
          "script": "f26cc0de-ee31-4114-8a32-27799bb49357",
        },
      },
      "nodes": {
        "147df49b-1d5b-4942-8c12-4bc36f7ceb3d": {
          "_id": "147df49b-1d5b-4942-8c12-4bc36f7ceb3d",
          "_outcomes": [
            {
              "displayName": "True",
              "id": "true",
            },
            {
              "displayName": "False",
              "id": "false",
            },
          ],
          "_rev": "949386529",
          "_type": {
            "_id": "MessageNode",
            "collection": true,
            "name": "Message Node",
          },
          "message": {
            "en": "SMS!",
          },
          "messageNo": {
            "en": "Abort",
          },
          "messageYes": {
            "en": "Again",
          },
        },
        "3d16501e-ca1c-4970-a106-be2611a7a40b": {
          "_id": "3d16501e-ca1c-4970-a106-be2611a7a40b",
          "_outcomes": [
            {
              "displayName": "SMS",
              "id": "SMS",
            },
            {
              "displayName": "Fido",
              "id": "Fido",
            },
            {
              "displayName": "Push",
              "id": "Push",
            },
            {
              "displayName": "Skip",
              "id": "Skip",
            },
          ],
          "_rev": "344927876",
          "_type": {
            "_id": "PageNode",
            "collection": true,
            "name": "Page Node",
          },
          "nodes": [
            {
              "_id": "bf634a11-6ad6-496c-8b11-9620dbfdb8b4",
              "displayName": "Setup MFA Choice",
              "nodeType": "ScriptedDecisionNode",
            },
          ],
          "pageDescription": {},
          "pageHeader": {
            "en": "Choose your 2nd factor",
          },
        },
        "44eed5aa-e74d-40e5-9f79-f7e75d199cfb": {
          "_id": "44eed5aa-e74d-40e5-9f79-f7e75d199cfb",
          "_outcomes": [
            {
              "displayName": "true",
              "id": "true",
            },
          ],
          "_rev": "2095782611",
          "_type": {
            "_id": "PageNode",
            "collection": true,
            "name": "Page Node",
          },
          "nodes": [
            {
              "_id": "54464696-52b7-4031-a619-7b368df75945",
              "displayName": "Remove Button",
              "nodeType": "ScriptedDecisionNode",
            },
          ],
          "pageDescription": {},
          "pageHeader": {
            "en": "You are finished!",
          },
        },
        "8ee209d1-bfca-4043-9224-5a5c04605712": {
          "_id": "8ee209d1-bfca-4043-9224-5a5c04605712",
          "_outcomes": [
            {
              "displayName": "True",
              "id": "true",
            },
            {
              "displayName": "False",
              "id": "false",
            },
          ],
          "_rev": "-207758562",
          "_type": {
            "_id": "MessageNode",
            "collection": true,
            "name": "Message Node",
          },
          "message": {
            "en": "Skip!!!",
          },
          "messageNo": {
            "en": "Abort",
          },
          "messageYes": {
            "en": "Again",
          },
        },
        "c279783c-fcb0-4990-ae1d-617dab94bfed": {
          "_id": "c279783c-fcb0-4990-ae1d-617dab94bfed",
          "_outcomes": [
            {
              "displayName": "True",
              "id": "true",
            },
            {
              "displayName": "False",
              "id": "false",
            },
          ],
          "_rev": "-1562476939",
          "_type": {
            "_id": "MessageNode",
            "collection": true,
            "name": "Message Node",
          },
          "message": {
            "en": "Fido!",
          },
          "messageNo": {
            "en": "Abort",
          },
          "messageYes": {
            "en": "Again",
          },
        },
        "d3205488-dcac-4049-9a61-d7d965886806": {
          "_id": "d3205488-dcac-4049-9a61-d7d965886806",
          "_outcomes": [
            {
              "displayName": "True",
              "id": "true",
            },
            {
              "displayName": "False",
              "id": "false",
            },
          ],
          "_rev": "-665465814",
          "_type": {
            "_id": "MessageNode",
            "collection": true,
            "name": "Message Node",
          },
          "message": {
            "en": "Push!",
          },
          "messageNo": {
            "en": "Abort",
          },
          "messageYes": {
            "en": "Again",
          },
        },
      },
      "saml2Entities": {},
      "scripts": {},
      "socialIdentityProviders": {},
      "themes": [],
      "tree": {
        "_id": "SetupMFA",
        "_rev": "313738440",
        "enabled": true,
        "entryNodeId": "3d16501e-ca1c-4970-a106-be2611a7a40b",
        "identityResource": "managed/alpha_user",
        "nodes": {
          "147df49b-1d5b-4942-8c12-4bc36f7ceb3d": {
            "connections": {
              "false": "44eed5aa-e74d-40e5-9f79-f7e75d199cfb",
              "true": "3d16501e-ca1c-4970-a106-be2611a7a40b",
            },
            "displayName": "SMS",
            "nodeType": "MessageNode",
            "x": 458,
            "y": 130.015625,
          },
          "3d16501e-ca1c-4970-a106-be2611a7a40b": {
            "connections": {
              "Fido": "c279783c-fcb0-4990-ae1d-617dab94bfed",
              "Push": "d3205488-dcac-4049-9a61-d7d965886806",
              "SMS": "147df49b-1d5b-4942-8c12-4bc36f7ceb3d",
              "Skip": "8ee209d1-bfca-4043-9224-5a5c04605712",
            },
            "displayName": "Setup MFA Dialog",
            "nodeType": "PageNode",
            "x": 209,
            "y": 185.015625,
          },
          "44eed5aa-e74d-40e5-9f79-f7e75d199cfb": {
            "connections": {
              "true": "e301438c-0bd0-429c-ab0c-66126501069a",
            },
            "displayName": "Done Dialog",
            "nodeType": "PageNode",
            "x": 763,
            "y": 313.015625,
          },
          "8ee209d1-bfca-4043-9224-5a5c04605712": {
            "connections": {
              "false": "44eed5aa-e74d-40e5-9f79-f7e75d199cfb",
              "true": "3d16501e-ca1c-4970-a106-be2611a7a40b",
            },
            "displayName": "Skip",
            "nodeType": "MessageNode",
            "x": 458,
            "y": 552.015625,
          },
          "c279783c-fcb0-4990-ae1d-617dab94bfed": {
            "connections": {
              "false": "44eed5aa-e74d-40e5-9f79-f7e75d199cfb",
              "true": "3d16501e-ca1c-4970-a106-be2611a7a40b",
            },
            "displayName": "Fido",
            "nodeType": "MessageNode",
            "x": 457,
            "y": 269.015625,
          },
          "d3205488-dcac-4049-9a61-d7d965886806": {
            "connections": {
              "false": "44eed5aa-e74d-40e5-9f79-f7e75d199cfb",
              "true": "3d16501e-ca1c-4970-a106-be2611a7a40b",
            },
            "displayName": "Push",
            "nodeType": "MessageNode",
            "x": 457,
            "y": 409.015625,
          },
        },
        "staticNodes": {
          "70e691a5-1e33-4ac3-a356-e7b6d60d92e0": {
            "x": 48,
            "y": 105,
          },
          "e301438c-0bd0-429c-ab0c-66126501069a": {
            "x": 1013,
            "y": 346,
          },
          "startNode": {
            "x": 50,
            "y": 250,
          },
        },
        "uiConfig": {},
      },
    },
    "Social Login": {
      "circlesOfTrust": {},
      "emailTemplates": {},
      "innerNodes": {
        "5327840b-72c6-426b-a9c3-65f21377b3dd": {
          "_id": "5327840b-72c6-426b-a9c3-65f21377b3dd",
          "_outcomes": [
            {
              "displayName": "Social Authentication",
              "id": "socialAuthentication",
            },
            {
              "displayName": "Local Authentication",
              "id": "localAuthentication",
            },
          ],
          "_rev": "-1814602589",
          "_type": {
            "_id": "SelectIdPNode",
            "collection": true,
            "name": "Select Identity Provider",
          },
          "filteredProviders": [],
          "identityAttribute": "mail",
          "includeLocalAuthentication": true,
          "offerOnlyExisting": false,
          "passwordAttribute": "password",
        },
      },
      "nodes": {
        "278d410d-4299-4443-8361-bea8bf8f5779": {
          "_id": "278d410d-4299-4443-8361-bea8bf8f5779",
          "_outcomes": [
            {
              "displayName": "Outcome",
              "id": "outcome",
            },
          ],
          "_rev": "-484593072",
          "_type": {
            "_id": "SessionDataNode",
            "collection": true,
            "name": "Get Session Data",
          },
          "sessionDataKey": "UserToken",
          "sharedStateKey": "userName",
        },
        "8ec5b956-cf68-4257-8c23-fbc4436080d2": {
          "_id": "8ec5b956-cf68-4257-8c23-fbc4436080d2",
          "_outcomes": [
            {
              "displayName": "Social Authentication",
              "id": "socialAuthentication",
            },
            {
              "displayName": "Local Authentication",
              "id": "localAuthentication",
            },
          ],
          "_rev": "2117247908",
          "_type": {
            "_id": "PageNode",
            "collection": true,
            "name": "Page Node",
          },
          "nodes": [
            {
              "_id": "5327840b-72c6-426b-a9c3-65f21377b3dd",
              "displayName": "Select IDP",
              "nodeType": "SelectIdPNode",
            },
          ],
          "pageDescription": {
            "en": "New here? <a href="#/service/Registration">Create an account</a><br><a href="#/service/ForgottenUsername">Forgot username?</a><a href="#/service/ResetPassword"> Forgot password?</a>",
          },
          "pageHeader": {
            "en": "Sign In",
          },
        },
        "90e42dd4-06ee-4f09-8088-637a5ddb9ad7": {
          "_id": "90e42dd4-06ee-4f09-8088-637a5ddb9ad7",
          "_outcomes": [
            {
              "displayName": "Outcome",
              "id": "outcome",
            },
          ],
          "_rev": "333501643",
          "_type": {
            "_id": "IncrementLoginCountNode",
            "collection": true,
            "name": "Increment Login Count",
          },
          "identityAttribute": "userName",
        },
        "aa2adf64-bdaf-41f2-bb41-c01d1b571153": {
          "_id": "aa2adf64-bdaf-41f2-bb41-c01d1b571153",
          "_outcomes": [
            {
              "displayName": "True",
              "id": "true",
            },
            {
              "displayName": "False",
              "id": "false",
            },
          ],
          "_rev": "-1978752592",
          "_type": {
            "_id": "IdentifyExistingUserNode",
            "collection": true,
            "name": "Identify Existing User",
          },
          "identifier": "userName",
          "identityAttribute": "mail",
        },
        "b74e5095-5426-44d7-82c4-9c834cf1788e": {
          "_id": "b74e5095-5426-44d7-82c4-9c834cf1788e",
          "_outcomes": [
            {
              "displayName": "Patched",
              "id": "PATCHED",
            },
            {
              "displayName": "Failed",
              "id": "FAILURE",
            },
          ],
          "_rev": "-908498187",
          "_type": {
            "_id": "PatchObjectNode",
            "collection": true,
            "name": "Patch Object",
          },
          "identityAttribute": "userName",
          "identityResource": "managed/alpha_user",
          "ignoredFields": [],
          "patchAsObject": false,
        },
        "f9d49396-d77a-4286-b4d8-f95c08bc11c1": {
          "_id": "f9d49396-d77a-4286-b4d8-f95c08bc11c1",
          "_outcomes": [
            {
              "displayName": "Account exists",
              "id": "ACCOUNT_EXISTS",
            },
            {
              "displayName": "No account exists",
              "id": "NO_ACCOUNT",
            },
          ],
          "_rev": "-2043590371",
          "_type": {
            "_id": "SocialProviderHandlerNode",
            "collection": true,
            "name": "Social Provider Handler Node",
          },
          "clientType": "BROWSER",
          "script": "58c824ae-84ed-4724-82cd-db128fc3f6c",
          "usernameAttribute": "userName",
        },
      },
      "saml2Entities": {},
      "scripts": {},
      "socialIdentityProviders": {},
      "themes": [],
      "tree": {
        "_id": "Social Login",
        "_rev": "1479075352",
        "description": "Social or U/P login",
        "enabled": true,
        "entryNodeId": "278d410d-4299-4443-8361-bea8bf8f5779",
        "identityResource": "managed/alpha_user",
        "nodes": {
          "278d410d-4299-4443-8361-bea8bf8f5779": {
            "connections": {
              "outcome": "8ec5b956-cf68-4257-8c23-fbc4436080d2",
            },
            "displayName": "Get Session Data",
            "nodeType": "SessionDataNode",
            "x": 97,
            "y": 110.76666259765625,
          },
          "8ec5b956-cf68-4257-8c23-fbc4436080d2": {
            "connections": {
              "socialAuthentication": "f9d49396-d77a-4286-b4d8-f95c08bc11c1",
            },
            "displayName": "Page Node",
            "nodeType": "PageNode",
            "x": 267,
            "y": 213,
          },
          "90e42dd4-06ee-4f09-8088-637a5ddb9ad7": {
            "connections": {
              "outcome": "70e691a5-1e33-4ac3-a356-e7b6d60d92e0",
            },
            "displayName": "Increment Login Count",
            "nodeType": "IncrementLoginCountNode",
            "x": 987,
            "y": 106,
          },
          "aa2adf64-bdaf-41f2-bb41-c01d1b571153": {
            "connections": {
              "false": "e301438c-0bd0-429c-ab0c-66126501069a",
              "true": "b74e5095-5426-44d7-82c4-9c834cf1788e",
            },
            "displayName": "Find User",
            "nodeType": "IdentifyExistingUserNode",
            "x": 621,
            "y": 205.76666259765625,
          },
          "b74e5095-5426-44d7-82c4-9c834cf1788e": {
            "connections": {
              "FAILURE": "e301438c-0bd0-429c-ab0c-66126501069a",
              "PATCHED": "90e42dd4-06ee-4f09-8088-637a5ddb9ad7",
            },
            "displayName": "Patch Object",
            "nodeType": "PatchObjectNode",
            "x": 821,
            "y": 336.76666259765625,
          },
          "f9d49396-d77a-4286-b4d8-f95c08bc11c1": {
            "connections": {
              "ACCOUNT_EXISTS": "90e42dd4-06ee-4f09-8088-637a5ddb9ad7",
              "NO_ACCOUNT": "aa2adf64-bdaf-41f2-bb41-c01d1b571153",
            },
            "displayName": "Social Login",
            "nodeType": "SocialProviderHandlerNode",
            "x": 458,
            "y": 75,
          },
        },
        "staticNodes": {
          "70e691a5-1e33-4ac3-a356-e7b6d60d92e0": {
            "x": 1238,
            "y": 98,
          },
          "e301438c-0bd0-429c-ab0c-66126501069a": {
            "x": 1238,
            "y": 256,
          },
          "startNode": {
            "x": 50,
            "y": 25,
          },
        },
        "uiConfig": {
          "categories": "[]",
        },
      },
    },
    "StudentLogin": {
      "circlesOfTrust": {},
      "emailTemplates": {},
      "innerNodes": {
        "9c70af47-9646-4c4a-ab59-4af9100601ab": {
          "_id": "9c70af47-9646-4c4a-ab59-4af9100601ab",
          "_outcomes": [
            {
              "displayName": "Outcome",
              "id": "outcome",
            },
          ],
          "_rev": "1608242260",
          "_type": {
            "_id": "ValidatedUsernameNode",
            "collection": true,
            "name": "Platform Username",
          },
          "usernameAttribute": "userName",
          "validateInput": false,
        },
        "b1d2a788-f1ed-434e-ba8d-3277ce851c9b": {
          "_id": "b1d2a788-f1ed-434e-ba8d-3277ce851c9b",
          "_outcomes": [
            {
              "displayName": "Outcome",
              "id": "outcome",
            },
          ],
          "_rev": "-109592211",
          "_type": {
            "_id": "ValidatedPasswordNode",
            "collection": true,
            "name": "Platform Password",
          },
          "passwordAttribute": "password",
          "validateInput": false,
        },
      },
      "nodes": {
        "3b9d6386-746c-4d70-95ce-c4b1eb7e406a": {
          "_id": "3b9d6386-746c-4d70-95ce-c4b1eb7e406a",
          "_outcomes": [
            {
              "displayName": "true",
              "id": "true",
            },
            {
              "displayName": "false",
              "id": "false",
            },
          ],
          "_rev": "-2072170470",
          "_type": {
            "_id": "ScriptedDecisionNode",
            "collection": true,
            "name": "Scripted Decision",
          },
          "inputs": [
            "*",
          ],
          "outcomes": [
            "true",
            "false",
          ],
          "outputs": [
            "*",
          ],
          "script": "743351b3-001a-4ec8-b3ac-a674ddb8de22",
        },
        "44bf05af-a166-493b-b686-e226c8a3d52e": {
          "_id": "44bf05af-a166-493b-b686-e226c8a3d52e",
          "_outcomes": [
            {
              "displayName": "true",
              "id": "true",
            },
          ],
          "_rev": "-375293012",
          "_type": {
            "_id": "ScriptedDecisionNode",
            "collection": true,
            "name": "Scripted Decision",
          },
          "inputs": [
            "*",
          ],
          "outcomes": [
            "true",
          ],
          "outputs": [
            "*",
          ],
          "script": "3cb43516-ae69-433a-8787-501d45db14e9",
        },
        "62ca0c8a-ec31-4afc-abc0-d5c9f63b1bc6": {
          "_id": "62ca0c8a-ec31-4afc-abc0-d5c9f63b1bc6",
          "_outcomes": [
            {
              "displayName": "True",
              "id": "true",
            },
            {
              "displayName": "False",
              "id": "false",
            },
          ],
          "_rev": "2115930703",
          "_type": {
            "_id": "DataStoreDecisionNode",
            "collection": true,
            "name": "Data Store Decision",
          },
        },
        "71f0ed98-134d-4139-96e4-88ddfd21fa54": {
          "_id": "71f0ed98-134d-4139-96e4-88ddfd21fa54",
          "_outcomes": [
            {
              "displayName": "Outcome",
              "id": "outcome",
            },
          ],
          "_rev": "-1514230265",
          "_type": {
            "_id": "PageNode",
            "collection": true,
            "name": "Page Node",
          },
          "nodes": [
            {
              "_id": "9c70af47-9646-4c4a-ab59-4af9100601ab",
              "displayName": "Username",
              "nodeType": "ValidatedUsernameNode",
            },
            {
              "_id": "b1d2a788-f1ed-434e-ba8d-3277ce851c9b",
              "displayName": "Password",
              "nodeType": "ValidatedPasswordNode",
            },
          ],
          "pageDescription": {},
          "pageHeader": {},
        },
        "9de2ee07-7c3a-428e-add2-79e8b22d1a4b": {
          "_id": "9de2ee07-7c3a-428e-add2-79e8b22d1a4b",
          "_outcomes": [
            {
              "displayName": "True",
              "id": "true",
            },
            {
              "displayName": "False",
              "id": "false",
            },
          ],
          "_rev": "675195294",
          "_type": {
            "_id": "IdentifyExistingUserNode",
            "collection": true,
            "name": "Identify Existing User",
          },
          "identifier": "userName",
          "identityAttribute": "userName",
        },
        "f9bca1d3-6c20-4b12-82b5-00209d046718": {
          "_id": "f9bca1d3-6c20-4b12-82b5-00209d046718",
          "_outcomes": [
            {
              "displayName": "has classes",
              "id": "has classes",
            },
            {
              "displayName": "no classes",
              "id": "no classes",
            },
            {
              "displayName": "error",
              "id": "error",
            },
          ],
          "_rev": "-1549464088",
          "_type": {
            "_id": "ScriptedDecisionNode",
            "collection": true,
            "name": "Scripted Decision",
          },
          "inputs": [
            "*",
          ],
          "outcomes": [
            "has classes",
            "no classes",
            "error",
          ],
          "outputs": [
            "*",
          ],
          "script": "6ad22934-5d12-43a6-96a7-a2fba8d999bf",
        },
      },
      "saml2Entities": {},
      "scripts": {},
      "socialIdentityProviders": {},
      "themes": [],
      "tree": {
        "_id": "StudentLogin",
        "_rev": "-1104881685",
        "description": "Student login journey.",
        "enabled": true,
        "entryNodeId": "71f0ed98-134d-4139-96e4-88ddfd21fa54",
        "identityResource": "managed/alpha_user",
        "nodes": {
          "3b9d6386-746c-4d70-95ce-c4b1eb7e406a": {
            "connections": {
              "false": "70e691a5-1e33-4ac3-a356-e7b6d60d92e0",
              "true": "70e691a5-1e33-4ac3-a356-e7b6d60d92e0",
            },
            "displayName": "Enrich Session",
            "nodeType": "ScriptedDecisionNode",
            "x": 1098,
            "y": 113.015625,
          },
          "44bf05af-a166-493b-b686-e226c8a3d52e": {
            "connections": {
              "true": "70e691a5-1e33-4ac3-a356-e7b6d60d92e0",
            },
            "displayName": "Debug",
            "nodeType": "ScriptedDecisionNode",
            "x": 1123,
            "y": 16.015625,
          },
          "62ca0c8a-ec31-4afc-abc0-d5c9f63b1bc6": {
            "connections": {
              "false": "e301438c-0bd0-429c-ab0c-66126501069a",
              "true": "9de2ee07-7c3a-428e-add2-79e8b22d1a4b",
            },
            "displayName": "Validate Credentials",
            "nodeType": "DataStoreDecisionNode",
            "x": 397,
            "y": 234.015625,
          },
          "71f0ed98-134d-4139-96e4-88ddfd21fa54": {
            "connections": {
              "outcome": "62ca0c8a-ec31-4afc-abc0-d5c9f63b1bc6",
            },
            "displayName": "Login Page",
            "nodeType": "PageNode",
            "x": 171,
            "y": 224.015625,
          },
          "9de2ee07-7c3a-428e-add2-79e8b22d1a4b": {
            "connections": {
              "false": "f9bca1d3-6c20-4b12-82b5-00209d046718",
              "true": "f9bca1d3-6c20-4b12-82b5-00209d046718",
            },
            "displayName": "Find Profile",
            "nodeType": "IdentifyExistingUserNode",
            "x": 640,
            "y": 200.015625,
          },
          "f9bca1d3-6c20-4b12-82b5-00209d046718": {
            "connections": {
              "error": "e301438c-0bd0-429c-ab0c-66126501069a",
              "has classes": "3b9d6386-746c-4d70-95ce-c4b1eb7e406a",
              "no classes": "70e691a5-1e33-4ac3-a356-e7b6d60d92e0",
            },
            "displayName": "Get Course ID",
            "nodeType": "ScriptedDecisionNode",
            "x": 878,
            "y": 152.015625,
          },
        },
        "staticNodes": {
          "70e691a5-1e33-4ac3-a356-e7b6d60d92e0": {
            "x": 1344,
            "y": 219,
          },
          "e301438c-0bd0-429c-ab0c-66126501069a": {
            "x": 1355,
            "y": 517,
          },
          "startNode": {
            "x": 50,
            "y": 250,
          },
        },
        "uiConfig": {},
      },
    },
    "Suspend": {
      "circlesOfTrust": {},
      "emailTemplates": {},
      "innerNodes": {},
      "nodes": {
        "97bc2409-1d4d-4496-8f47-8bbdc7e47b43": {
          "_id": "97bc2409-1d4d-4496-8f47-8bbdc7e47b43",
          "_outcomes": [
            {
              "displayName": "True",
              "id": "true",
            },
            {
              "displayName": "False",
              "id": "false",
            },
          ],
          "_rev": "-74901526",
          "_type": {
            "_id": "MessageNode",
            "collection": true,
            "name": "Message Node",
          },
          "message": {},
          "messageNo": {},
          "messageYes": {},
        },
        "a1741613-8ca4-443b-be45-f9e936358138": {
          "_id": "a1741613-8ca4-443b-be45-f9e936358138",
          "_outcomes": [
            {
              "displayName": "true",
              "id": "true",
            },
          ],
          "_rev": "1515665213",
          "_type": {
            "_id": "ScriptedDecisionNode",
            "collection": true,
            "name": "Scripted Decision",
          },
          "inputs": [
            "*",
          ],
          "outcomes": [
            "true",
          ],
          "outputs": [
            "*",
          ],
          "script": "36185679-b74f-479c-b1aa-6f6e852cca11",
        },
        "f25c1ed2-b05f-48a1-bbee-b04d9579a1c1": {
          "_id": "f25c1ed2-b05f-48a1-bbee-b04d9579a1c1",
          "_outcomes": [
            {
              "displayName": "Outcome",
              "id": "outcome",
            },
          ],
          "_rev": "-1087226123",
          "_type": {
            "_id": "ValidatedUsernameNode",
            "collection": true,
            "name": "Platform Username",
          },
          "usernameAttribute": "userName",
          "validateInput": false,
        },
      },
      "saml2Entities": {},
      "scripts": {},
      "socialIdentityProviders": {},
      "themes": [],
      "tree": {
        "_id": "Suspend",
        "_rev": "-254508395",
        "description": "Test suspend authentication",
        "enabled": true,
        "entryNodeId": "f25c1ed2-b05f-48a1-bbee-b04d9579a1c1",
        "identityResource": "managed/alpha_user",
        "nodes": {
          "97bc2409-1d4d-4496-8f47-8bbdc7e47b43": {
            "connections": {
              "false": "e301438c-0bd0-429c-ab0c-66126501069a",
              "true": "e301438c-0bd0-429c-ab0c-66126501069a",
            },
            "displayName": "Message Node",
            "nodeType": "MessageNode",
            "x": 598,
            "y": 235.015625,
          },
          "a1741613-8ca4-443b-be45-f9e936358138": {
            "connections": {
              "true": "97bc2409-1d4d-4496-8f47-8bbdc7e47b43",
            },
            "displayName": "Suspend",
            "nodeType": "ScriptedDecisionNode",
            "x": 381,
            "y": 260.015625,
          },
          "f25c1ed2-b05f-48a1-bbee-b04d9579a1c1": {
            "connections": {
              "outcome": "a1741613-8ca4-443b-be45-f9e936358138",
            },
            "displayName": "Platform Username",
            "nodeType": "ValidatedUsernameNode",
            "x": 166,
            "y": 259.015625,
          },
        },
        "staticNodes": {
          "70e691a5-1e33-4ac3-a356-e7b6d60d92e0": {
            "x": 653,
            "y": 137,
          },
          "e301438c-0bd0-429c-ab0c-66126501069a": {
            "x": 823,
            "y": 258,
          },
          "startNode": {
            "x": 50,
            "y": 250,
          },
        },
        "uiConfig": {
          "categories": "["Prototype"]",
        },
      },
    },
    "TandC": {
      "circlesOfTrust": {},
      "emailTemplates": {},
      "innerNodes": {
        "8e74835a-d93f-48b4-8249-a6b73fb4b4ba": {
          "_id": "8e74835a-d93f-48b4-8249-a6b73fb4b4ba",
          "_outcomes": [
            {
              "displayName": "Outcome",
              "id": "outcome",
            },
          ],
          "_rev": "-2035030710",
          "_type": {
            "_id": "ValidatedPasswordNode",
            "collection": true,
            "name": "Platform Password",
          },
          "passwordAttribute": "password",
          "validateInput": false,
        },
        "c4cb6fa4-157e-437a-ad3a-56de9a33f04f": {
          "_id": "c4cb6fa4-157e-437a-ad3a-56de9a33f04f",
          "_outcomes": [
            {
              "displayName": "Outcome",
              "id": "outcome",
            },
          ],
          "_rev": "498798569",
          "_type": {
            "_id": "ValidatedUsernameNode",
            "collection": true,
            "name": "Platform Username",
          },
          "usernameAttribute": "userName",
          "validateInput": false,
        },
      },
      "nodes": {
        "6323e986-fedb-466e-8658-d26cede12487": {
          "_id": "6323e986-fedb-466e-8658-d26cede12487",
          "_outcomes": [
            {
              "displayName": "True",
              "id": "true",
            },
            {
              "displayName": "False",
              "id": "false",
            },
          ],
          "_rev": "-2024332411",
          "_type": {
            "_id": "DataStoreDecisionNode",
            "collection": true,
            "name": "Data Store Decision",
          },
        },
        "7c1a710d-76dd-41ac-8cc8-62d28653ffe2": {
          "_id": "7c1a710d-76dd-41ac-8cc8-62d28653ffe2",
          "_outcomes": [
            {
              "displayName": "Outcome",
              "id": "outcome",
            },
          ],
          "_rev": "1089804280",
          "_type": {
            "_id": "AcceptTermsAndConditionsNode",
            "collection": true,
            "name": "Accept Terms and Conditions",
          },
        },
        "82e89545-568b-4c6c-bd92-c70b6874a199": {
          "_id": "82e89545-568b-4c6c-bd92-c70b6874a199",
          "_outcomes": [
            {
              "displayName": "Outcome",
              "id": "outcome",
            },
          ],
          "_rev": "1731271827",
          "_type": {
            "_id": "PageNode",
            "collection": true,
            "name": "Page Node",
          },
          "nodes": [
            {
              "_id": "c4cb6fa4-157e-437a-ad3a-56de9a33f04f",
              "displayName": "Platform Username",
              "nodeType": "ValidatedUsernameNode",
            },
            {
              "_id": "8e74835a-d93f-48b4-8249-a6b73fb4b4ba",
              "displayName": "Platform Password",
              "nodeType": "ValidatedPasswordNode",
            },
          ],
          "pageDescription": {},
          "pageHeader": {},
          "stage": "themeId=Expanse",
        },
        "e2015220-56bf-4c5d-a9d2-d2e2fd664458": {
          "_id": "e2015220-56bf-4c5d-a9d2-d2e2fd664458",
          "_outcomes": [
            {
              "displayName": "Patched",
              "id": "PATCHED",
            },
            {
              "displayName": "Failed",
              "id": "FAILURE",
            },
          ],
          "_rev": "-181090526",
          "_type": {
            "_id": "PatchObjectNode",
            "collection": true,
            "name": "Patch Object",
          },
          "identityAttribute": "userName",
          "identityResource": "managed/alpha_user",
          "ignoredFields": [],
          "patchAsObject": false,
        },
        "f96f7fdc-48f6-4789-b46e-5f2b6614e039": {
          "_id": "f96f7fdc-48f6-4789-b46e-5f2b6614e039",
          "_outcomes": [
            {
              "displayName": "True",
              "id": "true",
            },
            {
              "displayName": "False",
              "id": "false",
            },
          ],
          "_rev": "2068299360",
          "_type": {
            "_id": "TermsAndConditionsDecisionNode",
            "collection": true,
            "name": "Terms and Conditions Decision",
          },
          "identityAttribute": "userName",
        },
      },
      "saml2Entities": {},
      "scripts": {},
      "socialIdentityProviders": {},
      "themes": [],
      "tree": {
        "_id": "TandC",
        "_rev": "-1906466352",
        "description": "Terms and conditions.",
        "enabled": true,
        "entryNodeId": "82e89545-568b-4c6c-bd92-c70b6874a199",
        "identityResource": "managed/alpha_user",
        "nodes": {
          "6323e986-fedb-466e-8658-d26cede12487": {
            "connections": {
              "false": "e301438c-0bd0-429c-ab0c-66126501069a",
              "true": "f96f7fdc-48f6-4789-b46e-5f2b6614e039",
            },
            "displayName": "Data Store Decision",
            "nodeType": "DataStoreDecisionNode",
            "x": 400,
            "y": 268.015625,
          },
          "7c1a710d-76dd-41ac-8cc8-62d28653ffe2": {
            "connections": {
              "outcome": "e2015220-56bf-4c5d-a9d2-d2e2fd664458",
            },
            "displayName": "Accept T&Cs",
            "nodeType": "AcceptTermsAndConditionsNode",
            "x": 887,
            "y": 254.015625,
          },
          "82e89545-568b-4c6c-bd92-c70b6874a199": {
            "connections": {
              "outcome": "6323e986-fedb-466e-8658-d26cede12487",
            },
            "displayName": "Page Node",
            "nodeType": "PageNode",
            "x": 154,
            "y": 219.015625,
          },
          "e2015220-56bf-4c5d-a9d2-d2e2fd664458": {
            "connections": {
              "FAILURE": "e301438c-0bd0-429c-ab0c-66126501069a",
              "PATCHED": "70e691a5-1e33-4ac3-a356-e7b6d60d92e0",
            },
            "displayName": "Patch Object",
            "nodeType": "PatchObjectNode",
            "x": 1102,
            "y": 199.015625,
          },
          "f96f7fdc-48f6-4789-b46e-5f2b6614e039": {
            "connections": {
              "false": "7c1a710d-76dd-41ac-8cc8-62d28653ffe2",
              "true": "70e691a5-1e33-4ac3-a356-e7b6d60d92e0",
            },
            "displayName": "T&Cs?",
            "nodeType": "TermsAndConditionsDecisionNode",
            "x": 639,
            "y": 189.015625,
          },
        },
        "staticNodes": {
          "70e691a5-1e33-4ac3-a356-e7b6d60d92e0": {
            "x": 1339,
            "y": 124,
          },
          "e301438c-0bd0-429c-ab0c-66126501069a": {
            "x": 1349,
            "y": 451,
          },
          "startNode": {
            "x": 50,
            "y": 250,
          },
        },
        "uiConfig": {},
      },
    },
    "TermsAndConditions": {
      "circlesOfTrust": {},
      "emailTemplates": {},
      "innerNodes": {
        "656988d2-6aae-4e5d-8744-aab5b9d310cb": {
          "_id": "656988d2-6aae-4e5d-8744-aab5b9d310cb",
          "_outcomes": [
            {
              "displayName": "Canada",
              "id": "Canada",
            },
            {
              "displayName": "United Kingdom",
              "id": "United Kingdom",
            },
            {
              "displayName": "United States",
              "id": "United States",
            },
            {
              "displayName": "Other",
              "id": "Other",
            },
          ],
          "_rev": "941562546",
          "_type": {
            "_id": "ChoiceCollectorNode",
            "collection": true,
            "name": "Choice Collector",
          },
          "choices": [
            "Canada",
            "United Kingdom",
            "United States",
            "Other",
          ],
          "defaultChoice": "United States",
          "prompt": "Please choose your region of residency:",
        },
        "897fa3ee-dd5b-4aa4-a8c1-488729584061": {
          "_id": "897fa3ee-dd5b-4aa4-a8c1-488729584061",
          "_outcomes": [
            {
              "displayName": "True",
              "id": "true",
            },
            {
              "displayName": "False",
              "id": "false",
            },
          ],
          "_rev": "1268680302",
          "_type": {
            "_id": "MessageNode",
            "collection": true,
            "name": "Message Node",
          },
          "message": {
            "en": "Can you claim residency in any of our regions of operation?",
          },
          "messageNo": {
            "en": "Abort",
          },
          "messageYes": {
            "en": "Select Region",
          },
        },
        "a404141e-8593-4080-9251-d1a3b990cf28": {
          "_id": "a404141e-8593-4080-9251-d1a3b990cf28",
          "_outcomes": [
            {
              "displayName": "True",
              "id": "true",
            },
            {
              "displayName": "False",
              "id": "false",
            },
          ],
          "_rev": "-1899625956",
          "_type": {
            "_id": "MessageNode",
            "collection": true,
            "name": "Message Node",
          },
          "message": {
            "en": "Please accept by clicking 'I Agree'",
          },
          "messageNo": {
            "en": "Abort",
          },
          "messageYes": {
            "en": "I Agree",
          },
        },
        "aea48bc8-f1dc-4bdc-9677-4c973b72daba": {
          "_id": "aea48bc8-f1dc-4bdc-9677-4c973b72daba",
          "_outcomes": [
            {
              "displayName": "True",
              "id": "true",
            },
            {
              "displayName": "False",
              "id": "false",
            },
          ],
          "_rev": "-184494990",
          "_type": {
            "_id": "MessageNode",
            "collection": true,
            "name": "Message Node",
          },
          "message": {
            "en": "Please accept by clicking 'I Agree'",
          },
          "messageNo": {},
          "messageYes": {
            "en": "I Agree",
          },
        },
        "fc2e1f93-eecc-43b9-9d59-6c370fac3ccd": {
          "_id": "fc2e1f93-eecc-43b9-9d59-6c370fac3ccd",
          "_outcomes": [
            {
              "displayName": "True",
              "id": "true",
            },
            {
              "displayName": "False",
              "id": "false",
            },
          ],
          "_rev": "-1834593728",
          "_type": {
            "_id": "MessageNode",
            "collection": true,
            "name": "Message Node",
          },
          "message": {
            "en": "Please accept by clicking 'I Agree'",
          },
          "messageNo": {
            "en": "Abort",
          },
          "messageYes": {
            "en": "I Agree",
          },
        },
      },
      "nodes": {
        "485f5cf3-2437-4ff3-98b9-68288604d751": {
          "_id": "485f5cf3-2437-4ff3-98b9-68288604d751",
          "_outcomes": [
            {
              "displayName": "CA",
              "id": "CA",
            },
            {
              "displayName": "UK",
              "id": "UK",
            },
            {
              "displayName": "US",
              "id": "US",
            },
            {
              "displayName": "other",
              "id": "other",
            },
            {
              "displayName": "unknown",
              "id": "unknown",
            },
          ],
          "_rev": "559242655",
          "_type": {
            "_id": "ScriptedDecisionNode",
            "collection": true,
            "name": "Scripted Decision",
          },
          "inputs": [
            "*",
          ],
          "outcomes": [
            "CA",
            "UK",
            "US",
            "other",
            "unknown",
          ],
          "outputs": [
            "*",
          ],
          "script": "87497360-d89c-412a-a99e-c8a9bec465cc",
        },
        "b8fc9229-1a66-4432-8bfa-f1878fec2012": {
          "_id": "b8fc9229-1a66-4432-8bfa-f1878fec2012",
          "_outcomes": [
            {
              "displayName": "True",
              "id": "true",
            },
            {
              "displayName": "False",
              "id": "false",
            },
          ],
          "_rev": "-127115803",
          "_type": {
            "_id": "PageNode",
            "collection": true,
            "name": "Page Node",
          },
          "nodes": [
            {
              "_id": "a404141e-8593-4080-9251-d1a3b990cf28",
              "displayName": "User Choice",
              "nodeType": "MessageNode",
            },
          ],
          "pageDescription": {
            "en": "<h4>Read our <a href="https://www.fedex.com/en-us/terms-of-use.html" target="_blank" >Terms of use</a>.</h4>",
          },
          "pageHeader": {
            "en": "United Kingdom",
          },
        },
        "ba47c796-2e4a-4706-a155-befbed4dadd4": {
          "_id": "ba47c796-2e4a-4706-a155-befbed4dadd4",
          "_outcomes": [
            {
              "displayName": "True",
              "id": "true",
            },
            {
              "displayName": "False",
              "id": "false",
            },
          ],
          "_rev": "-1666208875",
          "_type": {
            "_id": "PageNode",
            "collection": true,
            "name": "Page Node",
          },
          "nodes": [
            {
              "_id": "aea48bc8-f1dc-4bdc-9677-4c973b72daba",
              "displayName": "User Choice",
              "nodeType": "MessageNode",
            },
          ],
          "pageDescription": {
            "en": "<h4>Read our <a href="https://www.fedex.com/en-us/terms-of-use.html" target="_blank" >Terms of use</a>.</h4>",
          },
          "pageHeader": {
            "en": "Canada",
          },
        },
        "cb808ec7-7971-4c84-9938-84b3fd48d1ed": {
          "_id": "cb808ec7-7971-4c84-9938-84b3fd48d1ed",
          "_outcomes": [
            {
              "displayName": "True",
              "id": "true",
            },
            {
              "displayName": "False",
              "id": "false",
            },
          ],
          "_rev": "392888311",
          "_type": {
            "_id": "PageNode",
            "collection": true,
            "name": "Page Node",
          },
          "nodes": [
            {
              "_id": "fc2e1f93-eecc-43b9-9d59-6c370fac3ccd",
              "displayName": "User Choice",
              "nodeType": "MessageNode",
            },
          ],
          "pageDescription": {
            "en": "<h4>Read our <a href="https://www.fedex.com/en-us/terms-of-use.html" target="_blank" >Terms of use</a>.</h4>",
          },
          "pageHeader": {
            "en": "United States",
          },
        },
        "f01a7585-6f89-43a3-8ab9-d7452cdfe022": {
          "_id": "f01a7585-6f89-43a3-8ab9-d7452cdfe022",
          "_outcomes": [
            {
              "displayName": "True",
              "id": "true",
            },
            {
              "displayName": "False",
              "id": "false",
            },
          ],
          "_rev": "1898171385",
          "_type": {
            "_id": "PageNode",
            "collection": true,
            "name": "Page Node",
          },
          "nodes": [
            {
              "_id": "897fa3ee-dd5b-4aa4-a8c1-488729584061",
              "displayName": "Message Node",
              "nodeType": "MessageNode",
            },
          ],
          "pageDescription": {
            "en": "We do not operate in your region and have no legal grounds to do business where you live.",
          },
          "pageHeader": {
            "en": "No Legal Grounds",
          },
        },
        "fc301fd4-3eee-40c0-af34-8e204e1a6610": {
          "_id": "fc301fd4-3eee-40c0-af34-8e204e1a6610",
          "_outcomes": [
            {
              "displayName": "Canada",
              "id": "Canada",
            },
            {
              "displayName": "United Kingdom",
              "id": "United Kingdom",
            },
            {
              "displayName": "United States",
              "id": "United States",
            },
            {
              "displayName": "Other",
              "id": "Other",
            },
          ],
          "_rev": "686442241",
          "_type": {
            "_id": "PageNode",
            "collection": true,
            "name": "Page Node",
          },
          "nodes": [
            {
              "_id": "656988d2-6aae-4e5d-8744-aab5b9d310cb",
              "displayName": "Region",
              "nodeType": "ChoiceCollectorNode",
            },
          ],
          "pageDescription": {},
          "pageHeader": {
            "en": "Region of Residency",
          },
        },
      },
      "saml2Entities": {},
      "scripts": {},
      "socialIdentityProviders": {},
      "themes": [],
      "tree": {
        "_id": "TermsAndConditions",
        "_rev": "-1091397556",
        "enabled": true,
        "entryNodeId": "fc301fd4-3eee-40c0-af34-8e204e1a6610",
        "identityResource": "managed/alpha_user",
        "nodes": {
          "485f5cf3-2437-4ff3-98b9-68288604d751": {
            "connections": {
              "CA": "ba47c796-2e4a-4706-a155-befbed4dadd4",
              "UK": "b8fc9229-1a66-4432-8bfa-f1878fec2012",
              "US": "cb808ec7-7971-4c84-9938-84b3fd48d1ed",
              "other": "fc301fd4-3eee-40c0-af34-8e204e1a6610",
              "unknown": "fc301fd4-3eee-40c0-af34-8e204e1a6610",
            },
            "displayName": "Region By Location",
            "nodeType": "ScriptedDecisionNode",
            "x": 187,
            "y": 244.76666259765625,
          },
          "b8fc9229-1a66-4432-8bfa-f1878fec2012": {
            "connections": {
              "false": "e301438c-0bd0-429c-ab0c-66126501069a",
              "true": "70e691a5-1e33-4ac3-a356-e7b6d60d92e0",
            },
            "displayName": "UK Terms of Use",
            "nodeType": "PageNode",
            "x": 789,
            "y": 251.76666259765625,
          },
          "ba47c796-2e4a-4706-a155-befbed4dadd4": {
            "connections": {
              "false": "e301438c-0bd0-429c-ab0c-66126501069a",
              "true": "70e691a5-1e33-4ac3-a356-e7b6d60d92e0",
            },
            "displayName": "CA Terms of Use",
            "nodeType": "PageNode",
            "x": 786,
            "y": 27.76666259765625,
          },
          "cb808ec7-7971-4c84-9938-84b3fd48d1ed": {
            "connections": {
              "false": "e301438c-0bd0-429c-ab0c-66126501069a",
              "true": "70e691a5-1e33-4ac3-a356-e7b6d60d92e0",
            },
            "displayName": "US Terms of Use",
            "nodeType": "PageNode",
            "x": 790,
            "y": 477,
          },
          "f01a7585-6f89-43a3-8ab9-d7452cdfe022": {
            "connections": {
              "false": "e301438c-0bd0-429c-ab0c-66126501069a",
              "true": "fc301fd4-3eee-40c0-af34-8e204e1a6610",
            },
            "displayName": "No Legal Grounds",
            "nodeType": "PageNode",
            "x": 792,
            "y": 703.7666625976562,
          },
          "fc301fd4-3eee-40c0-af34-8e204e1a6610": {
            "connections": {
              "Canada": "ba47c796-2e4a-4706-a155-befbed4dadd4",
              "Other": "f01a7585-6f89-43a3-8ab9-d7452cdfe022",
              "United Kingdom": "b8fc9229-1a66-4432-8bfa-f1878fec2012",
              "United States": "cb808ec7-7971-4c84-9938-84b3fd48d1ed",
            },
            "displayName": "Choose Region",
            "nodeType": "PageNode",
            "x": 463,
            "y": 398.76666259765625,
          },
        },
        "staticNodes": {
          "70e691a5-1e33-4ac3-a356-e7b6d60d92e0": {
            "x": 1219,
            "y": 174,
          },
          "e301438c-0bd0-429c-ab0c-66126501069a": {
            "x": 1224,
            "y": 426,
          },
          "startNode": {
            "x": 50,
            "y": 250,
          },
        },
        "uiConfig": {},
      },
    },
    "ThemeByLanguage": {
      "circlesOfTrust": {},
      "emailTemplates": {},
      "innerNodes": {},
      "nodes": {
        "35935cbd-593e-4fb6-9719-820415009917": {
          "_id": "35935cbd-593e-4fb6-9719-820415009917",
          "_outcomes": [
            {
              "displayName": "True",
              "id": "true",
            },
            {
              "displayName": "False",
              "id": "false",
            },
          ],
          "_rev": "99872950",
          "_type": {
            "_id": "InnerTreeEvaluatorNode",
            "collection": true,
            "name": "Inner Tree Evaluator",
          },
          "tree": "Login",
        },
        "9c321ebb-a324-4fcc-a260-625dd3e6c8a0": {
          "_id": "9c321ebb-a324-4fcc-a260-625dd3e6c8a0",
          "_outcomes": [
            {
              "displayName": "true",
              "id": "true",
            },
          ],
          "_rev": "536535737",
          "_type": {
            "_id": "ScriptedDecisionNode",
            "collection": true,
            "name": "Scripted Decision",
          },
          "inputs": [
            "*",
          ],
          "outcomes": [
            "true",
          ],
          "outputs": [
            "*",
          ],
          "script": "847aab1b-c739-4d64-b26c-180f96cba02b",
        },
      },
      "saml2Entities": {},
      "scripts": {},
      "socialIdentityProviders": {},
      "themes": [],
      "tree": {
        "_id": "ThemeByLanguage",
        "_rev": "-621350952",
        "description": "Change theme based on users language.",
        "enabled": true,
        "entryNodeId": "9c321ebb-a324-4fcc-a260-625dd3e6c8a0",
        "identityResource": "managed/alpha_user",
        "nodes": {
          "35935cbd-593e-4fb6-9719-820415009917": {
            "connections": {
              "false": "e301438c-0bd0-429c-ab0c-66126501069a",
              "true": "70e691a5-1e33-4ac3-a356-e7b6d60d92e0",
            },
            "displayName": "Login",
            "nodeType": "InnerTreeEvaluatorNode",
            "x": 363,
            "y": 230.015625,
          },
          "9c321ebb-a324-4fcc-a260-625dd3e6c8a0": {
            "connections": {
              "true": "35935cbd-593e-4fb6-9719-820415009917",
            },
            "displayName": "Theme by language",
            "nodeType": "ScriptedDecisionNode",
            "x": 156,
            "y": 256.015625,
          },
        },
        "staticNodes": {
          "70e691a5-1e33-4ac3-a356-e7b6d60d92e0": {
            "x": 601,
            "y": 179,
          },
          "e301438c-0bd0-429c-ab0c-66126501069a": {
            "x": 601,
            "y": 344,
          },
          "startNode": {
            "x": 50,
            "y": 250,
          },
        },
        "uiConfig": {},
      },
    },
    "ThemeByLanguageMulti": {
      "circlesOfTrust": {},
      "emailTemplates": {},
      "innerNodes": {
        "2f76da6c-9349-473e-a534-9b3a22fa61f5": {
          "_id": "2f76da6c-9349-473e-a534-9b3a22fa61f5",
          "_outcomes": [
            {
              "displayName": "Outcome",
              "id": "outcome",
            },
          ],
          "_rev": "1610092580",
          "_type": {
            "_id": "ValidatedUsernameNode",
            "collection": true,
            "name": "Platform Username",
          },
          "usernameAttribute": "userName",
          "validateInput": false,
        },
        "34822f6b-f272-49f7-8da8-c2ad65d65807": {
          "_id": "34822f6b-f272-49f7-8da8-c2ad65d65807",
          "_outcomes": [
            {
              "displayName": "Outcome",
              "id": "outcome",
            },
          ],
          "_rev": "1001161694",
          "_type": {
            "_id": "ValidatedPasswordNode",
            "collection": true,
            "name": "Platform Password",
          },
          "passwordAttribute": "password",
          "validateInput": false,
        },
        "5da02144-23fd-4795-b9fd-1d9762a3d323": {
          "_id": "5da02144-23fd-4795-b9fd-1d9762a3d323",
          "_outcomes": [
            {
              "displayName": "Outcome",
              "id": "outcome",
            },
          ],
          "_rev": "1474958705",
          "_type": {
            "_id": "ValidatedUsernameNode",
            "collection": true,
            "name": "Platform Username",
          },
          "usernameAttribute": "userName",
          "validateInput": false,
        },
        "6f8a0d4c-9d78-48c6-b768-5b3b70a55b36": {
          "_id": "6f8a0d4c-9d78-48c6-b768-5b3b70a55b36",
          "_outcomes": [
            {
              "displayName": "Outcome",
              "id": "outcome",
            },
          ],
          "_rev": "-1442677629",
          "_type": {
            "_id": "ValidatedPasswordNode",
            "collection": true,
            "name": "Platform Password",
          },
          "passwordAttribute": "password",
          "validateInput": false,
        },
        "b27c07ed-7c7f-412a-aace-6fccc424e2d2": {
          "_id": "b27c07ed-7c7f-412a-aace-6fccc424e2d2",
          "_outcomes": [
            {
              "displayName": "Outcome",
              "id": "outcome",
            },
          ],
          "_rev": "442294917",
          "_type": {
            "_id": "ValidatedPasswordNode",
            "collection": true,
            "name": "Platform Password",
          },
          "passwordAttribute": "password",
          "validateInput": false,
        },
        "ca2bacf6-8df5-4881-9158-37e924bdbb51": {
          "_id": "ca2bacf6-8df5-4881-9158-37e924bdbb51",
          "_outcomes": [
            {
              "displayName": "Outcome",
              "id": "outcome",
            },
          ],
          "_rev": "593564329",
          "_type": {
            "_id": "ValidatedUsernameNode",
            "collection": true,
            "name": "Platform Username",
          },
          "usernameAttribute": "userName",
          "validateInput": false,
        },
      },
      "nodes": {
        "03e9b767-c3fa-499c-981a-d2e235b4bff3": {
          "_id": "03e9b767-c3fa-499c-981a-d2e235b4bff3",
          "_outcomes": [
            {
              "displayName": "Outcome",
              "id": "outcome",
            },
          ],
          "_rev": "1447545833",
          "_type": {
            "_id": "PageNode",
            "collection": true,
            "name": "Page Node",
          },
          "nodes": [
            {
              "_id": "2f76da6c-9349-473e-a534-9b3a22fa61f5",
              "displayName": "Username",
              "nodeType": "ValidatedUsernameNode",
            },
            {
              "_id": "6f8a0d4c-9d78-48c6-b768-5b3b70a55b36",
              "displayName": "Password",
              "nodeType": "ValidatedPasswordNode",
            },
          ],
          "pageDescription": {},
          "pageHeader": {},
          "stage": "themeId=072e3d45-ae81-4256-b4d7-054e4b29a6b6",
        },
        "2f1583b0-fdd9-4b5e-b7b2-8bfb7ff94655": {
          "_id": "2f1583b0-fdd9-4b5e-b7b2-8bfb7ff94655",
          "_outcomes": [
            {
              "displayName": "de",
              "id": "de",
            },
            {
              "displayName": "en",
              "id": "en",
            },
            {
              "displayName": "fr",
              "id": "fr",
            },
            {
              "displayName": "other",
              "id": "other",
            },
          ],
          "_rev": "566594791",
          "_type": {
            "_id": "ScriptedDecisionNode",
            "collection": true,
            "name": "Scripted Decision",
          },
          "inputs": [
            "*",
          ],
          "outcomes": [
            "de",
            "en",
            "fr",
            "other",
          ],
          "outputs": [
            "*",
          ],
          "script": "8508a00e-ad45-4310-b3c7-c6871b6a41a9",
        },
        "38cdbc89-1600-4221-950c-e9548f9cd3aa": {
          "_id": "38cdbc89-1600-4221-950c-e9548f9cd3aa",
          "_outcomes": [
            {
              "displayName": "Outcome",
              "id": "outcome",
            },
          ],
          "_rev": "1643378914",
          "_type": {
            "_id": "PageNode",
            "collection": true,
            "name": "Page Node",
          },
          "nodes": [
            {
              "_id": "5da02144-23fd-4795-b9fd-1d9762a3d323",
              "displayName": "Username",
              "nodeType": "ValidatedUsernameNode",
            },
            {
              "_id": "b27c07ed-7c7f-412a-aace-6fccc424e2d2",
              "displayName": "Password",
              "nodeType": "ValidatedPasswordNode",
            },
          ],
          "pageDescription": {},
          "pageHeader": {},
          "stage": "themeId=a1005a39-31d3-4186-9737-abddd30babcd",
        },
        "865e8254-eb01-46a1-8708-9d450ed04991": {
          "_id": "865e8254-eb01-46a1-8708-9d450ed04991",
          "_outcomes": [
            {
              "displayName": "Outcome",
              "id": "outcome",
            },
          ],
          "_rev": "2074645723",
          "_type": {
            "_id": "PageNode",
            "collection": true,
            "name": "Page Node",
          },
          "nodes": [
            {
              "_id": "ca2bacf6-8df5-4881-9158-37e924bdbb51",
              "displayName": "Username",
              "nodeType": "ValidatedUsernameNode",
            },
            {
              "_id": "34822f6b-f272-49f7-8da8-c2ad65d65807",
              "displayName": "Password",
              "nodeType": "ValidatedPasswordNode",
            },
          ],
          "pageDescription": {},
          "pageHeader": {},
          "stage": "themeId=d4158c4b-be5b-4ff1-ab38-15afa145ca34",
        },
        "b8a150c9-2517-4c50-b6cc-5e3fd09f2d17": {
          "_id": "b8a150c9-2517-4c50-b6cc-5e3fd09f2d17",
          "_outcomes": [
            {
              "displayName": "True",
              "id": "true",
            },
            {
              "displayName": "False",
              "id": "false",
            },
          ],
          "_rev": "734803351",
          "_type": {
            "_id": "DataStoreDecisionNode",
            "collection": true,
            "name": "Data Store Decision",
          },
        },
      },
      "saml2Entities": {},
      "scripts": {},
      "socialIdentityProviders": {},
      "themes": [],
      "tree": {
        "_id": "ThemeByLanguageMulti",
        "_rev": "-759138541",
        "description": "Change theme based on users language.",
        "enabled": true,
        "entryNodeId": "2f1583b0-fdd9-4b5e-b7b2-8bfb7ff94655",
        "identityResource": "managed/alpha_user",
        "nodes": {
          "03e9b767-c3fa-499c-981a-d2e235b4bff3": {
            "connections": {
              "outcome": "b8a150c9-2517-4c50-b6cc-5e3fd09f2d17",
            },
            "displayName": "French",
            "nodeType": "PageNode",
            "x": 394,
            "y": 410.015625,
          },
          "2f1583b0-fdd9-4b5e-b7b2-8bfb7ff94655": {
            "connections": {
              "de": "865e8254-eb01-46a1-8708-9d450ed04991",
              "en": "38cdbc89-1600-4221-950c-e9548f9cd3aa",
              "fr": "03e9b767-c3fa-499c-981a-d2e235b4bff3",
              "other": "38cdbc89-1600-4221-950c-e9548f9cd3aa",
            },
            "displayName": "Detect language",
            "nodeType": "ScriptedDecisionNode",
            "x": 154,
            "y": 207.015625,
          },
          "38cdbc89-1600-4221-950c-e9548f9cd3aa": {
            "connections": {
              "outcome": "b8a150c9-2517-4c50-b6cc-5e3fd09f2d17",
            },
            "displayName": "English",
            "nodeType": "PageNode",
            "x": 394,
            "y": 231.015625,
          },
          "865e8254-eb01-46a1-8708-9d450ed04991": {
            "connections": {
              "outcome": "b8a150c9-2517-4c50-b6cc-5e3fd09f2d17",
            },
            "displayName": "German",
            "nodeType": "PageNode",
            "x": 393,
            "y": 54.015625,
          },
          "b8a150c9-2517-4c50-b6cc-5e3fd09f2d17": {
            "connections": {
              "false": "e301438c-0bd0-429c-ab0c-66126501069a",
              "true": "70e691a5-1e33-4ac3-a356-e7b6d60d92e0",
            },
            "displayName": "Validate Credentials",
            "nodeType": "DataStoreDecisionNode",
            "x": 638,
            "y": 240.015625,
          },
        },
        "staticNodes": {
          "70e691a5-1e33-4ac3-a356-e7b6d60d92e0": {
            "x": 878,
            "y": 173,
          },
          "e301438c-0bd0-429c-ab0c-66126501069a": {
            "x": 879,
            "y": 384,
          },
          "startNode": {
            "x": 50,
            "y": 250,
          },
        },
        "uiConfig": {},
      },
    },
    "ThemeByPreference": {
      "circlesOfTrust": {},
      "emailTemplates": {},
      "innerNodes": {
        "3288788f-a577-452a-bd52-e724463075b1": {
          "_id": "3288788f-a577-452a-bd52-e724463075b1",
          "_outcomes": [
            {
              "displayName": "Outcome",
              "id": "outcome",
            },
          ],
          "_rev": "572586273",
          "_type": {
            "_id": "ValidatedPasswordNode",
            "collection": true,
            "name": "Platform Password",
          },
          "passwordAttribute": "password",
          "validateInput": false,
        },
        "85d00d66-ae7d-4964-bdba-d5a06b49d2b8": {
          "_id": "85d00d66-ae7d-4964-bdba-d5a06b49d2b8",
          "_outcomes": [
            {
              "displayName": "Outcome",
              "id": "outcome",
            },
          ],
          "_rev": "533611657",
          "_type": {
            "_id": "ValidatedPasswordNode",
            "collection": true,
            "name": "Platform Password",
          },
          "passwordAttribute": "password",
          "validateInput": false,
        },
        "eb15e420-3c42-4006-903c-6ef2aa8273e3": {
          "_id": "eb15e420-3c42-4006-903c-6ef2aa8273e3",
          "_outcomes": [
            {
              "displayName": "Outcome",
              "id": "outcome",
            },
          ],
          "_rev": "-264858396",
          "_type": {
            "_id": "ValidatedUsernameNode",
            "collection": true,
            "name": "Platform Username",
          },
          "usernameAttribute": "userName",
          "validateInput": false,
        },
      },
      "nodes": {
        "212fa68c-f661-439c-8e4e-0712c76b3b8c": {
          "_id": "212fa68c-f661-439c-8e4e-0712c76b3b8c",
          "_outcomes": [
            {
              "displayName": "True",
              "id": "true",
            },
            {
              "displayName": "False",
              "id": "false",
            },
          ],
          "_rev": "-156115519",
          "_type": {
            "_id": "AttributeValueDecisionNode",
            "collection": true,
            "name": "Attribute Value Decision",
          },
          "comparisonAttribute": "preferences/highContrast",
          "comparisonOperation": "EQUALS",
          "comparisonValue": "true",
          "identityAttribute": "userName",
        },
        "310600af-3d6e-4e21-bb67-c7c2382a9582": {
          "_id": "310600af-3d6e-4e21-bb67-c7c2382a9582",
          "_outcomes": [
            {
              "displayName": "Outcome",
              "id": "outcome",
            },
          ],
          "_rev": "-890223662",
          "_type": {
            "_id": "PageNode",
            "collection": true,
            "name": "Page Node",
          },
          "nodes": [
            {
              "_id": "3288788f-a577-452a-bd52-e724463075b1",
              "displayName": "Password",
              "nodeType": "ValidatedPasswordNode",
            },
          ],
          "pageDescription": {},
          "pageHeader": {},
          "stage": "themeId=63e19668-909f-479e-83d7-be7a01cd8187",
        },
        "be4e8734-3fbe-4eda-8e42-7bff50914b24": {
          "_id": "be4e8734-3fbe-4eda-8e42-7bff50914b24",
          "_outcomes": [
            {
              "displayName": "Outcome",
              "id": "outcome",
            },
          ],
          "_rev": "-1385417084",
          "_type": {
            "_id": "PageNode",
            "collection": true,
            "name": "Page Node",
          },
          "nodes": [
            {
              "_id": "85d00d66-ae7d-4964-bdba-d5a06b49d2b8",
              "displayName": "Password",
              "nodeType": "ValidatedPasswordNode",
            },
          ],
          "pageDescription": {},
          "pageHeader": {},
          "stage": "themeId=a5420670-bae8-4ad6-9595-8477f6bca2c7",
        },
        "c16ee6b7-ed49-414c-88d4-6de41368e953": {
          "_id": "c16ee6b7-ed49-414c-88d4-6de41368e953",
          "_outcomes": [
            {
              "displayName": "True",
              "id": "true",
            },
            {
              "displayName": "False",
              "id": "false",
            },
          ],
          "_rev": "861393321",
          "_type": {
            "_id": "DataStoreDecisionNode",
            "collection": true,
            "name": "Data Store Decision",
          },
        },
        "c689494e-4544-4746-9729-3c037a8ab173": {
          "_id": "c689494e-4544-4746-9729-3c037a8ab173",
          "_outcomes": [
            {
              "displayName": "Outcome",
              "id": "outcome",
            },
          ],
          "_rev": "1089996896",
          "_type": {
            "_id": "PageNode",
            "collection": true,
            "name": "Page Node",
          },
          "nodes": [
            {
              "_id": "eb15e420-3c42-4006-903c-6ef2aa8273e3",
              "displayName": "Username",
              "nodeType": "ValidatedUsernameNode",
            },
          ],
          "pageDescription": {},
          "pageHeader": {},
          "stage": "themeId=a5420670-bae8-4ad6-9595-8477f6bca2c7",
        },
      },
      "saml2Entities": {},
      "scripts": {},
      "socialIdentityProviders": {},
      "themes": [],
      "tree": {
        "_id": "ThemeByPreference",
        "_rev": "-1485945680",
        "description": "Change theme based on users preference.",
        "enabled": true,
        "entryNodeId": "c689494e-4544-4746-9729-3c037a8ab173",
        "identityResource": "managed/alpha_user",
        "nodes": {
          "212fa68c-f661-439c-8e4e-0712c76b3b8c": {
            "connections": {
              "false": "be4e8734-3fbe-4eda-8e42-7bff50914b24",
              "true": "310600af-3d6e-4e21-bb67-c7c2382a9582",
            },
            "displayName": "Visually Impaired?",
            "nodeType": "AttributeValueDecisionNode",
            "x": 375,
            "y": 231.015625,
          },
          "310600af-3d6e-4e21-bb67-c7c2382a9582": {
            "connections": {
              "outcome": "c16ee6b7-ed49-414c-88d4-6de41368e953",
            },
            "displayName": "High Contrast Theme",
            "nodeType": "PageNode",
            "x": 580,
            "y": 159.015625,
          },
          "be4e8734-3fbe-4eda-8e42-7bff50914b24": {
            "connections": {
              "outcome": "c16ee6b7-ed49-414c-88d4-6de41368e953",
            },
            "displayName": "Regular Theme",
            "nodeType": "PageNode",
            "x": 582,
            "y": 309.015625,
          },
          "c16ee6b7-ed49-414c-88d4-6de41368e953": {
            "connections": {
              "false": "e301438c-0bd0-429c-ab0c-66126501069a",
              "true": "70e691a5-1e33-4ac3-a356-e7b6d60d92e0",
            },
            "displayName": "Validate Credentials",
            "nodeType": "DataStoreDecisionNode",
            "x": 814,
            "y": 235.015625,
          },
          "c689494e-4544-4746-9729-3c037a8ab173": {
            "connections": {
              "outcome": "212fa68c-f661-439c-8e4e-0712c76b3b8c",
            },
            "displayName": "Login Page",
            "nodeType": "PageNode",
            "x": 150,
            "y": 228.015625,
          },
        },
        "staticNodes": {
          "70e691a5-1e33-4ac3-a356-e7b6d60d92e0": {
            "x": 1031,
            "y": 157,
          },
          "e301438c-0bd0-429c-ab0c-66126501069a": {
            "x": 1031,
            "y": 378,
          },
          "startNode": {
            "x": 50,
            "y": 250,
          },
        },
        "uiConfig": {},
      },
    },
    "ThemeByProfileData": {
      "circlesOfTrust": {},
      "emailTemplates": {},
      "innerNodes": {
        "2b88d9f0-b76a-4d60-9235-6593ddbbe5e8": {
          "_id": "2b88d9f0-b76a-4d60-9235-6593ddbbe5e8",
          "_outcomes": [
            {
              "displayName": "Outcome",
              "id": "outcome",
            },
          ],
          "_rev": "-749524400",
          "_type": {
            "_id": "ValidatedPasswordNode",
            "collection": true,
            "name": "Platform Password",
          },
          "passwordAttribute": "password",
          "validateInput": false,
        },
        "882558c2-da87-40c5-b20e-0630b302e103": {
          "_id": "882558c2-da87-40c5-b20e-0630b302e103",
          "_outcomes": [
            {
              "displayName": "Outcome",
              "id": "outcome",
            },
          ],
          "_rev": "2089723053",
          "_type": {
            "_id": "ValidatedPasswordNode",
            "collection": true,
            "name": "Platform Password",
          },
          "passwordAttribute": "password",
          "validateInput": false,
        },
        "9abf6c33-53a8-4f6f-900c-3b6c5dc7944b": {
          "_id": "9abf6c33-53a8-4f6f-900c-3b6c5dc7944b",
          "_outcomes": [
            {
              "displayName": "Outcome",
              "id": "outcome",
            },
          ],
          "_rev": "1282342114",
          "_type": {
            "_id": "ValidatedUsernameNode",
            "collection": true,
            "name": "Platform Username",
          },
          "usernameAttribute": "userName",
          "validateInput": false,
        },
      },
      "nodes": {
        "08397cdc-b86d-490d-943e-03fd10c665a9": {
          "_id": "08397cdc-b86d-490d-943e-03fd10c665a9",
          "_outcomes": [
            {
              "displayName": "True",
              "id": "true",
            },
            {
              "displayName": "False",
              "id": "false",
            },
          ],
          "_rev": "-870347235",
          "_type": {
            "_id": "AttributeValueDecisionNode",
            "collection": true,
            "name": "Attribute Value Decision",
          },
          "comparisonAttribute": "preferences/earlyAdopter",
          "comparisonOperation": "EQUALS",
          "comparisonValue": "true",
          "identityAttribute": "userName",
        },
        "188ee476-feb6-4c2e-b33e-013aaa712534": {
          "_id": "188ee476-feb6-4c2e-b33e-013aaa712534",
          "_outcomes": [
            {
              "displayName": "True",
              "id": "true",
            },
            {
              "displayName": "False",
              "id": "false",
            },
          ],
          "_rev": "-32731178",
          "_type": {
            "_id": "DataStoreDecisionNode",
            "collection": true,
            "name": "Data Store Decision",
          },
        },
        "68572ff3-8186-4dd5-bd68-f2e325f20331": {
          "_id": "68572ff3-8186-4dd5-bd68-f2e325f20331",
          "_outcomes": [
            {
              "displayName": "Outcome",
              "id": "outcome",
            },
          ],
          "_rev": "1933104103",
          "_type": {
            "_id": "PageNode",
            "collection": true,
            "name": "Page Node",
          },
          "nodes": [
            {
              "_id": "2b88d9f0-b76a-4d60-9235-6593ddbbe5e8",
              "displayName": "Password",
              "nodeType": "ValidatedPasswordNode",
            },
          ],
          "pageDescription": {},
          "pageHeader": {},
          "stage": "themeId=a5420670-bae8-4ad6-9595-8477f6bca2c7",
        },
        "a6f6e34c-d7d7-451d-838a-1017d88d66a9": {
          "_id": "a6f6e34c-d7d7-451d-838a-1017d88d66a9",
          "_outcomes": [
            {
              "displayName": "Outcome",
              "id": "outcome",
            },
          ],
          "_rev": "-756603377",
          "_type": {
            "_id": "PageNode",
            "collection": true,
            "name": "Page Node",
          },
          "nodes": [
            {
              "_id": "882558c2-da87-40c5-b20e-0630b302e103",
              "displayName": "Password",
              "nodeType": "ValidatedPasswordNode",
            },
          ],
          "pageDescription": {},
          "pageHeader": {},
          "stage": "themeId=9de294d6-5913-49fa-a2d3-df849429896c",
        },
        "fd4489fd-2ab6-446d-b04a-fd85d3d6bc2d": {
          "_id": "fd4489fd-2ab6-446d-b04a-fd85d3d6bc2d",
          "_outcomes": [
            {
              "displayName": "Outcome",
              "id": "outcome",
            },
          ],
          "_rev": "317836004",
          "_type": {
            "_id": "PageNode",
            "collection": true,
            "name": "Page Node",
          },
          "nodes": [
            {
              "_id": "9abf6c33-53a8-4f6f-900c-3b6c5dc7944b",
              "displayName": "Username",
              "nodeType": "ValidatedUsernameNode",
            },
          ],
          "pageDescription": {},
          "pageHeader": {},
          "stage": "themeId=a5420670-bae8-4ad6-9595-8477f6bca2c7",
        },
      },
      "saml2Entities": {},
      "scripts": {},
      "socialIdentityProviders": {},
      "themes": [],
      "tree": {
        "_id": "ThemeByProfileData",
        "_rev": "168223378",
        "description": "Change theme based on users profile data.",
        "enabled": true,
        "entryNodeId": "fd4489fd-2ab6-446d-b04a-fd85d3d6bc2d",
        "identityResource": "managed/alpha_user",
        "nodes": {
          "08397cdc-b86d-490d-943e-03fd10c665a9": {
            "connections": {
              "false": "68572ff3-8186-4dd5-bd68-f2e325f20331",
              "true": "a6f6e34c-d7d7-451d-838a-1017d88d66a9",
            },
            "displayName": "Early Adopter?",
            "nodeType": "AttributeValueDecisionNode",
            "x": 367,
            "y": 233.015625,
          },
          "188ee476-feb6-4c2e-b33e-013aaa712534": {
            "connections": {
              "false": "e301438c-0bd0-429c-ab0c-66126501069a",
              "true": "70e691a5-1e33-4ac3-a356-e7b6d60d92e0",
            },
            "displayName": "Validate Credentials",
            "nodeType": "DataStoreDecisionNode",
            "x": 819,
            "y": 237.015625,
          },
          "68572ff3-8186-4dd5-bd68-f2e325f20331": {
            "connections": {
              "outcome": "188ee476-feb6-4c2e-b33e-013aaa712534",
            },
            "displayName": "Regular Login",
            "nodeType": "PageNode",
            "x": 587,
            "y": 311.015625,
          },
          "a6f6e34c-d7d7-451d-838a-1017d88d66a9": {
            "connections": {
              "outcome": "188ee476-feb6-4c2e-b33e-013aaa712534",
            },
            "displayName": "Early Adopter Login",
            "nodeType": "PageNode",
            "x": 587,
            "y": 156.015625,
          },
          "fd4489fd-2ab6-446d-b04a-fd85d3d6bc2d": {
            "connections": {
              "outcome": "08397cdc-b86d-490d-943e-03fd10c665a9",
            },
            "displayName": "Login Page",
            "nodeType": "PageNode",
            "x": 152,
            "y": 226.015625,
          },
        },
        "staticNodes": {
          "70e691a5-1e33-4ac3-a356-e7b6d60d92e0": {
            "x": 1036,
            "y": 159,
          },
          "e301438c-0bd0-429c-ab0c-66126501069a": {
            "x": 1036,
            "y": 380,
          },
          "startNode": {
            "x": 50,
            "y": 250,
          },
        },
        "uiConfig": {},
      },
    },
    "ThemedMFALogin": {
      "circlesOfTrust": {},
      "emailTemplates": {},
      "innerNodes": {
        "17bfe841-2831-4323-b884-d3eaca3f6ac9": {
          "_id": "17bfe841-2831-4323-b884-d3eaca3f6ac9",
          "_outcomes": [
            {
              "displayName": "Outcome",
              "id": "outcome",
            },
          ],
          "_rev": "1956862719",
          "_type": {
            "_id": "ValidatedUsernameNode",
            "collection": true,
            "name": "Platform Username",
          },
          "usernameAttribute": "userName",
          "validateInput": false,
        },
        "f411e659-b6af-40b2-84be-fa37e1e3cebc": {
          "_id": "f411e659-b6af-40b2-84be-fa37e1e3cebc",
          "_outcomes": [
            {
              "displayName": "Outcome",
              "id": "outcome",
            },
          ],
          "_rev": "988087609",
          "_type": {
            "_id": "ValidatedPasswordNode",
            "collection": true,
            "name": "Platform Password",
          },
          "passwordAttribute": "password",
          "validateInput": false,
        },
      },
      "nodes": {
        "332d4a69-03ab-469b-b3b8-a69ecc2b7b81": {
          "_id": "332d4a69-03ab-469b-b3b8-a69ecc2b7b81",
          "_outcomes": [
            {
              "displayName": "True",
              "id": "true",
            },
            {
              "displayName": "False",
              "id": "false",
            },
          ],
          "_rev": "2044506417",
          "_type": {
            "_id": "InnerTreeEvaluatorNode",
            "collection": true,
            "name": "Inner Tree Evaluator",
          },
          "tree": "DevicePrint",
        },
        "404da4a1-4b30-4cd5-b478-260be9feaf48": {
          "_id": "404da4a1-4b30-4cd5-b478-260be9feaf48",
          "_outcomes": [
            {
              "displayName": "True",
              "id": "true",
            },
            {
              "displayName": "False",
              "id": "false",
            },
          ],
          "_rev": "829584660",
          "_type": {
            "_id": "InnerTreeEvaluatorNode",
            "collection": true,
            "name": "Inner Tree Evaluator",
          },
          "tree": "ProgressiveProfile",
        },
        "47deecad-449c-487b-bc1c-bc90f1742815": {
          "_id": "47deecad-449c-487b-bc1c-bc90f1742815",
          "_outcomes": [
            {
              "displayName": "true",
              "id": "true",
            },
          ],
          "_rev": "1726447192",
          "_type": {
            "_id": "ScriptedDecisionNode",
            "collection": true,
            "name": "Scripted Decision",
          },
          "inputs": [
            "*",
          ],
          "outcomes": [
            "true",
          ],
          "outputs": [
            "*",
          ],
          "script": "76421cb0-0550-43e7-89f8-51ad1d95d306",
        },
        "7fb5dc5d-a008-4495-ad37-6e555e0a713a": {
          "_id": "7fb5dc5d-a008-4495-ad37-6e555e0a713a",
          "_outcomes": [
            {
              "displayName": "true",
              "id": "true",
            },
          ],
          "_rev": "505301736",
          "_type": {
            "_id": "ScriptedDecisionNode",
            "collection": true,
            "name": "Scripted Decision",
          },
          "inputs": [
            "*",
          ],
          "outcomes": [
            "true",
          ],
          "outputs": [
            "*",
          ],
          "script": "199405e4-050e-4f2a-87d1-d9125f74a8df",
        },
        "988d4d72-2a93-456e-84c1-5239f267daca": {
          "_id": "988d4d72-2a93-456e-84c1-5239f267daca",
          "_outcomes": [
            {
              "displayName": "True",
              "id": "true",
            },
            {
              "displayName": "False",
              "id": "false",
            },
          ],
          "_rev": "1695814905",
          "_type": {
            "_id": "DataStoreDecisionNode",
            "collection": true,
            "name": "Data Store Decision",
          },
        },
        "9941735c-4d5e-4cfe-9762-3e4835331648": {
          "_id": "9941735c-4d5e-4cfe-9762-3e4835331648",
          "_outcomes": [
            {
              "displayName": "True",
              "id": "true",
            },
            {
              "displayName": "False",
              "id": "false",
            },
          ],
          "_rev": "1936850670",
          "_type": {
            "_id": "InnerTreeEvaluatorNode",
            "collection": true,
            "name": "Inner Tree Evaluator",
          },
          "tree": "MFAAutoSelect",
        },
        "c9391a09-371d-42d3-a132-57046b3bd7b7": {
          "_id": "c9391a09-371d-42d3-a132-57046b3bd7b7",
          "_outcomes": [
            {
              "displayName": "Outcome",
              "id": "outcome",
            },
          ],
          "_rev": "1644648089",
          "_type": {
            "_id": "PageNode",
            "collection": true,
            "name": "Page Node",
          },
          "nodes": [
            {
              "_id": "17bfe841-2831-4323-b884-d3eaca3f6ac9",
              "displayName": "Username",
              "nodeType": "ValidatedUsernameNode",
            },
            {
              "_id": "f411e659-b6af-40b2-84be-fa37e1e3cebc",
              "displayName": "Password",
              "nodeType": "ValidatedPasswordNode",
            },
          ],
          "pageDescription": {
            "en": "New here? <a href="#/service/Registration">Create an account</a><br><a href="#/service/ForgottenUsername">Forgot username?</a><a href="#/service/ResetPassword"> Forgot password?</a>",
          },
          "pageHeader": {
            "en": "Sign In",
          },
        },
        "d9b14d73-d3e1-4aa4-8740-66c68b4ba8f4": {
          "_id": "d9b14d73-d3e1-4aa4-8740-66c68b4ba8f4",
          "_outcomes": [
            {
              "displayName": "Outcome",
              "id": "outcome",
            },
          ],
          "_rev": "1436810157",
          "_type": {
            "_id": "IncrementLoginCountNode",
            "collection": true,
            "name": "Increment Login Count",
          },
          "identityAttribute": "userName",
        },
        "db401040-64cf-413b-8f57-5b8ec5f2421b": {
          "_id": "db401040-64cf-413b-8f57-5b8ec5f2421b",
          "_outcomes": [
            {
              "displayName": "true",
              "id": "true",
            },
          ],
          "_rev": "-270213031",
          "_type": {
            "_id": "ScriptedDecisionNode",
            "collection": true,
            "name": "Scripted Decision",
          },
          "inputs": [
            "*",
          ],
          "outcomes": [
            "true",
          ],
          "outputs": [
            "*",
          ],
          "script": "199405e4-050e-4f2a-87d1-d9125f74a8df",
        },
      },
      "saml2Entities": {},
      "scripts": {},
      "socialIdentityProviders": {},
      "themes": [],
      "tree": {
        "_id": "ThemedMFALogin",
        "_rev": "-2027041339",
        "description": "Platform Login Journey with themed MFA.",
        "enabled": true,
        "entryNodeId": "c9391a09-371d-42d3-a132-57046b3bd7b7",
        "identityResource": "managed/alpha_user",
        "nodes": {
          "332d4a69-03ab-469b-b3b8-a69ecc2b7b81": {
            "connections": {
              "false": "47deecad-449c-487b-bc1c-bc90f1742815",
              "true": "404da4a1-4b30-4cd5-b478-260be9feaf48",
            },
            "displayName": "Device Print",
            "nodeType": "InnerTreeEvaluatorNode",
            "x": 611,
            "y": 257.76666259765625,
          },
          "404da4a1-4b30-4cd5-b478-260be9feaf48": {
            "connections": {
              "false": "d9b14d73-d3e1-4aa4-8740-66c68b4ba8f4",
              "true": "d9b14d73-d3e1-4aa4-8740-66c68b4ba8f4",
            },
            "displayName": "Progressive Profile",
            "nodeType": "InnerTreeEvaluatorNode",
            "x": 1412,
            "y": 266,
          },
          "47deecad-449c-487b-bc1c-bc90f1742815": {
            "connections": {
              "true": "9941735c-4d5e-4cfe-9762-3e4835331648",
            },
            "displayName": "Set MFA Theme",
            "nodeType": "ScriptedDecisionNode",
            "x": 818,
            "y": 357.015625,
          },
          "7fb5dc5d-a008-4495-ad37-6e555e0a713a": {
            "connections": {
              "true": "404da4a1-4b30-4cd5-b478-260be9feaf48",
            },
            "displayName": "Reset Theme",
            "nodeType": "ScriptedDecisionNode",
            "x": 1201,
            "y": 362.015625,
          },
          "988d4d72-2a93-456e-84c1-5239f267daca": {
            "connections": {
              "false": "e301438c-0bd0-429c-ab0c-66126501069a",
              "true": "332d4a69-03ab-469b-b3b8-a69ecc2b7b81",
            },
            "displayName": "Validate Credentials",
            "nodeType": "DataStoreDecisionNode",
            "x": 385,
            "y": 257,
          },
          "9941735c-4d5e-4cfe-9762-3e4835331648": {
            "connections": {
              "false": "db401040-64cf-413b-8f57-5b8ec5f2421b",
              "true": "7fb5dc5d-a008-4495-ad37-6e555e0a713a",
            },
            "displayName": "MFA",
            "nodeType": "InnerTreeEvaluatorNode",
            "x": 1009,
            "y": 336.76666259765625,
          },
          "c9391a09-371d-42d3-a132-57046b3bd7b7": {
            "connections": {
              "outcome": "988d4d72-2a93-456e-84c1-5239f267daca",
            },
            "displayName": "Page Node",
            "nodeType": "PageNode",
            "x": 160,
            "y": 223,
          },
          "d9b14d73-d3e1-4aa4-8740-66c68b4ba8f4": {
            "connections": {
              "outcome": "70e691a5-1e33-4ac3-a356-e7b6d60d92e0",
            },
            "displayName": "Count Login",
            "nodeType": "IncrementLoginCountNode",
            "x": 1632,
            "y": 293,
          },
          "db401040-64cf-413b-8f57-5b8ec5f2421b": {
            "connections": {
              "true": "e301438c-0bd0-429c-ab0c-66126501069a",
            },
            "displayName": "Reset Theme",
            "nodeType": "ScriptedDecisionNode",
            "x": 1211,
            "y": 514.015625,
          },
        },
        "staticNodes": {
          "70e691a5-1e33-4ac3-a356-e7b6d60d92e0": {
            "x": 1836,
            "y": 285,
          },
          "e301438c-0bd0-429c-ab0c-66126501069a": {
            "x": 1425,
            "y": 506,
          },
          "startNode": {
            "x": 52,
            "y": 269,
          },
        },
        "uiConfig": {},
      },
    },
    "Themes": {
      "circlesOfTrust": {},
      "emailTemplates": {},
      "innerNodes": {
        "3bf128af-fc3e-4ac2-b47d-333c0cce187a": {
          "_id": "3bf128af-fc3e-4ac2-b47d-333c0cce187a",
          "_outcomes": [
            {
              "displayName": "green",
              "id": "green",
            },
            {
              "displayName": "yellow",
              "id": "yellow",
            },
            {
              "displayName": "red",
              "id": "red",
            },
          ],
          "_rev": "-1753855739",
          "_type": {
            "_id": "ChoiceCollectorNode",
            "collection": true,
            "name": "Choice Collector",
          },
          "choices": [
            "green",
            "yellow",
            "red",
          ],
          "defaultChoice": "green",
          "prompt": "Choose the theme",
        },
        "84cf919d-6522-4d4e-beec-ee339cb47120": {
          "_id": "84cf919d-6522-4d4e-beec-ee339cb47120",
          "_outcomes": [
            {
              "displayName": "True",
              "id": "true",
            },
            {
              "displayName": "False",
              "id": "false",
            },
          ],
          "_rev": "1487014322",
          "_type": {
            "_id": "MessageNode",
            "collection": true,
            "name": "Message Node",
          },
          "message": {
            "en": "Choose another theme?",
          },
          "messageNo": {
            "en": "No",
          },
          "messageYes": {
            "en": "Yes",
          },
        },
        "8532b7c9-0421-441f-9933-794b955b0c83": {
          "_id": "8532b7c9-0421-441f-9933-794b955b0c83",
          "_outcomes": [
            {
              "displayName": "True",
              "id": "true",
            },
            {
              "displayName": "False",
              "id": "false",
            },
          ],
          "_rev": "1751697631",
          "_type": {
            "_id": "MessageNode",
            "collection": true,
            "name": "Message Node",
          },
          "message": {
            "en": "Choose another theme?",
          },
          "messageNo": {
            "en": "No",
          },
          "messageYes": {
            "en": "Yes",
          },
        },
        "88487616-a66d-4bc7-ab88-75e007de67a0": {
          "_id": "88487616-a66d-4bc7-ab88-75e007de67a0",
          "_outcomes": [
            {
              "displayName": "true",
              "id": "true",
            },
          ],
          "_rev": "-1444137964",
          "_type": {
            "_id": "ScriptedDecisionNode",
            "collection": true,
            "name": "Scripted Decision",
          },
          "inputs": [
            "*",
          ],
          "outcomes": [
            "true",
          ],
          "outputs": [
            "*",
          ],
          "script": "3814d347-a2f2-4be9-a810-ab41a1e374bd",
        },
        "f61e5470-6163-4e4b-875a-a70ec42a0494": {
          "_id": "f61e5470-6163-4e4b-875a-a70ec42a0494",
          "_outcomes": [
            {
              "displayName": "True",
              "id": "true",
            },
            {
              "displayName": "False",
              "id": "false",
            },
          ],
          "_rev": "-638789091",
          "_type": {
            "_id": "MessageNode",
            "collection": true,
            "name": "Message Node",
          },
          "message": {
            "en": "Choose another theme?",
          },
          "messageNo": {
            "en": "No",
          },
          "messageYes": {
            "en": "Yes",
          },
        },
      },
      "nodes": {
        "0e583226-056d-4499-aad1-a5759d18c75f": {
          "_id": "0e583226-056d-4499-aad1-a5759d18c75f",
          "_outcomes": [
            {
              "displayName": "True",
              "id": "true",
            },
            {
              "displayName": "False",
              "id": "false",
            },
          ],
          "_rev": "-310917753",
          "_type": {
            "_id": "PageNode",
            "collection": true,
            "name": "Page Node",
          },
          "nodes": [
            {
              "_id": "f61e5470-6163-4e4b-875a-a70ec42a0494",
              "displayName": "Again?",
              "nodeType": "MessageNode",
            },
          ],
          "pageDescription": {},
          "pageHeader": {},
          "stage": "themeId=red",
        },
        "14eef2cd-1e00-4460-a504-c08a86404d78": {
          "_id": "14eef2cd-1e00-4460-a504-c08a86404d78",
          "_outcomes": [
            {
              "displayName": "true",
              "id": "true",
            },
          ],
          "_rev": "-1394076294",
          "_type": {
            "_id": "ScriptedDecisionNode",
            "collection": true,
            "name": "Scripted Decision",
          },
          "inputs": [
            "*",
          ],
          "outcomes": [
            "true",
          ],
          "outputs": [
            "*",
          ],
          "script": "1550ad56-df9f-4dad-9803-6c3a2545d8f4",
        },
        "53c47543-d4cb-452f-b9a4-588fdbae1211": {
          "_id": "53c47543-d4cb-452f-b9a4-588fdbae1211",
          "_outcomes": [
            {
              "displayName": "True",
              "id": "true",
            },
            {
              "displayName": "False",
              "id": "false",
            },
          ],
          "_rev": "1587613424",
          "_type": {
            "_id": "PageNode",
            "collection": true,
            "name": "Page Node",
          },
          "nodes": [
            {
              "_id": "84cf919d-6522-4d4e-beec-ee339cb47120",
              "displayName": "Again?",
              "nodeType": "MessageNode",
            },
          ],
          "pageDescription": {},
          "pageHeader": {},
          "stage": "themeId=eb93a52c-8f26-42cf-bc7b-706166b9978a",
        },
        "70809db7-6db1-4dbb-8a78-edf3258ab1ad": {
          "_id": "70809db7-6db1-4dbb-8a78-edf3258ab1ad",
          "_outcomes": [
            {
              "displayName": "True",
              "id": "true",
            },
            {
              "displayName": "False",
              "id": "false",
            },
          ],
          "_rev": "-343553994",
          "_type": {
            "_id": "PageNode",
            "collection": true,
            "name": "Page Node",
          },
          "nodes": [
            {
              "_id": "8532b7c9-0421-441f-9933-794b955b0c83",
              "displayName": "Again?",
              "nodeType": "MessageNode",
            },
          ],
          "pageDescription": {},
          "pageHeader": {},
          "stage": "themeId=yellow",
        },
        "7deb7e91-9815-4c28-b3fb-80e14941ae16": {
          "_id": "7deb7e91-9815-4c28-b3fb-80e14941ae16",
          "_outcomes": [
            {
              "displayName": "green",
              "id": "green",
            },
            {
              "displayName": "yellow",
              "id": "yellow",
            },
            {
              "displayName": "red",
              "id": "red",
            },
          ],
          "_rev": "-1116093759",
          "_type": {
            "_id": "PageNode",
            "collection": true,
            "name": "Page Node",
          },
          "nodes": [
            {
              "_id": "3bf128af-fc3e-4ac2-b47d-333c0cce187a",
              "displayName": "Choose Theme",
              "nodeType": "ChoiceCollectorNode",
            },
          ],
          "pageDescription": {},
          "pageHeader": {},
          "stage": "themeId=63e19668-909f-479e-83d7-be7a01cd8187",
        },
        "8d2d9951-2dff-47e5-a9ba-dbae44f1856e": {
          "_id": "8d2d9951-2dff-47e5-a9ba-dbae44f1856e",
          "_outcomes": [
            {
              "displayName": "true",
              "id": "true",
            },
          ],
          "_rev": "421104627",
          "_type": {
            "_id": "PageNode",
            "collection": true,
            "name": "Page Node",
          },
          "nodes": [
            {
              "_id": "88487616-a66d-4bc7-ab88-75e007de67a0",
              "displayName": "Remove Button",
              "nodeType": "ScriptedDecisionNode",
            },
          ],
          "pageDescription": {},
          "pageHeader": {
            "en": "Done!",
          },
        },
        "d9c044d2-ca79-4e7f-8a2a-4f3238505e78": {
          "_id": "d9c044d2-ca79-4e7f-8a2a-4f3238505e78",
          "_outcomes": [
            {
              "displayName": "true",
              "id": "true",
            },
          ],
          "_rev": "1004707756",
          "_type": {
            "_id": "ScriptedDecisionNode",
            "collection": true,
            "name": "Scripted Decision",
          },
          "inputs": [
            "*",
          ],
          "outcomes": [
            "true",
          ],
          "outputs": [
            "*",
          ],
          "script": "199405e4-050e-4f2a-87d1-d9125f74a8df",
        },
      },
      "saml2Entities": {},
      "scripts": {},
      "socialIdentityProviders": {},
      "themes": [],
      "tree": {
        "_id": "Themes",
        "_rev": "-1745553538",
        "description": "Show off some theme acrobatic.",
        "enabled": true,
        "entryNodeId": "14eef2cd-1e00-4460-a504-c08a86404d78",
        "identityResource": "managed/alpha_user",
        "nodes": {
          "0e583226-056d-4499-aad1-a5759d18c75f": {
            "connections": {
              "false": "d9c044d2-ca79-4e7f-8a2a-4f3238505e78",
              "true": "7deb7e91-9815-4c28-b3fb-80e14941ae16",
            },
            "displayName": "Red",
            "nodeType": "PageNode",
            "x": 587,
            "y": 423.015625,
          },
          "14eef2cd-1e00-4460-a504-c08a86404d78": {
            "connections": {
              "true": "7deb7e91-9815-4c28-b3fb-80e14941ae16",
            },
            "displayName": "Set Theme?",
            "nodeType": "ScriptedDecisionNode",
            "x": 143,
            "y": 268.015625,
          },
          "53c47543-d4cb-452f-b9a4-588fdbae1211": {
            "connections": {
              "false": "d9c044d2-ca79-4e7f-8a2a-4f3238505e78",
              "true": "7deb7e91-9815-4c28-b3fb-80e14941ae16",
            },
            "displayName": "Green",
            "nodeType": "PageNode",
            "x": 588,
            "y": 17.015625,
          },
          "70809db7-6db1-4dbb-8a78-edf3258ab1ad": {
            "connections": {
              "false": "d9c044d2-ca79-4e7f-8a2a-4f3238505e78",
              "true": "7deb7e91-9815-4c28-b3fb-80e14941ae16",
            },
            "displayName": "Yellow",
            "nodeType": "PageNode",
            "x": 587,
            "y": 221.015625,
          },
          "7deb7e91-9815-4c28-b3fb-80e14941ae16": {
            "connections": {
              "green": "53c47543-d4cb-452f-b9a4-588fdbae1211",
              "red": "0e583226-056d-4499-aad1-a5759d18c75f",
              "yellow": "70809db7-6db1-4dbb-8a78-edf3258ab1ad",
            },
            "displayName": "Theme",
            "nodeType": "PageNode",
            "x": 351,
            "y": 208.015625,
          },
          "8d2d9951-2dff-47e5-a9ba-dbae44f1856e": {
            "connections": {
              "true": "e301438c-0bd0-429c-ab0c-66126501069a",
            },
            "displayName": "Done",
            "nodeType": "PageNode",
            "x": 1057,
            "y": 242.015625,
          },
          "d9c044d2-ca79-4e7f-8a2a-4f3238505e78": {
            "connections": {
              "true": "8d2d9951-2dff-47e5-a9ba-dbae44f1856e",
            },
            "displayName": "Reset Theme",
            "nodeType": "ScriptedDecisionNode",
            "x": 843,
            "y": 270.015625,
          },
        },
        "staticNodes": {
          "70e691a5-1e33-4ac3-a356-e7b6d60d92e0": {
            "x": 42,
            "y": 384,
          },
          "e301438c-0bd0-429c-ab0c-66126501069a": {
            "x": 1273,
            "y": 266,
          },
          "startNode": {
            "x": 45,
            "y": 261,
          },
        },
        "uiConfig": {},
      },
    },
    "TwilioIVR": {
      "circlesOfTrust": {},
      "emailTemplates": {},
      "innerNodes": {
        "0a58f230-2226-4f67-80da-366dde90c361": {
          "_id": "0a58f230-2226-4f67-80da-366dde90c361",
          "_outcomes": [
            {
              "displayName": "Lookup",
              "id": "Lookup",
            },
            {
              "displayName": "Real person",
              "id": "Real person",
            },
          ],
          "_rev": "1434146646",
          "_type": {
            "_id": "ChoiceCollectorNode",
            "collection": true,
            "name": "Choice Collector",
          },
          "choices": [
            "Lookup",
            "Real person",
          ],
          "defaultChoice": "Lookup",
          "prompt": "If you have already registered an account with us, I can look it up or I can connect you to a real person.",
        },
        "0f2ac5d6-8622-4218-9005-85908a68ada6": {
          "_id": "0f2ac5d6-8622-4218-9005-85908a68ada6",
          "_outcomes": [
            {
              "displayName": "Yes",
              "id": "Yes",
            },
            {
              "displayName": "No",
              "id": "No",
            },
          ],
          "_rev": "-989853873",
          "_type": {
            "_id": "ChoiceCollectorNode",
            "collection": true,
            "name": "Choice Collector",
          },
          "choices": [
            "Yes",
            "No",
          ],
          "defaultChoice": "No",
          "prompt": "I unlocked your account. Can I help you with anything else?",
        },
        "10563e65-7094-476b-a57d-21f81efdd77e": {
          "_id": "10563e65-7094-476b-a57d-21f81efdd77e",
          "_outcomes": [
            {
              "displayName": "true",
              "id": "true",
            },
          ],
          "_rev": "1645857072",
          "_type": {
            "_id": "ScriptedDecisionNode",
            "collection": true,
            "name": "Scripted Decision",
          },
          "inputs": [
            "*",
          ],
          "outcomes": [
            "true",
          ],
          "outputs": [
            "*",
          ],
          "script": "1c0c73e8-2be1-41ce-b042-3c39694346b5",
        },
        "6fea520c-3b3e-4695-a3b4-5ce46e3bcf6a": {
          "_id": "6fea520c-3b3e-4695-a3b4-5ce46e3bcf6a",
          "_outcomes": [
            {
              "displayName": "true",
              "id": "true",
            },
          ],
          "_rev": "2111260982",
          "_type": {
            "_id": "ScriptedDecisionNode",
            "collection": true,
            "name": "Scripted Decision",
          },
          "inputs": [
            "*",
          ],
          "outcomes": [
            "true",
          ],
          "outputs": [
            "*",
          ],
          "script": "53c50dbd-5331-4739-bea1-4c5e9bf553f2",
        },
        "70e1167a-f0dc-4732-8047-d61719850327": {
          "_id": "70e1167a-f0dc-4732-8047-d61719850327",
          "_outcomes": [
            {
              "displayName": "Yes",
              "id": "Yes",
            },
            {
              "displayName": "No",
              "id": "No",
            },
          ],
          "_rev": "879322944",
          "_type": {
            "_id": "ChoiceCollectorNode",
            "collection": true,
            "name": "Choice Collector",
          },
          "choices": [
            "Yes",
            "No",
          ],
          "defaultChoice": "No",
          "prompt": "I have set your new security PIN. Can I help you with anything else?",
        },
        "881c31da-999d-47f5-ad12-7a4f892ef754": {
          "_id": "881c31da-999d-47f5-ad12-7a4f892ef754",
          "_outcomes": [
            {
              "displayName": "true",
              "id": "true",
            },
          ],
          "_rev": "755818536",
          "_type": {
            "_id": "ScriptedDecisionNode",
            "collection": true,
            "name": "Scripted Decision",
          },
          "inputs": [
            "*",
          ],
          "outcomes": [
            "true",
          ],
          "outputs": [
            "*",
          ],
          "script": "7f1c30ec-ea27-4bb1-bd0b-be5792c9a1a6",
        },
        "8b6df0a2-d8b3-439e-847b-81d6d3fd04a8": {
          "_id": "8b6df0a2-d8b3-439e-847b-81d6d3fd04a8",
          "_outcomes": [
            {
              "displayName": "true",
              "id": "true",
            },
          ],
          "_rev": "-480173456",
          "_type": {
            "_id": "ScriptedDecisionNode",
            "collection": true,
            "name": "Scripted Decision",
          },
          "inputs": [
            "*",
          ],
          "outcomes": [
            "true",
          ],
          "outputs": [
            "*",
          ],
          "script": "be6f1f2c-30ee-41fb-9e1e-8da72267fad3",
        },
        "8d6492a8-966d-4ffc-a44b-54bd258f1ba5": {
          "_id": "8d6492a8-966d-4ffc-a44b-54bd258f1ba5",
          "_outcomes": [
            {
              "displayName": "true",
              "id": "true",
            },
          ],
          "_rev": "1454765608",
          "_type": {
            "_id": "ScriptedDecisionNode",
            "collection": true,
            "name": "Scripted Decision",
          },
          "inputs": [
            "*",
          ],
          "outcomes": [
            "true",
          ],
          "outputs": [
            "*",
          ],
          "script": "181817ea-b8dc-4b3b-a366-99239f6f274d",
        },
        "8e7df323-6c77-43e9-980c-a114a0dc8fbb": {
          "_id": "8e7df323-6c77-43e9-980c-a114a0dc8fbb",
          "_outcomes": [
            {
              "displayName": "true",
              "id": "true",
            },
          ],
          "_rev": "-638382285",
          "_type": {
            "_id": "ScriptedDecisionNode",
            "collection": true,
            "name": "Scripted Decision",
          },
          "inputs": [
            "*",
          ],
          "outcomes": [
            "true",
          ],
          "outputs": [
            "*",
          ],
          "script": "849ef5f3-7481-4607-a668-f0b5bf47db4c",
        },
        "a1243fda-0875-4f58-97ed-84f304142d7f": {
          "_id": "a1243fda-0875-4f58-97ed-84f304142d7f",
          "_outcomes": [
            {
              "displayName": "Yes",
              "id": "Yes",
            },
            {
              "displayName": "No",
              "id": "No",
            },
          ],
          "_rev": "1378797034",
          "_type": {
            "_id": "ChoiceCollectorNode",
            "collection": true,
            "name": "Choice Collector",
          },
          "choices": [
            "Yes",
            "No",
          ],
          "defaultChoice": "No",
          "prompt": "I see you are calling from a cell phone, would you like me to send you a text with account registration information?",
        },
        "b80470d7-2939-4e61-957b-0a86959af873": {
          "_id": "b80470d7-2939-4e61-957b-0a86959af873",
          "_outcomes": [
            {
              "displayName": "true",
              "id": "true",
            },
            {
              "displayName": "false",
              "id": "false",
            },
          ],
          "_rev": "2061948767",
          "_type": {
            "_id": "ScriptedDecisionNode",
            "collection": true,
            "name": "Scripted Decision",
          },
          "inputs": [
            "*",
          ],
          "outcomes": [
            "true",
            "false",
          ],
          "outputs": [
            "*",
          ],
          "script": "c9fa3899-c3ce-4833-af83-64d709202600",
        },
        "c2224672-67c8-4836-9fcc-77c7c76ef51a": {
          "_id": "c2224672-67c8-4836-9fcc-77c7c76ef51a",
          "_outcomes": [
            {
              "displayName": "Unlock account",
              "id": "Unlock account",
            },
            {
              "displayName": "Security pin",
              "id": "Security pin",
            },
            {
              "displayName": "Real person",
              "id": "Real person",
            },
            {
              "displayName": "Repeat",
              "id": "Repeat",
            },
          ],
          "_rev": "-1482703246",
          "_type": {
            "_id": "ChoiceCollectorNode",
            "collection": true,
            "name": "Choice Collector",
          },
          "choices": [
            "Unlock account",
            "Security pin",
            "Real person",
            "Repeat",
          ],
          "defaultChoice": "Repeat",
          "prompt": "As a verified caller you can unlock your account; create or change your security pin; I can connect you to a real person; or repeat these options.",
        },
        "cd4b0dc2-c58f-42d7-ab3d-8ea8bbd5f4ec": {
          "_id": "cd4b0dc2-c58f-42d7-ab3d-8ea8bbd5f4ec",
          "_outcomes": [
            {
              "displayName": "true",
              "id": "true",
            },
            {
              "displayName": "false",
              "id": "false",
            },
          ],
          "_rev": "-1906475974",
          "_type": {
            "_id": "ScriptedDecisionNode",
            "collection": true,
            "name": "Scripted Decision",
          },
          "inputs": [
            "*",
          ],
          "outcomes": [
            "true",
            "false",
          ],
          "outputs": [
            "*",
          ],
          "script": "030af5e5-ac77-4176-bafe-f4558f94818e",
        },
        "d049a003-546e-4775-8914-4f99ec5880a0": {
          "_id": "d049a003-546e-4775-8914-4f99ec5880a0",
          "_outcomes": [
            {
              "displayName": "Yes",
              "id": "Yes",
            },
            {
              "displayName": "No",
              "id": "No",
            },
          ],
          "_rev": "1859540077",
          "_type": {
            "_id": "ChoiceCollectorNode",
            "collection": true,
            "name": "Choice Collector",
          },
          "choices": [
            "Yes",
            "No",
          ],
          "defaultChoice": "No",
          "prompt": "I am struggling to set your new security PIN. Would you like to return to the menu?",
        },
        "e4102746-a575-47de-9788-d67bac3314d0": {
          "_id": "e4102746-a575-47de-9788-d67bac3314d0",
          "_outcomes": [
            {
              "displayName": "true",
              "id": "true",
            },
            {
              "displayName": "false",
              "id": "false",
            },
            {
              "displayName": "no input",
              "id": "no input",
            },
          ],
          "_rev": "-1738371174",
          "_type": {
            "_id": "ScriptedDecisionNode",
            "collection": true,
            "name": "Scripted Decision",
          },
          "inputs": [
            "*",
          ],
          "outcomes": [
            "true",
            "false",
            "no input",
          ],
          "outputs": [
            "*",
          ],
          "script": "aa2dabff-f5c4-4dc5-b4ac-5909e88a3a8f",
        },
        "e8891167-07df-41e2-8730-d8744fe654fa": {
          "_id": "e8891167-07df-41e2-8730-d8744fe654fa",
          "_outcomes": [
            {
              "displayName": "true",
              "id": "true",
            },
          ],
          "_rev": "346338017",
          "_type": {
            "_id": "ScriptedDecisionNode",
            "collection": true,
            "name": "Scripted Decision",
          },
          "inputs": [
            "*",
          ],
          "outcomes": [
            "true",
          ],
          "outputs": [
            "*",
          ],
          "script": "4f1273be-9c52-4879-bbe9-9a47068aeed9",
        },
      },
      "nodes": {
        "0194fec4-60dc-4871-9d3c-34107c2bb720": {
          "_id": "0194fec4-60dc-4871-9d3c-34107c2bb720",
          "_outcomes": [
            {
              "displayName": "Unlock account",
              "id": "Unlock account",
            },
            {
              "displayName": "Security pin",
              "id": "Security pin",
            },
            {
              "displayName": "Real person",
              "id": "Real person",
            },
            {
              "displayName": "Repeat",
              "id": "Repeat",
            },
          ],
          "_rev": "1110593518",
          "_type": {
            "_id": "PageNode",
            "collection": true,
            "name": "Page Node",
          },
          "nodes": [
            {
              "_id": "c2224672-67c8-4836-9fcc-77c7c76ef51a",
              "displayName": "Caller Choice",
              "nodeType": "ChoiceCollectorNode",
            },
          ],
          "pageDescription": {},
          "pageHeader": {},
        },
        "0218c7cf-3d9d-4347-8be2-f7bf4cb928bb": {
          "_id": "0218c7cf-3d9d-4347-8be2-f7bf4cb928bb",
          "_outcomes": [
            {
              "displayName": "Yes",
              "id": "Yes",
            },
            {
              "displayName": "No",
              "id": "No",
            },
          ],
          "_rev": "674446346",
          "_type": {
            "_id": "PageNode",
            "collection": true,
            "name": "Page Node",
          },
          "nodes": [
            {
              "_id": "a1243fda-0875-4f58-97ed-84f304142d7f",
              "displayName": "Caller Choice",
              "nodeType": "ChoiceCollectorNode",
            },
          ],
          "pageDescription": {},
          "pageHeader": {},
        },
        "05754ea0-a519-4511-ae01-624ce4053fa7": {
          "_id": "05754ea0-a519-4511-ae01-624ce4053fa7",
          "_outcomes": [
            {
              "displayName": "true",
              "id": "true",
            },
          ],
          "_rev": "1907182724",
          "_type": {
            "_id": "PageNode",
            "collection": true,
            "name": "Page Node",
          },
          "nodes": [
            {
              "_id": "8b6df0a2-d8b3-439e-847b-81d6d3fd04a8",
              "displayName": "Greeting",
              "nodeType": "ScriptedDecisionNode",
            },
          ],
          "pageDescription": {},
          "pageHeader": {},
        },
        "09d02d6b-6ae1-4300-910b-180b41acf101": {
          "_id": "09d02d6b-6ae1-4300-910b-180b41acf101",
          "_outcomes": [
            {
              "displayName": "Patched",
              "id": "PATCHED",
            },
            {
              "displayName": "Failed",
              "id": "FAILURE",
            },
          ],
          "_rev": "1402961998",
          "_type": {
            "_id": "PatchObjectNode",
            "collection": true,
            "name": "Patch Object",
          },
          "identityAttribute": "userName",
          "identityResource": "managed/alpha_user",
          "ignoredFields": [
            "telephoneNumber",
            "givenName",
            "userName",
            "frIndexedInteger5",
          ],
          "patchAsObject": false,
        },
        "1560246e-cdb2-4c5e-bd01-d0acf0ffacf7": {
          "_id": "1560246e-cdb2-4c5e-bd01-d0acf0ffacf7",
          "_outcomes": [
            {
              "displayName": "true",
              "id": "true",
            },
          ],
          "_rev": "1327005963",
          "_type": {
            "_id": "PageNode",
            "collection": true,
            "name": "Page Node",
          },
          "nodes": [
            {
              "_id": "6fea520c-3b3e-4695-a3b4-5ce46e3bcf6a",
              "displayName": "Message",
              "nodeType": "ScriptedDecisionNode",
            },
          ],
          "pageDescription": {},
          "pageHeader": {},
        },
        "216dd5f6-d50b-4b98-8ae7-ff6721ddbafe": {
          "_id": "216dd5f6-d50b-4b98-8ae7-ff6721ddbafe",
          "_outcomes": [
            {
              "displayName": "True",
              "id": "true",
            },
            {
              "displayName": "False",
              "id": "false",
            },
          ],
          "_rev": "1740672732",
          "_type": {
            "_id": "IdentifyExistingUserNode",
            "collection": true,
            "name": "Identify Existing User",
          },
          "identifier": "userName",
          "identityAttribute": "telephoneNumber",
        },
        "248618fe-db26-452d-854e-669a7a3249ae": {
          "_id": "248618fe-db26-452d-854e-669a7a3249ae",
          "_outcomes": [
            {
              "displayName": "Lookup",
              "id": "Lookup",
            },
            {
              "displayName": "Real person",
              "id": "Real person",
            },
          ],
          "_rev": "-542229543",
          "_type": {
            "_id": "PageNode",
            "collection": true,
            "name": "Page Node",
          },
          "nodes": [
            {
              "_id": "0a58f230-2226-4f67-80da-366dde90c361",
              "displayName": "Caller Choice",
              "nodeType": "ChoiceCollectorNode",
            },
          ],
          "pageDescription": {},
          "pageHeader": {},
        },
        "2f0d1da1-36c9-4117-95f1-dd918bc4cf90": {
          "_id": "2f0d1da1-36c9-4117-95f1-dd918bc4cf90",
          "_outcomes": [
            {
              "displayName": "true",
              "id": "true",
            },
            {
              "displayName": "false",
              "id": "false",
            },
          ],
          "_rev": "-736529377",
          "_type": {
            "_id": "PageNode",
            "collection": true,
            "name": "Page Node",
          },
          "nodes": [
            {
              "_id": "cd4b0dc2-c58f-42d7-ab3d-8ea8bbd5f4ec",
              "displayName": "Enter PIN",
              "nodeType": "ScriptedDecisionNode",
            },
          ],
          "pageDescription": {},
          "pageHeader": {},
        },
        "303750e2-03d6-410c-81c4-f5b61746dfc3": {
          "_id": "303750e2-03d6-410c-81c4-f5b61746dfc3",
          "_outcomes": [
            {
              "displayName": "Yes",
              "id": "Yes",
            },
            {
              "displayName": "No",
              "id": "No",
            },
          ],
          "_rev": "-132563162",
          "_type": {
            "_id": "PageNode",
            "collection": true,
            "name": "Page Node",
          },
          "nodes": [
            {
              "_id": "d049a003-546e-4775-8914-4f99ec5880a0",
              "displayName": "Caller Choice",
              "nodeType": "ChoiceCollectorNode",
            },
          ],
          "pageDescription": {},
          "pageHeader": {},
        },
        "34d7bd95-4821-4503-a49e-3d1c4b95a7c0": {
          "_id": "34d7bd95-4821-4503-a49e-3d1c4b95a7c0",
          "_outcomes": [
            {
              "displayName": "true",
              "id": "true",
            },
            {
              "displayName": "false",
              "id": "false",
            },
            {
              "displayName": "no input",
              "id": "no input",
            },
          ],
          "_rev": "-1084696687",
          "_type": {
            "_id": "PageNode",
            "collection": true,
            "name": "Page Node",
          },
          "nodes": [
            {
              "_id": "e4102746-a575-47de-9788-d67bac3314d0",
              "displayName": "Verification",
              "nodeType": "ScriptedDecisionNode",
            },
          ],
          "pageDescription": {},
          "pageHeader": {},
        },
        "461129d0-b948-47f0-b896-3c537199da58": {
          "_id": "461129d0-b948-47f0-b896-3c537199da58",
          "_outcomes": [
            {
              "displayName": "Retry",
              "id": "Retry",
            },
            {
              "displayName": "Reject",
              "id": "Reject",
            },
          ],
          "_rev": "1797883431",
          "_type": {
            "_id": "RetryLimitDecisionNode",
            "collection": true,
            "name": "Retry Limit Decision",
          },
          "incrementUserAttributeOnFailure": true,
          "retryLimit": 3,
        },
        "49def73c-3062-45d9-8912-f085a4209a56": {
          "_id": "49def73c-3062-45d9-8912-f085a4209a56",
          "_outcomes": [
            {
              "displayName": "Yes",
              "id": "Yes",
            },
            {
              "displayName": "No",
              "id": "No",
            },
          ],
          "_rev": "1894538055",
          "_type": {
            "_id": "PageNode",
            "collection": true,
            "name": "Page Node",
          },
          "nodes": [
            {
              "_id": "70e1167a-f0dc-4732-8047-d61719850327",
              "displayName": "Caller Choice",
              "nodeType": "ChoiceCollectorNode",
            },
          ],
          "pageDescription": {},
          "pageHeader": {},
        },
        "4f3745ae-f3ef-42d0-b901-653f1ae93ed3": {
          "_id": "4f3745ae-f3ef-42d0-b901-653f1ae93ed3",
          "_outcomes": [
            {
              "displayName": "true",
              "id": "true",
            },
            {
              "displayName": "false",
              "id": "false",
            },
          ],
          "_rev": "-1425061656",
          "_type": {
            "_id": "ScriptedDecisionNode",
            "collection": true,
            "name": "Scripted Decision",
          },
          "inputs": [
            "*",
          ],
          "outcomes": [
            "true",
            "false",
          ],
          "outputs": [
            "*",
          ],
          "script": "7dce8f07-d9fe-4752-94b9-ff99dfd0433b",
        },
        "5857e780-1beb-463d-9fe4-b6de0f4b55f1": {
          "_id": "5857e780-1beb-463d-9fe4-b6de0f4b55f1",
          "_outcomes": [
            {
              "displayName": "True",
              "id": "true",
            },
            {
              "displayName": "False",
              "id": "false",
            },
          ],
          "_rev": "-1063553488",
          "_type": {
            "_id": "IdentifyExistingUserNode",
            "collection": true,
            "name": "Identify Existing User",
          },
          "identifier": "userName",
          "identityAttribute": "frIndexedInteger5",
        },
        "5b7c71e3-71ee-4877-a2ab-b18c7a9ac29b": {
          "_id": "5b7c71e3-71ee-4877-a2ab-b18c7a9ac29b",
          "_outcomes": [
            {
              "displayName": "sent",
              "id": "sent",
            },
            {
              "displayName": "failed",
              "id": "failed",
            },
          ],
          "_rev": "969884487",
          "_type": {
            "_id": "ScriptedDecisionNode",
            "collection": true,
            "name": "Scripted Decision",
          },
          "inputs": [
            "*",
          ],
          "outcomes": [
            "sent",
            "failed",
          ],
          "outputs": [
            "*",
          ],
          "script": "3fff65f0-b3fe-40c5-8e82-b6d2e39a14e5",
        },
        "6114bb6e-e04e-42bb-9842-6111ca0fcb37": {
          "_id": "6114bb6e-e04e-42bb-9842-6111ca0fcb37",
          "_outcomes": [
            {
              "displayName": "true",
              "id": "true",
            },
          ],
          "_rev": "-27870023",
          "_type": {
            "_id": "PageNode",
            "collection": true,
            "name": "Page Node",
          },
          "nodes": [
            {
              "_id": "8e7df323-6c77-43e9-980c-a114a0dc8fbb",
              "displayName": "Message",
              "nodeType": "ScriptedDecisionNode",
            },
          ],
          "pageDescription": {},
          "pageHeader": {},
        },
        "73af6002-cfea-459e-87a2-1c69c9d702b5": {
          "_id": "73af6002-cfea-459e-87a2-1c69c9d702b5",
          "_outcomes": [
            {
              "displayName": "Retry",
              "id": "Retry",
            },
            {
              "displayName": "Reject",
              "id": "Reject",
            },
          ],
          "_rev": "867513653",
          "_type": {
            "_id": "RetryLimitDecisionNode",
            "collection": true,
            "name": "Retry Limit Decision",
          },
          "incrementUserAttributeOnFailure": true,
          "retryLimit": 3,
        },
        "82ac7abd-a677-4194-85ca-bbbd1f8945fd": {
          "_id": "82ac7abd-a677-4194-85ca-bbbd1f8945fd",
          "_outcomes": [
            {
              "displayName": "Outcome",
              "id": "outcome",
            },
          ],
          "_rev": "1866866995",
          "_type": {
            "_id": "AccountLockoutNode",
            "collection": true,
            "name": "Account Lockout",
          },
          "lockAction": "UNLOCK",
        },
        "8997b758-7503-47ea-88a8-5fcd00e7a5aa": {
          "_id": "8997b758-7503-47ea-88a8-5fcd00e7a5aa",
          "_outcomes": [
            {
              "displayName": "Yes",
              "id": "Yes",
            },
            {
              "displayName": "No",
              "id": "No",
            },
          ],
          "_rev": "1528281886",
          "_type": {
            "_id": "PageNode",
            "collection": true,
            "name": "Page Node",
          },
          "nodes": [
            {
              "_id": "0f2ac5d6-8622-4218-9005-85908a68ada6",
              "displayName": "Caller Choice",
              "nodeType": "ChoiceCollectorNode",
            },
          ],
          "pageDescription": {},
          "pageHeader": {},
        },
        "907a7abb-85d7-4d78-86ac-fef25be6b165": {
          "_id": "907a7abb-85d7-4d78-86ac-fef25be6b165",
          "_outcomes": [
            {
              "displayName": "true",
              "id": "true",
            },
          ],
          "_rev": "-1636965389",
          "_type": {
            "_id": "PageNode",
            "collection": true,
            "name": "Page Node",
          },
          "nodes": [
            {
              "_id": "e8891167-07df-41e2-8730-d8744fe654fa",
              "displayName": "Message",
              "nodeType": "ScriptedDecisionNode",
            },
          ],
          "pageDescription": {},
          "pageHeader": {},
        },
        "98fb0cb1-b363-419d-9ef5-2ce38aac664f": {
          "_id": "98fb0cb1-b363-419d-9ef5-2ce38aac664f",
          "_outcomes": [
            {
              "displayName": "true",
              "id": "true",
            },
          ],
          "_rev": "-1218079782",
          "_type": {
            "_id": "PageNode",
            "collection": true,
            "name": "Page Node",
          },
          "nodes": [
            {
              "_id": "8d6492a8-966d-4ffc-a44b-54bd258f1ba5",
              "displayName": "Connect Caller",
              "nodeType": "ScriptedDecisionNode",
            },
          ],
          "pageDescription": {},
          "pageHeader": {},
        },
        "9d00fa88-f684-44f7-a110-1a476dcf9b62": {
          "_id": "9d00fa88-f684-44f7-a110-1a476dcf9b62",
          "_outcomes": [
            {
              "displayName": "true",
              "id": "true",
            },
          ],
          "_rev": "-728754390",
          "_type": {
            "_id": "PageNode",
            "collection": true,
            "name": "Page Node",
          },
          "nodes": [
            {
              "_id": "10563e65-7094-476b-a57d-21f81efdd77e",
              "displayName": "Gather Account#",
              "nodeType": "ScriptedDecisionNode",
            },
          ],
          "pageDescription": {},
          "pageHeader": {},
        },
        "ad67985f-84fb-4a64-b86e-7700f77267aa": {
          "_id": "ad67985f-84fb-4a64-b86e-7700f77267aa",
          "_outcomes": [
            {
              "displayName": "CELL PHONE",
              "id": "CELL PHONE",
            },
            {
              "displayName": "LANDLINE",
              "id": "LANDLINE",
            },
            {
              "displayName": "VOIP",
              "id": "VOIP",
            },
            {
              "displayName": "TOLL-FREE",
              "id": "TOLL-FREE",
            },
            {
              "displayName": "UNKNOWN",
              "id": "UNKNOWN",
            },
            {
              "displayName": "failed",
              "id": "failed",
            },
          ],
          "_rev": "-1433558588",
          "_type": {
            "_id": "ScriptedDecisionNode",
            "collection": true,
            "name": "Scripted Decision",
          },
          "inputs": [
            "*",
          ],
          "outcomes": [
            "CELL PHONE",
            "LANDLINE",
            "VOIP",
            "TOLL-FREE",
            "UNKNOWN",
            "failed",
          ],
          "outputs": [
            "*",
          ],
          "script": "b63981d8-cb73-4e47-8749-e58654dcaa31",
        },
        "c1ab1635-729b-4caa-baa8-041900ddb58f": {
          "_id": "c1ab1635-729b-4caa-baa8-041900ddb58f",
          "_outcomes": [
            {
              "displayName": "true",
              "id": "true",
            },
            {
              "displayName": "false",
              "id": "false",
            },
          ],
          "_rev": "2130572691",
          "_type": {
            "_id": "PageNode",
            "collection": true,
            "name": "Page Node",
          },
          "nodes": [
            {
              "_id": "b80470d7-2939-4e61-957b-0a86959af873",
              "displayName": "Verify",
              "nodeType": "ScriptedDecisionNode",
            },
          ],
          "pageDescription": {},
          "pageHeader": {},
        },
        "da7ff332-8972-4535-b92c-0165b62a7a0d": {
          "_id": "da7ff332-8972-4535-b92c-0165b62a7a0d",
          "_outcomes": [
            {
              "displayName": "true",
              "id": "true",
            },
          ],
          "_rev": "-1441743756",
          "_type": {
            "_id": "PageNode",
            "collection": true,
            "name": "Page Node",
          },
          "nodes": [
            {
              "_id": "881c31da-999d-47f5-ad12-7a4f892ef754",
              "displayName": "Message",
              "nodeType": "ScriptedDecisionNode",
            },
          ],
          "pageDescription": {},
          "pageHeader": {},
        },
        "ea2b459c-98f4-425a-87f0-b5a00f3a2c28": {
          "_id": "ea2b459c-98f4-425a-87f0-b5a00f3a2c28",
          "_outcomes": [
            {
              "displayName": "True",
              "id": "true",
            },
            {
              "displayName": "False",
              "id": "false",
            },
          ],
          "_rev": "-1567496287",
          "_type": {
            "_id": "AttributePresentDecisionNode",
            "collection": true,
            "name": "Attribute Present Decision",
          },
          "identityAttribute": "frIndexedInteger5",
          "presentAttribute": "frUnindexedInteger5",
        },
        "f01c4b9f-786e-4a7b-8bc7-48837afce55d": {
          "_id": "f01c4b9f-786e-4a7b-8bc7-48837afce55d",
          "_outcomes": [
            {
              "displayName": "Retry",
              "id": "Retry",
            },
            {
              "displayName": "Reject",
              "id": "Reject",
            },
          ],
          "_rev": "943827453",
          "_type": {
            "_id": "RetryLimitDecisionNode",
            "collection": true,
            "name": "Retry Limit Decision",
          },
          "incrementUserAttributeOnFailure": true,
          "retryLimit": 3,
        },
      },
      "saml2Entities": {},
      "scripts": {},
      "socialIdentityProviders": {},
      "themes": [],
      "tree": {
        "_id": "TwilioIVR",
        "_rev": "-344973825",
        "description": "IVR process flow",
        "enabled": true,
        "entryNodeId": "4f3745ae-f3ef-42d0-b901-653f1ae93ed3",
        "identityResource": "managed/alpha_user",
        "nodes": {
          "0194fec4-60dc-4871-9d3c-34107c2bb720": {
            "connections": {
              "Real person": "98fb0cb1-b363-419d-9ef5-2ce38aac664f",
              "Repeat": "461129d0-b948-47f0-b896-3c537199da58",
              "Security pin": "2f0d1da1-36c9-4117-95f1-dd918bc4cf90",
              "Unlock account": "82ac7abd-a677-4194-85ca-bbbd1f8945fd",
            },
            "displayName": "Verified Caller Menu",
            "nodeType": "PageNode",
            "x": 2608,
            "y": 216.015625,
          },
          "0218c7cf-3d9d-4347-8be2-f7bf4cb928bb": {
            "connections": {
              "No": "98fb0cb1-b363-419d-9ef5-2ce38aac664f",
              "Yes": "5b7c71e3-71ee-4877-a2ab-b18c7a9ac29b",
            },
            "displayName": "Text Information?",
            "nodeType": "PageNode",
            "x": 2157,
            "y": 656.015625,
          },
          "05754ea0-a519-4511-ae01-624ce4053fa7": {
            "connections": {
              "true": "0194fec4-60dc-4871-9d3c-34107c2bb720",
            },
            "displayName": "Greet Verified Caller",
            "nodeType": "PageNode",
            "x": 2366,
            "y": 263.015625,
          },
          "09d02d6b-6ae1-4300-910b-180b41acf101": {
            "connections": {
              "FAILURE": "303750e2-03d6-410c-81c4-f5b61746dfc3",
              "PATCHED": "49def73c-3062-45d9-8912-f085a4209a56",
            },
            "displayName": "Patch Object",
            "nodeType": "PatchObjectNode",
            "x": 3089,
            "y": 232.015625,
          },
          "1560246e-cdb2-4c5e-bd01-d0acf0ffacf7": {
            "connections": {
              "true": "216dd5f6-d50b-4b98-8ae7-ff6721ddbafe",
            },
            "displayName": "Welcome",
            "nodeType": "PageNode",
            "x": 388,
            "y": 233.015625,
          },
          "216dd5f6-d50b-4b98-8ae7-ff6721ddbafe": {
            "connections": {
              "false": "da7ff332-8972-4535-b92c-0165b62a7a0d",
              "true": "34d7bd95-4821-4503-a49e-3d1c4b95a7c0",
            },
            "displayName": "Lookup Caller",
            "nodeType": "IdentifyExistingUserNode",
            "x": 617,
            "y": 235.015625,
          },
          "248618fe-db26-452d-854e-669a7a3249ae": {
            "connections": {
              "Lookup": "9d00fa88-f684-44f7-a110-1a476dcf9b62",
              "Real person": "ad67985f-84fb-4a64-b86e-7700f77267aa",
            },
            "displayName": "Lookup Account?",
            "nodeType": "PageNode",
            "x": 1292,
            "y": 443.015625,
          },
          "2f0d1da1-36c9-4117-95f1-dd918bc4cf90": {
            "connections": {
              "false": "73af6002-cfea-459e-87a2-1c69c9d702b5",
              "true": "09d02d6b-6ae1-4300-910b-180b41acf101",
            },
            "displayName": "Security Pin",
            "nodeType": "PageNode",
            "x": 2867,
            "y": 303.015625,
          },
          "303750e2-03d6-410c-81c4-f5b61746dfc3": {
            "connections": {
              "No": "6114bb6e-e04e-42bb-9842-6111ca0fcb37",
              "Yes": "0194fec4-60dc-4871-9d3c-34107c2bb720",
            },
            "displayName": "PIN Not Set",
            "nodeType": "PageNode",
            "x": 3294,
            "y": 324.015625,
          },
          "34d7bd95-4821-4503-a49e-3d1c4b95a7c0": {
            "connections": {
              "false": "907a7abb-85d7-4d78-86ac-fef25be6b165",
              "no input": "f01c4b9f-786e-4a7b-8bc7-48837afce55d",
              "true": "05754ea0-a519-4511-ae01-624ce4053fa7",
            },
            "displayName": "Known Caller",
            "nodeType": "PageNode",
            "x": 842,
            "y": 199.015625,
          },
          "461129d0-b948-47f0-b896-3c537199da58": {
            "connections": {
              "Reject": "70e691a5-1e33-4ac3-a356-e7b6d60d92e0",
              "Retry": "0194fec4-60dc-4871-9d3c-34107c2bb720",
            },
            "displayName": "3 Retries",
            "nodeType": "RetryLimitDecisionNode",
            "x": 2611,
            "y": 78.015625,
          },
          "49def73c-3062-45d9-8912-f085a4209a56": {
            "connections": {
              "No": "6114bb6e-e04e-42bb-9842-6111ca0fcb37",
              "Yes": "0194fec4-60dc-4871-9d3c-34107c2bb720",
            },
            "displayName": "PIN Set",
            "nodeType": "PageNode",
            "x": 3294,
            "y": 123.015625,
          },
          "4f3745ae-f3ef-42d0-b901-653f1ae93ed3": {
            "connections": {
              "false": "e301438c-0bd0-429c-ab0c-66126501069a",
              "true": "1560246e-cdb2-4c5e-bd01-d0acf0ffacf7",
            },
            "displayName": "Call Params",
            "nodeType": "ScriptedDecisionNode",
            "x": 172,
            "y": 233.015625,
          },
          "5857e780-1beb-463d-9fe4-b6de0f4b55f1": {
            "connections": {
              "false": "ad67985f-84fb-4a64-b86e-7700f77267aa",
              "true": "ea2b459c-98f4-425a-87f0-b5a00f3a2c28",
            },
            "displayName": "Lookup Caller",
            "nodeType": "IdentifyExistingUserNode",
            "x": 1739,
            "y": 470.015625,
          },
          "5b7c71e3-71ee-4877-a2ab-b18c7a9ac29b": {
            "connections": {
              "failed": "98fb0cb1-b363-419d-9ef5-2ce38aac664f",
              "sent": "98fb0cb1-b363-419d-9ef5-2ce38aac664f",
            },
            "displayName": "Send Information",
            "nodeType": "ScriptedDecisionNode",
            "x": 2372,
            "y": 653.015625,
          },
          "6114bb6e-e04e-42bb-9842-6111ca0fcb37": {
            "connections": {
              "true": "70e691a5-1e33-4ac3-a356-e7b6d60d92e0",
            },
            "displayName": "Goodbye",
            "nodeType": "PageNode",
            "x": 3531,
            "y": 247.015625,
          },
          "73af6002-cfea-459e-87a2-1c69c9d702b5": {
            "connections": {
              "Reject": "0194fec4-60dc-4871-9d3c-34107c2bb720",
              "Retry": "2f0d1da1-36c9-4117-95f1-dd918bc4cf90",
            },
            "displayName": "3 Retries",
            "nodeType": "RetryLimitDecisionNode",
            "x": 2863,
            "y": 161.015625,
          },
          "82ac7abd-a677-4194-85ca-bbbd1f8945fd": {
            "connections": {
              "outcome": "8997b758-7503-47ea-88a8-5fcd00e7a5aa",
            },
            "displayName": "Unlock Account",
            "nodeType": "AccountLockoutNode",
            "x": 2860,
            "y": 66.015625,
          },
          "8997b758-7503-47ea-88a8-5fcd00e7a5aa": {
            "connections": {
              "No": "6114bb6e-e04e-42bb-9842-6111ca0fcb37",
              "Yes": "0194fec4-60dc-4871-9d3c-34107c2bb720",
            },
            "displayName": "Unlocked",
            "nodeType": "PageNode",
            "x": 3080,
            "y": 13,
          },
          "907a7abb-85d7-4d78-86ac-fef25be6b165": {
            "connections": {
              "true": "248618fe-db26-452d-854e-669a7a3249ae",
            },
            "displayName": "Unverified Caller",
            "nodeType": "PageNode",
            "x": 1074,
            "y": 360.015625,
          },
          "98fb0cb1-b363-419d-9ef5-2ce38aac664f": {
            "connections": {
              "true": "70e691a5-1e33-4ac3-a356-e7b6d60d92e0",
            },
            "displayName": "Real Person",
            "nodeType": "PageNode",
            "x": 2872,
            "y": 505.015625,
          },
          "9d00fa88-f684-44f7-a110-1a476dcf9b62": {
            "connections": {
              "true": "5857e780-1beb-463d-9fe4-b6de0f4b55f1",
            },
            "displayName": "Verify Unknown Caller",
            "nodeType": "PageNode",
            "x": 1511,
            "y": 469.015625,
          },
          "ad67985f-84fb-4a64-b86e-7700f77267aa": {
            "connections": {
              "CELL PHONE": "0218c7cf-3d9d-4347-8be2-f7bf4cb928bb",
              "LANDLINE": "98fb0cb1-b363-419d-9ef5-2ce38aac664f",
              "TOLL-FREE": "98fb0cb1-b363-419d-9ef5-2ce38aac664f",
              "UNKNOWN": "98fb0cb1-b363-419d-9ef5-2ce38aac664f",
              "VOIP": "98fb0cb1-b363-419d-9ef5-2ce38aac664f",
              "failed": "98fb0cb1-b363-419d-9ef5-2ce38aac664f",
            },
            "displayName": "Line Type?",
            "nodeType": "ScriptedDecisionNode",
            "x": 1951,
            "y": 627.015625,
          },
          "c1ab1635-729b-4caa-baa8-041900ddb58f": {
            "connections": {
              "false": "98fb0cb1-b363-419d-9ef5-2ce38aac664f",
              "true": "05754ea0-a519-4511-ae01-624ce4053fa7",
            },
            "displayName": "Verify Security PIN",
            "nodeType": "PageNode",
            "x": 2143,
            "y": 366.015625,
          },
          "da7ff332-8972-4535-b92c-0165b62a7a0d": {
            "connections": {
              "true": "248618fe-db26-452d-854e-669a7a3249ae",
            },
            "displayName": "Unknown Caller",
            "nodeType": "PageNode",
            "x": 838,
            "y": 461.015625,
          },
          "ea2b459c-98f4-425a-87f0-b5a00f3a2c28": {
            "connections": {
              "false": "98fb0cb1-b363-419d-9ef5-2ce38aac664f",
              "true": "c1ab1635-729b-4caa-baa8-041900ddb58f",
            },
            "displayName": "Has PIN set?",
            "nodeType": "AttributePresentDecisionNode",
            "x": 1947,
            "y": 468.015625,
          },
          "f01c4b9f-786e-4a7b-8bc7-48837afce55d": {
            "connections": {
              "Reject": "907a7abb-85d7-4d78-86ac-fef25be6b165",
              "Retry": "34d7bd95-4821-4503-a49e-3d1c4b95a7c0",
            },
            "displayName": "3 Retries",
            "nodeType": "RetryLimitDecisionNode",
            "x": 844,
            "y": 27.015625,
          },
        },
        "staticNodes": {
          "70e691a5-1e33-4ac3-a356-e7b6d60d92e0": {
            "x": 3757,
            "y": 275,
          },
          "e301438c-0bd0-429c-ab0c-66126501069a": {
            "x": 423,
            "y": 392,
          },
          "startNode": {
            "x": 50,
            "y": 250,
          },
        },
        "uiConfig": {},
      },
    },
    "TxAuthZ": {
      "circlesOfTrust": {},
      "emailTemplates": {},
      "innerNodes": {},
      "nodes": {
        "3d3ee2b9-9af5-4fb2-8248-e860858ed74e": {
          "_id": "3d3ee2b9-9af5-4fb2-8248-e860858ed74e",
          "_outcomes": [
            {
              "displayName": "True",
              "id": "true",
            },
            {
              "displayName": "False",
              "id": "false",
            },
          ],
          "_rev": "1326254717",
          "_type": {
            "_id": "InnerTreeEvaluatorNode",
            "collection": true,
            "name": "Inner Tree Evaluator",
          },
          "tree": "MFAAutoSelect",
        },
        "4f956479-0398-4ffb-a449-0463798ec919": {
          "_id": "4f956479-0398-4ffb-a449-0463798ec919",
          "_outcomes": [
            {
              "displayName": "True",
              "id": "true",
            },
            {
              "displayName": "False",
              "id": "false",
            },
          ],
          "_rev": "-1298012831",
          "_type": {
            "_id": "InnerTreeEvaluatorNode",
            "collection": true,
            "name": "Inner Tree Evaluator",
          },
          "tree": "iExistingSession",
        },
      },
      "saml2Entities": {},
      "scripts": {},
      "socialIdentityProviders": {},
      "themes": [],
      "tree": {
        "_id": "TxAuthZ",
        "_rev": "1140798530",
        "description": "Perform transactional authorization",
        "enabled": true,
        "entryNodeId": "4f956479-0398-4ffb-a449-0463798ec919",
        "identityResource": "managed/alpha_user",
        "nodes": {
          "3d3ee2b9-9af5-4fb2-8248-e860858ed74e": {
            "connections": {
              "false": "e301438c-0bd0-429c-ab0c-66126501069a",
              "true": "70e691a5-1e33-4ac3-a356-e7b6d60d92e0",
            },
            "displayName": "MFA",
            "nodeType": "InnerTreeEvaluatorNode",
            "x": 369,
            "y": 121.015625,
          },
          "4f956479-0398-4ffb-a449-0463798ec919": {
            "connections": {
              "false": "e301438c-0bd0-429c-ab0c-66126501069a",
              "true": "3d3ee2b9-9af5-4fb2-8248-e860858ed74e",
            },
            "displayName": "Existing Session?",
            "nodeType": "InnerTreeEvaluatorNode",
            "x": 160,
            "y": 122.015625,
          },
        },
        "staticNodes": {
          "70e691a5-1e33-4ac3-a356-e7b6d60d92e0": {
            "x": 632,
            "y": 61,
          },
          "e301438c-0bd0-429c-ab0c-66126501069a": {
            "x": 636,
            "y": 269,
          },
          "startNode": {
            "x": 38,
            "y": 139,
          },
        },
        "uiConfig": {
          "categories": "["Helper","Proof Of Concept","TxAuthZ"]",
        },
      },
    },
    "UpdatePassword": {
      "circlesOfTrust": {},
      "emailTemplates": {},
      "innerNodes": {
        "bd6952ad-7936-4165-ba77-40f15013ebe9": {
          "_id": "bd6952ad-7936-4165-ba77-40f15013ebe9",
          "_outcomes": [
            {
              "displayName": "Outcome",
              "id": "outcome",
            },
          ],
          "_rev": "1804647186",
          "_type": {
            "_id": "ValidatedPasswordNode",
            "collection": true,
            "name": "Platform Password",
          },
          "passwordAttribute": "password",
          "validateInput": true,
        },
        "e10452d6-183f-4d86-a946-e51da759cd0a": {
          "_id": "e10452d6-183f-4d86-a946-e51da759cd0a",
          "_outcomes": [
            {
              "displayName": "Outcome",
              "id": "outcome",
            },
          ],
          "_rev": "804121314",
          "_type": {
            "_id": "ValidatedPasswordNode",
            "collection": true,
            "name": "Platform Password",
          },
          "passwordAttribute": "password",
          "validateInput": false,
        },
      },
      "nodes": {
        "010efe4f-d193-412d-a54b-c869c52f64b5": {
          "_id": "010efe4f-d193-412d-a54b-c869c52f64b5",
          "_outcomes": [
            {
              "displayName": "Outcome",
              "id": "outcome",
            },
          ],
          "_rev": "1835065903",
          "_type": {
            "_id": "SessionDataNode",
            "collection": true,
            "name": "Get Session Data",
          },
          "sessionDataKey": "UserToken",
          "sharedStateKey": "userName",
        },
        "214d2094-f97d-43f8-a354-0d7ab6ed9c2a": {
          "_id": "214d2094-f97d-43f8-a354-0d7ab6ed9c2a",
          "_outcomes": [
            {
              "displayName": "Outcome",
              "id": "outcome",
            },
          ],
          "_rev": "1998691217",
          "_type": {
            "_id": "PageNode",
            "collection": true,
            "name": "Page Node",
          },
          "nodes": [
            {
              "_id": "e10452d6-183f-4d86-a946-e51da759cd0a",
              "displayName": "Platform Password",
              "nodeType": "ValidatedPasswordNode",
            },
          ],
          "pageDescription": {
            "en": "Enter current password",
          },
          "pageHeader": {
            "en": "Verify Existing Password",
          },
        },
        "68994eef-5f90-4e33-ad6b-592e41521247": {
          "_id": "68994eef-5f90-4e33-ad6b-592e41521247",
          "_outcomes": [
            {
              "displayName": "True",
              "id": "true",
            },
            {
              "displayName": "False",
              "id": "false",
            },
          ],
          "_rev": "-1231821146",
          "_type": {
            "_id": "AttributePresentDecisionNode",
            "collection": true,
            "name": "Attribute Present Decision",
          },
          "identityAttribute": "userName",
          "presentAttribute": "password",
        },
        "84ab630f-1b27-4cf9-ae98-32e3c0d55d41": {
          "_id": "84ab630f-1b27-4cf9-ae98-32e3c0d55d41",
          "_outcomes": [
            {
              "displayName": "Outcome",
              "id": "outcome",
            },
          ],
          "_rev": "-1028294410",
          "_type": {
            "_id": "EmailSuspendNode",
            "collection": true,
            "name": "Email Suspend Node",
          },
          "emailAttribute": "mail",
          "emailSuspendMessage": {
            "en": "An email has been sent to your address, please verify your email address to update your password. Click the link in that email to proceed.",
          },
          "emailTemplateName": "updatePassword",
          "identityAttribute": "userName",
          "objectLookup": true,
        },
        "a583cf67-96cd-48ad-bbaf-22fd0f38c996": {
          "_id": "a583cf67-96cd-48ad-bbaf-22fd0f38c996",
          "_outcomes": [
            {
              "displayName": "Outcome",
              "id": "outcome",
            },
          ],
          "_rev": "-1167113124",
          "_type": {
            "_id": "PageNode",
            "collection": true,
            "name": "Page Node",
          },
          "nodes": [
            {
              "_id": "bd6952ad-7936-4165-ba77-40f15013ebe9",
              "displayName": "Platform Password",
              "nodeType": "ValidatedPasswordNode",
            },
          ],
          "pageDescription": {
            "en": "Enter new password",
          },
          "pageHeader": {
            "en": "Update Password",
          },
        },
        "a5eb71d0-91eb-4cdc-9816-fd8572868eb0": {
          "_id": "a5eb71d0-91eb-4cdc-9816-fd8572868eb0",
          "_outcomes": [
            {
              "displayName": "Patched",
              "id": "PATCHED",
            },
            {
              "displayName": "Failed",
              "id": "FAILURE",
            },
          ],
          "_rev": "638335413",
          "_type": {
            "_id": "PatchObjectNode",
            "collection": true,
            "name": "Patch Object",
          },
          "identityAttribute": "userName",
          "identityResource": "managed/alpha_user",
          "ignoredFields": [
            "userName",
          ],
          "patchAsObject": false,
        },
        "fa98eb20-ce0e-461f-b102-cf997e047950": {
          "_id": "fa98eb20-ce0e-461f-b102-cf997e047950",
          "_outcomes": [
            {
              "displayName": "True",
              "id": "true",
            },
            {
              "displayName": "False",
              "id": "false",
            },
          ],
          "_rev": "-1166840799",
          "_type": {
            "_id": "DataStoreDecisionNode",
            "collection": true,
            "name": "Data Store Decision",
          },
        },
      },
      "saml2Entities": {},
      "scripts": {},
      "socialIdentityProviders": {},
      "themes": [],
      "tree": {
        "_id": "UpdatePassword",
        "_rev": "1868328802",
        "description": "Update password using active session",
        "enabled": true,
        "entryNodeId": "010efe4f-d193-412d-a54b-c869c52f64b5",
        "identityResource": "managed/alpha_user",
        "nodes": {
          "010efe4f-d193-412d-a54b-c869c52f64b5": {
            "connections": {
              "outcome": "68994eef-5f90-4e33-ad6b-592e41521247",
            },
            "displayName": "Get Session Data",
            "nodeType": "SessionDataNode",
            "x": 122,
            "y": 129,
          },
          "214d2094-f97d-43f8-a354-0d7ab6ed9c2a": {
            "connections": {
              "outcome": "fa98eb20-ce0e-461f-b102-cf997e047950",
            },
            "displayName": "Page Node",
            "nodeType": "PageNode",
            "x": 526,
            "y": 46,
          },
          "68994eef-5f90-4e33-ad6b-592e41521247": {
            "connections": {
              "false": "84ab630f-1b27-4cf9-ae98-32e3c0d55d41",
              "true": "214d2094-f97d-43f8-a354-0d7ab6ed9c2a",
            },
            "displayName": "Attribute Present Decision",
            "nodeType": "AttributePresentDecisionNode",
            "x": 288,
            "y": 133,
          },
          "84ab630f-1b27-4cf9-ae98-32e3c0d55d41": {
            "connections": {
              "outcome": "a583cf67-96cd-48ad-bbaf-22fd0f38c996",
            },
            "displayName": "Email Suspend Node",
            "nodeType": "EmailSuspendNode",
            "x": 659,
            "y": 223,
          },
          "a583cf67-96cd-48ad-bbaf-22fd0f38c996": {
            "connections": {
              "outcome": "a5eb71d0-91eb-4cdc-9816-fd8572868eb0",
            },
            "displayName": "Page Node",
            "nodeType": "PageNode",
            "x": 943,
            "y": 30,
          },
          "a5eb71d0-91eb-4cdc-9816-fd8572868eb0": {
            "connections": {
              "FAILURE": "e301438c-0bd0-429c-ab0c-66126501069a",
              "PATCHED": "70e691a5-1e33-4ac3-a356-e7b6d60d92e0",
            },
            "displayName": "Patch Object",
            "nodeType": "PatchObjectNode",
            "x": 1062,
            "y": 189,
          },
          "fa98eb20-ce0e-461f-b102-cf997e047950": {
            "connections": {
              "false": "e301438c-0bd0-429c-ab0c-66126501069a",
              "true": "a583cf67-96cd-48ad-bbaf-22fd0f38c996",
            },
            "displayName": "Data Store Decision",
            "nodeType": "DataStoreDecisionNode",
            "x": 722,
            "y": 45,
          },
        },
        "staticNodes": {
          "70e691a5-1e33-4ac3-a356-e7b6d60d92e0": {
            "x": 1212,
            "y": 128,
          },
          "e301438c-0bd0-429c-ab0c-66126501069a": {
            "x": 939,
            "y": 290,
          },
          "startNode": {
            "x": 50,
            "y": 25,
          },
        },
        "uiConfig": {},
      },
    },
    "UpdatePersonalData": {
      "circlesOfTrust": {},
      "emailTemplates": {},
      "innerNodes": {
        "5727f84a-8724-4940-9c14-60a91268058f": {
          "_id": "5727f84a-8724-4940-9c14-60a91268058f",
          "_outcomes": [
            {
              "displayName": "True",
              "id": "true",
            },
            {
              "displayName": "False",
              "id": "false",
            },
          ],
          "_rev": "109827024",
          "_type": {
            "_id": "MessageNode",
            "collection": true,
            "name": "Message Node",
          },
          "message": {
            "en": "Would you like to try again?",
          },
          "messageNo": {
            "en": "No",
          },
          "messageYes": {
            "en": "Yes",
          },
        },
        "f21e784f-7fe7-4e49-9215-e83f74f73fb2": {
          "_id": "f21e784f-7fe7-4e49-9215-e83f74f73fb2",
          "_outcomes": [
            {
              "displayName": "True",
              "id": "true",
            },
            {
              "displayName": "False",
              "id": "false",
            },
          ],
          "_rev": "735592997",
          "_type": {
            "_id": "MessageNode",
            "collection": true,
            "name": "Message Node",
          },
          "message": {
            "en": "Review your changes carefully.",
          },
          "messageNo": {
            "en": "Cancel",
          },
          "messageYes": {
            "en": "Save",
          },
        },
        "f5800473-3381-4af6-bec9-6b07d5310f15": {
          "_id": "f5800473-3381-4af6-bec9-6b07d5310f15",
          "_outcomes": [
            {
              "displayName": "Outcome",
              "id": "outcome",
            },
          ],
          "_rev": "-2052463941",
          "_type": {
            "_id": "AttributeCollectorNode",
            "collection": true,
            "name": "Attribute Collector",
          },
          "attributesToCollect": [
            "givenName",
            "sn",
            "mail",
            "telephoneNumber",
          ],
          "identityAttribute": "userName",
          "required": false,
          "validateInputs": true,
        },
      },
      "nodes": {
        "12a675ee-69e7-4fe9-88a2-04d88b05a383": {
          "_id": "12a675ee-69e7-4fe9-88a2-04d88b05a383",
          "_outcomes": [
            {
              "displayName": "True",
              "id": "true",
            },
            {
              "displayName": "False",
              "id": "false",
            },
          ],
          "_rev": "-1987210118",
          "_type": {
            "_id": "InnerTreeEvaluatorNode",
            "collection": true,
            "name": "Inner Tree Evaluator",
          },
          "tree": "MFAAutoSelect",
        },
        "244340ed-9983-413d-80bc-35318bedf1d5": {
          "_id": "244340ed-9983-413d-80bc-35318bedf1d5",
          "_outcomes": [
            {
              "displayName": "Outcome",
              "id": "outcome",
            },
          ],
          "_rev": "-553675145",
          "_type": {
            "_id": "SetSuccessUrlNode",
            "collection": true,
            "name": "Success URL",
          },
          "successUrl": "https://idc.scheuber.io/enduser/?realm=alpha#/dashboard",
        },
        "4beef0f0-30c5-4616-a97a-0108bbf0979e": {
          "_id": "4beef0f0-30c5-4616-a97a-0108bbf0979e",
          "_outcomes": [
            {
              "displayName": "True",
              "id": "true",
            },
            {
              "displayName": "False",
              "id": "false",
            },
          ],
          "_rev": "-1520417362",
          "_type": {
            "_id": "PageNode",
            "collection": true,
            "name": "Page Node",
          },
          "nodes": [
            {
              "_id": "f5800473-3381-4af6-bec9-6b07d5310f15",
              "displayName": "Attributes",
              "nodeType": "AttributeCollectorNode",
            },
            {
              "_id": "f21e784f-7fe7-4e49-9215-e83f74f73fb2",
              "displayName": "Save?",
              "nodeType": "MessageNode",
            },
          ],
          "pageDescription": {},
          "pageHeader": {
            "en": "Modify Your Personal Data",
          },
        },
        "813a713f-f6f4-4a30-b332-9c1aaddfa695": {
          "_id": "813a713f-f6f4-4a30-b332-9c1aaddfa695",
          "_outcomes": [
            {
              "displayName": "Patched",
              "id": "PATCHED",
            },
            {
              "displayName": "Failed",
              "id": "FAILURE",
            },
          ],
          "_rev": "1082558094",
          "_type": {
            "_id": "PatchObjectNode",
            "collection": true,
            "name": "Patch Object",
          },
          "identityAttribute": "userName",
          "identityResource": "managed/alpha_user",
          "ignoredFields": [
            "userName",
          ],
          "patchAsObject": false,
        },
        "94a16242-5fc3-408e-8778-037505677b52": {
          "_id": "94a16242-5fc3-408e-8778-037505677b52",
          "_outcomes": [
            {
              "displayName": "True",
              "id": "true",
            },
            {
              "displayName": "False",
              "id": "false",
            },
          ],
          "_rev": "196106119",
          "_type": {
            "_id": "PageNode",
            "collection": true,
            "name": "Page Node",
          },
          "nodes": [
            {
              "_id": "5727f84a-8724-4940-9c14-60a91268058f",
              "displayName": "Try again?",
              "nodeType": "MessageNode",
            },
          ],
          "pageDescription": {},
          "pageHeader": {
            "en": "MFA Failed",
          },
        },
        "e406ce33-3101-445b-89ae-703c983a4fc1": {
          "_id": "e406ce33-3101-445b-89ae-703c983a4fc1",
          "_outcomes": [
            {
              "displayName": "True",
              "id": "true",
            },
            {
              "displayName": "False",
              "id": "false",
            },
          ],
          "_rev": "1696548701",
          "_type": {
            "_id": "InnerTreeEvaluatorNode",
            "collection": true,
            "name": "Inner Tree Evaluator",
          },
          "tree": "FindUserFromSession",
        },
      },
      "saml2Entities": {},
      "scripts": {},
      "socialIdentityProviders": {},
      "themes": [],
      "tree": {
        "_id": "UpdatePersonalData",
        "_rev": "1389588154",
        "description": "Update Personal Profile Data",
        "enabled": true,
        "entryNodeId": "e406ce33-3101-445b-89ae-703c983a4fc1",
        "identityResource": "managed/alpha_user",
        "nodes": {
          "12a675ee-69e7-4fe9-88a2-04d88b05a383": {
            "connections": {
              "false": "94a16242-5fc3-408e-8778-037505677b52",
              "true": "4beef0f0-30c5-4616-a97a-0108bbf0979e",
            },
            "displayName": "MFA",
            "nodeType": "InnerTreeEvaluatorNode",
            "x": 385,
            "y": 235.015625,
          },
          "244340ed-9983-413d-80bc-35318bedf1d5": {
            "connections": {
              "outcome": "70e691a5-1e33-4ac3-a356-e7b6d60d92e0",
            },
            "displayName": "Success URL",
            "nodeType": "SetSuccessUrlNode",
            "x": 1045,
            "y": 216.015625,
          },
          "4beef0f0-30c5-4616-a97a-0108bbf0979e": {
            "connections": {
              "false": "244340ed-9983-413d-80bc-35318bedf1d5",
              "true": "813a713f-f6f4-4a30-b332-9c1aaddfa695",
            },
            "displayName": "Personal Data",
            "nodeType": "PageNode",
            "x": 586,
            "y": 184.015625,
          },
          "813a713f-f6f4-4a30-b332-9c1aaddfa695": {
            "connections": {
              "FAILURE": "244340ed-9983-413d-80bc-35318bedf1d5",
              "PATCHED": "244340ed-9983-413d-80bc-35318bedf1d5",
            },
            "displayName": "Store Personal Data",
            "nodeType": "PatchObjectNode",
            "x": 803,
            "y": 239.015625,
          },
          "94a16242-5fc3-408e-8778-037505677b52": {
            "connections": {
              "false": "244340ed-9983-413d-80bc-35318bedf1d5",
              "true": "12a675ee-69e7-4fe9-88a2-04d88b05a383",
            },
            "displayName": "MFA Failed!",
            "nodeType": "PageNode",
            "x": 588,
            "y": 442.015625,
          },
          "e406ce33-3101-445b-89ae-703c983a4fc1": {
            "connections": {
              "false": "e301438c-0bd0-429c-ab0c-66126501069a",
              "true": "12a675ee-69e7-4fe9-88a2-04d88b05a383",
            },
            "displayName": "Lookup Profile",
            "nodeType": "InnerTreeEvaluatorNode",
            "x": 172,
            "y": 233.015625,
          },
        },
        "staticNodes": {
          "70e691a5-1e33-4ac3-a356-e7b6d60d92e0": {
            "x": 1277,
            "y": 156,
          },
          "e301438c-0bd0-429c-ab0c-66126501069a": {
            "x": 425,
            "y": 383,
          },
          "startNode": {
            "x": 50,
            "y": 250,
          },
        },
        "uiConfig": {},
      },
    },
    "UpdateUsername": {
      "circlesOfTrust": {},
      "emailTemplates": {},
      "innerNodes": {
        "5e70753d-09be-4be0-99c2-2658a278ebdf": {
          "_id": "5e70753d-09be-4be0-99c2-2658a278ebdf",
          "_outcomes": [
            {
              "displayName": "Outcome",
              "id": "outcome",
            },
          ],
          "_rev": "783371428",
          "_type": {
            "_id": "ValidatedPasswordNode",
            "collection": true,
            "name": "Platform Password",
          },
          "passwordAttribute": "password",
          "validateInput": false,
        },
        "af9ae54b-ecf0-462f-ae53-5eec97b38a77": {
          "_id": "af9ae54b-ecf0-462f-ae53-5eec97b38a77",
          "_outcomes": [
            {
              "displayName": "Outcome",
              "id": "outcome",
            },
          ],
          "_rev": "-1906480981",
          "_type": {
            "_id": "ValidatedUsernameNode",
            "collection": true,
            "name": "Platform Username",
          },
          "usernameAttribute": "userName",
          "validateInput": false,
        },
      },
      "nodes": {
        "3f565020-92bf-4e85-a4e6-5900ed3dec32": {
          "_id": "3f565020-92bf-4e85-a4e6-5900ed3dec32",
          "_outcomes": [
            {
              "displayName": "True",
              "id": "true",
            },
            {
              "displayName": "False",
              "id": "false",
            },
          ],
          "_rev": "-605648287",
          "_type": {
            "_id": "IdentifyExistingUserNode",
            "collection": true,
            "name": "Identify Existing User",
          },
          "identifier": "userName",
          "identityAttribute": "userName",
        },
        "41225f52-2f77-4f80-aa58-d4cdfe49793f": {
          "_id": "41225f52-2f77-4f80-aa58-d4cdfe49793f",
          "_outcomes": [
            {
              "displayName": "Outcome",
              "id": "outcome",
            },
          ],
          "_rev": "-966090703",
          "_type": {
            "_id": "PageNode",
            "collection": true,
            "name": "Page Node",
          },
          "nodes": [
            {
              "_id": "af9ae54b-ecf0-462f-ae53-5eec97b38a77",
              "displayName": "Username",
              "nodeType": "ValidatedUsernameNode",
            },
          ],
          "pageDescription": {
            "en": "Enter new UserName",
          },
          "pageHeader": {
            "en": "Update Username",
          },
        },
        "62364f0c-031b-417b-9976-5ec5382b0d59": {
          "_id": "62364f0c-031b-417b-9976-5ec5382b0d59",
          "_outcomes": [
            {
              "displayName": "true",
              "id": "true",
            },
          ],
          "_rev": "610178584",
          "_type": {
            "_id": "ScriptedDecisionNode",
            "collection": true,
            "name": "Scripted Decision",
          },
          "inputs": [
            "*",
          ],
          "outcomes": [
            "true",
          ],
          "outputs": [
            "*",
          ],
          "script": "c253a7ac-ebc9-4268-9e62-89f38f98e4ab",
        },
        "624f560f-8b79-44ad-8866-afd40f403fee": {
          "_id": "624f560f-8b79-44ad-8866-afd40f403fee",
          "_outcomes": [
            {
              "displayName": "Patched",
              "id": "PATCHED",
            },
            {
              "displayName": "Failed",
              "id": "FAILURE",
            },
          ],
          "_rev": "2054666735",
          "_type": {
            "_id": "PatchObjectNode",
            "collection": true,
            "name": "Patch Object",
          },
          "identityAttribute": "_id",
          "identityResource": "managed/alpha_user",
          "ignoredFields": [
            "password",
          ],
          "patchAsObject": false,
        },
        "6c35b1f9-23e9-43b2-b52f-924defe652c4": {
          "_id": "6c35b1f9-23e9-43b2-b52f-924defe652c4",
          "_outcomes": [
            {
              "displayName": "True",
              "id": "true",
            },
            {
              "displayName": "False",
              "id": "false",
            },
          ],
          "_rev": "-377056468",
          "_type": {
            "_id": "DataStoreDecisionNode",
            "collection": true,
            "name": "Data Store Decision",
          },
        },
        "d3bb5c99-33a4-43ae-ad61-6956afea9672": {
          "_id": "d3bb5c99-33a4-43ae-ad61-6956afea9672",
          "_outcomes": [
            {
              "displayName": "Outcome",
              "id": "outcome",
            },
          ],
          "_rev": "47836383",
          "_type": {
            "_id": "SessionDataNode",
            "collection": true,
            "name": "Get Session Data",
          },
          "sessionDataKey": "UserToken",
          "sharedStateKey": "userName",
        },
        "e79fc9c0-ed2c-4612-a6ce-14c09debce74": {
          "_id": "e79fc9c0-ed2c-4612-a6ce-14c09debce74",
          "_outcomes": [
            {
              "displayName": "Outcome",
              "id": "outcome",
            },
          ],
          "_rev": "2142631288",
          "_type": {
            "_id": "PageNode",
            "collection": true,
            "name": "Page Node",
          },
          "nodes": [
            {
              "_id": "5e70753d-09be-4be0-99c2-2658a278ebdf",
              "displayName": "Password",
              "nodeType": "ValidatedPasswordNode",
            },
          ],
          "pageDescription": {
            "en_us": "Please provide your password to change your username.",
          },
          "pageHeader": {
            "en": "Validate Access",
          },
        },
      },
      "saml2Entities": {},
      "scripts": {},
      "socialIdentityProviders": {},
      "themes": [],
      "tree": {
        "_id": "UpdateUsername",
        "_rev": "36671518",
        "enabled": true,
        "entryNodeId": "d3bb5c99-33a4-43ae-ad61-6956afea9672",
        "identityResource": "managed/alpha_user",
        "nodes": {
          "3f565020-92bf-4e85-a4e6-5900ed3dec32": {
            "connections": {
              "false": "e301438c-0bd0-429c-ab0c-66126501069a",
              "true": "62364f0c-031b-417b-9976-5ec5382b0d59",
            },
            "displayName": "Identify Existing User",
            "nodeType": "IdentifyExistingUserNode",
            "x": 347,
            "y": 183,
          },
          "41225f52-2f77-4f80-aa58-d4cdfe49793f": {
            "connections": {
              "outcome": "624f560f-8b79-44ad-8866-afd40f403fee",
            },
            "displayName": "Page Node",
            "nodeType": "PageNode",
            "x": 1280,
            "y": 60,
          },
          "62364f0c-031b-417b-9976-5ec5382b0d59": {
            "connections": {
              "true": "e79fc9c0-ed2c-4612-a6ce-14c09debce74",
            },
            "displayName": "Copy _id",
            "nodeType": "ScriptedDecisionNode",
            "x": 565,
            "y": 85,
          },
          "624f560f-8b79-44ad-8866-afd40f403fee": {
            "connections": {
              "FAILURE": "e301438c-0bd0-429c-ab0c-66126501069a",
              "PATCHED": "70e691a5-1e33-4ac3-a356-e7b6d60d92e0",
            },
            "displayName": "Change Username",
            "nodeType": "PatchObjectNode",
            "x": 1519,
            "y": 76,
          },
          "6c35b1f9-23e9-43b2-b52f-924defe652c4": {
            "connections": {
              "false": "e301438c-0bd0-429c-ab0c-66126501069a",
              "true": "41225f52-2f77-4f80-aa58-d4cdfe49793f",
            },
            "displayName": "Data Store Decision",
            "nodeType": "DataStoreDecisionNode",
            "x": 1041,
            "y": 63,
          },
          "d3bb5c99-33a4-43ae-ad61-6956afea9672": {
            "connections": {
              "outcome": "3f565020-92bf-4e85-a4e6-5900ed3dec32",
            },
            "displayName": "Get Session Data",
            "nodeType": "SessionDataNode",
            "x": 152,
            "y": 85,
          },
          "e79fc9c0-ed2c-4612-a6ce-14c09debce74": {
            "connections": {
              "outcome": "6c35b1f9-23e9-43b2-b52f-924defe652c4",
            },
            "displayName": "Page Node",
            "nodeType": "PageNode",
            "x": 792,
            "y": 49,
          },
        },
        "staticNodes": {
          "70e691a5-1e33-4ac3-a356-e7b6d60d92e0": {
            "x": 1818,
            "y": 87,
          },
          "e301438c-0bd0-429c-ab0c-66126501069a": {
            "x": 1824,
            "y": 304,
          },
          "startNode": {
            "x": 50,
            "y": 85,
          },
        },
        "uiConfig": {},
      },
    },
    "WebAuthN": {
      "circlesOfTrust": {},
      "emailTemplates": {},
      "innerNodes": {
        "d6a295d6-b571-4642-9731-14ceaa7d17a2": {
          "_id": "d6a295d6-b571-4642-9731-14ceaa7d17a2",
          "_outcomes": [
            {
              "displayName": "Outcome",
              "id": "outcome",
            },
          ],
          "_rev": "234516726",
          "_type": {
            "_id": "PasswordCollectorNode",
            "collection": true,
            "name": "Password Collector",
          },
        },
        "f5fe6b27-3515-4fc0-9ea2-bc7ce698b005": {
          "_id": "f5fe6b27-3515-4fc0-9ea2-bc7ce698b005",
          "_outcomes": [
            {
              "displayName": "Outcome",
              "id": "outcome",
            },
          ],
          "_rev": "-395785106",
          "_type": {
            "_id": "UsernameCollectorNode",
            "collection": true,
            "name": "Username Collector",
          },
        },
      },
      "nodes": {
        "22a8753d-bdb4-4f35-a6b7-22ff013717cd": {
          "_id": "22a8753d-bdb4-4f35-a6b7-22ff013717cd",
          "_outcomes": [
            {
              "displayName": "Outcome",
              "id": "outcome",
            },
          ],
          "_rev": "-645848257",
          "_type": {
            "_id": "PageNode",
            "collection": true,
            "name": "Page Node",
          },
          "nodes": [
            {
              "_id": "f5fe6b27-3515-4fc0-9ea2-bc7ce698b005",
              "displayName": "Username",
              "nodeType": "UsernameCollectorNode",
            },
          ],
          "pageDescription": {},
          "pageHeader": {},
        },
        "2a4c6fee-3529-423b-8598-2518a8116347": {
          "_id": "2a4c6fee-3529-423b-8598-2518a8116347",
          "_outcomes": [
            {
              "displayName": "True",
              "id": "true",
            },
            {
              "displayName": "False",
              "id": "false",
            },
          ],
          "_rev": "1832307673",
          "_type": {
            "_id": "RecoveryCodeCollectorDecisionNode",
            "collection": true,
            "name": "Recovery Code Collector Decision",
          },
          "recoveryCodeType": "WEB_AUTHN",
        },
        "4e9e306d-d892-4bc4-8e43-80d4a2cadd82": {
          "_id": "4e9e306d-d892-4bc4-8e43-80d4a2cadd82",
          "_outcomes": [
            {
              "displayName": "True",
              "id": "true",
            },
            {
              "displayName": "False",
              "id": "false",
            },
          ],
          "_rev": "-1358505963",
          "_type": {
            "_id": "InnerTreeEvaluatorNode",
            "collection": true,
            "name": "Inner Tree Evaluator",
          },
          "tree": "WebAuthNRegistration",
        },
        "563d8c0c-779d-40de-a77d-61fdc6a15860": {
          "_id": "563d8c0c-779d-40de-a77d-61fdc6a15860",
          "_outcomes": [
            {
              "displayName": "known",
              "id": "known",
            },
            {
              "displayName": "unknown",
              "id": "unknown",
            },
          ],
          "_rev": "349822363",
          "_type": {
            "_id": "ScriptedDecisionNode",
            "collection": true,
            "name": "Scripted Decision",
          },
          "inputs": [
            "*",
          ],
          "outcomes": [
            "known",
            "unknown",
          ],
          "outputs": [
            "*",
          ],
          "script": "739bdc48-fd24-4c52-b353-88706d75558a",
        },
        "80effaff-ed82-4a2b-bf02-f4675733adea": {
          "_id": "80effaff-ed82-4a2b-bf02-f4675733adea",
          "_outcomes": [
            {
              "displayName": "Outcome",
              "id": "outcome",
            },
          ],
          "_rev": "-1206567427",
          "_type": {
            "_id": "PageNode",
            "collection": true,
            "name": "Page Node",
          },
          "nodes": [
            {
              "_id": "d6a295d6-b571-4642-9731-14ceaa7d17a2",
              "displayName": "Password",
              "nodeType": "PasswordCollectorNode",
            },
          ],
          "pageDescription": {},
          "pageHeader": {},
        },
        "9bcd185e-8e56-4293-9e3d-9e1085c3ea94": {
          "_id": "9bcd185e-8e56-4293-9e3d-9e1085c3ea94",
          "_outcomes": [
            {
              "displayName": "True",
              "id": "true",
            },
            {
              "displayName": "False",
              "id": "false",
            },
          ],
          "_rev": "1157360576",
          "_type": {
            "_id": "MessageNode",
            "collection": true,
            "name": "Message Node",
          },
          "message": {
            "en": "Your browser doesn't support WebAuthn, would you like to continue and authenticate using other means?",
          },
          "messageNo": {
            "en": "No",
          },
          "messageYes": {
            "en": "Yes",
          },
        },
        "be90623b-3fca-4b63-b674-a0dc95a3c0ed": {
          "_id": "be90623b-3fca-4b63-b674-a0dc95a3c0ed",
          "_outcomes": [
            {
              "displayName": "True",
              "id": "true",
            },
            {
              "displayName": "False",
              "id": "false",
            },
          ],
          "_rev": "-664703775",
          "_type": {
            "_id": "DataStoreDecisionNode",
            "collection": true,
            "name": "Data Store Decision",
          },
        },
        "fe06367d-eecf-4bcd-8b2b-9a608a88c3c8": {
          "_id": "fe06367d-eecf-4bcd-8b2b-9a608a88c3c8",
          "_outcomes": [
            {
              "displayName": "Unsupported",
              "id": "unsupported",
            },
            {
              "displayName": "No Device Registered",
              "id": "noDevice",
            },
            {
              "displayName": "Success",
              "id": "success",
            },
            {
              "displayName": "Failure",
              "id": "failure",
            },
            {
              "displayName": "Client Error",
              "id": "error",
            },
            {
              "displayName": "Recovery Code",
              "id": "recoveryCode",
            },
          ],
          "_rev": "-164643617",
          "_type": {
            "_id": "WebAuthnAuthenticationNode",
            "collection": true,
            "name": "WebAuthn Authentication Node",
          },
          "asScript": false,
          "isRecoveryCodeAllowed": true,
          "origins": [],
          "requiresResidentKey": false,
          "timeout": 60,
          "userVerificationRequirement": "PREFERRED",
        },
      },
      "saml2Entities": {},
      "scripts": {},
      "socialIdentityProviders": {},
      "themes": [],
      "tree": {
        "_id": "WebAuthN",
        "_rev": "-1833832532",
        "enabled": true,
        "entryNodeId": "563d8c0c-779d-40de-a77d-61fdc6a15860",
        "identityResource": "managed/alpha_user",
        "nodes": {
          "22a8753d-bdb4-4f35-a6b7-22ff013717cd": {
            "connections": {
              "outcome": "fe06367d-eecf-4bcd-8b2b-9a608a88c3c8",
            },
            "displayName": "Login Form",
            "nodeType": "PageNode",
            "x": 440,
            "y": 256.5,
          },
          "2a4c6fee-3529-423b-8598-2518a8116347": {
            "connections": {
              "false": "e301438c-0bd0-429c-ab0c-66126501069a",
              "true": "70e691a5-1e33-4ac3-a356-e7b6d60d92e0",
            },
            "displayName": "Recovery Code",
            "nodeType": "RecoveryCodeCollectorDecisionNode",
            "x": 915,
            "y": 80,
          },
          "4e9e306d-d892-4bc4-8e43-80d4a2cadd82": {
            "connections": {
              "false": "e301438c-0bd0-429c-ab0c-66126501069a",
              "true": "fe06367d-eecf-4bcd-8b2b-9a608a88c3c8",
            },
            "displayName": "Register",
            "nodeType": "InnerTreeEvaluatorNode",
            "x": 915,
            "y": 452,
          },
          "563d8c0c-779d-40de-a77d-61fdc6a15860": {
            "connections": {
              "known": "fe06367d-eecf-4bcd-8b2b-9a608a88c3c8",
              "unknown": "22a8753d-bdb4-4f35-a6b7-22ff013717cd",
            },
            "displayName": "Username?",
            "nodeType": "ScriptedDecisionNode",
            "x": 210,
            "y": 266,
          },
          "80effaff-ed82-4a2b-bf02-f4675733adea": {
            "connections": {
              "outcome": "be90623b-3fca-4b63-b674-a0dc95a3c0ed",
            },
            "displayName": "Login Form",
            "nodeType": "PageNode",
            "x": 1145,
            "y": 256.5,
          },
          "9bcd185e-8e56-4293-9e3d-9e1085c3ea94": {
            "connections": {
              "false": "e301438c-0bd0-429c-ab0c-66126501069a",
              "true": "80effaff-ed82-4a2b-bf02-f4675733adea",
            },
            "displayName": "Message Node",
            "nodeType": "MessageNode",
            "x": 915,
            "y": 266,
          },
          "be90623b-3fca-4b63-b674-a0dc95a3c0ed": {
            "connections": {
              "false": "e301438c-0bd0-429c-ab0c-66126501069a",
              "true": "70e691a5-1e33-4ac3-a356-e7b6d60d92e0",
            },
            "displayName": "Validate Creds",
            "nodeType": "DataStoreDecisionNode",
            "x": 1390,
            "y": 266,
          },
          "fe06367d-eecf-4bcd-8b2b-9a608a88c3c8": {
            "connections": {
              "error": "e301438c-0bd0-429c-ab0c-66126501069a",
              "failure": "e301438c-0bd0-429c-ab0c-66126501069a",
              "noDevice": "4e9e306d-d892-4bc4-8e43-80d4a2cadd82",
              "recoveryCode": "2a4c6fee-3529-423b-8598-2518a8116347",
              "success": "70e691a5-1e33-4ac3-a356-e7b6d60d92e0",
              "unsupported": "9bcd185e-8e56-4293-9e3d-9e1085c3ea94",
            },
            "displayName": "WebAuthn",
            "nodeType": "WebAuthnAuthenticationNode",
            "x": 685,
            "y": 204.5,
          },
        },
        "staticNodes": {
          "70e691a5-1e33-4ac3-a356-e7b6d60d92e0": {
            "x": 1620,
            "y": 166,
          },
          "e301438c-0bd0-429c-ab0c-66126501069a": {
            "x": 1620,
            "y": 273,
          },
          "startNode": {
            "x": 70,
            "y": 284,
          },
        },
        "uiConfig": {
          "categories": "["MFA"]",
        },
      },
    },
    "WebAuthNRegistration": {
      "circlesOfTrust": {},
      "emailTemplates": {},
      "innerNodes": {
        "3a256280-866e-4db2-a45d-2b24e11f235e": {
          "_id": "3a256280-866e-4db2-a45d-2b24e11f235e",
          "_outcomes": [
            {
              "displayName": "Outcome",
              "id": "outcome",
            },
          ],
          "_rev": "-1980314069",
          "_type": {
            "_id": "PasswordCollectorNode",
            "collection": true,
            "name": "Password Collector",
          },
        },
        "58e22d33-d24d-4f86-8de0-b0ead9e96019": {
          "_id": "58e22d33-d24d-4f86-8de0-b0ead9e96019",
          "_outcomes": [
            {
              "displayName": "Outcome",
              "id": "outcome",
            },
          ],
          "_rev": "1029997683",
          "_type": {
            "_id": "PasswordCollectorNode",
            "collection": true,
            "name": "Password Collector",
          },
        },
        "f88b0576-3d17-47ca-94b4-9daf8d992c6f": {
          "_id": "f88b0576-3d17-47ca-94b4-9daf8d992c6f",
          "_outcomes": [
            {
              "displayName": "Outcome",
              "id": "outcome",
            },
          ],
          "_rev": "1507976093",
          "_type": {
            "_id": "UsernameCollectorNode",
            "collection": true,
            "name": "Username Collector",
          },
        },
      },
      "nodes": {
        "118eb303-2751-4073-b9c0-9d279f7a8ffd": {
          "_id": "118eb303-2751-4073-b9c0-9d279f7a8ffd",
          "_outcomes": [
            {
              "displayName": "Outcome",
              "id": "outcome",
            },
          ],
          "_rev": "1356942525",
          "_type": {
            "_id": "PageNode",
            "collection": true,
            "name": "Page Node",
          },
          "nodes": [
            {
              "_id": "58e22d33-d24d-4f86-8de0-b0ead9e96019",
              "displayName": "Password",
              "nodeType": "PasswordCollectorNode",
            },
          ],
          "pageDescription": {},
          "pageHeader": {},
        },
        "22dce7d4-8bd5-4ac2-a441-ce8d64306f3b": {
          "_id": "22dce7d4-8bd5-4ac2-a441-ce8d64306f3b",
          "_outcomes": [
            {
              "displayName": "True",
              "id": "true",
            },
            {
              "displayName": "False",
              "id": "false",
            },
          ],
          "_rev": "606915029",
          "_type": {
            "_id": "DataStoreDecisionNode",
            "collection": true,
            "name": "Data Store Decision",
          },
        },
        "2b533499-0950-4ab1-a8da-16da188bf135": {
          "_id": "2b533499-0950-4ab1-a8da-16da188bf135",
          "_outcomes": [
            {
              "displayName": "known",
              "id": "known",
            },
            {
              "displayName": "unknown",
              "id": "unknown",
            },
          ],
          "_rev": "-1908991710",
          "_type": {
            "_id": "ScriptedDecisionNode",
            "collection": true,
            "name": "Scripted Decision",
          },
          "inputs": [
            "*",
          ],
          "outcomes": [
            "known",
            "unknown",
          ],
          "outputs": [
            "*",
          ],
          "script": "739bdc48-fd24-4c52-b353-88706d75558a",
        },
        "54ef3d62-bb6a-434e-bb1d-39c0bc09d675": {
          "_id": "54ef3d62-bb6a-434e-bb1d-39c0bc09d675",
          "_outcomes": [
            {
              "displayName": "Outcome",
              "id": "outcome",
            },
          ],
          "_rev": "547349200",
          "_type": {
            "_id": "PageNode",
            "collection": true,
            "name": "Page Node",
          },
          "nodes": [
            {
              "_id": "f88b0576-3d17-47ca-94b4-9daf8d992c6f",
              "displayName": "Username",
              "nodeType": "UsernameCollectorNode",
            },
            {
              "_id": "3a256280-866e-4db2-a45d-2b24e11f235e",
              "displayName": "Password",
              "nodeType": "PasswordCollectorNode",
            },
          ],
          "pageDescription": {},
          "pageHeader": {},
        },
        "fae5a549-02b5-42ae-ba08-bed04ecb61a7": {
          "_id": "fae5a549-02b5-42ae-ba08-bed04ecb61a7",
          "_outcomes": [
            {
              "displayName": "Outcome",
              "id": "outcome",
            },
          ],
          "_rev": "-2100169453",
          "_type": {
            "_id": "RecoveryCodeDisplayNode",
            "collection": true,
            "name": "Recovery Code Display Node",
          },
        },
        "fc7081ee-65a0-4b3e-a728-746581866b86": {
          "_id": "fc7081ee-65a0-4b3e-a728-746581866b86",
          "_outcomes": [
            {
              "displayName": "Unsupported",
              "id": "unsupported",
            },
            {
              "displayName": "Success",
              "id": "success",
            },
            {
              "displayName": "Failure",
              "id": "failure",
            },
            {
              "displayName": "Client Error",
              "id": "error",
            },
          ],
          "_rev": "1368516795",
          "_type": {
            "_id": "WebAuthnRegistrationNode",
            "collection": true,
            "name": "WebAuthn Registration Node",
          },
          "acceptedSigningAlgorithms": [
            "ES256",
            "RS256",
          ],
          "asScript": false,
          "attestationPreference": "NONE",
          "authenticatorAttachment": "UNSPECIFIED",
          "enforceRevocationCheck": false,
          "excludeCredentials": false,
          "generateRecoveryCodes": true,
          "maxSavedDevices": 0,
          "origins": [],
          "postponeDeviceProfileStorage": false,
          "relyingPartyName": "ForgeRock",
          "requiresResidentKey": false,
          "storeAttestationDataInTransientState": false,
          "timeout": 60,
          "trustStoreAlias": "trustalias",
          "userVerificationRequirement": "PREFERRED",
        },
      },
      "saml2Entities": {},
      "scripts": {},
      "socialIdentityProviders": {},
      "themes": [],
      "tree": {
        "_id": "WebAuthNRegistration",
        "_rev": "-591266213",
        "enabled": true,
        "entryNodeId": "2b533499-0950-4ab1-a8da-16da188bf135",
        "identityResource": "managed/alpha_user",
        "nodes": {
          "118eb303-2751-4073-b9c0-9d279f7a8ffd": {
            "connections": {
              "outcome": "22dce7d4-8bd5-4ac2-a441-ce8d64306f3b",
            },
            "displayName": "Login Form",
            "nodeType": "PageNode",
            "x": 440,
            "y": 80,
          },
          "22dce7d4-8bd5-4ac2-a441-ce8d64306f3b": {
            "connections": {
              "false": "e301438c-0bd0-429c-ab0c-66126501069a",
              "true": "fc7081ee-65a0-4b3e-a728-746581866b86",
            },
            "displayName": "Validate Creds",
            "nodeType": "DataStoreDecisionNode",
            "x": 685,
            "y": 225,
          },
          "2b533499-0950-4ab1-a8da-16da188bf135": {
            "connections": {
              "known": "118eb303-2751-4073-b9c0-9d279f7a8ffd",
              "unknown": "54ef3d62-bb6a-434e-bb1d-39c0bc09d675",
            },
            "displayName": "Username?",
            "nodeType": "ScriptedDecisionNode",
            "x": 210,
            "y": 225,
          },
          "54ef3d62-bb6a-434e-bb1d-39c0bc09d675": {
            "connections": {
              "outcome": "22dce7d4-8bd5-4ac2-a441-ce8d64306f3b",
            },
            "displayName": "Login Form",
            "nodeType": "PageNode",
            "x": 440,
            "y": 285,
          },
          "fae5a549-02b5-42ae-ba08-bed04ecb61a7": {
            "connections": {
              "outcome": "70e691a5-1e33-4ac3-a356-e7b6d60d92e0",
            },
            "displayName": "Show Recovery Codes",
            "nodeType": "RecoveryCodeDisplayNode",
            "x": 1145,
            "y": 143.66666666666666,
          },
          "fc7081ee-65a0-4b3e-a728-746581866b86": {
            "connections": {
              "error": "e301438c-0bd0-429c-ab0c-66126501069a",
              "failure": "e301438c-0bd0-429c-ab0c-66126501069a",
              "success": "fae5a549-02b5-42ae-ba08-bed04ecb61a7",
              "unsupported": "e301438c-0bd0-429c-ab0c-66126501069a",
            },
            "displayName": "Register",
            "nodeType": "WebAuthnRegistrationNode",
            "x": 915,
            "y": 199.5,
          },
        },
        "staticNodes": {
          "70e691a5-1e33-4ac3-a356-e7b6d60d92e0": {
            "x": 1395,
            "y": 243,
          },
          "e301438c-0bd0-429c-ab0c-66126501069a": {
            "x": 1145,
            "y": 246.83333333333334,
          },
          "startNode": {
            "x": 70,
            "y": 243,
          },
        },
        "uiConfig": {
          "categories": "["MFA"]",
        },
      },
    },
    "ZeroTrust": {
      "circlesOfTrust": {},
      "emailTemplates": {},
      "innerNodes": {},
      "nodes": {
        "31c737cb-86cd-4544-834b-5c60e715859a": {
          "_id": "31c737cb-86cd-4544-834b-5c60e715859a",
          "_outcomes": [
            {
              "displayName": "true",
              "id": "true",
            },
            {
              "displayName": "false",
              "id": "false",
            },
          ],
          "_rev": "808705997",
          "_type": {
            "_id": "ScriptedDecisionNode",
            "collection": true,
            "name": "Scripted Decision",
          },
          "inputs": [
            "*",
          ],
          "outcomes": [
            "true",
            "false",
          ],
          "outputs": [
            "*",
          ],
          "script": "616d3541-14d6-4a54-94dd-46a146ef2423",
        },
        "b4fb022a-0468-4154-80ea-cc02d54b5307": {
          "_id": "b4fb022a-0468-4154-80ea-cc02d54b5307",
          "_outcomes": [
            {
              "displayName": "True",
              "id": "true",
            },
            {
              "displayName": "False",
              "id": "false",
            },
          ],
          "_rev": "-1600329206",
          "_type": {
            "_id": "InnerTreeEvaluatorNode",
            "collection": true,
            "name": "Inner Tree Evaluator",
          },
          "tree": "iZeroTrust-AA-FraudRisk",
        },
        "e470a3e2-6310-4fc8-9a94-3f3d3b819f75": {
          "_id": "e470a3e2-6310-4fc8-9a94-3f3d3b819f75",
          "_outcomes": [
            {
              "displayName": "True",
              "id": "true",
            },
            {
              "displayName": "False",
              "id": "false",
            },
          ],
          "_rev": "-1688511220",
          "_type": {
            "_id": "IdentifyExistingUserNode",
            "collection": true,
            "name": "Identify Existing User",
          },
          "identifier": "userName",
          "identityAttribute": "userName",
        },
        "eee86d9c-5474-4f5c-a611-475dac6daabe": {
          "_id": "eee86d9c-5474-4f5c-a611-475dac6daabe",
          "_outcomes": [
            {
              "displayName": "Outcome",
              "id": "outcome",
            },
          ],
          "_rev": "1977691930",
          "_type": {
            "_id": "SessionDataNode",
            "collection": true,
            "name": "Get Session Data",
          },
          "sessionDataKey": "UserId",
          "sharedStateKey": "_id",
        },
      },
      "saml2Entities": {},
      "scripts": {},
      "socialIdentityProviders": {},
      "themes": [],
      "tree": {
        "_id": "ZeroTrust",
        "_rev": "1382662337",
        "description": "Zero trust transactional authorization",
        "enabled": true,
        "entryNodeId": "31c737cb-86cd-4544-834b-5c60e715859a",
        "identityResource": "managed/alpha_user",
        "nodes": {
          "31c737cb-86cd-4544-834b-5c60e715859a": {
            "connections": {
              "false": "e301438c-0bd0-429c-ab0c-66126501069a",
              "true": "eee86d9c-5474-4f5c-a611-475dac6daabe",
            },
            "displayName": "Existing Session?",
            "nodeType": "ScriptedDecisionNode",
            "x": 170,
            "y": 217.015625,
          },
          "b4fb022a-0468-4154-80ea-cc02d54b5307": {
            "connections": {
              "false": "e301438c-0bd0-429c-ab0c-66126501069a",
              "true": "70e691a5-1e33-4ac3-a356-e7b6d60d92e0",
            },
            "displayName": "Fraud Risk",
            "nodeType": "InnerTreeEvaluatorNode",
            "x": 628,
            "y": 142.015625,
          },
          "e470a3e2-6310-4fc8-9a94-3f3d3b819f75": {
            "connections": {
              "false": "e301438c-0bd0-429c-ab0c-66126501069a",
              "true": "b4fb022a-0468-4154-80ea-cc02d54b5307",
            },
            "displayName": "Lookup Profile",
            "nodeType": "IdentifyExistingUserNode",
            "x": 378,
            "y": 216.015625,
          },
          "eee86d9c-5474-4f5c-a611-475dac6daabe": {
            "connections": {
              "outcome": "e470a3e2-6310-4fc8-9a94-3f3d3b819f75",
            },
            "displayName": "Get Session Data",
            "nodeType": "SessionDataNode",
            "x": 171,
            "y": 334.015625,
          },
        },
        "staticNodes": {
          "70e691a5-1e33-4ac3-a356-e7b6d60d92e0": {
            "x": 891,
            "y": 82,
          },
          "e301438c-0bd0-429c-ab0c-66126501069a": {
            "x": 892,
            "y": 358,
          },
          "startNode": {
            "x": 50,
            "y": 250,
          },
        },
        "uiConfig": {
          "categories": "["Helper","Proof Of Concept","TxAuthZ","Autonomous Access"]",
        },
      },
    },
    "base": {
      "circlesOfTrust": {},
      "emailTemplates": {},
      "innerNodes": {
        "15e7cfbe-88c5-434f-8312-b0150853303b": {
          "_id": "15e7cfbe-88c5-434f-8312-b0150853303b",
          "_outcomes": [
            {
              "displayName": "True",
              "id": "true",
            },
            {
              "displayName": "False",
              "id": "false",
            },
          ],
          "_rev": "1395500637",
          "_type": {
            "_id": "MessageNode",
            "collection": true,
            "name": "Message Node",
          },
          "message": {
            "en": "Again?",
          },
          "messageNo": {
            "en": "No",
          },
          "messageYes": {
            "en": "Yes",
          },
        },
        "987fff60-3116-42dd-b981-b444f888b3c8": {
          "_id": "987fff60-3116-42dd-b981-b444f888b3c8",
          "_outcomes": [
            {
              "displayName": "true",
              "id": "true",
            },
          ],
          "_rev": "612138157",
          "_type": {
            "_id": "ScriptedDecisionNode",
            "collection": true,
            "name": "Scripted Decision",
          },
          "inputs": [
            "*",
          ],
          "outcomes": [
            "true",
          ],
          "outputs": [
            "*",
          ],
          "script": "3cb43516-ae69-433a-8787-501d45db14e9",
        },
      },
      "nodes": {
        "441f4dba-35c9-4e87-8e79-d0582439b697": {
          "_id": "441f4dba-35c9-4e87-8e79-d0582439b697",
          "_outcomes": [
            {
              "displayName": "static",
              "id": "static",
            },
            {
              "displayName": "dynamic",
              "id": "dynamic",
            },
          ],
          "_rev": "486685784",
          "_type": {
            "_id": "ChoiceCollectorNode",
            "collection": true,
            "name": "Choice Collector",
          },
          "choices": [
            "static",
            "dynamic",
          ],
          "defaultChoice": "static",
          "prompt": "Choose approach",
        },
        "44f0fd83-182e-43fe-a38d-4d90e8e95a6e": {
          "_id": "44f0fd83-182e-43fe-a38d-4d90e8e95a6e",
          "_outcomes": [
            {
              "displayName": "True",
              "id": "true",
            },
            {
              "displayName": "False",
              "id": "false",
            },
            {
              "displayName": "Configuration failure",
              "id": "CONFIGURATION_FAILED",
            },
          ],
          "_rev": "735161957",
          "_type": {
            "_id": "ConfigProviderNode",
            "collection": true,
            "name": "Configuration Provider",
          },
          "nodeType": "InnerTreeEvaluatorNode",
          "script": "638c865e-d393-4503-a517-535b9c74e010",
          "scriptInputs": [
            "*",
          ],
        },
        "8462f003-1183-4696-bf63-05746207f953": {
          "_id": "8462f003-1183-4696-bf63-05746207f953",
          "_outcomes": [
            {
              "displayName": "True",
              "id": "true",
            },
            {
              "displayName": "False",
              "id": "false",
            },
          ],
          "_rev": "-331398459",
          "_type": {
            "_id": "PageNode",
            "collection": true,
            "name": "Page Node",
          },
          "nodes": [
            {
              "_id": "15e7cfbe-88c5-434f-8312-b0150853303b",
              "displayName": "Again?",
              "nodeType": "MessageNode",
            },
          ],
          "pageDescription": {},
          "pageHeader": {
            "en": "Back in base!",
          },
        },
        "9d49ce07-1260-4fa3-874f-6195fbcf0108": {
          "_id": "9d49ce07-1260-4fa3-874f-6195fbcf0108",
          "_outcomes": [
            {
              "displayName": "true",
              "id": "true",
            },
          ],
          "_rev": "-1689699692",
          "_type": {
            "_id": "ScriptedDecisionNode",
            "collection": true,
            "name": "Scripted Decision",
          },
          "inputs": [
            "*",
          ],
          "outcomes": [
            "true",
          ],
          "outputs": [
            "*",
            "nodeConfig",
          ],
          "script": "14f14ad3-f35f-455b-a7ba-d7cd939c6921",
        },
        "b2d77fb7-915d-41ab-b94c-3cc976f04522": {
          "_id": "b2d77fb7-915d-41ab-b94c-3cc976f04522",
          "_outcomes": [
            {
              "displayName": "True",
              "id": "true",
            },
            {
              "displayName": "False",
              "id": "false",
            },
            {
              "displayName": "Configuration failure",
              "id": "CONFIGURATION_FAILED",
            },
          ],
          "_rev": "89002808",
          "_type": {
            "_id": "ConfigProviderNode",
            "collection": true,
            "name": "Configuration Provider",
          },
          "nodeType": "InnerTreeEvaluatorNode",
          "script": "740cf6fa-a173-4e9d-b17c-44758e9b19ec",
          "scriptInputs": [
            "*",
          ],
        },
        "c1bb46cf-9638-4031-a8d0-ae20987eebca": {
          "_id": "c1bb46cf-9638-4031-a8d0-ae20987eebca",
          "_outcomes": [
            {
              "displayName": "true",
              "id": "true",
            },
          ],
          "_rev": "1146556764",
          "_type": {
            "_id": "PageNode",
            "collection": true,
            "name": "Page Node",
          },
          "nodes": [
            {
              "_id": "987fff60-3116-42dd-b981-b444f888b3c8",
              "displayName": "Debug",
              "nodeType": "ScriptedDecisionNode",
            },
          ],
          "pageDescription": {},
          "pageHeader": {
            "en": "Configuration Error",
          },
        },
        "c6e6913d-853d-49c4-8381-bde0ba876f97": {
          "_id": "c6e6913d-853d-49c4-8381-bde0ba876f97",
          "_outcomes": [
            {
              "displayName": "inner1",
              "id": "inner1",
            },
            {
              "displayName": "inner2",
              "id": "inner2",
            },
          ],
          "_rev": "-671774316",
          "_type": {
            "_id": "ChoiceCollectorNode",
            "collection": true,
            "name": "Choice Collector",
          },
          "choices": [
            "inner1",
            "inner2",
          ],
          "defaultChoice": "inner1",
          "prompt": "Choose a journey",
        },
        "fb38303e-fd02-455e-b272-5b5e60c3ec87": {
          "_id": "fb38303e-fd02-455e-b272-5b5e60c3ec87",
          "_outcomes": [
            {
              "displayName": "True",
              "id": "true",
            },
            {
              "displayName": "False",
              "id": "false",
            },
            {
              "displayName": "Configuration failure",
              "id": "CONFIGURATION_FAILED",
            },
          ],
          "_rev": "-764665485",
          "_type": {
            "_id": "ConfigProviderNode",
            "collection": true,
            "name": "Configuration Provider",
          },
          "nodeType": "InnerTreeEvaluatorNode",
          "script": "5e854779-6ec1-4c39-aeba-0477e0986646",
          "scriptInputs": [
            "*",
            "nodeConfig",
          ],
        },
      },
      "saml2Entities": {},
      "scripts": {},
      "socialIdentityProviders": {},
      "themes": [],
      "tree": {
        "_id": "base",
        "_rev": "-1602769011",
        "description": "base journey",
        "enabled": true,
        "entryNodeId": "441f4dba-35c9-4e87-8e79-d0582439b697",
        "identityResource": "managed/alpha_user",
        "nodes": {
          "441f4dba-35c9-4e87-8e79-d0582439b697": {
            "connections": {
              "dynamic": "9d49ce07-1260-4fa3-874f-6195fbcf0108",
              "static": "c6e6913d-853d-49c4-8381-bde0ba876f97",
            },
            "displayName": "Choose approach",
            "nodeType": "ChoiceCollectorNode",
            "x": 203,
            "y": 227.015625,
          },
          "44f0fd83-182e-43fe-a38d-4d90e8e95a6e": {
            "connections": {
              "CONFIGURATION_FAILED": "c1bb46cf-9638-4031-a8d0-ae20987eebca",
              "false": "8462f003-1183-4696-bf63-05746207f953",
              "true": "8462f003-1183-4696-bf63-05746207f953",
            },
            "displayName": "inner1",
            "nodeType": "ConfigProviderNode",
            "x": 677,
            "y": 35.015625,
          },
          "8462f003-1183-4696-bf63-05746207f953": {
            "connections": {
              "false": "e301438c-0bd0-429c-ab0c-66126501069a",
              "true": "441f4dba-35c9-4e87-8e79-d0582439b697",
            },
            "displayName": "Final Dialog",
            "nodeType": "PageNode",
            "x": 964,
            "y": 115.015625,
          },
          "9d49ce07-1260-4fa3-874f-6195fbcf0108": {
            "connections": {
              "true": "fb38303e-fd02-455e-b272-5b5e60c3ec87",
            },
            "displayName": "Choose a journey",
            "nodeType": "ScriptedDecisionNode",
            "x": 436,
            "y": 465.015625,
          },
          "b2d77fb7-915d-41ab-b94c-3cc976f04522": {
            "connections": {
              "CONFIGURATION_FAILED": "c1bb46cf-9638-4031-a8d0-ae20987eebca",
              "false": "8462f003-1183-4696-bf63-05746207f953",
              "true": "8462f003-1183-4696-bf63-05746207f953",
            },
            "displayName": "inner2",
            "nodeType": "ConfigProviderNode",
            "x": 679,
            "y": 199.015625,
          },
          "c1bb46cf-9638-4031-a8d0-ae20987eebca": {
            "connections": {
              "true": "e301438c-0bd0-429c-ab0c-66126501069a",
            },
            "displayName": "Config Error",
            "nodeType": "PageNode",
            "x": 964,
            "y": 435.015625,
          },
          "c6e6913d-853d-49c4-8381-bde0ba876f97": {
            "connections": {
              "inner1": "44f0fd83-182e-43fe-a38d-4d90e8e95a6e",
              "inner2": "b2d77fb7-915d-41ab-b94c-3cc976f04522",
            },
            "displayName": "Choose a journey",
            "nodeType": "ChoiceCollectorNode",
            "x": 433,
            "y": 117.015625,
          },
          "fb38303e-fd02-455e-b272-5b5e60c3ec87": {
            "connections": {
              "CONFIGURATION_FAILED": "c1bb46cf-9638-4031-a8d0-ae20987eebca",
              "false": "8462f003-1183-4696-bf63-05746207f953",
              "true": "8462f003-1183-4696-bf63-05746207f953",
            },
            "displayName": "inner1 or inner2",
            "nodeType": "ConfigProviderNode",
            "x": 682,
            "y": 422.015625,
          },
        },
        "staticNodes": {
          "70e691a5-1e33-4ac3-a356-e7b6d60d92e0": {
            "x": 64,
            "y": 105,
          },
          "e301438c-0bd0-429c-ab0c-66126501069a": {
            "x": 1237,
            "y": 415,
          },
          "startNode": {
            "x": 50,
            "y": 250,
          },
        },
        "uiConfig": {
          "categories": "["Proof Of Concept"]",
        },
      },
    },
    "demo": {
      "circlesOfTrust": {},
      "emailTemplates": {},
      "innerNodes": {
        "690f6325-6757-40f2-88c2-686619d4b751": {
          "_id": "690f6325-6757-40f2-88c2-686619d4b751",
          "_outcomes": [
            {
              "displayName": "Outcome",
              "id": "outcome",
            },
          ],
          "_rev": "1609094916",
          "_type": {
            "_id": "ValidatedUsernameNode",
            "collection": true,
            "name": "Platform Username",
          },
          "usernameAttribute": "userName",
          "validateInput": false,
        },
        "8dd74bbf-3a91-4b7d-9555-72465fbc8ce0": {
          "_id": "8dd74bbf-3a91-4b7d-9555-72465fbc8ce0",
          "_outcomes": [
            {
              "displayName": "Outcome",
              "id": "outcome",
            },
          ],
          "_rev": "2077663973",
          "_type": {
            "_id": "ValidatedPasswordNode",
            "collection": true,
            "name": "Platform Password",
          },
          "passwordAttribute": "password",
          "validateInput": false,
        },
      },
      "nodes": {
        "030570a3-7052-4b9d-a277-359e733bcf15": {
          "_id": "030570a3-7052-4b9d-a277-359e733bcf15",
          "_outcomes": [
            {
              "displayName": "Outcome",
              "id": "outcome",
            },
          ],
          "_rev": "-665884186",
          "_type": {
            "_id": "PageNode",
            "collection": true,
            "name": "Page Node",
          },
          "nodes": [
            {
              "_id": "690f6325-6757-40f2-88c2-686619d4b751",
              "displayName": "Platform Username",
              "nodeType": "ValidatedUsernameNode",
            },
            {
              "_id": "8dd74bbf-3a91-4b7d-9555-72465fbc8ce0",
              "displayName": "Platform Password",
              "nodeType": "ValidatedPasswordNode",
            },
          ],
          "pageDescription": {},
          "pageHeader": {},
        },
        "9b589738-04d5-44bb-b65f-8795f8016b10": {
          "_id": "9b589738-04d5-44bb-b65f-8795f8016b10",
          "_outcomes": [
            {
              "displayName": "True",
              "id": "true",
            },
            {
              "displayName": "False",
              "id": "false",
            },
          ],
          "_rev": "433890244",
          "_type": {
            "_id": "InnerTreeEvaluatorNode",
            "collection": true,
            "name": "Inner Tree Evaluator",
          },
          "tree": "SetupMFA",
        },
        "b143052a-98fa-4733-bb91-2933fe5b3003": {
          "_id": "b143052a-98fa-4733-bb91-2933fe5b3003",
          "_outcomes": [
            {
              "displayName": "True",
              "id": "true",
            },
            {
              "displayName": "False",
              "id": "false",
            },
          ],
          "_rev": "-694891631",
          "_type": {
            "_id": "DataStoreDecisionNode",
            "collection": true,
            "name": "Data Store Decision",
          },
        },
      },
      "saml2Entities": {},
      "scripts": {},
      "socialIdentityProviders": {},
      "themes": [],
      "tree": {
        "_id": "demo",
        "_rev": "-915856234",
        "enabled": true,
        "entryNodeId": "030570a3-7052-4b9d-a277-359e733bcf15",
        "identityResource": "managed/alpha_user",
        "nodes": {
          "030570a3-7052-4b9d-a277-359e733bcf15": {
            "connections": {
              "outcome": "b143052a-98fa-4733-bb91-2933fe5b3003",
            },
            "displayName": "Page Node",
            "nodeType": "PageNode",
            "x": 156,
            "y": 92.015625,
          },
          "9b589738-04d5-44bb-b65f-8795f8016b10": {
            "connections": {
              "false": "e301438c-0bd0-429c-ab0c-66126501069a",
              "true": "70e691a5-1e33-4ac3-a356-e7b6d60d92e0",
            },
            "displayName": "Inner Tree Evaluator",
            "nodeType": "InnerTreeEvaluatorNode",
            "x": 530,
            "y": 212.015625,
          },
          "b143052a-98fa-4733-bb91-2933fe5b3003": {
            "connections": {
              "false": "9b589738-04d5-44bb-b65f-8795f8016b10",
              "true": "70e691a5-1e33-4ac3-a356-e7b6d60d92e0",
            },
            "displayName": "Data Store Decision",
            "nodeType": "DataStoreDecisionNode",
            "x": 379,
            "y": 32.015625,
          },
        },
        "staticNodes": {
          "70e691a5-1e33-4ac3-a356-e7b6d60d92e0": {
            "x": 879,
            "y": 44,
          },
          "e301438c-0bd0-429c-ab0c-66126501069a": {
            "x": 834,
            "y": 266,
          },
          "startNode": {
            "x": 50,
            "y": 250,
          },
        },
        "uiConfig": {
          "categories": "[]",
        },
      },
    },
    "fmr": {
      "circlesOfTrust": {},
      "emailTemplates": {},
      "innerNodes": {
        "548dd298-5e25-4a4b-902c-cac96c73b04e": {
          "_id": "548dd298-5e25-4a4b-902c-cac96c73b04e",
          "_outcomes": [
            {
              "displayName": "Outcome",
              "id": "outcome",
            },
          ],
          "_rev": "-743585794",
          "_type": {
            "_id": "ValidatedPasswordNode",
            "collection": true,
            "name": "Platform Password",
          },
          "passwordAttribute": "password",
          "validateInput": false,
        },
        "691c04cd-97ab-42e1-9f76-907fbd12604f": {
          "_id": "691c04cd-97ab-42e1-9f76-907fbd12604f",
          "_outcomes": [
            {
              "displayName": "Outcome",
              "id": "outcome",
            },
          ],
          "_rev": "1738855256",
          "_type": {
            "_id": "ValidatedUsernameNode",
            "collection": true,
            "name": "Platform Username",
          },
          "usernameAttribute": "userName",
          "validateInput": false,
        },
      },
      "nodes": {
        "b0c5e253-d9a8-4ce5-89f0-28562818dd4c": {
          "_id": "b0c5e253-d9a8-4ce5-89f0-28562818dd4c",
          "_outcomes": [
            {
              "displayName": "True",
              "id": "true",
            },
            {
              "displayName": "False",
              "id": "false",
            },
          ],
          "_rev": "274988129",
          "_type": {
            "_id": "DataStoreDecisionNode",
            "collection": true,
            "name": "Data Store Decision",
          },
        },
        "dae433a5-af58-46c0-8bd2-17a1302d2616": {
          "_id": "dae433a5-af58-46c0-8bd2-17a1302d2616",
          "_outcomes": [
            {
              "displayName": "Outcome",
              "id": "outcome",
            },
          ],
          "_rev": "861053489",
          "_type": {
            "_id": "PageNode",
            "collection": true,
            "name": "Page Node",
          },
          "nodes": [
            {
              "_id": "691c04cd-97ab-42e1-9f76-907fbd12604f",
              "displayName": "Platform Username",
              "nodeType": "ValidatedUsernameNode",
            },
            {
              "_id": "548dd298-5e25-4a4b-902c-cac96c73b04e",
              "displayName": "Platform Password",
              "nodeType": "ValidatedPasswordNode",
            },
          ],
          "pageDescription": {},
          "pageHeader": {},
        },
      },
      "saml2Entities": {},
      "scripts": {},
      "socialIdentityProviders": {},
      "themes": [],
      "tree": {
        "_id": "fmr",
        "_rev": "-1987276803",
        "description": "test",
        "enabled": true,
        "entryNodeId": "dae433a5-af58-46c0-8bd2-17a1302d2616",
        "identityResource": "managed/alpha_user",
        "nodes": {
          "b0c5e253-d9a8-4ce5-89f0-28562818dd4c": {
            "connections": {
              "false": "e301438c-0bd0-429c-ab0c-66126501069a",
              "true": "70e691a5-1e33-4ac3-a356-e7b6d60d92e0",
            },
            "displayName": "Data Store Decision",
            "nodeType": "DataStoreDecisionNode",
            "x": 549,
            "y": 232.015625,
          },
          "dae433a5-af58-46c0-8bd2-17a1302d2616": {
            "connections": {
              "outcome": "b0c5e253-d9a8-4ce5-89f0-28562818dd4c",
            },
            "displayName": "Page Node",
            "nodeType": "PageNode",
            "x": 238,
            "y": 99.015625,
          },
        },
        "staticNodes": {
          "70e691a5-1e33-4ac3-a356-e7b6d60d92e0": {
            "x": 947,
            "y": 124,
          },
          "e301438c-0bd0-429c-ab0c-66126501069a": {
            "x": 955,
            "y": 458,
          },
          "startNode": {
            "x": 50,
            "y": 250,
          },
        },
        "uiConfig": {
          "categories": "[]",
        },
      },
    },
    "iExistingSession": {
      "circlesOfTrust": {},
      "emailTemplates": {},
      "innerNodes": {},
      "nodes": {
        "3dc8f048-f79b-4767-86d1-d9e6e9b2baa0": {
          "_id": "3dc8f048-f79b-4767-86d1-d9e6e9b2baa0",
          "_outcomes": [
            {
              "displayName": "True",
              "id": "true",
            },
            {
              "displayName": "False",
              "id": "false",
            },
          ],
          "_rev": "-504324031",
          "_type": {
            "_id": "IdentifyExistingUserNode",
            "collection": true,
            "name": "Identify Existing User",
          },
          "identifier": "userName",
          "identityAttribute": "userName",
        },
        "8cf3cc43-df04-42ac-ad10-67fd2fb96ca2": {
          "_id": "8cf3cc43-df04-42ac-ad10-67fd2fb96ca2",
          "_outcomes": [
            {
              "displayName": "true",
              "id": "true",
            },
            {
              "displayName": "false",
              "id": "false",
            },
          ],
          "_rev": "1236356719",
          "_type": {
            "_id": "ScriptedDecisionNode",
            "collection": true,
            "name": "Scripted Decision",
          },
          "inputs": [
            "*",
          ],
          "outcomes": [
            "true",
            "false",
          ],
          "outputs": [
            "*",
          ],
          "script": "616d3541-14d6-4a54-94dd-46a146ef2423",
        },
        "c6515adb-d22b-4d33-906c-afbdebcac6b7": {
          "_id": "c6515adb-d22b-4d33-906c-afbdebcac6b7",
          "_outcomes": [
            {
              "displayName": "Outcome",
              "id": "outcome",
            },
          ],
          "_rev": "27444320",
          "_type": {
            "_id": "SessionDataNode",
            "collection": true,
            "name": "Get Session Data",
          },
          "sessionDataKey": "UserId",
          "sharedStateKey": "_id",
        },
      },
      "saml2Entities": {},
      "scripts": {},
      "socialIdentityProviders": {},
      "themes": [],
      "tree": {
        "_id": "iExistingSession",
        "_rev": "-295190139",
        "description": "Detect and adopt existing session",
        "enabled": true,
        "entryNodeId": "8cf3cc43-df04-42ac-ad10-67fd2fb96ca2",
        "identityResource": "managed/alpha_user",
        "nodes": {
          "3dc8f048-f79b-4767-86d1-d9e6e9b2baa0": {
            "connections": {
              "false": "e301438c-0bd0-429c-ab0c-66126501069a",
              "true": "70e691a5-1e33-4ac3-a356-e7b6d60d92e0",
            },
            "displayName": "Lookup Profile",
            "nodeType": "IdentifyExistingUserNode",
            "x": 378,
            "y": 216.015625,
          },
          "8cf3cc43-df04-42ac-ad10-67fd2fb96ca2": {
            "connections": {
              "false": "e301438c-0bd0-429c-ab0c-66126501069a",
              "true": "c6515adb-d22b-4d33-906c-afbdebcac6b7",
            },
            "displayName": "Existing Session?",
            "nodeType": "ScriptedDecisionNode",
            "x": 170,
            "y": 217.015625,
          },
          "c6515adb-d22b-4d33-906c-afbdebcac6b7": {
            "connections": {
              "outcome": "3dc8f048-f79b-4767-86d1-d9e6e9b2baa0",
            },
            "displayName": "Get Session Data",
            "nodeType": "SessionDataNode",
            "x": 171,
            "y": 334.015625,
          },
        },
        "staticNodes": {
          "70e691a5-1e33-4ac3-a356-e7b6d60d92e0": {
            "x": 630,
            "y": 169,
          },
          "e301438c-0bd0-429c-ab0c-66126501069a": {
            "x": 638,
            "y": 347,
          },
          "startNode": {
            "x": 50,
            "y": 250,
          },
        },
        "uiConfig": {
          "categories": "["Helper","Proof Of Concept","TxAuthZ"]",
        },
      },
    },
    "iPasswordBreachDetection": {
      "circlesOfTrust": {},
      "emailTemplates": {},
      "innerNodes": {
        "848fcb6e-0c5a-431b-b594-ad00a8439a92": {
          "_id": "848fcb6e-0c5a-431b-b594-ad00a8439a92",
          "_outcomes": [
            {
              "displayName": "Outcome",
              "id": "outcome",
            },
          ],
          "_rev": "978394777",
          "_type": {
            "_id": "ValidatedPasswordNode",
            "collection": true,
            "name": "Platform Password",
          },
          "passwordAttribute": "password",
          "validateInput": true,
        },
        "98f8ea1a-38e7-49f7-aabc-899b19f1d628": {
          "_id": "98f8ea1a-38e7-49f7-aabc-899b19f1d628",
          "_outcomes": [
            {
              "displayName": "True",
              "id": "true",
            },
            {
              "displayName": "False",
              "id": "false",
            },
          ],
          "_rev": "-303922873",
          "_type": {
            "_id": "MessageNode",
            "collection": true,
            "name": "Message Node",
          },
          "message": {
            "en": "Would you like to enter a new password?",
          },
          "messageNo": {
            "en": "Abort",
          },
          "messageYes": {
            "en": "Validate new password",
          },
        },
      },
      "nodes": {
        "2c18a416-465d-4a4b-a6b5-19bdf84cc900": {
          "_id": "2c18a416-465d-4a4b-a6b5-19bdf84cc900",
          "_outcomes": [
            {
              "displayName": "True",
              "id": "true",
            },
            {
              "displayName": "False",
              "id": "false",
            },
          ],
          "_rev": "1807594571",
          "_type": {
            "_id": "PageNode",
            "collection": true,
            "name": "Page Node",
          },
          "nodes": [
            {
              "_id": "848fcb6e-0c5a-431b-b594-ad00a8439a92",
              "displayName": "Password",
              "nodeType": "ValidatedPasswordNode",
            },
            {
              "_id": "98f8ea1a-38e7-49f7-aabc-899b19f1d628",
              "displayName": "User Choice",
              "nodeType": "MessageNode",
            },
          ],
          "pageDescription": {
            "en": "The password you entered was exposed in past breaches and should not be used!",
          },
          "pageHeader": {
            "en": "Breached!",
          },
        },
        "7be17081-0dd7-4f70-93b9-32f12710f53b": {
          "_id": "7be17081-0dd7-4f70-93b9-32f12710f53b",
          "_outcomes": [
            {
              "displayName": "clear",
              "id": "clear",
            },
            {
              "displayName": "breached",
              "id": "breached",
            },
            {
              "displayName": "failed",
              "id": "failed",
            },
          ],
          "_rev": "-22160818",
          "_type": {
            "_id": "ScriptedDecisionNode",
            "collection": true,
            "name": "Scripted Decision",
          },
          "inputs": [
            "*",
            "password",
          ],
          "outcomes": [
            "clear",
            "breached",
            "failed",
          ],
          "outputs": [
            "*",
          ],
          "script": "790045fa-a325-4e3e-96f8-d4a91b32e9de",
        },
        "b9c86469-b19c-4e27-8cac-95fd1beebcd8": {
          "_id": "b9c86469-b19c-4e27-8cac-95fd1beebcd8",
          "_outcomes": [
            {
              "displayName": "true",
              "id": "true",
            },
          ],
          "_rev": "-1802137715",
          "_type": {
            "_id": "ScriptedDecisionNode",
            "collection": true,
            "name": "Scripted Decision",
          },
          "inputs": [
            "*",
          ],
          "outcomes": [
            "true",
          ],
          "outputs": [
            "*",
          ],
          "script": "3cb43516-ae69-433a-8787-501d45db14e9",
        },
      },
      "saml2Entities": {},
      "scripts": {},
      "socialIdentityProviders": {},
      "themes": [],
      "tree": {
        "_id": "iPasswordBreachDetection",
        "_rev": "227469078",
        "description": "Use Have I Been Pwned Password to check if password has been breached.",
        "enabled": true,
        "entryNodeId": "7be17081-0dd7-4f70-93b9-32f12710f53b",
        "identityResource": "managed/alpha_user",
        "nodes": {
          "2c18a416-465d-4a4b-a6b5-19bdf84cc900": {
            "connections": {
              "false": "e301438c-0bd0-429c-ab0c-66126501069a",
              "true": "7be17081-0dd7-4f70-93b9-32f12710f53b",
            },
            "displayName": "Breached!",
            "nodeType": "PageNode",
            "x": 424,
            "y": 345.015625,
          },
          "7be17081-0dd7-4f70-93b9-32f12710f53b": {
            "connections": {
              "breached": "2c18a416-465d-4a4b-a6b5-19bdf84cc900",
              "clear": "70e691a5-1e33-4ac3-a356-e7b6d60d92e0",
              "failed": "70e691a5-1e33-4ac3-a356-e7b6d60d92e0",
            },
            "displayName": "Analyze Password",
            "nodeType": "ScriptedDecisionNode",
            "x": 195,
            "y": 219.015625,
          },
          "b9c86469-b19c-4e27-8cac-95fd1beebcd8": {
            "connections": {
              "true": "70e691a5-1e33-4ac3-a356-e7b6d60d92e0",
            },
            "displayName": "Debug",
            "nodeType": "ScriptedDecisionNode",
            "x": 325,
            "y": 74.015625,
          },
        },
        "staticNodes": {
          "70e691a5-1e33-4ac3-a356-e7b6d60d92e0": {
            "x": 474,
            "y": 210,
          },
          "e301438c-0bd0-429c-ab0c-66126501069a": {
            "x": 663,
            "y": 502,
          },
          "startNode": {
            "x": 50,
            "y": 250,
          },
        },
        "uiConfig": {
          "categories": "["Adaptive"]",
        },
      },
    },
    "iSocialLogin": {
      "circlesOfTrust": {},
      "emailTemplates": {},
      "innerNodes": {},
      "nodes": {
        "0103765c-4aa2-4374-922d-c3044be0e139": {
          "_id": "0103765c-4aa2-4374-922d-c3044be0e139",
          "_outcomes": [
            {
              "displayName": "True",
              "id": "true",
            },
            {
              "displayName": "False",
              "id": "false",
            },
          ],
          "_rev": "976368937",
          "_type": {
            "_id": "IdentifyExistingUserNode",
            "collection": true,
            "name": "Identify Existing User",
          },
          "identifier": "userName",
          "identityAttribute": "userName",
        },
        "6d4a3db0-108c-4fbf-b112-48e447633c19": {
          "_id": "6d4a3db0-108c-4fbf-b112-48e447633c19",
          "_outcomes": [
            {
              "displayName": "Account exists",
              "id": "ACCOUNT_EXISTS",
            },
            {
              "displayName": "No account exists",
              "id": "NO_ACCOUNT",
            },
          ],
          "_rev": "-2038398617",
          "_type": {
            "_id": "SocialProviderHandlerNode",
            "collection": true,
            "name": "Social Provider Handler Node",
          },
          "clientType": "BROWSER",
          "script": "58c824ae-84ed-4724-82cd-db128fc3f6c",
          "usernameAttribute": "userName",
        },
        "badaf413-2388-4377-8bed-f2ab9cf68a7e": {
          "_id": "badaf413-2388-4377-8bed-f2ab9cf68a7e",
          "_outcomes": [
            {
              "displayName": "Patched",
              "id": "PATCHED",
            },
            {
              "displayName": "Failed",
              "id": "FAILURE",
            },
          ],
          "_rev": "222909181",
          "_type": {
            "_id": "PatchObjectNode",
            "collection": true,
            "name": "Patch Object",
          },
          "identityAttribute": "userName",
          "identityResource": "managed/alpha_user",
          "ignoredFields": [
            "mail",
            "givenName",
            "sn",
          ],
          "patchAsObject": false,
        },
      },
      "saml2Entities": {},
      "scripts": {},
      "socialIdentityProviders": {},
      "themes": [],
      "tree": {
        "_id": "iSocialLogin",
        "_rev": "-586990029",
        "description": "Social login inner journey",
        "enabled": true,
        "entryNodeId": "6d4a3db0-108c-4fbf-b112-48e447633c19",
        "identityResource": "managed/alpha_user",
        "nodes": {
          "0103765c-4aa2-4374-922d-c3044be0e139": {
            "connections": {
              "false": "e301438c-0bd0-429c-ab0c-66126501069a",
              "true": "badaf413-2388-4377-8bed-f2ab9cf68a7e",
            },
            "displayName": "Find User",
            "nodeType": "IdentifyExistingUserNode",
            "x": 398,
            "y": 226.76666259765625,
          },
          "6d4a3db0-108c-4fbf-b112-48e447633c19": {
            "connections": {
              "ACCOUNT_EXISTS": "70e691a5-1e33-4ac3-a356-e7b6d60d92e0",
              "NO_ACCOUNT": "0103765c-4aa2-4374-922d-c3044be0e139",
            },
            "displayName": "Social Login",
            "nodeType": "SocialProviderHandlerNode",
            "x": 174.95001220703125,
            "y": 82.76666259765625,
          },
          "badaf413-2388-4377-8bed-f2ab9cf68a7e": {
            "connections": {
              "FAILURE": "e301438c-0bd0-429c-ab0c-66126501069a",
              "PATCHED": "70e691a5-1e33-4ac3-a356-e7b6d60d92e0",
            },
            "displayName": "Patch Object",
            "nodeType": "PatchObjectNode",
            "x": 619,
            "y": 164.76666259765625,
          },
        },
        "staticNodes": {
          "70e691a5-1e33-4ac3-a356-e7b6d60d92e0": {
            "x": 869,
            "y": 106,
          },
          "e301438c-0bd0-429c-ab0c-66126501069a": {
            "x": 870,
            "y": 277,
          },
          "startNode": {
            "x": 67,
            "y": 100,
          },
        },
        "uiConfig": {
          "categories": "["Social Authentication"]",
        },
      },
    },
    "iUsernamePasswordLogin": {
      "circlesOfTrust": {},
      "emailTemplates": {},
      "innerNodes": {},
      "nodes": {
        "3be8a492-68d9-4dbd-8b3a-eb91b3bdab18": {
          "_id": "3be8a492-68d9-4dbd-8b3a-eb91b3bdab18",
          "_outcomes": [
            {
              "displayName": "True",
              "id": "true",
            },
            {
              "displayName": "False",
              "id": "false",
            },
          ],
          "_rev": "370082864",
          "_type": {
            "_id": "DataStoreDecisionNode",
            "collection": true,
            "name": "Data Store Decision",
          },
        },
        "50a111d7-3139-41b3-9179-fce9cad9d04a": {
          "_id": "50a111d7-3139-41b3-9179-fce9cad9d04a",
          "_outcomes": [
            {
              "displayName": "True",
              "id": "true",
            },
            {
              "displayName": "False",
              "id": "false",
            },
          ],
          "_rev": "353754721",
          "_type": {
            "_id": "IdentifyExistingUserNode",
            "collection": true,
            "name": "Identify Existing User",
          },
          "identifier": "userName",
          "identityAttribute": "userName",
        },
        "77199182-3479-4668-b181-f1986988fcd7": {
          "_id": "77199182-3479-4668-b181-f1986988fcd7",
          "_outcomes": [
            {
              "displayName": "True",
              "id": "true",
            },
            {
              "displayName": "False",
              "id": "false",
            },
          ],
          "_rev": "-1806268837",
          "_type": {
            "_id": "IdentifyExistingUserNode",
            "collection": true,
            "name": "Identify Existing User",
          },
          "identifier": "userName",
          "identityAttribute": "mail",
        },
      },
      "saml2Entities": {},
      "scripts": {},
      "socialIdentityProviders": {},
      "themes": [],
      "tree": {
        "_id": "iUsernamePasswordLogin",
        "_rev": "-1188360097",
        "description": "Username/password login.",
        "enabled": true,
        "entryNodeId": "50a111d7-3139-41b3-9179-fce9cad9d04a",
        "identityResource": "managed/alpha_user",
        "nodes": {
          "3be8a492-68d9-4dbd-8b3a-eb91b3bdab18": {
            "connections": {
              "false": "e301438c-0bd0-429c-ab0c-66126501069a",
              "true": "70e691a5-1e33-4ac3-a356-e7b6d60d92e0",
            },
            "displayName": "Data Store Decision",
            "nodeType": "DataStoreDecisionNode",
            "x": 619,
            "y": 166.015625,
          },
          "50a111d7-3139-41b3-9179-fce9cad9d04a": {
            "connections": {
              "false": "77199182-3479-4668-b181-f1986988fcd7",
              "true": "3be8a492-68d9-4dbd-8b3a-eb91b3bdab18",
            },
            "displayName": "Find by Username",
            "nodeType": "IdentifyExistingUserNode",
            "x": 177,
            "y": 158.015625,
          },
          "77199182-3479-4668-b181-f1986988fcd7": {
            "connections": {
              "false": "e301438c-0bd0-429c-ab0c-66126501069a",
              "true": "3be8a492-68d9-4dbd-8b3a-eb91b3bdab18",
            },
            "displayName": "Find by Email",
            "nodeType": "IdentifyExistingUserNode",
            "x": 394,
            "y": 258.015625,
          },
        },
        "staticNodes": {
          "70e691a5-1e33-4ac3-a356-e7b6d60d92e0": {
            "x": 866,
            "y": 70,
          },
          "e301438c-0bd0-429c-ab0c-66126501069a": {
            "x": 866,
            "y": 368,
          },
          "startNode": {
            "x": 50,
            "y": 250,
          },
        },
        "uiConfig": {
          "categories": "[]",
        },
      },
    },
    "inner1": {
      "circlesOfTrust": {},
      "emailTemplates": {},
      "innerNodes": {
        "0a7914ed-3201-451f-8121-afabd72ca247": {
          "_id": "0a7914ed-3201-451f-8121-afabd72ca247",
          "_outcomes": [
            {
              "displayName": "True",
              "id": "true",
            },
            {
              "displayName": "False",
              "id": "false",
            },
          ],
          "_rev": "1800714111",
          "_type": {
            "_id": "MessageNode",
            "collection": true,
            "name": "Message Node",
          },
          "message": {},
          "messageNo": {},
          "messageYes": {},
        },
        "4c5ccc24-ebf0-4528-b1a9-13307a128547": {
          "_id": "4c5ccc24-ebf0-4528-b1a9-13307a128547",
          "_outcomes": [
            {
              "displayName": "True",
              "id": "true",
            },
            {
              "displayName": "False",
              "id": "false",
            },
          ],
          "_rev": "1134797627",
          "_type": {
            "_id": "MessageNode",
            "collection": true,
            "name": "Message Node",
          },
          "message": {
            "en": "Message 1",
          },
          "messageNo": {},
          "messageYes": {},
        },
      },
      "nodes": {
        "8c2c8c1b-c9e7-4f0f-a499-6a09f9ff4e5d": {
          "_id": "8c2c8c1b-c9e7-4f0f-a499-6a09f9ff4e5d",
          "_outcomes": [
            {
              "displayName": "True",
              "id": "true",
            },
            {
              "displayName": "False",
              "id": "false",
            },
          ],
          "_rev": "-745166603",
          "_type": {
            "_id": "PageNode",
            "collection": true,
            "name": "Page Node",
          },
          "nodes": [
            {
              "_id": "0a7914ed-3201-451f-8121-afabd72ca247",
              "displayName": "Message 2",
              "nodeType": "MessageNode",
            },
          ],
          "pageDescription": {},
          "pageHeader": {
            "en": "inner1 message2",
          },
        },
        "ca72aa7b-a1af-439d-ae87-08143416e026": {
          "_id": "ca72aa7b-a1af-439d-ae87-08143416e026",
          "_outcomes": [
            {
              "displayName": "True",
              "id": "true",
            },
            {
              "displayName": "False",
              "id": "false",
            },
          ],
          "_rev": "103830510",
          "_type": {
            "_id": "PageNode",
            "collection": true,
            "name": "Page Node",
          },
          "nodes": [
            {
              "_id": "4c5ccc24-ebf0-4528-b1a9-13307a128547",
              "displayName": "Message 1",
              "nodeType": "MessageNode",
            },
          ],
          "pageDescription": {},
          "pageHeader": {
            "en": "inner1 message1",
          },
        },
      },
      "saml2Entities": {},
      "scripts": {},
      "socialIdentityProviders": {},
      "themes": [],
      "tree": {
        "_id": "inner1",
        "_rev": "1608972540",
        "description": "inner1",
        "enabled": true,
        "entryNodeId": "ca72aa7b-a1af-439d-ae87-08143416e026",
        "identityResource": "managed/alpha_user",
        "nodes": {
          "8c2c8c1b-c9e7-4f0f-a499-6a09f9ff4e5d": {
            "connections": {
              "false": "e301438c-0bd0-429c-ab0c-66126501069a",
              "true": "e301438c-0bd0-429c-ab0c-66126501069a",
            },
            "displayName": "Page 2",
            "nodeType": "PageNode",
            "x": 409,
            "y": 204.015625,
          },
          "ca72aa7b-a1af-439d-ae87-08143416e026": {
            "connections": {
              "false": "8c2c8c1b-c9e7-4f0f-a499-6a09f9ff4e5d",
              "true": "8c2c8c1b-c9e7-4f0f-a499-6a09f9ff4e5d",
            },
            "displayName": "Page 1",
            "nodeType": "PageNode",
            "x": 169,
            "y": 205.015625,
          },
        },
        "staticNodes": {
          "70e691a5-1e33-4ac3-a356-e7b6d60d92e0": {
            "x": 49,
            "y": 106,
          },
          "e301438c-0bd0-429c-ab0c-66126501069a": {
            "x": 640,
            "y": 250,
          },
          "startNode": {
            "x": 50,
            "y": 250,
          },
        },
        "uiConfig": {
          "categories": "["Prototype"]",
        },
      },
    },
    "inner2": {
      "circlesOfTrust": {},
      "emailTemplates": {},
      "innerNodes": {
        "1057c4de-48fe-44be-b54f-f76683e2e210": {
          "_id": "1057c4de-48fe-44be-b54f-f76683e2e210",
          "_outcomes": [
            {
              "displayName": "True",
              "id": "true",
            },
            {
              "displayName": "False",
              "id": "false",
            },
          ],
          "_rev": "1519917612",
          "_type": {
            "_id": "MessageNode",
            "collection": true,
            "name": "Message Node",
          },
          "message": {
            "en": "Message 1",
          },
          "messageNo": {},
          "messageYes": {},
        },
        "6fb661bb-b7f1-4d58-a0e3-30e53f3d0db8": {
          "_id": "6fb661bb-b7f1-4d58-a0e3-30e53f3d0db8",
          "_outcomes": [
            {
              "displayName": "True",
              "id": "true",
            },
            {
              "displayName": "False",
              "id": "false",
            },
          ],
          "_rev": "-207615906",
          "_type": {
            "_id": "MessageNode",
            "collection": true,
            "name": "Message Node",
          },
          "message": {},
          "messageNo": {},
          "messageYes": {},
        },
      },
      "nodes": {
        "13729ae4-2d9c-454e-aebe-14af8501fc9f": {
          "_id": "13729ae4-2d9c-454e-aebe-14af8501fc9f",
          "_outcomes": [
            {
              "displayName": "True",
              "id": "true",
            },
            {
              "displayName": "False",
              "id": "false",
            },
          ],
          "_rev": "-2046969282",
          "_type": {
            "_id": "PageNode",
            "collection": true,
            "name": "Page Node",
          },
          "nodes": [
            {
              "_id": "6fb661bb-b7f1-4d58-a0e3-30e53f3d0db8",
              "displayName": "Message 2",
              "nodeType": "MessageNode",
            },
          ],
          "pageDescription": {},
          "pageHeader": {
            "en": "inner2 message2",
          },
        },
        "a18fbe65-514e-4142-a476-67139d9f5625": {
          "_id": "a18fbe65-514e-4142-a476-67139d9f5625",
          "_outcomes": [
            {
              "displayName": "True",
              "id": "true",
            },
            {
              "displayName": "False",
              "id": "false",
            },
          ],
          "_rev": "-1887990601",
          "_type": {
            "_id": "PageNode",
            "collection": true,
            "name": "Page Node",
          },
          "nodes": [
            {
              "_id": "1057c4de-48fe-44be-b54f-f76683e2e210",
              "displayName": "Message 1",
              "nodeType": "MessageNode",
            },
          ],
          "pageDescription": {},
          "pageHeader": {
            "en": "inner2 message1",
          },
        },
      },
      "saml2Entities": {},
      "scripts": {},
      "socialIdentityProviders": {},
      "themes": [],
      "tree": {
        "_id": "inner2",
        "_rev": "-1143945105",
        "description": "inner2",
        "enabled": true,
        "entryNodeId": "a18fbe65-514e-4142-a476-67139d9f5625",
        "identityResource": "managed/alpha_user",
        "nodes": {
          "13729ae4-2d9c-454e-aebe-14af8501fc9f": {
            "connections": {
              "false": "e301438c-0bd0-429c-ab0c-66126501069a",
              "true": "e301438c-0bd0-429c-ab0c-66126501069a",
            },
            "displayName": "Page 2",
            "nodeType": "PageNode",
            "x": 409,
            "y": 204.015625,
          },
          "a18fbe65-514e-4142-a476-67139d9f5625": {
            "connections": {
              "false": "13729ae4-2d9c-454e-aebe-14af8501fc9f",
              "true": "13729ae4-2d9c-454e-aebe-14af8501fc9f",
            },
            "displayName": "Page 1",
            "nodeType": "PageNode",
            "x": 169,
            "y": 205.015625,
          },
        },
        "staticNodes": {
          "70e691a5-1e33-4ac3-a356-e7b6d60d92e0": {
            "x": 49,
            "y": 106,
          },
          "e301438c-0bd0-429c-ab0c-66126501069a": {
            "x": 640,
            "y": 250,
          },
          "startNode": {
            "x": 50,
            "y": 250,
          },
        },
        "uiConfig": {
          "categories": "["Prototype"]",
        },
      },
    },
    "temp": {
      "circlesOfTrust": {},
      "emailTemplates": {},
      "innerNodes": {
        "88412e24-c107-45a4-8889-297490fdb5c4": {
          "_id": "88412e24-c107-45a4-8889-297490fdb5c4",
          "_outcomes": [
            {
              "displayName": "Outcome",
              "id": "outcome",
            },
          ],
          "_rev": "456992571",
          "_type": {
            "_id": "ValidatedUsernameNode",
            "collection": true,
            "name": "Platform Username",
          },
          "usernameAttribute": "userName",
          "validateInput": false,
        },
      },
      "nodes": {
        "1555d652-955a-4afa-8501-6582cb68c666": {
          "_id": "1555d652-955a-4afa-8501-6582cb68c666",
          "_outcomes": [
            {
              "displayName": "true",
              "id": "true",
            },
          ],
          "_rev": "-1680066517",
          "_type": {
            "_id": "ScriptedDecisionNode",
            "collection": true,
            "name": "Scripted Decision",
          },
          "inputs": [
            "*",
          ],
          "outcomes": [
            "true",
          ],
          "outputs": [
            "*",
          ],
          "script": "663d0f65-ddf3-419c-8369-a90fde43d521",
        },
        "7fb375cc-57a8-47e9-aa14-e44386cb3315": {
          "_id": "7fb375cc-57a8-47e9-aa14-e44386cb3315",
          "_outcomes": [
            {
              "displayName": "true",
              "id": "true",
            },
          ],
          "_rev": "-204057992",
          "_type": {
            "_id": "ScriptedDecisionNode",
            "collection": true,
            "name": "Scripted Decision",
          },
          "inputs": [
            "*",
          ],
          "outcomes": [
            "true",
          ],
          "outputs": [
            "*",
          ],
          "script": "3cb43516-ae69-433a-8787-501d45db14e9",
        },
        "a7e72326-1dca-4ba7-be03-e19be7df61aa": {
          "_id": "a7e72326-1dca-4ba7-be03-e19be7df61aa",
          "_outcomes": [
            {
              "displayName": "Outcome",
              "id": "outcome",
            },
          ],
          "_rev": "-502171169",
          "_type": {
            "_id": "PageNode",
            "collection": true,
            "name": "Page Node",
          },
          "nodes": [
            {
              "_id": "88412e24-c107-45a4-8889-297490fdb5c4",
              "displayName": "Platform Username",
              "nodeType": "ValidatedUsernameNode",
            },
          ],
          "pageDescription": {},
          "pageHeader": {},
        },
      },
      "saml2Entities": {},
      "scripts": {},
      "socialIdentityProviders": {},
      "themes": [],
      "tree": {
        "_id": "temp",
        "_rev": "1281573044",
        "enabled": true,
        "entryNodeId": "1555d652-955a-4afa-8501-6582cb68c666",
        "identityResource": "managed/alpha_user",
        "nodes": {
          "1555d652-955a-4afa-8501-6582cb68c666": {
            "connections": {
              "true": "7fb375cc-57a8-47e9-aa14-e44386cb3315",
            },
            "displayName": "QR Code",
            "nodeType": "ScriptedDecisionNode",
            "x": 216,
            "y": 249.015625,
          },
          "7fb375cc-57a8-47e9-aa14-e44386cb3315": {
            "connections": {
              "true": "e301438c-0bd0-429c-ab0c-66126501069a",
            },
            "displayName": "Debug",
            "nodeType": "ScriptedDecisionNode",
            "x": 512,
            "y": 249.015625,
          },
          "a7e72326-1dca-4ba7-be03-e19be7df61aa": {
            "connections": {
              "outcome": "7fb375cc-57a8-47e9-aa14-e44386cb3315",
            },
            "displayName": "Page Node",
            "nodeType": "PageNode",
            "x": 215,
            "y": 45.015625,
          },
        },
        "staticNodes": {
          "70e691a5-1e33-4ac3-a356-e7b6d60d92e0": {
            "x": 42,
            "y": 137,
          },
          "e301438c-0bd0-429c-ab0c-66126501069a": {
            "x": 811,
            "y": 311,
          },
          "startNode": {
            "x": 50,
            "y": 250,
          },
        },
        "uiConfig": {
          "categories": "[]",
        },
      },
    },
    "username": {
      "circlesOfTrust": {},
      "emailTemplates": {},
      "innerNodes": {
        "3759aad0-2d13-46f5-80b9-526bbc7b784f": {
          "_id": "3759aad0-2d13-46f5-80b9-526bbc7b784f",
          "_outcomes": [
            {
              "displayName": "true",
              "id": "true",
            },
          ],
          "_rev": "-1261812282",
          "_type": {
            "_id": "ScriptedDecisionNode",
            "collection": true,
            "name": "Scripted Decision",
          },
          "inputs": [
            "*",
          ],
          "outcomes": [
            "true",
          ],
          "outputs": [
            "*",
          ],
          "script": "fe5e303b-9ed7-4853-84fe-0ae43e2254d5",
        },
        "379c87cf-c67a-4ba9-895c-5739c6133cb0": {
          "_id": "379c87cf-c67a-4ba9-895c-5739c6133cb0",
          "_outcomes": [
            {
              "displayName": "Outcome",
              "id": "outcome",
            },
          ],
          "_rev": "-538644669",
          "_type": {
            "_id": "ValidatedUsernameNode",
            "collection": true,
            "name": "Platform Username",
          },
          "usernameAttribute": "userName",
          "validateInput": false,
        },
        "7a28b7f6-5950-4a71-a51b-a95534d368f7": {
          "_id": "7a28b7f6-5950-4a71-a51b-a95534d368f7",
          "_outcomes": [
            {
              "displayName": "true",
              "id": "true",
            },
          ],
          "_rev": "1734614900",
          "_type": {
            "_id": "ScriptedDecisionNode",
            "collection": true,
            "name": "Scripted Decision",
          },
          "inputs": [
            "*",
          ],
          "outcomes": [
            "true",
          ],
          "outputs": [
            "*",
          ],
          "script": "b1fd9b38-fc54-46c6-9199-3d0de0abfaee",
        },
      },
      "nodes": {
        "45ab83ee-aa33-46b8-b3c0-a5a555c0d7ee": {
          "_id": "45ab83ee-aa33-46b8-b3c0-a5a555c0d7ee",
          "_outcomes": [
            {
              "displayName": "Outcome",
              "id": "outcome",
            },
          ],
          "_rev": "-1483799943",
          "_type": {
            "_id": "PageNode",
            "collection": true,
            "name": "Page Node",
          },
          "nodes": [
            {
              "_id": "379c87cf-c67a-4ba9-895c-5739c6133cb0",
              "displayName": "Collect Username",
              "nodeType": "ValidatedUsernameNode",
            },
          ],
          "pageDescription": {},
          "pageHeader": {},
        },
        "e1d8e426-a37e-4cc9-a6dc-ddd69bea9cb2": {
          "_id": "e1d8e426-a37e-4cc9-a6dc-ddd69bea9cb2",
          "_outcomes": [
            {
              "displayName": "true",
              "id": "true",
            },
          ],
          "_rev": "1760469476",
          "_type": {
            "_id": "PageNode",
            "collection": true,
            "name": "Page Node",
          },
          "nodes": [
            {
              "_id": "3759aad0-2d13-46f5-80b9-526bbc7b784f",
              "displayName": "Display Username",
              "nodeType": "ScriptedDecisionNode",
            },
            {
              "_id": "7a28b7f6-5950-4a71-a51b-a95534d368f7",
              "displayName": "Display ESV",
              "nodeType": "ScriptedDecisionNode",
            },
          ],
          "pageDescription": {},
          "pageHeader": {},
        },
      },
      "saml2Entities": {},
      "scripts": {},
      "socialIdentityProviders": {},
      "themes": [],
      "tree": {
        "_id": "username",
        "_rev": "684462862",
        "description": "Collect username, then display it nicely.",
        "enabled": true,
        "entryNodeId": "45ab83ee-aa33-46b8-b3c0-a5a555c0d7ee",
        "identityResource": "managed/alpha_user",
        "nodes": {
          "45ab83ee-aa33-46b8-b3c0-a5a555c0d7ee": {
            "connections": {
              "outcome": "e1d8e426-a37e-4cc9-a6dc-ddd69bea9cb2",
            },
            "displayName": "Collect",
            "nodeType": "PageNode",
            "x": 163,
            "y": 184.015625,
          },
          "e1d8e426-a37e-4cc9-a6dc-ddd69bea9cb2": {
            "connections": {
              "true": "e301438c-0bd0-429c-ab0c-66126501069a",
            },
            "displayName": "Display",
            "nodeType": "PageNode",
            "x": 415,
            "y": 163.015625,
          },
        },
        "staticNodes": {
          "70e691a5-1e33-4ac3-a356-e7b6d60d92e0": {
            "x": 52,
            "y": 74,
          },
          "e301438c-0bd0-429c-ab0c-66126501069a": {
            "x": 668,
            "y": 213,
          },
          "startNode": {
            "x": 50,
            "y": 203,
          },
        },
        "uiConfig": {},
      },
    },
  },
}
`;
